-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
-- Date        : Tue May 26 15:01:54 2020
-- Host        : ASUS-PC running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               C:/Users/Pedro/Dropbox/UA/CR/Labs/Lab8/DMADemo/DMADemo.srcs/sources_1/bd/mb_design/ip/mb_design_microblaze_0_1/mb_design_microblaze_0_1_sim_netlist.vhdl
-- Design      : mb_design_microblaze_0_1
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7a100tcsg324-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Byte_Doublet_Handle_gti is
  port (
    mem_reverse_byteorder_reg_0 : out STD_LOGIC;
    wb_read_lsb_1_sel : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_read_msb_doublet_sel : out STD_LOGIC;
    \mem_byte_selects_reg[0]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Write_Data_reg[0]_0\ : out STD_LOGIC_VECTOR ( 35 downto 0 );
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    \mem_byte_selects_reg[1]_0\ : in STD_LOGIC;
    ex_reverse_mem_access : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\ : in STD_LOGIC;
    mem_byte_access : in STD_LOGIC;
    mem_doublet_access : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \MEM_DataBus_Byte_Enable_reg[0]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \mem_byte_selects_reg[0]_1\ : in STD_LOGIC;
    \mem_byte_selects_reg[1]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Byte_Doublet_Handle_gti : entity is "Byte_Doublet_Handle_gti";
end mb_design_microblaze_0_1_Byte_Doublet_Handle_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Byte_Doublet_Handle_gti is
  signal \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0\ : STD_LOGIC;
  signal \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0\ : STD_LOGIC;
  signal \^mem_byte_selects_reg[0]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \mem_byte_selects_reg_n_0_[1]\ : STD_LOGIC;
  signal \^mem_reverse_byteorder_reg_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1\ : label is "soft_lutpair8";
begin
  \mem_byte_selects_reg[0]_0\(0) <= \^mem_byte_selects_reg[0]_0\(0);
  mem_reverse_byteorder_reg_0 <= \^mem_reverse_byteorder_reg_0\;
\MEM_DataBus_Byte_Enable_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \MEM_DataBus_Byte_Enable_reg[0]_0\(3),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(3),
      R => sync_reset
    );
\MEM_DataBus_Byte_Enable_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \MEM_DataBus_Byte_Enable_reg[0]_0\(2),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(2),
      R => sync_reset
    );
\MEM_DataBus_Byte_Enable_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \MEM_DataBus_Byte_Enable_reg[0]_0\(1),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(1),
      R => sync_reset
    );
\MEM_DataBus_Byte_Enable_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \MEM_DataBus_Byte_Enable_reg[0]_0\(0),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(0),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(31),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(35),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(21),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(25),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(20),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(24),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(19),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(23),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(18),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(22),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(17),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(21),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(16),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(20),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(15),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(19),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(14),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(18),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(13),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(17),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(12),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(16),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(30),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(34),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(11),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(15),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(10),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(14),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(9),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(13),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(8),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(12),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(7),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(11),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(6),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(10),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(5),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(9),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(4),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(8),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(3),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(7),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(2),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(6),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(29),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(33),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(1),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(5),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(0),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(4),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(28),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(32),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(27),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(31),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(26),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(30),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(25),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(29),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(24),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(28),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(23),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(27),
      R => sync_reset
    );
\MEM_DataBus_Write_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => D(22),
      Q => \MEM_DataBus_Write_Data_reg[0]_0\(26),
      R => sync_reset
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => \^mem_byte_selects_reg[0]_0\(0),
      I1 => mem_doublet_access,
      I2 => \^mem_reverse_byteorder_reg_0\,
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0\
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\,
      D => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0\,
      Q => wb_read_lsb_1_sel(0),
      R => sync_reset
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => \mem_byte_selects_reg_n_0_[1]\,
      I1 => mem_byte_access,
      I2 => \^mem_reverse_byteorder_reg_0\,
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0\
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\,
      D => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_1\(0),
      Q => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\(1),
      R => sync_reset
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\,
      D => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0\,
      Q => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\(0),
      R => sync_reset
    );
\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\,
      D => \^mem_reverse_byteorder_reg_0\,
      Q => wb_read_msb_doublet_sel,
      R => sync_reset
    );
\mem_byte_selects_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \mem_byte_selects_reg[0]_1\,
      Q => \^mem_byte_selects_reg[0]_0\(0),
      R => sync_reset
    );
\mem_byte_selects_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => \mem_byte_selects_reg[1]_1\(0),
      Q => \mem_byte_selects_reg_n_0_[1]\,
      R => sync_reset
    );
mem_reverse_byteorder_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_byte_selects_reg[1]_0\,
      D => ex_reverse_mem_access,
      Q => \^mem_reverse_byteorder_reg_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_DAXI_interface is
  port (
    active_access_d1 : out STD_LOGIC;
    active_access : out STD_LOGIC;
    wb_dext_Data_Strobe : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    MEM_DAXI_Exception : out STD_LOGIC;
    MEM_DataBus_Ready : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_1\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_2\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_3\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_4\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_5\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_6\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5\ : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ : out STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    active_access_reg_0 : in STD_LOGIC;
    M_AXI_DP_AWVALID_i_reg_0 : in STD_LOGIC;
    M_AXI_DP_WVALID_i_reg_0 : in STD_LOGIC;
    M_AXI_DP_ARVALID_i_reg_0 : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_daxi_exception_i_reg_0 : in STD_LOGIC;
    mem_databus_access : in STD_LOGIC;
    DReady : in STD_LOGIC;
    wb_databus_read_data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \LOCKSTEP_Out_reg[3034]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \LOCKSTEP_Out_reg[3034]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \LOCKSTEP_Out_reg[3007]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_read_msb_doublet_sel : in STD_LOGIC;
    wb_read_lsb_1_sel : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_DAXI_interface : entity is "DAXI_interface";
end mb_design_microblaze_0_1_DAXI_interface;

architecture STRUCTURE of mb_design_microblaze_0_1_DAXI_interface is
  signal MEM_DAXI_Data_Strobe : STD_LOGIC;
  signal \^mem_daxi_exception\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Trace_New_Reg_Value[27]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \^active_access\ : STD_LOGIC;
  signal mem_access_completed0 : STD_LOGIC;
  signal mem_daxi_exception_i_i_1_n_0 : STD_LOGIC;
  signal mem_daxi_exception_i_i_2_n_0 : STD_LOGIC;
  signal \^wb_dext_data_strobe\ : STD_LOGIC;
begin
  MEM_DAXI_Exception <= \^mem_daxi_exception\;
  Q(31 downto 0) <= \^q\(31 downto 0);
  active_access <= \^active_access\;
  wb_dext_Data_Strobe <= \^wb_dext_data_strobe\;
M_AXI_DP_ARVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_ARVALID_i_reg_0,
      Q => D(0),
      R => '0'
    );
M_AXI_DP_AWVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_AWVALID_i_reg_0,
      Q => D(2),
      R => '0'
    );
M_AXI_DP_WVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_WVALID_i_reg_0,
      Q => D(1),
      R => '0'
    );
\Trace_New_Reg_Value[0]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(7),
      I1 => \^q\(7),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(31),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(31),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\
    );
\Trace_New_Reg_Value[10]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(13),
      I1 => \^q\(13),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(21),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(21),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\
    );
\Trace_New_Reg_Value[11]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(12),
      I1 => \^q\(12),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(20),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(20),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\
    );
\Trace_New_Reg_Value[12]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(11),
      I1 => \^q\(11),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(19),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(19),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\
    );
\Trace_New_Reg_Value[13]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(10),
      I1 => \^q\(10),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(18),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(18),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\
    );
\Trace_New_Reg_Value[14]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(9),
      I1 => \^q\(9),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(17),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(17),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\
    );
\Trace_New_Reg_Value[15]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(8),
      I1 => \^q\(8),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(16),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(16),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\
    );
\Trace_New_Reg_Value[16]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(8),
      I1 => wb_databus_read_data(0),
      I2 => wb_databus_read_data(24),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(16),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg\
    );
\Trace_New_Reg_Value[17]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(9),
      I1 => wb_databus_read_data(1),
      I2 => wb_databus_read_data(25),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(17),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0\
    );
\Trace_New_Reg_Value[18]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(10),
      I1 => wb_databus_read_data(2),
      I2 => wb_databus_read_data(26),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(18),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1\
    );
\Trace_New_Reg_Value[19]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(11),
      I1 => wb_databus_read_data(3),
      I2 => wb_databus_read_data(27),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(19),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2\
    );
\Trace_New_Reg_Value[1]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(6),
      I1 => \^q\(6),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(30),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(30),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\
    );
\Trace_New_Reg_Value[20]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(12),
      I1 => wb_databus_read_data(4),
      I2 => wb_databus_read_data(28),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(20),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3\
    );
\Trace_New_Reg_Value[21]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(13),
      I1 => wb_databus_read_data(5),
      I2 => wb_databus_read_data(29),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(21),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4\
    );
\Trace_New_Reg_Value[22]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(14),
      I1 => wb_databus_read_data(6),
      I2 => wb_databus_read_data(30),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(22),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5\
    );
\Trace_New_Reg_Value[23]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(15),
      I1 => wb_databus_read_data(7),
      I2 => wb_databus_read_data(31),
      I3 => wb_read_msb_doublet_sel,
      I4 => wb_read_lsb_1_sel(0),
      I5 => wb_databus_read_data(23),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6\
    );
\Trace_New_Reg_Value[24]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(8),
      I1 => wb_databus_read_data(0),
      I2 => wb_databus_read_data(24),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(16),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\
    );
\Trace_New_Reg_Value[25]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(9),
      I1 => wb_databus_read_data(1),
      I2 => wb_databus_read_data(25),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(17),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_1\
    );
\Trace_New_Reg_Value[26]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(10),
      I1 => wb_databus_read_data(2),
      I2 => wb_databus_read_data(26),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(18),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_2\
    );
\Trace_New_Reg_Value[27]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAAFEAAAE"
    )
        port map (
      I0 => \Trace_New_Reg_Value[27]_INST_0_i_2_n_0\,
      I1 => wb_databus_read_data(3),
      I2 => \LOCKSTEP_Out_reg[3034]\(0),
      I3 => \LOCKSTEP_Out_reg[3034]\(1),
      I4 => wb_databus_read_data(11),
      I5 => \LOCKSTEP_Out_reg[3034]_0\(0),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]\
    );
\Trace_New_Reg_Value[27]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EA000000EA00"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(12),
      I1 => \^wb_dext_data_strobe\,
      I2 => \^q\(12),
      I3 => \LOCKSTEP_Out_reg[3034]\(1),
      I4 => \LOCKSTEP_Out_reg[3034]\(0),
      I5 => wb_databus_read_data(27),
      O => \Trace_New_Reg_Value[27]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[28]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(12),
      I1 => wb_databus_read_data(4),
      I2 => wb_databus_read_data(28),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(20),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_3\
    );
\Trace_New_Reg_Value[29]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(13),
      I1 => wb_databus_read_data(5),
      I2 => wb_databus_read_data(29),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(21),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_4\
    );
\Trace_New_Reg_Value[2]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(5),
      I1 => \^q\(5),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(29),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(29),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\
    );
\Trace_New_Reg_Value[30]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(14),
      I1 => wb_databus_read_data(6),
      I2 => wb_databus_read_data(30),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(22),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_5\
    );
\Trace_New_Reg_Value[31]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => wb_databus_read_data(15),
      I1 => wb_databus_read_data(7),
      I2 => wb_databus_read_data(31),
      I3 => \LOCKSTEP_Out_reg[3034]\(0),
      I4 => \LOCKSTEP_Out_reg[3034]\(1),
      I5 => wb_databus_read_data(23),
      O => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_6\
    );
\Trace_New_Reg_Value[3]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(4),
      I1 => \^q\(4),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(28),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(28),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\
    );
\Trace_New_Reg_Value[4]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(3),
      I1 => \^q\(3),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(27),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(27),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\
    );
\Trace_New_Reg_Value[5]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(2),
      I1 => \^q\(2),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(26),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(26),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\
    );
\Trace_New_Reg_Value[6]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(1),
      I1 => \^q\(1),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(25),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(25),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\
    );
\Trace_New_Reg_Value[7]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(0),
      I1 => \^q\(0),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(24),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(24),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\
    );
\Trace_New_Reg_Value[8]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(15),
      I1 => \^q\(15),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(23),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(23),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\
    );
\Trace_New_Reg_Value[9]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(14),
      I1 => \^q\(14),
      I2 => wb_read_msb_doublet_sel,
      I3 => \LOCKSTEP_Out_reg[3007]\(22),
      I4 => \^wb_dext_data_strobe\,
      I5 => \^q\(22),
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\
    );
\Using_FPGA.Native_i_2__47\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => MEM_DAXI_Data_Strobe,
      I1 => DReady,
      O => MEM_DataBus_Ready
    );
WB_DAXI_Data_Strobe_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MEM_DAXI_Data_Strobe,
      Q => \^wb_dext_data_strobe\,
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(31),
      Q => \^q\(31),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(21),
      Q => \^q\(21),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(20),
      Q => \^q\(20),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(19),
      Q => \^q\(19),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(18),
      Q => \^q\(18),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(17),
      Q => \^q\(17),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(16),
      Q => \^q\(16),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(15),
      Q => \^q\(15),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(14),
      Q => \^q\(14),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(13),
      Q => \^q\(13),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(12),
      Q => \^q\(12),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(30),
      Q => \^q\(30),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(11),
      Q => \^q\(11),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(10),
      Q => \^q\(10),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(9),
      Q => \^q\(9),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(8),
      Q => \^q\(8),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(7),
      Q => \^q\(7),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(6),
      Q => \^q\(6),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(5),
      Q => \^q\(5),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(4),
      Q => \^q\(4),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(3),
      Q => \^q\(3),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(2),
      Q => \^q\(2),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(29),
      Q => \^q\(29),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(1),
      Q => \^q\(1),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(0),
      Q => \^q\(0),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(28),
      Q => \^q\(28),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(27),
      Q => \^q\(27),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(26),
      Q => \^q\(26),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(25),
      Q => \^q\(25),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(24),
      Q => \^q\(24),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(23),
      Q => \^q\(23),
      R => sync_reset
    );
\WB_DAXI_Read_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(22),
      Q => \^q\(22),
      R => sync_reset
    );
active_access_d1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^active_access\,
      Q => active_access_d1,
      R => sync_reset
    );
active_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_access_reg_0,
      Q => \^active_access\,
      R => '0'
    );
mem_access_completed_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^active_access\,
      I1 => M_AXI_DP_BVALID,
      I2 => M_AXI_DP_RVALID,
      O => mem_access_completed0
    );
mem_access_completed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_access_completed0,
      Q => MEM_DAXI_Data_Strobe,
      R => sync_reset
    );
mem_daxi_exception_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFEAEAEA"
    )
        port map (
      I0 => \^mem_daxi_exception\,
      I1 => M_AXI_DP_BRESP(0),
      I2 => M_AXI_DP_BVALID,
      I3 => M_AXI_DP_RVALID,
      I4 => M_AXI_DP_RRESP(0),
      I5 => mem_daxi_exception_i_i_2_n_0,
      O => mem_daxi_exception_i_i_1_n_0
    );
mem_daxi_exception_i_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFF8FFFF"
    )
        port map (
      I0 => mem_daxi_exception_i_reg_0,
      I1 => mem_databus_access,
      I2 => sync_reset,
      I3 => MEM_DAXI_Data_Strobe,
      I4 => \^active_access\,
      O => mem_daxi_exception_i_i_2_n_0
    );
mem_daxi_exception_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_daxi_exception_i_i_1_n_0,
      Q => \^mem_daxi_exception\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_AND2B1L is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRI : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_AND2B1L : entity is "MB_AND2B1L";
end mb_design_microblaze_0_1_MB_AND2B1L;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_AND2B1L is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => E(0),
      O => D(0),
      SRI => SRI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_DSP48E1 is
  port (
    D : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_2\ : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_DSP48E1 : entity is "MB_DSP48E1";
end mb_design_microblaze_0_1_MB_DSP48E1;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_DSP48E1 is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal mem_bd_p : STD_LOGIC_VECTOR ( 0 to 30 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 0,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => \Using_FPGA.DSP48E1_I1_2\(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => Q(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => '0',
      CEP => \Using_FPGA.DSP48E1_I1_1\,
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0000101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => mem_bd_p(0),
      P(46) => mem_bd_p(1),
      P(45) => mem_bd_p(2),
      P(44) => mem_bd_p(3),
      P(43) => mem_bd_p(4),
      P(42) => mem_bd_p(5),
      P(41) => mem_bd_p(6),
      P(40) => mem_bd_p(7),
      P(39) => mem_bd_p(8),
      P(38) => mem_bd_p(9),
      P(37) => mem_bd_p(10),
      P(36) => mem_bd_p(11),
      P(35) => mem_bd_p(12),
      P(34) => mem_bd_p(13),
      P(33) => mem_bd_p(14),
      P(32) => mem_bd_p(15),
      P(31) => mem_bd_p(16),
      P(30) => mem_bd_p(17),
      P(29) => mem_bd_p(18),
      P(28) => mem_bd_p(19),
      P(27) => mem_bd_p(20),
      P(26) => mem_bd_p(21),
      P(25) => mem_bd_p(22),
      P(24) => mem_bd_p(23),
      P(23) => mem_bd_p(24),
      P(22) => mem_bd_p(25),
      P(21) => mem_bd_p(26),
      P(20) => mem_bd_p(27),
      P(19) => mem_bd_p(28),
      P(18) => mem_bd_p(29),
      P(17) => mem_bd_p(30),
      P(16 downto 0) => D(16 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      PCOUT(47 downto 0) => \Using_FPGA.DSP48E1_I1_0\(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_DSP48E1__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_2\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_DSP48E1__parameterized1\ : entity is "MB_DSP48E1";
end \mb_design_microblaze_0_1_MB_DSP48E1__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_DSP48E1__parameterized1\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal wb_ad_p : STD_LOGIC_VECTOR ( 0 to 47 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(28) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(27) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(26) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(25) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(24) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(23) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(22) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(21) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(20) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(19) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(18) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(17) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(16) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(15) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(14 downto 0) => \Using_FPGA.DSP48E1_I1_1\(14 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => Q(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => \Using_FPGA.DSP48E1_I1_0\,
      CEP => '1',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"1010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => wb_ad_p(0),
      P(46) => wb_ad_p(1),
      P(45) => wb_ad_p(2),
      P(44) => wb_ad_p(3),
      P(43) => wb_ad_p(4),
      P(42) => wb_ad_p(5),
      P(41) => wb_ad_p(6),
      P(40) => wb_ad_p(7),
      P(39) => wb_ad_p(8),
      P(38) => wb_ad_p(9),
      P(37) => wb_ad_p(10),
      P(36) => wb_ad_p(11),
      P(35) => wb_ad_p(12),
      P(34) => wb_ad_p(13),
      P(33) => wb_ad_p(14),
      P(32) => wb_ad_p(15),
      P(31) => wb_ad_p(16),
      P(30) => wb_ad_p(17),
      P(29) => wb_ad_p(18),
      P(28) => wb_ad_p(19),
      P(27) => wb_ad_p(20),
      P(26) => wb_ad_p(21),
      P(25) => wb_ad_p(22),
      P(24) => wb_ad_p(23),
      P(23) => wb_ad_p(24),
      P(22) => wb_ad_p(25),
      P(21) => wb_ad_p(26),
      P(20) => wb_ad_p(27),
      P(19) => wb_ad_p(28),
      P(18) => wb_ad_p(29),
      P(17) => wb_ad_p(30),
      P(16) => wb_ad_p(31),
      P(15) => wb_ad_p(32),
      P(14) => wb_ad_p(33),
      P(13) => wb_ad_p(34),
      P(12) => wb_ad_p(35),
      P(11) => wb_ad_p(36),
      P(10) => wb_ad_p(37),
      P(9) => wb_ad_p(38),
      P(8) => wb_ad_p(39),
      P(7) => wb_ad_p(40),
      P(6) => wb_ad_p(41),
      P(5) => wb_ad_p(42),
      P(4) => wb_ad_p(43),
      P(3) => wb_ad_p(44),
      P(2) => wb_ad_p(45),
      P(1) => wb_ad_p(46),
      P(0) => wb_ad_p(47),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => \Using_FPGA.DSP48E1_I1_2\(47 downto 0),
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => SR(0),
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_DSP48E1__parameterized3\ is
  port (
    wb_mul_result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_2\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_DSP48E1__parameterized3\ : entity is "MB_DSP48E1";
end \mb_design_microblaze_0_1_MB_DSP48E1__parameterized3\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_DSP48E1__parameterized3\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_106\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_107\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_108\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_109\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_110\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_111\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_112\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_113\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_114\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_115\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_116\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_117\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_118\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_119\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_120\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_121\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_122\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_123\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_124\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_125\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_126\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_127\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_128\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_129\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_130\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_131\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_132\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_133\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_134\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_135\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_136\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_137\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_138\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_139\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_140\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_141\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_142\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_143\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_144\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_145\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_146\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_147\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_148\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_149\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_150\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_151\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_152\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_153\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_58\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_59\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_60\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_61\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_62\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_63\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_64\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_65\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_66\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_67\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_68\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_69\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_70\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_71\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_72\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_73\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_74\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_75\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_76\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_77\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_78\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_79\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_80\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_81\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_82\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_83\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_84\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_85\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_86\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_87\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_88\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_89\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_90\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 1,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 1,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 1,
      BREG => 1,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 0,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => \Using_FPGA.DSP48E1_I1_2\(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => Q(14),
      B(16) => Q(14),
      B(15) => Q(14),
      B(14 downto 0) => Q(14 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => \Using_FPGA.DSP48E1_I1_0\,
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => \Using_FPGA.DSP48E1_I1_0\,
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => \Using_FPGA.DSP48E1_I1_1\,
      CEP => '0',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => \Using_FPGA.DSP48E1_I1_n_58\,
      P(46) => \Using_FPGA.DSP48E1_I1_n_59\,
      P(45) => \Using_FPGA.DSP48E1_I1_n_60\,
      P(44) => \Using_FPGA.DSP48E1_I1_n_61\,
      P(43) => \Using_FPGA.DSP48E1_I1_n_62\,
      P(42) => \Using_FPGA.DSP48E1_I1_n_63\,
      P(41) => \Using_FPGA.DSP48E1_I1_n_64\,
      P(40) => \Using_FPGA.DSP48E1_I1_n_65\,
      P(39) => \Using_FPGA.DSP48E1_I1_n_66\,
      P(38) => \Using_FPGA.DSP48E1_I1_n_67\,
      P(37) => \Using_FPGA.DSP48E1_I1_n_68\,
      P(36) => \Using_FPGA.DSP48E1_I1_n_69\,
      P(35) => \Using_FPGA.DSP48E1_I1_n_70\,
      P(34) => \Using_FPGA.DSP48E1_I1_n_71\,
      P(33) => \Using_FPGA.DSP48E1_I1_n_72\,
      P(32) => \Using_FPGA.DSP48E1_I1_n_73\,
      P(31) => \Using_FPGA.DSP48E1_I1_n_74\,
      P(30) => \Using_FPGA.DSP48E1_I1_n_75\,
      P(29) => \Using_FPGA.DSP48E1_I1_n_76\,
      P(28) => \Using_FPGA.DSP48E1_I1_n_77\,
      P(27) => \Using_FPGA.DSP48E1_I1_n_78\,
      P(26) => \Using_FPGA.DSP48E1_I1_n_79\,
      P(25) => \Using_FPGA.DSP48E1_I1_n_80\,
      P(24) => \Using_FPGA.DSP48E1_I1_n_81\,
      P(23) => \Using_FPGA.DSP48E1_I1_n_82\,
      P(22) => \Using_FPGA.DSP48E1_I1_n_83\,
      P(21) => \Using_FPGA.DSP48E1_I1_n_84\,
      P(20) => \Using_FPGA.DSP48E1_I1_n_85\,
      P(19) => \Using_FPGA.DSP48E1_I1_n_86\,
      P(18) => \Using_FPGA.DSP48E1_I1_n_87\,
      P(17) => \Using_FPGA.DSP48E1_I1_n_88\,
      P(16) => \Using_FPGA.DSP48E1_I1_n_89\,
      P(15) => \Using_FPGA.DSP48E1_I1_n_90\,
      P(14 downto 0) => wb_mul_result(14 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => PCOUT(47 downto 0),
      PCOUT(47) => \Using_FPGA.DSP48E1_I1_n_106\,
      PCOUT(46) => \Using_FPGA.DSP48E1_I1_n_107\,
      PCOUT(45) => \Using_FPGA.DSP48E1_I1_n_108\,
      PCOUT(44) => \Using_FPGA.DSP48E1_I1_n_109\,
      PCOUT(43) => \Using_FPGA.DSP48E1_I1_n_110\,
      PCOUT(42) => \Using_FPGA.DSP48E1_I1_n_111\,
      PCOUT(41) => \Using_FPGA.DSP48E1_I1_n_112\,
      PCOUT(40) => \Using_FPGA.DSP48E1_I1_n_113\,
      PCOUT(39) => \Using_FPGA.DSP48E1_I1_n_114\,
      PCOUT(38) => \Using_FPGA.DSP48E1_I1_n_115\,
      PCOUT(37) => \Using_FPGA.DSP48E1_I1_n_116\,
      PCOUT(36) => \Using_FPGA.DSP48E1_I1_n_117\,
      PCOUT(35) => \Using_FPGA.DSP48E1_I1_n_118\,
      PCOUT(34) => \Using_FPGA.DSP48E1_I1_n_119\,
      PCOUT(33) => \Using_FPGA.DSP48E1_I1_n_120\,
      PCOUT(32) => \Using_FPGA.DSP48E1_I1_n_121\,
      PCOUT(31) => \Using_FPGA.DSP48E1_I1_n_122\,
      PCOUT(30) => \Using_FPGA.DSP48E1_I1_n_123\,
      PCOUT(29) => \Using_FPGA.DSP48E1_I1_n_124\,
      PCOUT(28) => \Using_FPGA.DSP48E1_I1_n_125\,
      PCOUT(27) => \Using_FPGA.DSP48E1_I1_n_126\,
      PCOUT(26) => \Using_FPGA.DSP48E1_I1_n_127\,
      PCOUT(25) => \Using_FPGA.DSP48E1_I1_n_128\,
      PCOUT(24) => \Using_FPGA.DSP48E1_I1_n_129\,
      PCOUT(23) => \Using_FPGA.DSP48E1_I1_n_130\,
      PCOUT(22) => \Using_FPGA.DSP48E1_I1_n_131\,
      PCOUT(21) => \Using_FPGA.DSP48E1_I1_n_132\,
      PCOUT(20) => \Using_FPGA.DSP48E1_I1_n_133\,
      PCOUT(19) => \Using_FPGA.DSP48E1_I1_n_134\,
      PCOUT(18) => \Using_FPGA.DSP48E1_I1_n_135\,
      PCOUT(17) => \Using_FPGA.DSP48E1_I1_n_136\,
      PCOUT(16) => \Using_FPGA.DSP48E1_I1_n_137\,
      PCOUT(15) => \Using_FPGA.DSP48E1_I1_n_138\,
      PCOUT(14) => \Using_FPGA.DSP48E1_I1_n_139\,
      PCOUT(13) => \Using_FPGA.DSP48E1_I1_n_140\,
      PCOUT(12) => \Using_FPGA.DSP48E1_I1_n_141\,
      PCOUT(11) => \Using_FPGA.DSP48E1_I1_n_142\,
      PCOUT(10) => \Using_FPGA.DSP48E1_I1_n_143\,
      PCOUT(9) => \Using_FPGA.DSP48E1_I1_n_144\,
      PCOUT(8) => \Using_FPGA.DSP48E1_I1_n_145\,
      PCOUT(7) => \Using_FPGA.DSP48E1_I1_n_146\,
      PCOUT(6) => \Using_FPGA.DSP48E1_I1_n_147\,
      PCOUT(5) => \Using_FPGA.DSP48E1_I1_n_148\,
      PCOUT(4) => \Using_FPGA.DSP48E1_I1_n_149\,
      PCOUT(3) => \Using_FPGA.DSP48E1_I1_n_150\,
      PCOUT(2) => \Using_FPGA.DSP48E1_I1_n_151\,
      PCOUT(1) => \Using_FPGA.DSP48E1_I1_n_152\,
      PCOUT(0) => \Using_FPGA.DSP48E1_I1_n_153\,
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => SR(0),
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR is
  port (
    of_clear_MSR_BIP_hold_s : out STD_LOGIC;
    D35_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_clear_MSR_BIP_hold_cmb108_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR is
  signal \^of_clear_msr_bip_hold_s\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_clear_MSR_BIP_hold_s <= \^of_clear_msr_bip_hold_s\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_clear_MSR_BIP_hold_cmb108_out,
      Q => \^of_clear_msr_bip_hold_s\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__122\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^of_clear_msr_bip_hold_s\,
      I1 => \Using_FPGA.Native_0\,
      I2 => I0,
      O => D35_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE is
  signal mem_exception_kind_i : STD_LOGIC_VECTOR ( 28 to 28 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => mem_exception_kind_i(28),
      R => sync_reset
    );
\wb_exception_kind_i[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \wb_exception_kind_i_reg[28]\,
      I1 => mem_exception_kind_i(28),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_337 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_337 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_337;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_337 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_340 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_340 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_340;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_340 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_343 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_343 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_343;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_343 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_346 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_346 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_346;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_346 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_349 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_349 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_349;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_349 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_352 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_352 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_352;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_352 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_355 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_355 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_355;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_355 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_358 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_358 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_358;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_358 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_361 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_361 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_361;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_361 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_364 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_364 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_364;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_364 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_367 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_367 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_367;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_367 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_370 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_370 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_370;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_370 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_373 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_373 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_373;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_373 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_376 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_376 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_376;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_376 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_379 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_379 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_379;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_379 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_382 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_382 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_382;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_382 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_385 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_385 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_385;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_385 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_388 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_388 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_388;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_388 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_391 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_391 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_391;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_391 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_394 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_394 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_394;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_394 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_397 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_397 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_397;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_397 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_400 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_400 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_400;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_400 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_403 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_403 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_403;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_403 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_406 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_406 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_406;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_406 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_409 is
  port (
    DI : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    O5 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_409 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_409;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_409 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => O5,
      Q => DI,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_412 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_412 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_412;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_412 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_415 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_415 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_415;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_415 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_418 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_418 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_418;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_418 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_421 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_421 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_421;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_421 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_424 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_424 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_424;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_424 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_427 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_427 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_427;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_427 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_430 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_430 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_430;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_430 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \Using_FPGA.Native_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_596 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_596 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_596;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_596 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_597 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_597 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_597;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_597 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 10 to 10 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(10),
      R => R
    );
\WB_MEM_Result[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(10),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_598 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_598 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_598;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_598 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 11 to 11 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(11),
      R => R
    );
\WB_MEM_Result[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(11),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_599 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_599 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_599;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_599 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 12 to 12 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(12),
      R => R
    );
\WB_MEM_Result[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(12),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_600 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_600 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_600;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_600 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 13 to 13 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(13),
      R => R
    );
\WB_MEM_Result[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(13),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_601 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_601 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_601;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_601 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 14 to 14 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(14),
      R => R
    );
\WB_MEM_Result[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(14),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_602 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_602 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_602;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_602 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 15 to 15 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(15),
      R => R
    );
\WB_MEM_Result[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(15),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_603 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_603 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_603;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_603 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 16 to 16 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(16),
      R => R
    );
\WB_MEM_Result[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(16),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_604 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_604 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_604;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_604 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 17 to 17 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(17),
      R => R
    );
\WB_MEM_Result[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(17),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_605 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_605 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_605;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_605 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 18 to 18 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(18),
      R => R
    );
\WB_MEM_Result[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(18),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_606 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_606 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_606;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_606 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 19 to 19 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(19),
      R => R
    );
\WB_MEM_Result[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(19),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_607 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_607 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_607;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_607 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 1 to 1 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(1),
      R => R
    );
\WB_MEM_Result[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(1),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_608 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_608 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_608;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_608 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 20 to 20 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(20),
      R => R
    );
\WB_MEM_Result[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(20),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_609 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_609 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_609;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_609 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 21 to 21 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(21),
      R => R
    );
\WB_MEM_Result[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(21),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_610 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_610 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_610;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_610 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_611 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_611 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_611;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_611 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_612 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_612 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_612;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_612 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 24 to 24 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(24),
      R => R
    );
\WB_MEM_Result[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(24),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_613 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_613 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_613;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_613 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_614 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_614 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_614;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_614 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 26 to 26 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(26),
      R => R
    );
\WB_MEM_Result[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(26),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_615 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_615 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_615;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_615 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 27 to 27 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => EX_Fwd(0),
      Q => MEM_EX_Result(27),
      R => R
    );
\WB_MEM_Result[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(27),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_616 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_616 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_616;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_616 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_617 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_617 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_617;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_617 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_618 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_618 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_618;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_618 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 2 to 2 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(2),
      R => R
    );
\WB_MEM_Result[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(2),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_619 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_619 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_619;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_619 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\(0),
      Q => \Using_FPGA.Native_0\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_620 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_620 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_620;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_620 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 31 to 31 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(31),
      R => R
    );
\WB_MEM_Result[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(31),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_621 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_621 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_621;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_621 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(3),
      R => R
    );
\WB_MEM_Result[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(3),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_622 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_622 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_622;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_622 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 4 to 4 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(4),
      R => R
    );
\WB_MEM_Result[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(4),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_623 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_623 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_623;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_623 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 5 to 5 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(5),
      R => R
    );
\WB_MEM_Result[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(5),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_624 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_624 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_624;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_624 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 6 to 6 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(6),
      R => R
    );
\WB_MEM_Result[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(6),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_625 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_625 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_625;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_625 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 7 to 7 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(7),
      R => R
    );
\WB_MEM_Result[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(7),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_626 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_626 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_626;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_626 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 8 to 8 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(8),
      R => R
    );
\WB_MEM_Result[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(8),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_627 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_627 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_627;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_627 is
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 9 to 9 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\(0),
      Q => MEM_EX_Result(9),
      R => R
    );
\WB_MEM_Result[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => MEM_EX_Result(9),
      I1 => Q(0),
      I2 => MEM_Barrel_Result(0),
      I3 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_82 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_Illegal_Opcode : in STD_LOGIC;
    ex_IExt_Exception : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[30]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_82 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_82;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_82 is
  signal \Using_FPGA.Native_i_1__129_n_0\ : STD_LOGIC;
  signal mem_exception_kind_i : STD_LOGIC_VECTOR ( 30 to 30 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_i_1__129_n_0\,
      Q => mem_exception_kind_i(30),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__129\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF80000FFF8FFF8"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => ex_Illegal_Opcode,
      I3 => ex_IExt_Exception,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_i_1__129_n_0\
    );
\wb_exception_kind_i[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \wb_exception_kind_i_reg[30]\,
      I1 => mem_exception_kind_i(30),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_83 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    ex_Illegal_Opcode : in STD_LOGIC;
    ex_IExt_Exception : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[31]\ : in STD_LOGIC;
    MEM_DAXI_Exception : in STD_LOGIC;
    DUE : in STD_LOGIC;
    \wb_exception_kind_i_reg[31]_0\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_83 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_83;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_83 is
  signal \Using_FPGA.Native_i_1__35_n_0\ : STD_LOGIC;
  signal mem_exception_kind_i : STD_LOGIC_VECTOR ( 31 to 31 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_i_1__35_n_0\,
      Q => mem_exception_kind_i(31),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__35\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBFAABFBFBFAAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => ex_Illegal_Opcode,
      I4 => ex_IExt_Exception,
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_i_1__35_n_0\
    );
\wb_exception_kind_i[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888B888888888888"
    )
        port map (
      I0 => mem_exception_kind_i(31),
      I1 => \wb_exception_kind_i_reg[31]\,
      I2 => MEM_DAXI_Exception,
      I3 => DUE,
      I4 => \wb_exception_kind_i_reg[31]_0\,
      I5 => mem_MSR(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_84 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 23 downto 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \MEM_DataBus_Write_Data_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \MEM_DataBus_Write_Data_reg[0]_0\ : in STD_LOGIC;
    \MEM_DataBus_Write_Data_reg[0]_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_84 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_84;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_84 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Data_Write[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(15),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(7),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(31),
      O => \Using_FPGA.Native_1\(23)
    );
\Data_Write[10]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(5),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(13),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(21),
      O => \Using_FPGA.Native_1\(13)
    );
\Data_Write[11]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(4),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(12),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(20),
      O => \Using_FPGA.Native_1\(12)
    );
\Data_Write[12]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(3),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(11),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(19),
      O => \Using_FPGA.Native_1\(11)
    );
\Data_Write[13]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(2),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(10),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(18),
      O => \Using_FPGA.Native_1\(10)
    );
\Data_Write[14]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(1),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(9),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(17),
      O => \Using_FPGA.Native_1\(9)
    );
\Data_Write[15]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(0),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(8),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(16),
      O => \Using_FPGA.Native_1\(8)
    );
\Data_Write[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(14),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(6),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(30),
      O => \Using_FPGA.Native_1\(22)
    );
\Data_Write[24]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(31),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(7),
      O => \Using_FPGA.Native_1\(7)
    );
\Data_Write[25]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(30),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(6),
      O => \Using_FPGA.Native_1\(6)
    );
\Data_Write[26]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(29),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(5),
      O => \Using_FPGA.Native_1\(5)
    );
\Data_Write[27]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(28),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(4),
      O => \Using_FPGA.Native_1\(4)
    );
\Data_Write[28]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(27),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(3),
      O => \Using_FPGA.Native_1\(3)
    );
\Data_Write[29]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(26),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(2),
      O => \Using_FPGA.Native_1\(2)
    );
\Data_Write[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(13),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(5),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(29),
      O => \Using_FPGA.Native_1\(21)
    );
\Data_Write[30]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(25),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(1),
      O => \Using_FPGA.Native_1\(1)
    );
\Data_Write[31]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(24),
      I2 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(0),
      O => \Using_FPGA.Native_1\(0)
    );
\Data_Write[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(12),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(4),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(28),
      O => \Using_FPGA.Native_1\(20)
    );
\Data_Write[4]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(11),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(3),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(27),
      O => \Using_FPGA.Native_1\(19)
    );
\Data_Write[5]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(10),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(2),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(26),
      O => \Using_FPGA.Native_1\(18)
    );
\Data_Write[6]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(9),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(1),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(25),
      O => \Using_FPGA.Native_1\(17)
    );
\Data_Write[7]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00EF45FF00EA40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(8),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(0),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(24),
      O => \Using_FPGA.Native_1\(16)
    );
\Data_Write[8]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(7),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(15),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(23),
      O => \Using_FPGA.Native_1\(15)
    );
\Data_Write[9]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD88CDCDDD88C8C8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \MEM_DataBus_Write_Data_reg[0]\(6),
      I2 => \MEM_DataBus_Write_Data_reg[0]_1\,
      I3 => \MEM_DataBus_Write_Data_reg[0]\(14),
      I4 => \MEM_DataBus_Write_Data_reg[0]_0\,
      I5 => \MEM_DataBus_Write_Data_reg[0]\(22),
      O => \Using_FPGA.Native_1\(14)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => \Using_FPGA.Native_3\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_85 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    mem_word_access0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    MEM_DataBus_Write_reg : in STD_LOGIC;
    ex_addr_low_bits : in STD_LOGIC_VECTOR ( 1 downto 0 );
    MEM_DataBus_Write_reg_0 : in STD_LOGIC;
    MEM_DataBus_Write_reg_1 : in STD_LOGIC;
    ex_load_store_instr_s : in STD_LOGIC;
    mem_word_access_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_85 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_85;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_85 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
Read_Strobe_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAAAAFFAE"
    )
        port map (
      I0 => MEM_DataBus_Write_reg,
      I1 => ex_addr_low_bits(1),
      I2 => \^using_fpga.native_0\,
      I3 => ex_addr_low_bits(0),
      I4 => MEM_DataBus_Write_reg_0,
      I5 => MEM_DataBus_Write_reg_1,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => \Using_FPGA.Native_3\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
mem_word_access_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_load_store_instr_s,
      I2 => mem_word_access_reg,
      O => mem_word_access0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_86 is
  port (
    ex_is_load_instr_s : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_is_multi_or_load_instr0 : out STD_LOGIC;
    ex_Sel_SPR_PVR_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    MEM_DataBus_Read_reg : in STD_LOGIC;
    ex_is_multi_instr2 : in STD_LOGIC;
    ex_Sel_SPR_PVR : in STD_LOGIC;
    ex_Sel_SPR_SHR : in STD_LOGIC;
    ex_Sel_SPR_EDR : in STD_LOGIC;
    ex_is_mul_instr : in STD_LOGIC;
    ex_Sel_SPR_EAR : in STD_LOGIC;
    ex_Sel_SPR_FSR : in STD_LOGIC;
    ex_Sel_SPR_BTR : in STD_LOGIC;
    ex_Sel_SPR_SLR : in STD_LOGIC;
    ex_Sel_SPR_ESR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_86 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_86;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_86 is
  signal MEM_Sel_MEM_Res_I_i_2_n_0 : STD_LOGIC;
  signal \^ex_is_load_instr_s\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Read_Strobe_INST_0 : label is "soft_lutpair36";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of mem_is_multi_or_load_instr_i_1 : label is "soft_lutpair36";
begin
  ex_is_load_instr_s <= \^ex_is_load_instr_s\;
MEM_Sel_MEM_Res_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => ex_Sel_SPR_PVR,
      I1 => ex_Sel_SPR_SHR,
      I2 => ex_Sel_SPR_EDR,
      I3 => ex_is_mul_instr,
      I4 => MEM_Sel_MEM_Res_I_i_2_n_0,
      O => ex_Sel_SPR_PVR_reg
    );
MEM_Sel_MEM_Res_I_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => ex_Sel_SPR_EAR,
      I1 => ex_Sel_SPR_FSR,
      I2 => \^ex_is_load_instr_s\,
      I3 => ex_Sel_SPR_BTR,
      I4 => ex_Sel_SPR_SLR,
      I5 => ex_Sel_SPR_ESR,
      O => MEM_Sel_MEM_Res_I_i_2_n_0
    );
Read_Strobe_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_is_load_instr_s\,
      I1 => MEM_DataBus_Read_reg,
      O => \Using_FPGA.Native_0\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => \Using_FPGA.Native_2\,
      Q => \^ex_is_load_instr_s\,
      R => sync_reset
    );
mem_is_multi_or_load_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_is_load_instr_s\,
      I1 => ex_is_multi_instr2,
      O => mem_is_multi_or_load_instr0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_87 is
  port (
    ex_is_lwx_instr_s : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_Interrupt_Brk_combo_reg : out STD_LOGIC;
    mem_load_store_access0 : out STD_LOGIC;
    of_next_ex_valid : out STD_LOGIC;
    ex_Exception_Taken : out STD_LOGIC;
    ex_valid_reg : out STD_LOGIC;
    ex_valid_reg_0 : out STD_LOGIC;
    ex_valid_jump_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D259_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception : in STD_LOGIC;
    of_read_imm_reg_ii_reg : in STD_LOGIC;
    of_read_imm_reg_ii_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_load_store_instr_s : in STD_LOGIC;
    ex_is_swx_instr_s : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_valid_reg_1 : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    mem_exception_from_ex_reg : in STD_LOGIC;
    ex_valid_reg_2 : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2\ : in STD_LOGIC;
    ex_addr_low_bits : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_i_3__10\ : in STD_LOGIC;
    ex_valid_jump_reg_0 : in STD_LOGIC;
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_87 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_87;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_87 is
  signal \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\ : STD_LOGIC;
  signal \^ex_interrupt_brk_combo_reg\ : STD_LOGIC;
  signal \^ex_is_lwx_instr_s\ : STD_LOGIC;
  signal \^ex_valid_reg\ : STD_LOGIC;
  signal \^of_next_ex_valid\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_valid_keep_i_2 : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of mem_exception_from_ex_i_1 : label is "soft_lutpair37";
begin
  ex_Interrupt_Brk_combo_reg <= \^ex_interrupt_brk_combo_reg\;
  ex_is_lwx_instr_s <= \^ex_is_lwx_instr_s\;
  ex_valid_reg <= \^ex_valid_reg\;
  of_next_ex_valid <= \^of_next_ex_valid\;
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4FFF"
    )
        port map (
      I0 => mem_exception_from_ex_reg,
      I1 => ex_Take_Intr_or_Exc,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\,
      I3 => ex_valid_reg_2,
      O => \^ex_interrupt_brk_combo_reg\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABBABBBBABBAABBA"
    )
        port map (
      I0 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\,
      I1 => \^ex_valid_reg\,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1\(0),
      I3 => Q(0),
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2\,
      I5 => ex_addr_low_bits(0),
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\
    );
Read_Strobe_INST_0_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFF7FFFF"
    )
        port map (
      I0 => ex_valid_reg_2,
      I1 => ex_MSR(0),
      I2 => \^ex_is_lwx_instr_s\,
      I3 => ex_is_swx_instr_s,
      I4 => ex_load_store_instr_s,
      I5 => \Using_FPGA.Native_i_3__10\,
      O => \^ex_valid_reg\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => D259_out,
      Q => \^ex_is_lwx_instr_s\,
      R => sync_reset
    );
ex_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C000C0000000A"
    )
        port map (
      I0 => ex_valid_reg_2,
      I1 => \^of_next_ex_valid\,
      I2 => sync_reset,
      I3 => wb_exception,
      I4 => ex_valid_jump_reg_0,
      I5 => \Using_FPGA.Native_0\,
      O => ex_valid_reg_0
    );
ex_valid_jump_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000C000C0000000A"
    )
        port map (
      I0 => \out\,
      I1 => \^of_next_ex_valid\,
      I2 => sync_reset,
      I3 => wb_exception,
      I4 => ex_valid_jump_reg_0,
      I5 => \Using_FPGA.Native_0\,
      O => ex_valid_jump_reg
    );
ex_valid_keep_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00002A00"
    )
        port map (
      I0 => \^ex_interrupt_brk_combo_reg\,
      I1 => ex_valid_reg_1,
      I2 => ex_jump,
      I3 => of_valid,
      I4 => of_read_imm_reg_ii_reg_0,
      O => \^of_next_ex_valid\
    );
mem_exception_from_ex_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ex_interrupt_brk_combo_reg\,
      O => ex_Exception_Taken
    );
mem_load_store_access_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20200020"
    )
        port map (
      I0 => \^ex_interrupt_brk_combo_reg\,
      I1 => ex_Take_Intr_or_Exc,
      I2 => ex_load_store_instr_s,
      I3 => ex_is_swx_instr_s,
      I4 => ex_reservation,
      O => mem_load_store_access0
    );
of_read_imm_reg_ii_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000020000"
    )
        port map (
      I0 => \^ex_interrupt_brk_combo_reg\,
      I1 => LOCKSTEP_Master_Out(0),
      I2 => sync_reset,
      I3 => wb_exception,
      I4 => of_read_imm_reg_ii_reg,
      I5 => of_read_imm_reg_ii_reg_0,
      O => \Use_Async_Reset.sync_reset_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_88 is
  port (
    ex_is_swx_instr_s : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SRI : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    D257_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_load_store_instr_s : in STD_LOGIC;
    ex_is_load_instr_s : in STD_LOGIC;
    MEM_DataBus_Write_reg : in STD_LOGIC;
    ex_is_lwx_instr_s : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    \Using_FPGA.Native_i_2__30_0\ : in STD_LOGIC;
    D_AS : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_MSR_Load_ALU_C : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_MSR_Load_Shift_C : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_88 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_88;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_88 is
  signal \Using_FPGA.Native_i_2__30_n_0\ : STD_LOGIC;
  signal ex_LWX_SWX_Carry : STD_LOGIC;
  signal ex_MSR_Load_LWX_SWX_C : STD_LOGIC;
  signal \^ex_is_swx_instr_s\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_6__4\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of Write_Strobe_INST_0 : label is "soft_lutpair38";
begin
  ex_is_swx_instr_s <= \^ex_is_swx_instr_s\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => D257_out,
      Q => \^ex_is_swx_instr_s\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBB8BBBBBBB88888"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_i_2__30_n_0\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \Using_FPGA.Native_6\,
      I5 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__36\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F2"
    )
        port map (
      I0 => \^ex_is_swx_instr_s\,
      I1 => ex_reservation,
      I2 => D_AS,
      O => SRI
    );
\Using_FPGA.Native_i_2__30\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3030330030302222"
    )
        port map (
      I0 => \Using_FPGA.Native_8\,
      I1 => ex_MSR_Load_ALU_C,
      I2 => \Using_FPGA.Native_9\(0),
      I3 => ex_LWX_SWX_Carry,
      I4 => ex_MSR_Load_Shift_C,
      I5 => ex_MSR_Load_LWX_SWX_C,
      O => \Using_FPGA.Native_i_2__30_n_0\
    );
\Using_FPGA.Native_i_6__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_is_swx_instr_s\,
      I1 => ex_reservation,
      O => ex_LWX_SWX_Carry
    );
\Using_FPGA.Native_i_8__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000E00000000"
    )
        port map (
      I0 => \^ex_is_swx_instr_s\,
      I1 => ex_is_lwx_instr_s,
      I2 => wb_exception,
      I3 => \Using_FPGA.Native_i_2__30_0\,
      I4 => MEM_DataBus_Write_reg,
      I5 => ex_load_store_instr_s,
      O => ex_MSR_Load_LWX_SWX_C
    );
Write_Strobe_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000D0"
    )
        port map (
      I0 => \^ex_is_swx_instr_s\,
      I1 => ex_reservation,
      I2 => ex_load_store_instr_s,
      I3 => ex_is_load_instr_s,
      I4 => MEM_DataBus_Write_reg,
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_89 is
  port (
    ex_load_store_instr_s : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    p_255_in : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    D261_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    MEM_DataBus_Access_reg : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg\ : in STD_LOGIC;
    MEM_DataBus_Access_reg_0 : in STD_LOGIC;
    ex_is_swx_instr_s : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg_0\ : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg_1\ : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg_2\ : in STD_LOGIC;
    ex_is_lwx_instr_s : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg_3\ : in STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg_4\ : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    ex_is_load_instr_s : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_89 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_89;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_89 is
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \Using_LWX_SWX_instr.ex_reservation_i_2_n_0\ : STD_LOGIC;
  signal ex_databus_access : STD_LOGIC;
  signal \^ex_load_store_instr_s\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__37\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of mem_is_store_instr_i_1 : label is "soft_lutpair39";
begin
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  ex_load_store_instr_s <= \^ex_load_store_instr_s\;
MEM_DataBus_Access_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44004450"
    )
        port map (
      I0 => sync_reset,
      I1 => ex_databus_access,
      I2 => MEM_DataBus_Access_reg,
      I3 => \Using_LWX_SWX_instr.ex_reservation_reg\,
      I4 => MEM_DataBus_Access_reg_0,
      O => \Use_Async_Reset.sync_reset_reg\
    );
MEM_DataBus_Access_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"45"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => ex_reservation,
      I2 => ex_is_swx_instr_s,
      O => ex_databus_access
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => D261_out,
      Q => \^ex_load_store_instr_s\,
      R => sync_reset
    );
\Using_FPGA.Native_i_2__37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => \^ex_load_store_instr_s\,
      I1 => \Using_LWX_SWX_instr.ex_reservation_reg_3\,
      I2 => \Using_LWX_SWX_instr.ex_reservation_reg_4\,
      I3 => wb_exception,
      O => \^using_fpga.native_1\
    );
\Using_LWX_SWX_instr.ex_reservation_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F700F7000000F7"
    )
        port map (
      I0 => \Using_LWX_SWX_instr.ex_reservation_reg\,
      I1 => ex_is_swx_instr_s,
      I2 => \^using_fpga.native_1\,
      I3 => \Using_LWX_SWX_instr.ex_reservation_i_2_n_0\,
      I4 => \Using_LWX_SWX_instr.ex_reservation_reg_0\,
      I5 => \Using_LWX_SWX_instr.ex_reservation_reg_1\,
      O => \Using_FPGA.Native_0\
    );
\Using_LWX_SWX_instr.ex_reservation_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFAAEF"
    )
        port map (
      I0 => \Using_LWX_SWX_instr.ex_reservation_reg_2\,
      I1 => \^using_fpga.native_1\,
      I2 => ex_is_lwx_instr_s,
      I3 => ex_reservation,
      I4 => sync_reset,
      O => \Using_LWX_SWX_instr.ex_reservation_i_2_n_0\
    );
mem_is_store_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_load_store_instr_s\,
      I1 => ex_is_load_instr_s,
      O => p_255_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_90 is
  port (
    ex_reverse_mem_access : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D265_out : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_90 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_90;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_90 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => D265_out,
      Q => ex_reverse_mem_access,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDRE_91 is
  port (
    ex_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    D35_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    ex_MSR_Set_SW_BIP : in STD_LOGIC;
    of_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_move_to_MSR_instr : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDRE_91 : entity is "MB_FDRE";
end mb_design_microblaze_0_1_MB_FDRE_91;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDRE_91 is
  signal \Data_Flow_I/msr_reg_i/p_2_out\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \Using_FPGA.Native_i_3__13_n_0\ : STD_LOGIC;
  signal ex_clear_MSR_BIP_instr_s : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => D35_out,
      Q => ex_clear_MSR_BIP_instr_s,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Data_Flow_I/msr_reg_i/p_2_out\(3),
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB8BBB8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Data_Flow_I/msr_reg_i/p_2_out\(3),
      I3 => \Using_FPGA.Native_2\,
      I4 => ex_MSR_Set_SW_BIP,
      I5 => of_MSR(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__34\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBFAFBFB0B0A0A0A"
    )
        port map (
      I0 => \Using_FPGA.Native_8\,
      I1 => ex_clear_MSR_BIP_instr_s,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_9\(0),
      I4 => ex_move_to_MSR_instr,
      I5 => \Using_FPGA.Native_10\,
      O => \Data_Flow_I/msr_reg_i/p_2_out\(3)
    );
\Using_FPGA.Native_i_2__41\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_i_3__13_n_0\,
      O => ex_valid_reg
    );
\Using_FPGA.Native_i_3__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF7FFFFFFFFFF"
    )
        port map (
      I0 => Q(2),
      I1 => Q(3),
      I2 => Q(1),
      I3 => Q(5),
      I4 => Q(4),
      I5 => Q(0),
      O => \Using_FPGA.Native_i_3__13_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_128 is
  port (
    addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_fetch_for_timing_optimization1 : out STD_LOGIC;
    if_fetch_in_progress_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_iii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_jump : in STD_LOGIC;
    if_fetch_in_progress : in STD_LOGIC;
    if_fetch_in_progress_reg_0 : in STD_LOGIC;
    if_fetch_in_progress_reg_1 : in STD_LOGIC;
    if_fetch_in_progress_reg_2 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_128 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_128;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_128 is
  signal \^addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal if_fetch_in_progress_i_2_n_0 : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  addr(0) <= \^addr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_3,
      Q => \^addr\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__123\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^addr\(0),
      I1 => if_sel_input(0),
      O => if_fetch_for_timing_optimization1
    );
if_fetch_in_progress_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000EC"
    )
        port map (
      I0 => if_fetch_in_progress,
      I1 => if_fetch_in_progress_i_2_n_0,
      I2 => if_fetch_in_progress_reg_0,
      I3 => if_fetch_in_progress_reg_1,
      I4 => if_fetch_in_progress_reg_2(0),
      I5 => sync_reset,
      O => if_fetch_in_progress_reg
    );
if_fetch_in_progress_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA02"
    )
        port map (
      I0 => \out\,
      I1 => \^addr\(0),
      I2 => if_sel_input(0),
      I3 => ex_jump,
      O => if_fetch_in_progress_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_129 is
  port (
    if_sel_input : out STD_LOGIC_VECTOR ( 0 to 0 );
    addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_fetch_in_progress_reg : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    sel_input_iii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Serial_Dbg_Intf.status_reg_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3]\ : in STD_LOGIC;
    if_fetch_in_progress : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    in0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_129 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_129;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_129 is
  signal \^if_sel_input\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  if_sel_input(0) <= \^if_sel_input\(0);
IFetch_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEFAAAA"
    )
        port map (
      I0 => if_fetch_in_progress,
      I1 => ex_jump,
      I2 => \^if_sel_input\(0),
      I3 => \Serial_Dbg_Intf.status_reg_reg[25]\(0),
      I4 => in0,
      O => if_fetch_in_progress_reg(1)
    );
I_AS_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7070707700000000"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3]\,
      I1 => if_fetch_in_progress,
      I2 => ex_jump,
      I3 => \^if_sel_input\(0),
      I4 => \Serial_Dbg_Intf.status_reg_reg[25]\(0),
      I5 => \out\,
      O => if_fetch_in_progress_reg(0)
    );
\PC_Buffer_reg[3][31]_srl4_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^if_sel_input\(0),
      I1 => \Serial_Dbg_Intf.status_reg_reg[25]\(0),
      O => addr(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_2,
      Q => \^if_sel_input\(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_131 is
  port (
    if_sel_input : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    sel_input_iii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_131 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_131;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_131 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_1,
      Q => if_sel_input(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_133 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I1 : out STD_LOGIC;
    I13_out : out STD_LOGIC;
    I17_out : out STD_LOGIC;
    I111_out : out STD_LOGIC;
    I115_out : out STD_LOGIC;
    I119_out : out STD_LOGIC;
    I123_out : out STD_LOGIC;
    I127_out : out STD_LOGIC;
    I131_out : out STD_LOGIC;
    I135_out : out STD_LOGIC;
    I143_out : out STD_LOGIC;
    I147_out : out STD_LOGIC;
    I151_out : out STD_LOGIC;
    I155_out : out STD_LOGIC;
    I159_out : out STD_LOGIC;
    I163_out : out STD_LOGIC;
    I167_out : out STD_LOGIC;
    I171_out : out STD_LOGIC;
    I175_out : out STD_LOGIC;
    I179_out : out STD_LOGIC;
    I183_out : out STD_LOGIC;
    I187_out : out STD_LOGIC;
    I191_out : out STD_LOGIC;
    I195_out : out STD_LOGIC;
    I199_out : out STD_LOGIC;
    I1103_out : out STD_LOGIC;
    I1107_out : out STD_LOGIC;
    I1111_out : out STD_LOGIC;
    I1115_out : out STD_LOGIC;
    I1119_out : out STD_LOGIC;
    I1123_out : out STD_LOGIC;
    I1127_out : out STD_LOGIC;
    I1131_out : out STD_LOGIC;
    I1135_out : out STD_LOGIC;
    I1139_out : out STD_LOGIC;
    I1143_out : out STD_LOGIC;
    I1147_out : out STD_LOGIC;
    I1151_out : out STD_LOGIC;
    I1155_out : out STD_LOGIC;
    I1159_out : out STD_LOGIC;
    I1163_out : out STD_LOGIC;
    I1167_out : out STD_LOGIC;
    I1171_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_i_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 32 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 42 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_133 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_133;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_133 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_i_1,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_2__100\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(19),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(19),
      O => I179_out
    );
\Using_FPGA.Native_i_2__101\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(20),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(20),
      O => I183_out
    );
\Using_FPGA.Native_i_2__102\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(21),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(21),
      O => I187_out
    );
\Using_FPGA.Native_i_2__103\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(22),
      O => I191_out
    );
\Using_FPGA.Native_i_2__104\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(23),
      O => I195_out
    );
\Using_FPGA.Native_i_2__105\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(2),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(24),
      O => I199_out
    );
\Using_FPGA.Native_i_2__106\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(3),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(25),
      O => I1103_out
    );
\Using_FPGA.Native_i_2__107\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(4),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(26),
      O => I1107_out
    );
\Using_FPGA.Native_i_2__108\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(5),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(27),
      O => I1111_out
    );
\Using_FPGA.Native_i_2__109\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(6),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(28),
      O => I1115_out
    );
\Using_FPGA.Native_i_2__110\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(7),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(29),
      O => I1119_out
    );
\Using_FPGA.Native_i_2__111\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(8),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(30),
      O => I1123_out
    );
\Using_FPGA.Native_i_2__112\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(9),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(31),
      O => I1127_out
    );
\Using_FPGA.Native_i_2__113\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(22),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(32),
      O => I1131_out
    );
\Using_FPGA.Native_i_2__114\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(23),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(33),
      O => I1135_out
    );
\Using_FPGA.Native_i_2__115\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(24),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(34),
      O => I1139_out
    );
\Using_FPGA.Native_i_2__116\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(25),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(35),
      O => I1143_out
    );
\Using_FPGA.Native_i_2__117\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(26),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(36),
      O => I1147_out
    );
\Using_FPGA.Native_i_2__118\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(27),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(37),
      O => I1151_out
    );
\Using_FPGA.Native_i_2__119\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(28),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(38),
      O => I1155_out
    );
\Using_FPGA.Native_i_2__120\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(29),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(39),
      O => I1159_out
    );
\Using_FPGA.Native_i_2__121\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(30),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(40),
      O => I1163_out
    );
\Using_FPGA.Native_i_2__122\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(31),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(41),
      O => I1167_out
    );
\Using_FPGA.Native_i_2__123\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(32),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(42),
      O => I1171_out
    );
\Using_FPGA.Native_i_2__80\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(0),
      O => I1
    );
\Using_FPGA.Native_i_2__81\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(1),
      O => I13_out
    );
\Using_FPGA.Native_i_2__82\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(2),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(2),
      O => I17_out
    );
\Using_FPGA.Native_i_2__83\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(3),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(3),
      O => I111_out
    );
\Using_FPGA.Native_i_2__84\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(4),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(4),
      O => I115_out
    );
\Using_FPGA.Native_i_2__85\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(5),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(5),
      O => I119_out
    );
\Using_FPGA.Native_i_2__86\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(6),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(6),
      O => I123_out
    );
\Using_FPGA.Native_i_2__87\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(7),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(7),
      O => I127_out
    );
\Using_FPGA.Native_i_2__88\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(8),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(8),
      O => I131_out
    );
\Using_FPGA.Native_i_2__89\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(9),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(9),
      O => I135_out
    );
\Using_FPGA.Native_i_2__91\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(10),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(10),
      O => I143_out
    );
\Using_FPGA.Native_i_2__92\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(11),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(11),
      O => I147_out
    );
\Using_FPGA.Native_i_2__93\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(12),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(12),
      O => I151_out
    );
\Using_FPGA.Native_i_2__94\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(13),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(13),
      O => I155_out
    );
\Using_FPGA.Native_i_2__95\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(14),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(14),
      O => I159_out
    );
\Using_FPGA.Native_i_2__96\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(15),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(15),
      O => I163_out
    );
\Using_FPGA.Native_i_2__97\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(16),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(16),
      O => I167_out
    );
\Using_FPGA.Native_i_2__98\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(17),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(17),
      O => I171_out
    );
\Using_FPGA.Native_i_2__99\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(18),
      I1 => \^using_fpga.native_0\,
      I2 => \out\(18),
      O => I175_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_135 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    ex_op1_cmp_eq_n5_out : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    ex_enable_sext_shift_i : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    force12_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    D259_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_43 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_MSR_set_decode_reg : in STD_LOGIC;
    ex_MSR_set_decode_reg_0 : in STD_LOGIC;
    ex_MSR_set_decode_reg_1 : in STD_LOGIC;
    ex_MSR_set_decode : in STD_LOGIC;
    ex_op1_cmp_eq_n_reg : in STD_LOGIC;
    ex_op1_cmp_eq_n_reg_0 : in STD_LOGIC;
    ex_op1_cmp_eq_n_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_gpr_write_i_4 : in STD_LOGIC;
    force_Val2_N_reg : in STD_LOGIC;
    ex_enable_sext_shift_i_reg : in STD_LOGIC;
    ex_enable_sext_shift_i_reg_0 : in STD_LOGIC;
    ex_enable_sext_shift_i_reg_1 : in STD_LOGIC;
    ex_enable_sext_shift_i_reg_2 : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_135 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_135;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_135 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal ex_MSR_set_decode_i_2_n_0 : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_enable_sext_shift_i_i_2 : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_n_i_1 : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of force1_i_1 : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of force2_i_1 : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of use_Reg_Neg_DI_i_1 : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of use_Reg_Neg_S_i_1 : label is "soft_lutpair19";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_43,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__135\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_10\,
      I4 => \Using_FPGA.Native_7\,
      I5 => \Using_FPGA.Native_8\,
      O => D259_out
    );
ex_MSR_set_decode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000002FF0200"
    )
        port map (
      I0 => ex_MSR_set_decode_i_2_n_0,
      I1 => ex_MSR_set_decode_reg,
      I2 => ex_MSR_set_decode_reg_0,
      I3 => ex_MSR_set_decode_reg_1,
      I4 => ex_MSR_set_decode,
      I5 => sync_reset,
      O => \Using_FPGA.Native_1\
    );
ex_MSR_set_decode_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => force_Val2_N_reg,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_8\,
      I5 => \Using_FPGA.Native_7\,
      O => ex_MSR_set_decode_i_2_n_0
    );
ex_enable_sext_shift_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111111101111111"
    )
        port map (
      I0 => \^using_fpga.native_4\,
      I1 => \Using_FPGA.Native_6\,
      I2 => ex_enable_sext_shift_i_reg,
      I3 => ex_enable_sext_shift_i_reg_0,
      I4 => ex_enable_sext_shift_i_reg_1,
      I5 => ex_enable_sext_shift_i_reg_2,
      O => ex_enable_sext_shift_i
    );
ex_enable_sext_shift_i_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      O => \^using_fpga.native_4\
    );
ex_gpr_write_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EAAAEAAAEAABEBAB"
    )
        port map (
      I0 => \^using_fpga.native_4\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_8\,
      I4 => ex_gpr_write_i_4,
      I5 => force_Val2_N_reg,
      O => \Using_FPGA.Native_3\
    );
ex_op1_cmp_eq_n_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0028"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_op1_cmp_eq_n_reg,
      I2 => ex_op1_cmp_eq_n_reg_0,
      I3 => ex_op1_cmp_eq_n_reg_1,
      O => ex_op1_cmp_eq_n5_out
    );
force1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_op1_cmp_eq_n_reg,
      I2 => ex_op1_cmp_eq_n_reg_1,
      O => force12_out
    );
force2_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_8\,
      O => \^using_fpga.native_2\
    );
force_Val1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_op1_cmp_eq_n_reg_1,
      I2 => ex_op1_cmp_eq_n_reg,
      O => force_Val10_out
    );
force_Val2_N_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFF77FF7FFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => force_Val2_N_reg,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_8\,
      I5 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_5\
    );
use_Reg_Neg_DI_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2008"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_op1_cmp_eq_n_reg_1,
      I2 => ex_op1_cmp_eq_n_reg,
      I3 => ex_op1_cmp_eq_n_reg_0,
      O => use_Reg_Neg_DI1_out
    );
use_Reg_Neg_S_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2008"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_op1_cmp_eq_n_reg,
      I2 => ex_op1_cmp_eq_n_reg_1,
      I3 => ex_op1_cmp_eq_n_reg_0,
      O => use_Reg_Neg_S3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_137 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_33 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_gpr_write_reg : in STD_LOGIC;
    ex_gpr_write_reg_0 : in STD_LOGIC;
    \EX_Op3[0]_i_5\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op3[0]_i_5_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_137 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_137;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_137 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op3[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \EX_Op3[0]_i_5\(0),
      I2 => \EX_Op3[0]_i_5_0\,
      I3 => \EX_Op3[0]_i_5\(2),
      I4 => \EX_Op3[0]_i_5\(1),
      I5 => ex_gpr_write_reg,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_33,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
ex_gpr_write_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_gpr_write_reg,
      I2 => ex_gpr_write_reg_0,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_139 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_32 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_139 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_139;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_139 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Performance_Debug_Control.ex_brki_hit_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Performance_Debug_Control.ex_brki_hit_i_2\,
      I2 => \Performance_Debug_Control.ex_brki_hit_i_2_0\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_32,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_141 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_31 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_141 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_141;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_141 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_31,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_143 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_30 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_143 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_143;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_143 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_30,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_145 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_29 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_145 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_145;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_145 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_29,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_147 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_28 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_147 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_147;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_147 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_28,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_149 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_is_bsifi_s : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    of_op2_imm_addr : out STD_LOGIC_VECTOR ( 15 downto 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_27 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Bit_Insert_reg : in STD_LOGIC;
    EX_Bit_Insert_reg_0 : in STD_LOGIC;
    EX_Bit_Insert_reg_1 : in STD_LOGIC;
    EX_Bit_Insert_reg_2 : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Instr_Exception : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_2\ : in STD_LOGIC;
    ex_MSR_clear_decode_reg : in STD_LOGIC;
    ex_MSR_clear_decode_reg_0 : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    OF_Take_Exception_hold : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    interrupt_address_d1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op2[0]_i_2_0\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_read_imm_reg : in STD_LOGIC;
    of_op2_sel_imm : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_149 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_149;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_149 is
  signal \EX_Op2[0]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[10]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[11]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[12]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[13]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[14]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[1]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[2]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[3]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[4]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[5]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[6]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[7]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[8]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[9]_i_3_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_Bit_Insert_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Bit_Insert_reg,
      I2 => EX_Bit_Insert_reg_0,
      I3 => EX_Bit_Insert_reg_1,
      I4 => EX_Bit_Insert_reg_2,
      O => of_is_bsifi_s
    );
\EX_Op2[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[0]_i_5_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(15),
      O => of_op2_imm_addr(15)
    );
\EX_Op2[0]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(15),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(15),
      O => \EX_Op2[0]_i_5_n_0\
    );
\EX_Op2[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[10]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(5),
      O => of_op2_imm_addr(5)
    );
\EX_Op2[10]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(5),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(5),
      O => \EX_Op2[10]_i_3_n_0\
    );
\EX_Op2[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[11]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(4),
      O => of_op2_imm_addr(4)
    );
\EX_Op2[11]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(4),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(4),
      O => \EX_Op2[11]_i_3_n_0\
    );
\EX_Op2[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[12]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(3),
      O => of_op2_imm_addr(3)
    );
\EX_Op2[12]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(3),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(3),
      O => \EX_Op2[12]_i_3_n_0\
    );
\EX_Op2[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[13]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(2),
      O => of_op2_imm_addr(2)
    );
\EX_Op2[13]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(2),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(2),
      O => \EX_Op2[13]_i_3_n_0\
    );
\EX_Op2[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[14]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(1),
      O => of_op2_imm_addr(1)
    );
\EX_Op2[14]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(1),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(1),
      O => \EX_Op2[14]_i_3_n_0\
    );
\EX_Op2[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[15]_i_4_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(0),
      O => of_op2_imm_addr(0)
    );
\EX_Op2[15]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(0),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(0),
      O => \EX_Op2[15]_i_4_n_0\
    );
\EX_Op2[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[1]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(14),
      O => of_op2_imm_addr(14)
    );
\EX_Op2[1]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(14),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(14),
      O => \EX_Op2[1]_i_3_n_0\
    );
\EX_Op2[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[2]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(13),
      O => of_op2_imm_addr(13)
    );
\EX_Op2[2]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(13),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(13),
      O => \EX_Op2[2]_i_3_n_0\
    );
\EX_Op2[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[3]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(12),
      O => of_op2_imm_addr(12)
    );
\EX_Op2[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(12),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(12),
      O => \EX_Op2[3]_i_3_n_0\
    );
\EX_Op2[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[4]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(11),
      O => of_op2_imm_addr(11)
    );
\EX_Op2[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(11),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(11),
      O => \EX_Op2[4]_i_3_n_0\
    );
\EX_Op2[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[5]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(10),
      O => of_op2_imm_addr(10)
    );
\EX_Op2[5]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(10),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(10),
      O => \EX_Op2[5]_i_3_n_0\
    );
\EX_Op2[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[6]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(9),
      O => of_op2_imm_addr(9)
    );
\EX_Op2[6]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(9),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(9),
      O => \EX_Op2[6]_i_3_n_0\
    );
\EX_Op2[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[7]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(8),
      O => of_op2_imm_addr(8)
    );
\EX_Op2[7]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(8),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(8),
      O => \EX_Op2[7]_i_3_n_0\
    );
\EX_Op2[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[8]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(7),
      O => of_op2_imm_addr(7)
    );
\EX_Op2[8]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(7),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(7),
      O => \EX_Op2[8]_i_3_n_0\
    );
\EX_Op2[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00A2FFFF00A20000"
    )
        port map (
      I0 => \EX_Op2[9]_i_3_n_0\,
      I1 => wb_exception,
      I2 => Q(0),
      I3 => OF_Take_Exception_hold,
      I4 => \EX_Op2_reg[0]\,
      I5 => interrupt_address_d1(6),
      O => of_op2_imm_addr(6)
    );
\EX_Op2[9]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_2_0\(6),
      I1 => of_read_imm_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(6),
      O => \EX_Op2[9]_i_3_n_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFEFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Performance_Debug_Control.ex_brki_hit_i_2\,
      I2 => \Performance_Debug_Control.ex_brki_hit_i_2_0\,
      I3 => \Performance_Debug_Control.ex_brki_hit_i_2_1\(0),
      I4 => of_Instr_Exception,
      I5 => \Performance_Debug_Control.ex_brki_hit_i_2_2\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_27,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
ex_MSR_clear_decode_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00400000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_MSR_clear_decode_reg,
      I2 => EX_Bit_Insert_reg,
      I3 => EX_Bit_Insert_reg_0,
      I4 => ex_MSR_clear_decode_reg_0,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_151 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    EX_Bit_Extract0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_26 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Bit_Extract_reg : in STD_LOGIC;
    EX_Bit_Extract_reg_0 : in STD_LOGIC;
    EX_Bit_Extract_reg_1 : in STD_LOGIC;
    EX_Bit_Extract_reg_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_151 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_151;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_151 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_Bit_Extract_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Bit_Extract_reg,
      I2 => EX_Bit_Extract_reg_0,
      I3 => EX_Bit_Extract_reg_1,
      I4 => EX_Bit_Extract_reg_2,
      O => EX_Bit_Extract0
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_26,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_153 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_25 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_153 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_153;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_153 is
  signal \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_6_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_6_n_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\,
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\,
      I5 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\,
      O => \Using_FPGA.Native_1\
    );
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_0\,
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_1\,
      O => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_6_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_25,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_155 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_24 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_155 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_155;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_155 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4\,
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_24,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_157 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    of_Illegal_Opcode : out STD_LOGIC;
    D261_out : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_42 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \EX_ALU_Op_reg[1]\ : in STD_LOGIC;
    \EX_ALU_Op_reg[1]_0\ : in STD_LOGIC;
    \EX_ALU_Op_reg[1]_1\ : in STD_LOGIC;
    ex_load_alu_carry_reg : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ : in STD_LOGIC;
    ex_MSR_Clear_EIP : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_157 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_157;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_157 is
  signal \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_2_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_alu_sel_logic_i_i_1 : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of ex_load_alu_carry_i_1 : label is "soft_lutpair21";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E0E0E0E0E0E0E0EE"
    )
        port map (
      I0 => ex_MSR_Clear_EIP,
      I1 => ex_MSR(0),
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_2_n_0\,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\,
      I5 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\,
      O => of_Illegal_Opcode
    );
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"80AA80AA80888080"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\,
      I2 => \EX_ALU_Op_reg[1]\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\,
      I5 => \EX_ALU_Op_reg[1]_1\,
      O => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_2_n_0\
    );
\EX_ALU_Op[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"10101070FFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \EX_ALU_Op_reg[1]\,
      I3 => \EX_ALU_Op_reg[1]_0\,
      I4 => \EX_ALU_Op_reg[1]_1\,
      I5 => ex_load_alu_carry_reg,
      O => \Using_FPGA.Native_1\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_42,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__133\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_6\,
      I3 => ex_jump,
      O => D261_out
    );
ex_MSR_clear_decode_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\,
      I2 => \EX_ALU_Op_reg[1]_1\,
      I3 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_2\
    );
ex_alu_sel_logic_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0060"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_load_alu_carry_reg,
      I3 => \EX_ALU_Op_reg[1]_1\,
      O => \Using_FPGA.Native_4\
    );
ex_load_alu_carry_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_load_alu_carry_reg,
      I3 => \EX_ALU_Op_reg[1]_1\,
      O => \Using_FPGA.Native_3\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_159 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_23 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_159 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_159;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_159 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Performance_Debug_Control.ex_brki_hit_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFEFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Performance_Debug_Control.ex_brki_hit_i_2\,
      I2 => \Performance_Debug_Control.ex_brki_hit_i_2_0\,
      I3 => \Performance_Debug_Control.ex_brki_hit_i_2_1\,
      I4 => \Performance_Debug_Control.ex_brki_hit_i_2_2\,
      I5 => \Performance_Debug_Control.ex_brki_hit_i_2_3\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_23,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_161 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D257_out : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_22 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    ex_sel_alu_i_reg : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    ex_sel_alu_i_reg_0 : in STD_LOGIC;
    ex_sel_alu_i_reg_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_161 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_161;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_161 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__46\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of ex_sel_alu_i_i_1 : label is "soft_lutpair22";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_22,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__134\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0800000000000000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_4\,
      I3 => ex_sel_alu_i_reg,
      I4 => \Using_FPGA.Native_5\,
      I5 => ex_sel_alu_i_reg_0,
      O => D257_out
    );
\Using_FPGA.Native_i_2__46\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_sel_alu_i_reg_1,
      O => \^using_fpga.native_1\
    );
ex_sel_alu_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0DFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_sel_alu_i_reg_1,
      I2 => ex_sel_alu_i_reg_0,
      I3 => ex_sel_alu_i_reg,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_163 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D265_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_21 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_163 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_163;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_163 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_21,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__136\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => D265_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_165 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_20 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_SWAP_Instr_reg : in STD_LOGIC;
    EX_SWAP_Instr_reg_0 : in STD_LOGIC;
    EX_SWAP_Instr_reg_1 : in STD_LOGIC;
    EX_SWAP_Instr_reg_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_165 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_165;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_165 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_SWAP_Instr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00008000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_SWAP_Instr_reg,
      I2 => EX_SWAP_Instr_reg_0,
      I3 => EX_SWAP_Instr_reg_1,
      I4 => EX_SWAP_Instr_reg_2,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_20,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_167 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_19 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_CLZ_Instr_reg : in STD_LOGIC;
    EX_CLZ_Instr_reg_0 : in STD_LOGIC;
    EX_CLZ_Instr_reg_1 : in STD_LOGIC;
    EX_CLZ_Instr_reg_2 : in STD_LOGIC;
    \EX_Sext_Op_reg[1]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_167 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_167;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_167 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_CLZ_Instr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_CLZ_Instr_reg,
      I2 => EX_CLZ_Instr_reg_0,
      I3 => EX_CLZ_Instr_reg_1,
      I4 => EX_CLZ_Instr_reg_2,
      O => \Using_FPGA.Native_1\
    );
\EX_Sext_Op[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFBF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_CLZ_Instr_reg,
      I2 => EX_CLZ_Instr_reg_0,
      I3 => \EX_Sext_Op_reg[1]\,
      I4 => EX_CLZ_Instr_reg_1,
      O => \Using_FPGA.Native_2\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_19,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_169 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_18 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_169 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_169;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_169 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\,
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\,
      I5 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_18,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_171 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_17 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_171 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_171;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_171 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_17,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_173 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_16 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_173 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_173;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_173 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_16,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_175 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_move_to_MSR_instr130_out : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_15 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_move_to_MSR_instr_reg : in STD_LOGIC;
    ex_move_to_MSR_instr_reg_0 : in STD_LOGIC;
    ex_move_to_MSR_instr_reg_1 : in STD_LOGIC;
    ex_move_to_MSR_instr_reg_2 : in STD_LOGIC;
    ex_Sel_SPR_EAR_reg : in STD_LOGIC;
    ex_Sel_SPR_EAR_reg_0 : in STD_LOGIC;
    ex_Sel_SPR_EAR_reg_1 : in STD_LOGIC;
    ex_Sel_SPR_EAR_reg_2 : in STD_LOGIC;
    ex_Sel_SPR_EAR_reg_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_175 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_175;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_175 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal ex_move_to_MSR_instr_i_2_n_0 : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_15,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
ex_move_to_MSR_instr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => ex_move_to_MSR_instr_i_2_n_0,
      I1 => ex_move_to_MSR_instr_reg,
      I2 => ex_move_to_MSR_instr_reg_0,
      I3 => ex_move_to_MSR_instr_reg_1,
      I4 => ex_move_to_MSR_instr_reg_2,
      O => ex_move_to_MSR_instr130_out
    );
ex_move_to_MSR_instr_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_Sel_SPR_EAR_reg,
      I2 => ex_Sel_SPR_EAR_reg_1,
      I3 => ex_Sel_SPR_EAR_reg_0,
      O => ex_move_to_MSR_instr_i_2_n_0
    );
of_Sel_SPR_BTR_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2000000000000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_Sel_SPR_EAR_reg,
      I2 => ex_Sel_SPR_EAR_reg_0,
      I3 => ex_Sel_SPR_EAR_reg_1,
      I4 => ex_Sel_SPR_EAR_reg_2,
      I5 => ex_Sel_SPR_EAR_reg_3,
      O => \Using_FPGA.Native_1\
    );
of_Sel_SPR_EAR_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1000000000000000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_Sel_SPR_EAR_reg,
      I2 => ex_Sel_SPR_EAR_reg_0,
      I3 => ex_Sel_SPR_EAR_reg_1,
      I4 => ex_Sel_SPR_EAR_reg_2,
      I5 => ex_Sel_SPR_EAR_reg_3,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_177 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_gpr_write : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    wb_exception_i_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_14 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_gpr_write_dbg_reg : in STD_LOGIC;
    ex_gpr_write_dbg_reg_0 : in STD_LOGIC;
    ex_gpr_write_dbg_reg_1 : in STD_LOGIC;
    ex_gpr_write_dbg_reg_2 : in STD_LOGIC;
    ex_gpr_write_dbg_reg_3 : in STD_LOGIC;
    of_op2_sel_imm : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part2 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part2 : in STD_LOGIC;
    ex_gpr_write_dbg_reg_4 : in STD_LOGIC;
    ex_gpr_write_dbg_reg_5 : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    \ex_gpr_write_dbg__0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_177 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_177;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_177 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^ex_gpr_write\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  ex_gpr_write <= \^ex_gpr_write\;
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_gpr_write_dbg_reg,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_14,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__117\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F1FFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_gpr_write_dbg_reg_0,
      I2 => of_op2_sel_imm,
      I3 => ex_is_multi_or_load_instr,
      I4 => of_read_ex_write_op2_conflict_part1,
      I5 => of_read_ex_write_op2_conflict_part2,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__118\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F1FFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_gpr_write_dbg_reg_0,
      I2 => of_op2_sel_imm,
      I3 => mem_is_multi_or_load_instr,
      I4 => of_read_mem_write_op2_conflict_part1,
      I5 => of_read_mem_write_op2_conflict_part2,
      O => \Using_FPGA.Native_2\
    );
ex_gpr_write_dbg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000A3000000A0"
    )
        port map (
      I0 => \^ex_gpr_write\,
      I1 => ex_gpr_write_dbg_reg_4,
      I2 => ex_gpr_write_dbg_reg_5,
      I3 => wb_exception,
      I4 => sync_reset,
      I5 => \ex_gpr_write_dbg__0\,
      O => wb_exception_i_reg
    );
ex_gpr_write_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F100F1F1F100F100"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_gpr_write_dbg_reg,
      I2 => ex_gpr_write_dbg_reg_0,
      I3 => ex_gpr_write_dbg_reg_1,
      I4 => ex_gpr_write_dbg_reg_2,
      I5 => ex_gpr_write_dbg_reg_3,
      O => \^ex_gpr_write\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_179 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel117_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_41 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : in STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_0 : in STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_1 : in STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_179 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_179;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_179 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_Pattern_Cmp_Sel_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000400"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => EX_Pattern_Cmp_Sel_reg,
      I2 => EX_Pattern_Cmp_Sel_reg_0,
      I3 => EX_Pattern_Cmp_Sel_reg_1,
      I4 => EX_Pattern_Cmp_Sel_reg_2,
      O => EX_Pattern_Cmp_Sel117_out
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_41,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_181 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    p_2_in : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_13 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_181 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_181;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_181 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
EX_SWAP_BYTE_Instr_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      O => p_2_in
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_13,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_183 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_12 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_183 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_183;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_183 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_12,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_185 is
  port (
    of_Instr_Exception : out STD_LOGIC;
    ex_Instr_Excep_combo_reg : out STD_LOGIC;
    ex_Instr_Excep_combo1 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_11 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_Instr_Excep_combo_reg_0 : in STD_LOGIC;
    of_Illegal_Opcode : in STD_LOGIC;
    ex_Instr_Excep_combo_reg_1 : in STD_LOGIC;
    ex_Instr_Excep_combo_reg_2 : in STD_LOGIC;
    ex_set_MSR_EE_instr : in STD_LOGIC;
    \Detect_IExt_Exceptions.ex_IExt_Exception_reg\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_185 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_185;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_185 is
  signal \^ex_instr_excep_combo1\ : STD_LOGIC;
  signal \^of_instr_exception\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_Instr_Excep_combo1 <= \^ex_instr_excep_combo1\;
  of_Instr_Exception <= \^of_instr_exception\;
\Detect_IExt_Exceptions.ex_IExt_Exception_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA08"
    )
        port map (
      I0 => \^of_instr_exception\,
      I1 => ex_set_MSR_EE_instr,
      I2 => \Detect_IExt_Exceptions.ex_IExt_Exception_reg\,
      I3 => ex_MSR(0),
      O => \^ex_instr_excep_combo1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_11,
      Q => \^of_instr_exception\,
      R => sync_reset
    );
ex_Instr_Excep_combo_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000A8FFA800"
    )
        port map (
      I0 => ex_Instr_Excep_combo_reg_0,
      I1 => \^ex_instr_excep_combo1\,
      I2 => of_Illegal_Opcode,
      I3 => ex_Instr_Excep_combo_reg_1,
      I4 => ex_Instr_Excep_combo_reg_2,
      I5 => sync_reset,
      O => ex_Instr_Excep_combo_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_187 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_is_multi_or_load_instr_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    mem_is_multi_or_load_instr_reg : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_10 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part2 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op3_conflict_part2 : in STD_LOGIC;
    \EX_Op3[0]_i_2\ : in STD_LOGIC;
    \EX_Op3[0]_i_2_0\ : in STD_LOGIC;
    \EX_Op3[0]_i_2_1\ : in STD_LOGIC;
    \EX_Op3[0]_i_2_2\ : in STD_LOGIC;
    \EX_Op3[0]_i_2_3\ : in STD_LOGIC;
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op3_reg[30]_0\ : in STD_LOGIC;
    \EX_Op3_reg[15]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op3_reg[16]\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \EX_Op3_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[30]_i_2_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_187 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_187;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_187 is
  signal \EX_Op3[15]_i_3_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\EX_Op3[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(15),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[15]_0\(0),
      O => \Using_FPGA.Native_16\
    );
\EX_Op3[15]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3[30]_i_2_0\,
      O => \EX_Op3[15]_i_3_n_0\
    );
\EX_Op3[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(14),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(14),
      O => \Using_FPGA.Native_15\
    );
\EX_Op3[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(13),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(13),
      O => \Using_FPGA.Native_14\
    );
\EX_Op3[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(12),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(12),
      O => \Using_FPGA.Native_13\
    );
\EX_Op3[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(11),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(11),
      O => \Using_FPGA.Native_12\
    );
\EX_Op3[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(10),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(10),
      O => \Using_FPGA.Native_11\
    );
\EX_Op3[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(9),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(9),
      O => \Using_FPGA.Native_10\
    );
\EX_Op3[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(8),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(8),
      O => \Using_FPGA.Native_9\
    );
\EX_Op3[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(7),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(7),
      O => \Using_FPGA.Native_8\
    );
\EX_Op3[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(6),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(6),
      O => \Using_FPGA.Native_7\
    );
\EX_Op3[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(5),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(5),
      O => \Using_FPGA.Native_6\
    );
\EX_Op3[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(4),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(4),
      O => \Using_FPGA.Native_5\
    );
\EX_Op3[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(3),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(3),
      O => \Using_FPGA.Native_4\
    );
\EX_Op3[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(2),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(2),
      O => \Using_FPGA.Native_3\
    );
\EX_Op3[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(1),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(1),
      O => \Using_FPGA.Native_2\
    );
\EX_Op3[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF100010001000"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => \EX_Op3_reg[30]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[15]\(0),
      I4 => \EX_Op3[15]_i_3_n_0\,
      I5 => \EX_Op3_reg[16]\(0),
      O => \Using_FPGA.Native_17\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_10,
      Q => \^using_fpga.native_0\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__125\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFFF"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => ex_is_multi_or_load_instr,
      I2 => of_read_ex_write_op3_conflict_part1,
      I3 => of_read_ex_write_op3_conflict_part2,
      O => ex_is_multi_or_load_instr_reg
    );
\Using_FPGA.Native_i_1__126\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFFF"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => mem_is_multi_or_load_instr,
      I2 => of_read_mem_write_op3_conflict_part1,
      I3 => of_read_mem_write_op3_conflict_part2,
      O => mem_is_multi_or_load_instr_reg
    );
\Using_FPGA.Native_i_2__42\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5551555555555555"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => \EX_Op3[0]_i_2\,
      I2 => \EX_Op3[0]_i_2_0\,
      I3 => \EX_Op3[0]_i_2_1\,
      I4 => \EX_Op3[0]_i_2_2\,
      I5 => \EX_Op3[0]_i_2_3\,
      O => \^using_fpga.native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_189 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \mem_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 16 downto 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_9 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_4__5_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_3\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_5\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_4__5_6\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Branch_CMP_Op1_reg[0]_1\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Branch_CMP_Op1_reg[16]\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \EX_Branch_CMP_Op1_reg[0]_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_189 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_189;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_189 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__41_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__42_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__43_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__44_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__45_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__46_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__47_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__48_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__49_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__50_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__51_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__52_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__53_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__54_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__55_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__56_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_7__4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_9__5_n_0\ : STD_LOGIC;
  signal \^ex_gpr_write_addr_reg[0]\ : STD_LOGIC;
  signal \^mem_gpr_write_addr_reg[0]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__44\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__45\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4__5\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5__5\ : label is "soft_lutpair24";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \ex_gpr_write_addr_reg[0]\ <= \^ex_gpr_write_addr_reg[0]\;
  \mem_gpr_write_addr_reg[0]\ <= \^mem_gpr_write_addr_reg[0]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_9,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__147\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(15),
      I3 => GPR_Op1(15),
      I4 => \Using_FPGA.Native_i_3__42_n_0\,
      O => ex_sel_alu_i_reg(15)
    );
\Using_FPGA.Native_i_1__148\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(14),
      I3 => GPR_Op1(14),
      I4 => \Using_FPGA.Native_i_3__43_n_0\,
      O => ex_sel_alu_i_reg(14)
    );
\Using_FPGA.Native_i_1__149\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(13),
      I3 => GPR_Op1(13),
      I4 => \Using_FPGA.Native_i_3__44_n_0\,
      O => ex_sel_alu_i_reg(13)
    );
\Using_FPGA.Native_i_1__150\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(12),
      I3 => GPR_Op1(12),
      I4 => \Using_FPGA.Native_i_3__45_n_0\,
      O => ex_sel_alu_i_reg(12)
    );
\Using_FPGA.Native_i_1__151\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(11),
      I3 => GPR_Op1(11),
      I4 => \Using_FPGA.Native_i_3__46_n_0\,
      O => ex_sel_alu_i_reg(11)
    );
\Using_FPGA.Native_i_1__152\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(10),
      I3 => GPR_Op1(10),
      I4 => \Using_FPGA.Native_i_3__47_n_0\,
      O => ex_sel_alu_i_reg(10)
    );
\Using_FPGA.Native_i_1__153\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(9),
      I3 => GPR_Op1(9),
      I4 => \Using_FPGA.Native_i_3__48_n_0\,
      O => ex_sel_alu_i_reg(9)
    );
\Using_FPGA.Native_i_1__154\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(8),
      I3 => GPR_Op1(8),
      I4 => \Using_FPGA.Native_i_3__49_n_0\,
      O => ex_sel_alu_i_reg(8)
    );
\Using_FPGA.Native_i_1__155\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(7),
      I3 => GPR_Op1(7),
      I4 => \Using_FPGA.Native_i_3__50_n_0\,
      O => ex_sel_alu_i_reg(7)
    );
\Using_FPGA.Native_i_1__156\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(6),
      I3 => GPR_Op1(6),
      I4 => \Using_FPGA.Native_i_3__51_n_0\,
      O => ex_sel_alu_i_reg(6)
    );
\Using_FPGA.Native_i_1__157\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(5),
      I3 => GPR_Op1(5),
      I4 => \Using_FPGA.Native_i_3__52_n_0\,
      O => ex_sel_alu_i_reg(5)
    );
\Using_FPGA.Native_i_1__158\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(4),
      I3 => GPR_Op1(4),
      I4 => \Using_FPGA.Native_i_3__53_n_0\,
      O => ex_sel_alu_i_reg(4)
    );
\Using_FPGA.Native_i_1__159\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(3),
      I3 => GPR_Op1(3),
      I4 => \Using_FPGA.Native_i_3__54_n_0\,
      O => ex_sel_alu_i_reg(3)
    );
\Using_FPGA.Native_i_1__160\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(2),
      I3 => GPR_Op1(2),
      I4 => \Using_FPGA.Native_i_3__55_n_0\,
      O => ex_sel_alu_i_reg(2)
    );
\Using_FPGA.Native_i_1__161\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(1),
      I3 => GPR_Op1(1),
      I4 => \Using_FPGA.Native_i_3__56_n_0\,
      O => ex_sel_alu_i_reg(1)
    );
\Using_FPGA.Native_i_1__162\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^mem_gpr_write_addr_reg[0]\,
      I2 => \EX_Branch_CMP_Op1_reg[0]_0\(0),
      I3 => GPR_Op1(0),
      I4 => \Using_FPGA.Native_i_3__41_n_0\,
      O => ex_sel_alu_i_reg(0)
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[0]_0\(16),
      I1 => GPR_Op1(16),
      I2 => \EX_Branch_CMP_Op1_reg[0]_2\(1),
      I3 => \^mem_gpr_write_addr_reg[0]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Branch_CMP_Op1_reg[0]_1\(16),
      O => ex_sel_alu_i_reg(16)
    );
\Using_FPGA.Native_i_3__41\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(0),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(0),
      O => \Using_FPGA.Native_i_3__41_n_0\
    );
\Using_FPGA.Native_i_3__42\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(15),
      I4 => \EX_Branch_CMP_Op1_reg[0]_2\(0),
      O => \Using_FPGA.Native_i_3__42_n_0\
    );
\Using_FPGA.Native_i_3__43\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(14),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(14),
      O => \Using_FPGA.Native_i_3__43_n_0\
    );
\Using_FPGA.Native_i_3__44\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(13),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(13),
      O => \Using_FPGA.Native_i_3__44_n_0\
    );
\Using_FPGA.Native_i_3__45\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(12),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(12),
      O => \Using_FPGA.Native_i_3__45_n_0\
    );
\Using_FPGA.Native_i_3__46\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(11),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(11),
      O => \Using_FPGA.Native_i_3__46_n_0\
    );
\Using_FPGA.Native_i_3__47\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(10),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(10),
      O => \Using_FPGA.Native_i_3__47_n_0\
    );
\Using_FPGA.Native_i_3__48\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(9),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(9),
      O => \Using_FPGA.Native_i_3__48_n_0\
    );
\Using_FPGA.Native_i_3__49\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(8),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(8),
      O => \Using_FPGA.Native_i_3__49_n_0\
    );
\Using_FPGA.Native_i_3__50\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(7),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(7),
      O => \Using_FPGA.Native_i_3__50_n_0\
    );
\Using_FPGA.Native_i_3__51\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(6),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(6),
      O => \Using_FPGA.Native_i_3__51_n_0\
    );
\Using_FPGA.Native_i_3__52\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(5),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(5),
      O => \Using_FPGA.Native_i_3__52_n_0\
    );
\Using_FPGA.Native_i_3__53\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(4),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(4),
      O => \Using_FPGA.Native_i_3__53_n_0\
    );
\Using_FPGA.Native_i_3__54\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(3),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(3),
      O => \Using_FPGA.Native_i_3__54_n_0\
    );
\Using_FPGA.Native_i_3__55\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(2),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(2),
      O => \Using_FPGA.Native_i_3__55_n_0\
    );
\Using_FPGA.Native_i_3__56\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31201100"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \Using_FPGA.Native_i_9__5_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[0]\,
      I3 => \EX_Branch_CMP_Op1_reg[0]_1\(1),
      I4 => \EX_Branch_CMP_Op1_reg[16]\(1),
      O => \Using_FPGA.Native_i_3__56_n_0\
    );
\Using_FPGA.Native_i_4__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0D"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4_n_0\,
      I1 => \EX_Branch_CMP_Op1_reg[0]\,
      I2 => \Using_FPGA.Native_i_9__5_n_0\,
      O => \^mem_gpr_write_addr_reg[0]\
    );
\Using_FPGA.Native_i_5__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \Using_FPGA.Native_i_9__5_n_0\,
      I1 => \EX_Branch_CMP_Op1_reg[0]\,
      I2 => \Using_FPGA.Native_i_7__4_n_0\,
      O => \^ex_gpr_write_addr_reg[0]\
    );
\Using_FPGA.Native_i_7__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBEFFFFFFFFFFBE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__5_4\,
      I1 => \Using_FPGA.Native_i_4__5_5\(1),
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_i_4__5_6\,
      I4 => \Using_FPGA.Native_i_4__5_3\,
      I5 => \Using_FPGA.Native_i_4__5_5\(0),
      O => \Using_FPGA.Native_i_7__4_n_0\
    );
\Using_FPGA.Native_i_9__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0082000000000082"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__5_0\,
      I1 => \Using_FPGA.Native_i_4__5_1\(1),
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_i_4__5_2\,
      I4 => \Using_FPGA.Native_i_4__5_3\,
      I5 => \Using_FPGA.Native_i_4__5_1\(0),
      O => \Using_FPGA.Native_i_9__5_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_191 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_8 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_8__5_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_i_3__56\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__56_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__56_1\ : in STD_LOGIC;
    of_predecode_raw : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_191 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_191;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_191 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_12__1_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_8,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_12__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \Using_FPGA.Native_i_8__5_0\(3),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(1),
      I3 => \Using_FPGA.Native_i_8__5_0\(4),
      I4 => of_predecode_raw(0),
      I5 => \Using_FPGA.Native_i_8__5_0\(2),
      O => \Using_FPGA.Native_i_12__1_n_0\
    );
\Using_FPGA.Native_i_8__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Using_FPGA.Native_i_12__1_n_0\,
      I1 => \Using_FPGA.Native_i_8__5_0\(0),
      I2 => \Using_FPGA.Native_i_3__56\,
      I3 => \Using_FPGA.Native_i_8__5_0\(1),
      I4 => \Using_FPGA.Native_i_3__56_0\,
      I5 => \Using_FPGA.Native_i_3__56_1\,
      O => \wb_gpr_write_addr_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_193 is
  port (
    of_predecode_raw : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_7 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_193 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_193;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_193 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_7,
      Q => of_predecode_raw(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_195 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_6 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_195 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_195;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_195 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_6,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_197 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \mem_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_5 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_i_9__5\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    \Using_FPGA.Native_i_9__5_0\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    of_predecode_raw : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_i_7__4\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_197 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_197;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_197 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_5,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_11__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__4\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_i_9__5_0\,
      I3 => \Using_FPGA.Native_i_7__4\(1),
      I4 => of_predecode_raw(0),
      I5 => \Using_FPGA.Native_i_7__4\(2),
      O => \mem_gpr_write_addr_reg[4]\
    );
\Using_FPGA.Native_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_i_9__5\,
      I2 => I0,
      I3 => \Using_FPGA.Native_i_9__5_0\,
      I4 => I4,
      I5 => of_predecode_raw(0),
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_199 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 30 downto 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_4 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[14]_0\ : in STD_LOGIC;
    of_Take_Exception : in STD_LOGIC;
    \EX_Op2_reg[14]_1\ : in STD_LOGIC;
    \EX_Op2[15]_i_6_0\ : in STD_LOGIC;
    \EX_Op2[15]_i_6_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2[15]_i_6_2\ : in STD_LOGIC;
    \EX_Op2[15]_i_6_3\ : in STD_LOGIC;
    \EX_Op2[15]_i_6_4\ : in STD_LOGIC;
    \EX_Op2[15]_i_6_5\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2[15]_i_6_6\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    of_op2_imm_addr : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op2_reg[0]_0\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op2_reg[0]_1\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op2_reg[16]\ : in STD_LOGIC_VECTOR ( 14 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_199 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_199;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_199 is
  signal \EX_Op2[0]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_8_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Op2[16]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[17]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[18]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[20]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[21]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[25]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[28]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[30]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_3_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^ex_gpr_write_addr_reg[0]\ : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[1]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \ex_gpr_write_addr_reg[0]\ <= \^ex_gpr_write_addr_reg[0]\;
  \wb_gpr_write_addr_reg[1]\ <= \^wb_gpr_write_addr_reg[1]\;
\EX_Op2[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(30),
      I1 => of_op2_imm_addr(30),
      I2 => \EX_Op2_reg[0]_0\(15),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(30),
      O => ex_sel_alu_i_reg(30)
    );
\EX_Op2[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000007000000000"
    )
        port map (
      I0 => \EX_Op2_reg[14]\,
      I1 => \EX_Op2[0]_i_7_n_0\,
      I2 => \EX_Op2[0]_i_8_n_0\,
      I3 => \EX_Op2_reg[14]_1\,
      I4 => of_Take_Exception,
      I5 => \EX_Op2_reg[14]_0\,
      O => \^wb_gpr_write_addr_reg[1]\
    );
\EX_Op2[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000005D00"
    )
        port map (
      I0 => \EX_Op2[0]_i_8_n_0\,
      I1 => \EX_Op2[0]_i_7_n_0\,
      I2 => \EX_Op2_reg[14]\,
      I3 => \EX_Op2_reg[14]_0\,
      I4 => of_Take_Exception,
      I5 => \EX_Op2_reg[14]_1\,
      O => \^ex_gpr_write_addr_reg[0]\
    );
\EX_Op2[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBEFFFFFFFFFFBE"
    )
        port map (
      I0 => \EX_Op2[15]_i_6_4\,
      I1 => \EX_Op2[15]_i_6_5\(1),
      I2 => \^using_fpga.native_0\,
      I3 => \EX_Op2[15]_i_6_6\,
      I4 => \EX_Op2[15]_i_6_3\,
      I5 => \EX_Op2[15]_i_6_5\(0),
      O => \EX_Op2[0]_i_7_n_0\
    );
\EX_Op2[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF7DFFFFFFFFFF7D"
    )
        port map (
      I0 => \EX_Op2[15]_i_6_0\,
      I1 => \EX_Op2[15]_i_6_1\(1),
      I2 => \^using_fpga.native_0\,
      I3 => \EX_Op2[15]_i_6_2\,
      I4 => \EX_Op2[15]_i_6_3\,
      I5 => \EX_Op2[15]_i_6_1\(0),
      O => \EX_Op2[0]_i_8_n_0\
    );
\EX_Op2[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(20),
      I1 => of_op2_imm_addr(20),
      I2 => \EX_Op2_reg[0]_0\(5),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(20),
      O => ex_sel_alu_i_reg(20)
    );
\EX_Op2[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(19),
      I1 => of_op2_imm_addr(19),
      I2 => \EX_Op2_reg[0]_0\(4),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(19),
      O => ex_sel_alu_i_reg(19)
    );
\EX_Op2[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(18),
      I1 => of_op2_imm_addr(18),
      I2 => \EX_Op2_reg[0]_0\(3),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(18),
      O => ex_sel_alu_i_reg(18)
    );
\EX_Op2[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(17),
      I1 => of_op2_imm_addr(17),
      I2 => \EX_Op2_reg[0]_0\(2),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(17),
      O => ex_sel_alu_i_reg(17)
    );
\EX_Op2[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(16),
      I1 => of_op2_imm_addr(16),
      I2 => \EX_Op2_reg[0]_0\(1),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(16),
      O => ex_sel_alu_i_reg(16)
    );
\EX_Op2[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(15),
      I3 => of_op2_imm_addr(15),
      I4 => \EX_Op2[15]_i_3_n_0\,
      O => ex_sel_alu_i_reg(15)
    );
\EX_Op2[15]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(15),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[0]_0\(0),
      O => \EX_Op2[15]_i_3_n_0\
    );
\EX_Op2[15]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00100000"
    )
        port map (
      I0 => \EX_Op2_reg[14]_1\,
      I1 => of_Take_Exception,
      I2 => \EX_Op2_reg[14]_0\,
      I3 => \EX_Op2[0]_i_7_n_0\,
      I4 => \EX_Op2[0]_i_8_n_0\,
      O => \EX_Op2[15]_i_5_n_0\
    );
\EX_Op2[15]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000002000000"
    )
        port map (
      I0 => \EX_Op2_reg[14]_0\,
      I1 => of_Take_Exception,
      I2 => \EX_Op2_reg[14]_1\,
      I3 => \EX_Op2[0]_i_8_n_0\,
      I4 => \EX_Op2[0]_i_7_n_0\,
      I5 => \EX_Op2_reg[14]\,
      O => \EX_Op2[15]_i_6_n_0\
    );
\EX_Op2[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(14),
      I3 => of_op2_imm_addr(14),
      I4 => \EX_Op2[16]_i_3_n_0\,
      O => ex_sel_alu_i_reg(14)
    );
\EX_Op2[16]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(14),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(14),
      O => \EX_Op2[16]_i_3_n_0\
    );
\EX_Op2[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(13),
      I3 => of_op2_imm_addr(13),
      I4 => \EX_Op2[17]_i_3_n_0\,
      O => ex_sel_alu_i_reg(13)
    );
\EX_Op2[17]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(13),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(13),
      O => \EX_Op2[17]_i_3_n_0\
    );
\EX_Op2[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(12),
      I3 => of_op2_imm_addr(12),
      I4 => \EX_Op2[18]_i_3_n_0\,
      O => ex_sel_alu_i_reg(12)
    );
\EX_Op2[18]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(12),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(12),
      O => \EX_Op2[18]_i_3_n_0\
    );
\EX_Op2[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(11),
      I3 => of_op2_imm_addr(11),
      I4 => \EX_Op2[19]_i_3_n_0\,
      O => ex_sel_alu_i_reg(11)
    );
\EX_Op2[19]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(11),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(11),
      O => \EX_Op2[19]_i_3_n_0\
    );
\EX_Op2[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(29),
      I1 => of_op2_imm_addr(29),
      I2 => \EX_Op2_reg[0]_0\(14),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(29),
      O => ex_sel_alu_i_reg(29)
    );
\EX_Op2[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(10),
      I3 => of_op2_imm_addr(10),
      I4 => \EX_Op2[20]_i_3_n_0\,
      O => ex_sel_alu_i_reg(10)
    );
\EX_Op2[20]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(10),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(10),
      O => \EX_Op2[20]_i_3_n_0\
    );
\EX_Op2[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(9),
      I3 => of_op2_imm_addr(9),
      I4 => \EX_Op2[21]_i_3_n_0\,
      O => ex_sel_alu_i_reg(9)
    );
\EX_Op2[21]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(9),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(9),
      O => \EX_Op2[21]_i_3_n_0\
    );
\EX_Op2[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(8),
      I3 => of_op2_imm_addr(8),
      I4 => \EX_Op2[22]_i_3_n_0\,
      O => ex_sel_alu_i_reg(8)
    );
\EX_Op2[22]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(8),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(8),
      O => \EX_Op2[22]_i_3_n_0\
    );
\EX_Op2[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(7),
      I3 => of_op2_imm_addr(7),
      I4 => \EX_Op2[23]_i_3_n_0\,
      O => ex_sel_alu_i_reg(7)
    );
\EX_Op2[23]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(7),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(7),
      O => \EX_Op2[23]_i_3_n_0\
    );
\EX_Op2[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(6),
      I3 => of_op2_imm_addr(6),
      I4 => \EX_Op2[24]_i_3_n_0\,
      O => ex_sel_alu_i_reg(6)
    );
\EX_Op2[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(6),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(6),
      O => \EX_Op2[24]_i_3_n_0\
    );
\EX_Op2[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(5),
      I3 => of_op2_imm_addr(5),
      I4 => \EX_Op2[25]_i_3_n_0\,
      O => ex_sel_alu_i_reg(5)
    );
\EX_Op2[25]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(5),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(5),
      O => \EX_Op2[25]_i_3_n_0\
    );
\EX_Op2[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(4),
      I3 => of_op2_imm_addr(4),
      I4 => \EX_Op2[26]_i_3_n_0\,
      O => ex_sel_alu_i_reg(4)
    );
\EX_Op2[26]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(4),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(4),
      O => \EX_Op2[26]_i_3_n_0\
    );
\EX_Op2[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(3),
      I3 => of_op2_imm_addr(3),
      I4 => \EX_Op2[28]_i_3_n_0\,
      O => ex_sel_alu_i_reg(3)
    );
\EX_Op2[28]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(3),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(3),
      O => \EX_Op2[28]_i_3_n_0\
    );
\EX_Op2[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(2),
      I3 => of_op2_imm_addr(2),
      I4 => \EX_Op2[29]_i_3_n_0\,
      O => ex_sel_alu_i_reg(2)
    );
\EX_Op2[29]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(2),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(2),
      O => \EX_Op2[29]_i_3_n_0\
    );
\EX_Op2[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(28),
      I1 => of_op2_imm_addr(28),
      I2 => \EX_Op2_reg[0]_0\(13),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(28),
      O => ex_sel_alu_i_reg(28)
    );
\EX_Op2[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(1),
      I3 => of_op2_imm_addr(1),
      I4 => \EX_Op2[30]_i_3_n_0\,
      O => ex_sel_alu_i_reg(1)
    );
\EX_Op2[30]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(1),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(1),
      O => \EX_Op2[30]_i_3_n_0\
    );
\EX_Op2[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \^wb_gpr_write_addr_reg[1]\,
      I2 => \EX_Op2_reg[0]\(0),
      I3 => of_op2_imm_addr(0),
      I4 => \EX_Op2[31]_i_3_n_0\,
      O => ex_sel_alu_i_reg(0)
    );
\EX_Op2[31]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \EX_Op2[15]_i_5_n_0\,
      I1 => \EX_Op2_reg[0]_1\(0),
      I2 => \EX_Op2[15]_i_6_n_0\,
      I3 => \EX_Op2_reg[16]\(0),
      O => \EX_Op2[31]_i_3_n_0\
    );
\EX_Op2[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(27),
      I1 => of_op2_imm_addr(27),
      I2 => \EX_Op2_reg[0]_0\(12),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(27),
      O => ex_sel_alu_i_reg(27)
    );
\EX_Op2[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(26),
      I1 => of_op2_imm_addr(26),
      I2 => \EX_Op2_reg[0]_0\(11),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(26),
      O => ex_sel_alu_i_reg(26)
    );
\EX_Op2[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(25),
      I1 => of_op2_imm_addr(25),
      I2 => \EX_Op2_reg[0]_0\(10),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(25),
      O => ex_sel_alu_i_reg(25)
    );
\EX_Op2[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(24),
      I1 => of_op2_imm_addr(24),
      I2 => \EX_Op2_reg[0]_0\(9),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(24),
      O => ex_sel_alu_i_reg(24)
    );
\EX_Op2[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(23),
      I1 => of_op2_imm_addr(23),
      I2 => \EX_Op2_reg[0]_0\(8),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(23),
      O => ex_sel_alu_i_reg(23)
    );
\EX_Op2[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(22),
      I1 => of_op2_imm_addr(22),
      I2 => \EX_Op2_reg[0]_0\(7),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(22),
      O => ex_sel_alu_i_reg(22)
    );
\EX_Op2[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(21),
      I1 => of_op2_imm_addr(21),
      I2 => \EX_Op2_reg[0]_0\(6),
      I3 => \^wb_gpr_write_addr_reg[1]\,
      I4 => \^ex_gpr_write_addr_reg[0]\,
      I5 => \EX_Op2_reg[0]_1\(21),
      O => ex_sel_alu_i_reg(21)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_4,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_201 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    ex_mbar_decode_reg : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_40 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_enable_alu_i_reg : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_enable_alu_i_reg_0 : in STD_LOGIC;
    ex_enable_alu_i_reg_1 : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg_2\ : in STD_LOGIC;
    ex_mbar_decode_reg_0 : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_decode_reg_1 : in STD_LOGIC;
    ex_mbar_decode_reg_2 : in STD_LOGIC;
    ex_start_div_i_reg : in STD_LOGIC;
    ex_start_div_i_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_201 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_201;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_201 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal ex_mbar_decode_cmb_inferred_i_2_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of EX_Bit_Insert_i_2 : label is "soft_lutpair25";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_Mul_Instr.ex_not_mul_op_i_i_1\ : label is "soft_lutpair25";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
EX_Bit_Insert_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_8\,
      I2 => \Using_FPGA.Native_7\,
      O => \^using_fpga.native_5\
    );
\Performance_Debug_Control.ex_brki_hit_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      O => \Performance_Debug_Control.ex_brki_hit_i_2_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => ex_mbar_decode_cmb_inferred_i_2_n_0,
      I1 => \Performance_Debug_Control.ex_brki_hit_reg\,
      I2 => \Performance_Debug_Control.ex_brki_hit_reg_0\,
      I3 => \Performance_Debug_Control.ex_brki_hit_reg_1\,
      I4 => \Performance_Debug_Control.ex_brki_hit_reg_2\,
      O => \^using_fpga.native_2\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_40,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__145\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_8\,
      I2 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_6\
    );
\Using_Mul_Instr.ex_not_mul_op_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFB"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_8\,
      I2 => \Using_FPGA.Native_7\,
      I3 => ex_start_div_i_reg_0,
      I4 => ex_start_div_i_reg,
      O => \Using_FPGA.Native_3\
    );
ex_enable_alu_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFBBFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_enable_alu_i_reg,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_8\,
      I4 => ex_enable_alu_i_reg_0,
      I5 => ex_enable_alu_i_reg_1,
      O => \Using_FPGA.Native_1\
    );
ex_mbar_decode_cmb_inferred_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0F440044"
    )
        port map (
      I0 => ex_mbar_decode_reg_0,
      I1 => ex_mbar_decode,
      I2 => ex_mbar_decode_cmb_inferred_i_2_n_0,
      I3 => ex_mbar_decode_reg_1,
      I4 => ex_mbar_decode_reg_2,
      O => ex_mbar_decode_reg
    );
ex_mbar_decode_cmb_inferred_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF7FFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_7\,
      I2 => \Using_FPGA.Native_8\,
      I3 => ex_start_div_i_reg,
      I4 => ex_enable_alu_i_reg_0,
      I5 => ex_start_div_i_reg_0,
      O => ex_mbar_decode_cmb_inferred_i_2_n_0
    );
ex_start_div_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000400"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => ex_start_div_i_reg_0,
      I2 => ex_start_div_i_reg,
      I3 => ex_mbar_decode_reg_1,
      I4 => sync_reset,
      O => \Using_FPGA.Native_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_203 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op2[0]_i_3\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2[0]_i_3_0\ : in STD_LOGIC;
    \EX_Op2[0]_i_3_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_203 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_203;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_203 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op2[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF6FF6FFFFFFFF"
    )
        port map (
      I0 => \EX_Op2[0]_i_3\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op2[0]_i_3\(1),
      I3 => of_predecode_raw(0),
      I4 => \EX_Op2[0]_i_3_0\,
      I5 => \EX_Op2[0]_i_3_1\,
      O => \wb_gpr_write_addr_reg[1]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_3,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_205 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_205 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_205;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_205 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_2,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_207 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op2[0]_i_6\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op2[0]_i_6_0\ : in STD_LOGIC;
    \EX_Op2[0]_i_6_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_207 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_207;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_207 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op2[0]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op2[0]_i_6\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op2[0]_i_6_0\,
      I3 => \EX_Op2[0]_i_6\(0),
      I4 => \EX_Op2[0]_i_6_1\,
      I5 => \EX_Op2[0]_i_6\(2),
      O => \wb_gpr_write_addr_reg[3]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_1,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_209 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \mem_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op2[0]_i_8\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    \EX_Op2[0]_i_8_0\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    \EX_Op2[0]_i_8_1\ : in STD_LOGIC;
    \EX_Op2[0]_i_7\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_209 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_209;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_209 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op2[0]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \EX_Op2[0]_i_7\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op2[0]_i_8_0\,
      I3 => \EX_Op2[0]_i_7\(1),
      I4 => \EX_Op2[0]_i_8_1\,
      I5 => \EX_Op2[0]_i_7\(2),
      O => \mem_gpr_write_addr_reg[4]\
    );
\EX_Op2[0]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \EX_Op2[0]_i_8\,
      I2 => I0,
      I3 => \EX_Op2[0]_i_8_0\,
      I4 => I4,
      I5 => \EX_Op2[0]_i_8_1\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_0,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_211 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    OF_Take_Exception_hold_reg : out STD_LOGIC;
    EX_Use_Carry120_out : out STD_LOGIC;
    EX_Unsigned_Op121_out : out STD_LOGIC;
    EX_CMP_Op122_out : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_op2_sel_imm : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    ex_is_multi_or_load_instr0 : out STD_LOGIC;
    ex_is_multi_instr20 : out STD_LOGIC;
    of_op1_sel_spr_pc : out STD_LOGIC;
    of_Sel_SPR_MSR100_out : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    of_op2_imm_addr : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.Native_8\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_39 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC;
    ex_is_multi_instr2_reg : in STD_LOGIC;
    ex_is_multi_instr2_reg_0 : in STD_LOGIC;
    ex_is_multi_instr2_reg_1 : in STD_LOGIC;
    EX_Unsigned_Op_reg : in STD_LOGIC;
    EX_CMP_Op_reg : in STD_LOGIC;
    EX_CMP_Op_reg_0 : in STD_LOGIC;
    OF_Take_Exception_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception : in STD_LOGIC;
    \EX_ALU_Op_reg[0]_0\ : in STD_LOGIC;
    ex_set_bip_reg : in STD_LOGIC;
    ex_set_bip_reg_0 : in STD_LOGIC;
    ex_set_bip_reg_1 : in STD_LOGIC;
    \EX_Op2[15]_i_5\ : in STD_LOGIC;
    ex_Sel_SPR_ESR_reg : in STD_LOGIC;
    ex_is_multi_instr2_reg_2 : in STD_LOGIC;
    ex_Sel_SPR_ESR_reg_0 : in STD_LOGIC;
    ex_Sel_SPR_ESR_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_i_2\ : in STD_LOGIC;
    ex_Sel_SPR_ESR_reg_2 : in STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_Take_Exception : in STD_LOGIC;
    interrupt_address_d1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op2_reg[27]\ : in STD_LOGIC;
    \EX_Op2_reg[26]\ : in STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC;
    \EX_Op2_reg[24]\ : in STD_LOGIC;
    \EX_Op2_reg[23]\ : in STD_LOGIC;
    \EX_Op2_reg[22]\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[19]\ : in STD_LOGIC;
    \EX_Op2_reg[18]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_211 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_211;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_211 is
  signal \^of_take_exception_hold_reg\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^of_op2_sel_imm\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_is_multi_instr2_i_1 : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of ex_is_multi_or_load_instr_i_1 : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of ex_set_bip_i_2 : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \imm_reg[0]_i_2\ : label is "soft_lutpair27";
begin
  OF_Take_Exception_hold_reg <= \^of_take_exception_hold_reg\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  of_op2_sel_imm <= \^of_op2_sel_imm\;
\EX_ALU_Op[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAA8AAA8AAAA"
    )
        port map (
      I0 => \^of_take_exception_hold_reg\,
      I1 => \^using_fpga.native_0\,
      I2 => \EX_ALU_Op_reg[0]\,
      I3 => ex_is_multi_instr2_reg,
      I4 => ex_is_multi_instr2_reg_0,
      I5 => ex_is_multi_instr2_reg_1,
      O => \Using_FPGA.Native_1\(0)
    );
EX_CMP_Op_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000008"
    )
        port map (
      I0 => \^of_take_exception_hold_reg\,
      I1 => EX_CMP_Op_reg_0,
      I2 => ex_is_multi_instr2_reg_0,
      I3 => ex_is_multi_instr2_reg_1,
      I4 => EX_CMP_Op_reg,
      O => EX_CMP_Op122_out
    );
EX_CMP_Op_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4500000045004500"
    )
        port map (
      I0 => OF_Take_Exception_hold,
      I1 => Q(0),
      I2 => wb_exception,
      I3 => \EX_ALU_Op_reg[0]_0\,
      I4 => \^using_fpga.native_2\,
      I5 => ex_set_bip_reg,
      O => \^of_take_exception_hold_reg\
    );
\EX_Op2[0]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => \^of_op2_sel_imm\,
      I1 => \EX_Op2[15]_i_5\,
      I2 => ex_Sel_SPR_ESR_reg,
      O => \Using_FPGA.Native_3\
    );
\EX_Op2[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(15),
      I1 => \^of_op2_sel_imm\,
      I2 => ex_Sel_SPR_ESR_reg_0,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(15),
      O => of_op2_imm_addr(14)
    );
\EX_Op2[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(14),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[17]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(14),
      O => of_op2_imm_addr(13)
    );
\EX_Op2[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(13),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[18]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(13),
      O => of_op2_imm_addr(12)
    );
\EX_Op2[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(12),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[19]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(12),
      O => of_op2_imm_addr(11)
    );
\EX_Op2[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(11),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[20]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(11),
      O => of_op2_imm_addr(10)
    );
\EX_Op2[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(10),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[21]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(10),
      O => of_op2_imm_addr(9)
    );
\EX_Op2[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(9),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[22]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(9),
      O => of_op2_imm_addr(8)
    );
\EX_Op2[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(8),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[23]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(8),
      O => of_op2_imm_addr(7)
    );
\EX_Op2[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(7),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[24]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(7),
      O => of_op2_imm_addr(6)
    );
\EX_Op2[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(6),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[25]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(6),
      O => of_op2_imm_addr(5)
    );
\EX_Op2[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEEEEE222E2"
    )
        port map (
      I0 => interrupt_address_d1(5),
      I1 => \EX_ALU_Op_reg[0]_0\,
      I2 => GPR_Op2(5),
      I3 => \^of_op2_sel_imm\,
      I4 => \EX_Op2_reg[26]\,
      I5 => of_Take_Exception,
      O => of_op2_imm_addr(4)
    );
\EX_Op2[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(4),
      I1 => \^of_op2_sel_imm\,
      I2 => \EX_Op2_reg[27]\,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(4),
      O => \Using_FPGA.Native_8\(0)
    );
\EX_Op2[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(3),
      I1 => \^of_op2_sel_imm\,
      I2 => ex_Sel_SPR_ESR_reg_1,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(3),
      O => of_op2_imm_addr(3)
    );
\EX_Op2[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(2),
      I1 => \^of_op2_sel_imm\,
      I2 => ex_Sel_SPR_ESR_reg,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(2),
      O => of_op2_imm_addr(2)
    );
\EX_Op2[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(1),
      I1 => \^of_op2_sel_imm\,
      I2 => EX_Unsigned_Op_reg,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(1),
      O => of_op2_imm_addr(1)
    );
\EX_Op2[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00E2FFFF00E20000"
    )
        port map (
      I0 => GPR_Op2(0),
      I1 => \^of_op2_sel_imm\,
      I2 => EX_CMP_Op_reg_0,
      I3 => of_Take_Exception,
      I4 => \EX_ALU_Op_reg[0]_0\,
      I5 => interrupt_address_d1(0),
      O => of_op2_imm_addr(0)
    );
EX_Unsigned_Op_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000008"
    )
        port map (
      I0 => \^of_take_exception_hold_reg\,
      I1 => EX_Unsigned_Op_reg,
      I2 => ex_is_multi_instr2_reg_0,
      I3 => ex_is_multi_instr2_reg_1,
      I4 => EX_CMP_Op_reg,
      O => EX_Unsigned_Op121_out
    );
EX_Use_Carry_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => \^of_take_exception_hold_reg\,
      I1 => \^using_fpga.native_0\,
      I2 => ex_is_multi_instr2_reg_0,
      I3 => ex_is_multi_instr2_reg_1,
      O => EX_Use_Carry120_out
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_39,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__119\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0080"
    )
        port map (
      I0 => ex_is_multi_instr2_reg_0,
      I1 => ex_is_multi_instr2_reg,
      I2 => \^using_fpga.native_0\,
      I3 => ex_is_multi_instr2_reg_1,
      I4 => \^using_fpga.native_5\,
      O => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF04FF00FF00FF00"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_is_multi_instr2_reg_2,
      I2 => ex_is_multi_instr2_reg_1,
      I3 => EX_CMP_Op_reg,
      I4 => ex_is_multi_instr2_reg,
      I5 => ex_is_multi_instr2_reg_0,
      O => \^of_op2_sel_imm\
    );
\Using_FPGA.Native_i_6__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"04FF040404040404"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2\,
      I1 => \^using_fpga.native_0\,
      I2 => ex_is_multi_instr2_reg_1,
      I3 => EX_CMP_Op_reg_0,
      I4 => ex_Sel_SPR_ESR_reg_0,
      I5 => \^using_fpga.native_5\,
      O => of_op1_sel_spr_pc
    );
ex_is_multi_instr2_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAABA"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => ex_is_multi_instr2_reg,
      I2 => ex_is_multi_instr2_reg_1,
      I3 => ex_is_multi_instr2_reg_0,
      I4 => ex_is_multi_instr2_reg_2,
      O => ex_is_multi_instr20
    );
ex_is_multi_or_load_instr_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BAFA"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => ex_is_multi_instr2_reg_0,
      I2 => ex_is_multi_instr2_reg_1,
      I3 => ex_is_multi_instr2_reg,
      O => ex_is_multi_or_load_instr0
    );
ex_mfsmsr_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000200AAAAAAAA"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => ex_Sel_SPR_ESR_reg_1,
      I2 => ex_Sel_SPR_ESR_reg,
      I3 => EX_CMP_Op_reg_0,
      I4 => EX_Unsigned_Op_reg,
      I5 => ex_Sel_SPR_ESR_reg_0,
      O => of_Sel_SPR_MSR100_out
    );
ex_set_bip_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0040"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_set_bip_reg_0,
      I2 => ex_set_bip_reg,
      I3 => ex_set_bip_reg_1,
      O => ex_set_bip
    );
ex_set_bip_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FDFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_is_multi_instr2_reg_2,
      I2 => ex_is_multi_instr2_reg_1,
      I3 => ex_is_multi_instr2_reg,
      I4 => ex_is_multi_instr2_reg_0,
      O => \^using_fpga.native_2\
    );
\imm_reg[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_is_multi_instr2_reg_2,
      O => \Using_FPGA.Native_7\
    );
of_Sel_SPR_EDR_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000000000000"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => ex_Sel_SPR_ESR_reg_1,
      I2 => EX_CMP_Op_reg_0,
      I3 => EX_Unsigned_Op_reg,
      I4 => ex_Sel_SPR_ESR_reg,
      I5 => ex_Sel_SPR_ESR_reg_0,
      O => \Using_FPGA.Native_6\
    );
of_Sel_SPR_EDR_inferred_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_is_multi_instr2_reg_2,
      I2 => ex_Sel_SPR_ESR_reg_2,
      I3 => \EX_Op2_reg[17]\,
      O => \^using_fpga.native_5\
    );
of_Sel_SPR_ESR_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008000000"
    )
        port map (
      I0 => \^using_fpga.native_5\,
      I1 => EX_CMP_Op_reg_0,
      I2 => EX_Unsigned_Op_reg,
      I3 => ex_Sel_SPR_ESR_reg,
      I4 => ex_Sel_SPR_ESR_reg_0,
      I5 => ex_Sel_SPR_ESR_reg_1,
      O => \Using_FPGA.Native_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_213 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_is_div_instr_I_reg : out STD_LOGIC;
    of_pipe_ctrl_reg0 : out STD_LOGIC;
    ex_branch_instr0 : out STD_LOGIC;
    ex_load_shift_carry0 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_38 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Is_Div_Instr : in STD_LOGIC;
    ex_is_div_instr_I_reg_0 : in STD_LOGIC;
    ex_is_div_instr_I_reg_1 : in STD_LOGIC;
    MEM_Is_Div_Instr : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_is_bs_instr_I_reg : in STD_LOGIC;
    ex_is_bs_instr_I_reg_0 : in STD_LOGIC;
    ex_branch_instr_reg : in STD_LOGIC;
    ex_is_bs_instr_I_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    ex_load_shift_carry_reg : in STD_LOGIC;
    ex_load_shift_carry_reg_0 : in STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_213 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_213;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_213 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal of_is_div_instr : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Sext_Op[0]_i_1\ : label is "soft_lutpair30";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__124\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__45\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of ex_is_bs_instr_I_i_1 : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of ex_is_mul_instr_i_1 : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of ex_load_shift_carry_i_1 : label is "soft_lutpair30";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\EX_Sext_Op[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFBF"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => ex_load_shift_carry_reg_0,
      I2 => ex_load_shift_carry_reg,
      I3 => \EX_Sext_Op_reg[0]\,
      O => \Using_FPGA.Native_2\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_38,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__124\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__127\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      O => \Using_FPGA.Native_4\
    );
\Using_FPGA.Native_i_1__37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001F00"
    )
        port map (
      I0 => EX_Is_Div_Instr,
      I1 => MEM_Is_Div_Instr,
      I2 => of_is_div_instr,
      I3 => of_valid,
      I4 => \Using_FPGA.Native_8\,
      O => of_pipe_ctrl_reg0
    );
\Using_FPGA.Native_i_2__126\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFEFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => ex_is_bs_instr_I_reg,
      I3 => ex_is_bs_instr_I_reg_0,
      I4 => ex_branch_instr_reg,
      I5 => ex_is_bs_instr_I_reg_1,
      O => \^using_fpga.native_1\
    );
\Using_FPGA.Native_i_2__45\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000400"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => ex_is_bs_instr_I_reg,
      I3 => ex_is_bs_instr_I_reg_1,
      I4 => ex_is_bs_instr_I_reg_0,
      O => of_is_div_instr
    );
ex_branch_instr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000C0C000008000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_is_bs_instr_I_reg,
      I2 => ex_is_bs_instr_I_reg_0,
      I3 => ex_branch_instr_reg,
      I4 => ex_is_bs_instr_I_reg_1,
      I5 => \Using_FPGA.Native_9\,
      O => ex_branch_instr0
    );
ex_is_bs_instr_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000200"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => ex_is_bs_instr_I_reg,
      I3 => ex_is_bs_instr_I_reg_1,
      I4 => ex_is_bs_instr_I_reg_0,
      O => \Using_FPGA.Native_7\
    );
ex_is_div_instr_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => EX_Is_Div_Instr,
      I1 => of_is_div_instr,
      I2 => ex_is_div_instr_I_reg_0,
      I3 => ex_is_div_instr_I_reg_1,
      I4 => sync_reset,
      O => ex_is_div_instr_I_reg
    );
ex_is_mul_instr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => ex_is_bs_instr_I_reg,
      I3 => ex_is_bs_instr_I_reg_1,
      I4 => ex_is_bs_instr_I_reg_0,
      O => \Using_FPGA.Native_6\
    );
ex_load_shift_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => ex_load_shift_carry_reg,
      I2 => ex_load_shift_carry_reg_0,
      O => ex_load_shift_carry0
    );
of_read_imm_reg_ii_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_9\,
      I2 => ex_is_bs_instr_I_reg_1,
      I3 => ex_is_bs_instr_I_reg_0,
      I4 => ex_is_bs_instr_I_reg,
      I5 => ex_branch_instr_reg,
      O => \Using_FPGA.Native_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_215 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_branch_with_delayslot_i_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    ex_gpr_write_reg : out STD_LOGIC;
    Dbg_Clean_Stop0 : out STD_LOGIC;
    ex_atomic_Instruction_Pair0 : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_37 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_branch_with_delayslot_i : in STD_LOGIC;
    ex_branch_with_delayslot_i_reg_0 : in STD_LOGIC;
    ex_branch_with_delayslot_i_reg_1 : in STD_LOGIC;
    ex_gpr_write_reg_0 : in STD_LOGIC;
    ex_gpr_write_reg_1 : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    ex_gpr_write_reg_2 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clean_Stop_reg : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    of_Take_Exception : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_branch_with_delayslot_reg_0 : in STD_LOGIC;
    ex_branch_with_delayslot_reg_1 : in STD_LOGIC;
    ex_branch_with_delayslot_reg_2 : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ : in STD_LOGIC;
    ex_mbar_is_sleep_reg : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_2\ : in STD_LOGIC;
    \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_3\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg_3 : in STD_LOGIC;
    ex_branch_with_delayslot_reg_4 : in STD_LOGIC;
    ex_branch_with_delayslot_reg_5 : in STD_LOGIC;
    ex_mbar_is_sleep : in STD_LOGIC;
    \EX_Op3[0]_i_6\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_6_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    \EX_Op3[0]_i_4\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op3[0]_i_4_0\ : in STD_LOGIC;
    \EX_Op3[0]_i_4_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_215 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_215;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_215 is
  signal \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_7_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal ex_branch_with_delayslot_i_3_n_0 : STD_LOGIC;
  signal ex_gpr_write_i_2_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_Clean_Stop_i_1 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_10\ : label is "soft_lutpair32";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_atomic_Instruction_Pair_i_1 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of ex_gpr_write_i_2 : label is "soft_lutpair32";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
Dbg_Clean_Stop_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F111"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => E(0),
      I2 => Dbg_Clean_Stop_reg,
      I3 => ex_jump,
      O => Dbg_Clean_Stop0
    );
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_7_n_0\,
      I1 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\,
      I2 => ex_branch_with_delayslot_reg_1,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\,
      I5 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\,
      O => \Using_FPGA.Native_2\
    );
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_mbar_is_sleep_reg,
      I2 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\,
      I3 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_2\,
      I5 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_3\,
      O => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_7_n_0\
    );
\EX_Op3[0]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \EX_Op3[0]_i_6\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[0]_i_6_0\,
      I3 => I0,
      O => \ex_gpr_write_addr_reg[0]\
    );
\EX_Op3[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_4\(2),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[0]_i_4_0\,
      I3 => \EX_Op3[0]_i_4\(1),
      I4 => \EX_Op3[0]_i_4_1\,
      I5 => \EX_Op3[0]_i_4\(0),
      O => \wb_gpr_write_addr_reg[0]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_37,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
ex_atomic_Instruction_Pair_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_1\,
      I1 => E(0),
      O => ex_atomic_Instruction_Pair0
    );
ex_branch_with_delayslot_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0040000000000000"
    )
        port map (
      I0 => of_Take_Exception,
      I1 => ex_branch_with_delayslot_reg,
      I2 => ex_branch_with_delayslot_i_3_n_0,
      I3 => ex_branch_with_delayslot_reg_0,
      I4 => ex_branch_with_delayslot_reg_1,
      I5 => ex_branch_with_delayslot_reg_2,
      O => \^using_fpga.native_1\
    );
ex_branch_with_delayslot_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFC0A0C0"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_branch_with_delayslot_reg_3,
      I2 => ex_branch_with_delayslot_reg_4,
      I3 => ex_branch_with_delayslot_reg_5,
      I4 => \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\,
      O => ex_branch_with_delayslot_i_3_n_0
    );
ex_branch_with_delayslot_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => ex_branch_with_delayslot_i,
      I1 => ex_branch_with_delayslot_i_reg_0,
      I2 => \^using_fpga.native_1\,
      I3 => ex_branch_with_delayslot_i_reg_1,
      I4 => sync_reset,
      O => ex_branch_with_delayslot_i_reg
    );
ex_gpr_write_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E000F0F0E0000000"
    )
        port map (
      I0 => ex_gpr_write_i_2_n_0,
      I1 => ex_gpr_write_reg_0,
      I2 => ex_gpr_write_reg_1,
      I3 => ex_gpr_write,
      I4 => ex_branch_with_delayslot_i_reg_0,
      I5 => ex_gpr_write_reg_2,
      O => ex_gpr_write_reg
    );
ex_gpr_write_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_mbar_is_sleep_reg,
      O => ex_gpr_write_i_2_n_0
    );
ex_mbar_is_sleep_cmb_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFE0"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_mbar_is_sleep_reg,
      I2 => ex_branch_with_delayslot_i_reg_0,
      I3 => ex_mbar_is_sleep,
      O => \Using_FPGA.Native_3\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_217 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]_1\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 16 downto 0 );
    sync_reset : in STD_LOGIC;
    of_instr_ii_36 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op3_reg[0]\ : in STD_LOGIC;
    \EX_Op3_reg[0]_0\ : in STD_LOGIC;
    \EX_Op3_reg[0]_1\ : in STD_LOGIC;
    \EX_Op3[15]_i_3\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[15]_i_3_0\ : in STD_LOGIC;
    \EX_Op3[15]_i_3_1\ : in STD_LOGIC;
    \EX_Op3[15]_i_3_2\ : in STD_LOGIC;
    \EX_Op3[0]_i_6\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_6_0\ : in STD_LOGIC;
    \EX_Op3[0]_i_6_1\ : in STD_LOGIC;
    \EX_Op3_reg[0]_2\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Op3_reg[15]\ : in STD_LOGIC;
    \EX_Op3_reg[16]\ : in STD_LOGIC;
    \EX_Op3_reg[17]\ : in STD_LOGIC;
    \EX_Op3_reg[18]\ : in STD_LOGIC;
    \EX_Op3_reg[19]\ : in STD_LOGIC;
    \EX_Op3_reg[20]\ : in STD_LOGIC;
    \EX_Op3_reg[21]\ : in STD_LOGIC;
    \EX_Op3_reg[22]\ : in STD_LOGIC;
    \EX_Op3_reg[23]\ : in STD_LOGIC;
    \EX_Op3_reg[24]\ : in STD_LOGIC;
    \EX_Op3_reg[25]\ : in STD_LOGIC;
    \EX_Op3_reg[26]\ : in STD_LOGIC;
    \EX_Op3_reg[28]\ : in STD_LOGIC;
    \EX_Op3_reg[29]\ : in STD_LOGIC;
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op3_reg[31]\ : in STD_LOGIC;
    \EX_Op3_reg[0]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3_reg[0]_4\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_217 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_217;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_217 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[1]\ : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[1]_0\ : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[1]_1\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_2\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_3\ : label is "soft_lutpair33";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \wb_gpr_write_addr_reg[1]\ <= \^wb_gpr_write_addr_reg[1]\;
  \wb_gpr_write_addr_reg[1]_0\ <= \^wb_gpr_write_addr_reg[1]_0\;
  \wb_gpr_write_addr_reg[1]_1\ <= \^wb_gpr_write_addr_reg[1]_1\;
\EX_Op3[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Op3_reg[0]_2\(16),
      I1 => GPR_Op3(16),
      I2 => \EX_Op3_reg[0]_3\(0),
      I3 => \^wb_gpr_write_addr_reg[1]_1\,
      I4 => \^wb_gpr_write_addr_reg[1]\,
      I5 => \EX_Op3_reg[0]_4\(0),
      O => ex_sel_alu_i_reg(16)
    );
\EX_Op3[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000D"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]_0\,
      I1 => \EX_Op3_reg[0]\,
      I2 => \EX_Op3_reg[0]_0\,
      I3 => \EX_Op3_reg[0]_1\,
      O => \^wb_gpr_write_addr_reg[1]_1\
    );
\EX_Op3[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F1"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]_0\,
      I1 => \EX_Op3_reg[0]\,
      I2 => \EX_Op3_reg[0]_0\,
      I3 => \EX_Op3_reg[0]_1\,
      O => \^wb_gpr_write_addr_reg[1]\
    );
\EX_Op3[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF6FF6FFFFFFFF"
    )
        port map (
      I0 => \EX_Op3[15]_i_3\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[15]_i_3\(0),
      I3 => \EX_Op3[15]_i_3_0\,
      I4 => \EX_Op3[15]_i_3_1\,
      I5 => \EX_Op3[15]_i_3_2\,
      O => \^wb_gpr_write_addr_reg[1]_0\
    );
\EX_Op3[0]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \EX_Op3[0]_i_6\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[0]_i_6_0\,
      I3 => \EX_Op3[0]_i_6_1\,
      O => \ex_gpr_write_addr_reg[1]\
    );
\EX_Op3[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(15),
      I3 => GPR_Op3(15),
      I4 => \EX_Op3_reg[15]\,
      O => ex_sel_alu_i_reg(15)
    );
\EX_Op3[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(14),
      I3 => GPR_Op3(14),
      I4 => \EX_Op3_reg[16]\,
      O => ex_sel_alu_i_reg(14)
    );
\EX_Op3[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(13),
      I3 => GPR_Op3(13),
      I4 => \EX_Op3_reg[17]\,
      O => ex_sel_alu_i_reg(13)
    );
\EX_Op3[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(12),
      I3 => GPR_Op3(12),
      I4 => \EX_Op3_reg[18]\,
      O => ex_sel_alu_i_reg(12)
    );
\EX_Op3[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(11),
      I3 => GPR_Op3(11),
      I4 => \EX_Op3_reg[19]\,
      O => ex_sel_alu_i_reg(11)
    );
\EX_Op3[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(10),
      I3 => GPR_Op3(10),
      I4 => \EX_Op3_reg[20]\,
      O => ex_sel_alu_i_reg(10)
    );
\EX_Op3[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(9),
      I3 => GPR_Op3(9),
      I4 => \EX_Op3_reg[21]\,
      O => ex_sel_alu_i_reg(9)
    );
\EX_Op3[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(8),
      I3 => GPR_Op3(8),
      I4 => \EX_Op3_reg[22]\,
      O => ex_sel_alu_i_reg(8)
    );
\EX_Op3[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(7),
      I3 => GPR_Op3(7),
      I4 => \EX_Op3_reg[23]\,
      O => ex_sel_alu_i_reg(7)
    );
\EX_Op3[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(6),
      I3 => GPR_Op3(6),
      I4 => \EX_Op3_reg[24]\,
      O => ex_sel_alu_i_reg(6)
    );
\EX_Op3[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(5),
      I3 => GPR_Op3(5),
      I4 => \EX_Op3_reg[25]\,
      O => ex_sel_alu_i_reg(5)
    );
\EX_Op3[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(4),
      I3 => GPR_Op3(4),
      I4 => \EX_Op3_reg[26]\,
      O => ex_sel_alu_i_reg(4)
    );
\EX_Op3[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(3),
      I3 => GPR_Op3(3),
      I4 => \EX_Op3_reg[28]\,
      O => ex_sel_alu_i_reg(3)
    );
\EX_Op3[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(2),
      I3 => GPR_Op3(2),
      I4 => \EX_Op3_reg[29]\,
      O => ex_sel_alu_i_reg(2)
    );
\EX_Op3[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(1),
      I3 => GPR_Op3(1),
      I4 => \EX_Op3_reg[30]\,
      O => ex_sel_alu_i_reg(1)
    );
\EX_Op3[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF3120"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]\,
      I1 => \^wb_gpr_write_addr_reg[1]_1\,
      I2 => \EX_Op3_reg[0]_2\(0),
      I3 => GPR_Op3(0),
      I4 => \EX_Op3_reg[31]\,
      O => ex_sel_alu_i_reg(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_36,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_219 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_35 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    I4 : in STD_LOGIC;
    \EX_Op3[31]_i_2\ : in STD_LOGIC;
    \EX_Op3[31]_i_2_0\ : in STD_LOGIC;
    \EX_Op3[31]_i_2_1\ : in STD_LOGIC;
    \EX_Op3[31]_i_2_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_219 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_219;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_219 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op3[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000009000"
    )
        port map (
      I0 => I4,
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[31]_i_2\,
      I3 => \EX_Op3[31]_i_2_0\,
      I4 => \EX_Op3[31]_i_2_1\,
      I5 => \EX_Op3[31]_i_2_2\,
      O => \ex_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_35,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_221 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    \mem_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_instr_ii_34 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_op1_cmp_eq_reg : in STD_LOGIC;
    ex_op1_cmp_eq_reg_0 : in STD_LOGIC;
    ex_op1_cmp_eq_reg_1 : in STD_LOGIC;
    \EX_Op3[31]_i_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[31]_i_2_0\ : in STD_LOGIC;
    \EX_Op3[31]_i_2_1\ : in STD_LOGIC;
    \EX_Op3[31]_i_2_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_221 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_221;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_221 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op3[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0009000000000009"
    )
        port map (
      I0 => \EX_Op3[31]_i_2\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \EX_Op3[31]_i_2_0\,
      I3 => \EX_Op3[31]_i_2_1\,
      I4 => \EX_Op3[31]_i_2\(1),
      I5 => \EX_Op3[31]_i_2_2\,
      O => \mem_gpr_write_addr_reg[3]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_34,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
ex_op1_cmp_eq_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EBFF"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => ex_op1_cmp_eq_reg,
      I2 => ex_op1_cmp_eq_reg_0,
      I3 => ex_op1_cmp_eq_reg_1,
      O => ex_op1_cmp_eq
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_223 is
  port (
    of_valid : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    of_Valid_II : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \imm_reg_reg[15]\ : in STD_LOGIC;
    \imm_reg_reg[15]_0\ : in STD_LOGIC;
    \imm_reg_reg[15]_1\ : in STD_LOGIC;
    \imm_reg_reg[15]_2\ : in STD_LOGIC;
    \imm_reg_reg[15]_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_223 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_223;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_223 is
  signal \^of_valid\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_valid <= \^of_valid\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_Valid_II,
      Q => \^of_valid\,
      R => sync_reset
    );
\imm_reg[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000008000"
    )
        port map (
      I0 => \^of_valid\,
      I1 => \imm_reg_reg[15]\,
      I2 => \imm_reg_reg[15]_0\,
      I3 => \imm_reg_reg[15]_1\,
      I4 => \imm_reg_reg[15]_2\,
      I5 => \imm_reg_reg[15]_3\,
      O => E(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_224 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0125_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_31 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_224 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_224;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_224 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_31,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__84\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I0125_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_226 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I085_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_21 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[10]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_226 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_226;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_226 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_21,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__94\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I085_out
    );
\Using_FPGA.Native_i_2__140\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[10]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_228 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I081_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_20 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[11]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_228 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_228;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_228 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_20,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__95\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I081_out
    );
\Using_FPGA.Native_i_2__139\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[11]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_230 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I077_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_19 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[12]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_230 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_230;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_230 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_19,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__96\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I077_out
    );
\Using_FPGA.Native_i_2__138\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[12]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_232 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I073_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_18 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[13]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_232 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_232;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_232 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_18,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__97\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I073_out
    );
\Using_FPGA.Native_i_2__137\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[13]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_234 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I069_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_17 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[14]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_234 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_234;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_234 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_17,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__98\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I069_out
    );
\Using_FPGA.Native_i_2__136\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[14]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_236 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I065_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_16 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[15]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_236 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_236;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_236 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_16,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__99\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I065_out
    );
\Using_FPGA.Native_i_2__148\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[15]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_238 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I061_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_15 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[16]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_238 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_238;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_238 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_15,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__100\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I061_out
    );
\Using_FPGA.Native_i_2__150\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[16]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_240 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I057_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_14 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[17]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_240 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_240;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_240 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_14,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__101\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I057_out
    );
\Using_FPGA.Native_i_2__129\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[17]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_242 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I053_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_13 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[18]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_242 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_242;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_242 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_13,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__102\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I053_out
    );
\Using_FPGA.Native_i_2__133\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[18]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_244 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I049_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_12 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[19]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_244 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_244;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_244 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_12,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__103\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I049_out
    );
\Using_FPGA.Native_i_2__132\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[19]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_246 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0121_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_30 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[1]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_246 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_246;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_246 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_30,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__85\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0121_out
    );
\Using_FPGA.Native_i_2__141\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[1]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_248 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I045_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_11 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[20]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_248 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_248;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_248 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_11,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__104\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I045_out
    );
\Using_FPGA.Native_i_2__131\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[20]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_250 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I041_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_10 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[21]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_250 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_250;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_250 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_10,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__105\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I041_out
    );
\Using_FPGA.Native_i_2__130\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[21]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_252 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I037_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_9 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_252 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_252;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_252 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_9,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__106\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I037_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_254 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I033_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_8 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_254 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_254;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_254 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_8,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__107\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I033_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_256 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I029_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_7 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[24]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_256 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_256;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_256 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_7,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__108\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I029_out
    );
\Using_FPGA.Native_i_2__149\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[24]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_258 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I025_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_6 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_258 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_258;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_258 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_6,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__109\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I025_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_260 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I021_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_5 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[26]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_260 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_260;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_260 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_5,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__110\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I021_out
    );
\Using_FPGA.Native_i_2__128\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[26]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_262 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I017_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_4 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_262 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_262;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_262 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_4,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__111\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I017_out
    );
\Using_FPGA.Native_i_2__127\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[27]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_264 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I013_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_264 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_264;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_264 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_3,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__112\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I013_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_266 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I09_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_266 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_266;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_266 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_2,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__113\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I09_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_268 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0117_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_29 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_268 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_268;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_268 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_29,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__86\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0117_out
    );
\Using_FPGA.Native_i_2__146\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[2]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_270 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I05_out : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_270 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_270;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_270 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_1,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__114\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \^d\(0),
      O => I05_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_272 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[31]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_272 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_272;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_272 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_0,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__115\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0
    );
\Using_FPGA.Native_i_2__151\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[31]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_274 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0113_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_28 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[3]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_274 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_274;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_274 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_28,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__87\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0113_out
    );
\Using_FPGA.Native_i_2__145\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[3]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_276 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0109_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_27 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[4]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_276 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_276;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_276 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_27,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__88\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0109_out
    );
\Using_FPGA.Native_i_2__144\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[4]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_278 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0105_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_26 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[5]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_278 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_278;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_278 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_26,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__89\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0105_out
    );
\Using_FPGA.Native_i_2__143\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[5]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_280 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0101_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_25 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[6]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_280 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_280;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_280 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_25,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__90\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I0101_out
    );
\Using_FPGA.Native_i_2__142\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[6]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_282 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I097_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_24 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[7]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_282 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_282;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_282 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_24,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__91\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I097_out
    );
\Using_FPGA.Native_i_2__147\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[7]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_284 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I093_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_23 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[8]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_284 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_284;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_284 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_23,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__92\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I093_out
    );
\Using_FPGA.Native_i_2__135\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[8]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_286 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I089_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_pc_ii_22 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \EX_Op1_reg[9]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_286 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_286;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_286 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_22,
      Q => \^d\(0),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__93\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \^d\(0),
      O => I089_out
    );
\Using_FPGA.Native_i_2__134\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => \EX_Op1_reg[9]\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_319 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_319 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_319;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_319 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_2\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\WB_MEM_Result[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[22]\(0),
      I4 => \WB_MEM_Result_reg[22]_0\(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_320 is
  port (
    mem_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_320 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_320;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_320 is
  signal \^mem_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  mem_MSR(0) <= \^mem_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^mem_msr\(0),
      R => sync_reset
    );
\WB_MEM_Result[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^mem_msr\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[23]\(0),
      I4 => \WB_MEM_Result_reg[23]_0\(0),
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_321 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_321 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_321;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_321 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^d\(0),
      R => sync_reset
    );
\WB_MEM_Result[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^d\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[25]\(0),
      I4 => \WB_MEM_Result_reg[25]_0\(0),
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_322 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_322 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_322;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_322 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^d\(0),
      R => sync_reset
    );
\WB_MEM_Result[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^d\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[28]\(0),
      I4 => \WB_MEM_Result_reg[28]_0\(0),
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_323 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \WB_MEM_Result_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \WB_MEM_Result_reg[0]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_323 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_323;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_323 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^d\(0),
      R => sync_reset
    );
\WB_MEM_Result[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^d\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(1),
      I3 => \WB_MEM_Result_reg[0]\(1),
      I4 => \WB_MEM_Result_reg[0]_0\(1),
      O => \Using_FPGA.Native_0\(1)
    );
\WB_MEM_Result[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^d\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[0]\(0),
      I4 => \WB_MEM_Result_reg[0]_0\(0),
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_324 is
  port (
    mem_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_ie_rising0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_Fast_Interrupt.wb_ie_rising_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_324 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_324;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_324 is
  signal \^mem_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  mem_MSR(0) <= \^mem_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^mem_msr\(0),
      R => sync_reset
    );
\Using_Fast_Interrupt.wb_ie_rising_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mem_msr\(0),
      I1 => \Using_Fast_Interrupt.wb_ie_rising_reg\(0),
      O => wb_ie_rising0
    );
\WB_MEM_Result[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => \^mem_msr\(0),
      I1 => mem_sel_msr,
      I2 => MEM_Barrel_Result(0),
      I3 => \WB_MEM_Result_reg[30]\(0),
      I4 => \WB_MEM_Result_reg[30]_0\(0),
      O => \Using_FPGA.Native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_325 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_325 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_325;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_325 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_326 is
  port (
    of_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_Interrupt_Brk_combo_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Interrupt : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_326 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_326;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_326 is
  signal \^of_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_MSR(0) <= \^of_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^of_msr\(0),
      R => sync_reset
    );
ex_Interrupt_Brk_combo_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^of_msr\(0),
      I1 => ex_Interrupt_Brk_combo_reg(1),
      I2 => Interrupt,
      I3 => ex_Interrupt_Brk_combo_reg(0),
      I4 => LOCKSTEP_Master_Out(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_327 is
  port (
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_327 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_327;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_327 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_328 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_328 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_328;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_328 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_329 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_329 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_329;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_329 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_330 is
  port (
    of_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_330 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_330;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_330 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => of_MSR(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_331 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_331 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_331;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_331 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_332 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_332 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_332;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_332 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDR_333 is
  port (
    of_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDR_333 : entity is "MB_FDR";
end mb_design_microblaze_0_1_MB_FDR_333;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDR_333 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => of_MSR(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_FDS is
  port (
    if_sel_input : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0173_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I0169_out : out STD_LOGIC;
    I0165_out : out STD_LOGIC;
    I0161_out : out STD_LOGIC;
    I0157_out : out STD_LOGIC;
    I0153_out : out STD_LOGIC;
    I0149_out : out STD_LOGIC;
    I0145_out : out STD_LOGIC;
    I0141_out : out STD_LOGIC;
    I0137_out : out STD_LOGIC;
    I0133_out : out STD_LOGIC;
    I0129_out : out STD_LOGIC;
    I0125_out : out STD_LOGIC;
    I0121_out : out STD_LOGIC;
    I0117_out : out STD_LOGIC;
    I0113_out : out STD_LOGIC;
    I0109_out : out STD_LOGIC;
    I0105_out : out STD_LOGIC;
    I0101_out : out STD_LOGIC;
    I097_out : out STD_LOGIC;
    I093_out : out STD_LOGIC;
    I089_out : out STD_LOGIC;
    I085_out : out STD_LOGIC;
    I081_out : out STD_LOGIC;
    I077_out : out STD_LOGIC;
    I073_out : out STD_LOGIC;
    I069_out : out STD_LOGIC;
    I065_out : out STD_LOGIC;
    I061_out : out STD_LOGIC;
    I057_out : out STD_LOGIC;
    I053_out : out STD_LOGIC;
    I049_out : out STD_LOGIC;
    I045_out : out STD_LOGIC;
    I037_out : out STD_LOGIC;
    I033_out : out STD_LOGIC;
    I029_out : out STD_LOGIC;
    I025_out : out STD_LOGIC;
    I021_out : out STD_LOGIC;
    I017_out : out STD_LOGIC;
    I013_out : out STD_LOGIC;
    I09_out : out STD_LOGIC;
    I05_out : out STD_LOGIC;
    I0_0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_i_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 32 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    of_Instr_Exception : in STD_LOGIC;
    of_predecode_raw : in STD_LOGIC_VECTOR ( 9 downto 0 );
    \Using_FPGA.Native_i_1__73\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__73_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__73_1\ : in STD_LOGIC;
    IReady : in STD_LOGIC;
    \Using_FPGA.Native_i_1__73_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_FDS : entity is "MB_FDS";
end mb_design_microblaze_0_1_MB_FDS;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_FDS is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^if_sel_input\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  if_sel_input(0) <= \^if_sel_input\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_i_0,
      Q => \^if_sel_input\(0),
      S => sync_reset
    );
\Using_FPGA.Native_i_1__40\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(32),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      O => I0173_out
    );
\Using_FPGA.Native_i_1__41\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(31),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      O => I0169_out
    );
\Using_FPGA.Native_i_1__42\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(30),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_3\,
      O => I0165_out
    );
\Using_FPGA.Native_i_1__43\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(29),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_4\,
      O => I0161_out
    );
\Using_FPGA.Native_i_1__44\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(28),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_5\,
      O => I0157_out
    );
\Using_FPGA.Native_i_1__45\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(27),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_6\,
      O => I0153_out
    );
\Using_FPGA.Native_i_1__46\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(26),
      I1 => \^using_fpga.native_0\,
      I2 => D(1),
      O => I0149_out
    );
\Using_FPGA.Native_i_1__47\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(25),
      I1 => \^using_fpga.native_0\,
      I2 => D(0),
      O => I0145_out
    );
\Using_FPGA.Native_i_1__48\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(24),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_7\,
      O => I0141_out
    );
\Using_FPGA.Native_i_1__49\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(23),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_8\,
      O => I0137_out
    );
\Using_FPGA.Native_i_1__50\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(22),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_9\,
      O => I0133_out
    );
\Using_FPGA.Native_i_1__51\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(9),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_10\,
      O => I0129_out
    );
\Using_FPGA.Native_i_1__52\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(8),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_11\,
      O => I0125_out
    );
\Using_FPGA.Native_i_1__53\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(7),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_12\,
      O => I0121_out
    );
\Using_FPGA.Native_i_1__54\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(6),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_13\,
      O => I0117_out
    );
\Using_FPGA.Native_i_1__55\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(5),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_14\,
      O => I0113_out
    );
\Using_FPGA.Native_i_1__56\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(4),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_15\,
      O => I0109_out
    );
\Using_FPGA.Native_i_1__57\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(3),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_16\,
      O => I0105_out
    );
\Using_FPGA.Native_i_1__58\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(2),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_17\,
      O => I0101_out
    );
\Using_FPGA.Native_i_1__59\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_18\,
      O => I097_out
    );
\Using_FPGA.Native_i_1__60\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_19\,
      O => I093_out
    );
\Using_FPGA.Native_i_1__61\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(21),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_20\,
      O => I089_out
    );
\Using_FPGA.Native_i_1__62\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(20),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_21\,
      O => I085_out
    );
\Using_FPGA.Native_i_1__63\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(19),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_22\,
      O => I081_out
    );
\Using_FPGA.Native_i_1__64\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(18),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_23\,
      O => I077_out
    );
\Using_FPGA.Native_i_1__65\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(17),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_24\,
      O => I073_out
    );
\Using_FPGA.Native_i_1__66\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(16),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_25\,
      O => I069_out
    );
\Using_FPGA.Native_i_1__67\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(15),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_26\,
      O => I065_out
    );
\Using_FPGA.Native_i_1__68\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(14),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_27\,
      O => I061_out
    );
\Using_FPGA.Native_i_1__69\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(13),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_28\,
      O => I057_out
    );
\Using_FPGA.Native_i_1__70\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(12),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_29\,
      O => I053_out
    );
\Using_FPGA.Native_i_1__71\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(11),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_30\,
      O => I049_out
    );
\Using_FPGA.Native_i_1__72\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(10),
      I1 => \^using_fpga.native_0\,
      I2 => of_Instr_Exception,
      O => I045_out
    );
\Using_FPGA.Native_i_1__74\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(9),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(9),
      O => I037_out
    );
\Using_FPGA.Native_i_1__75\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(8),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(8),
      O => I033_out
    );
\Using_FPGA.Native_i_1__76\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(7),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(7),
      O => I029_out
    );
\Using_FPGA.Native_i_1__77\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(6),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(6),
      O => I025_out
    );
\Using_FPGA.Native_i_1__78\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(5),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(5),
      O => I021_out
    );
\Using_FPGA.Native_i_1__79\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(4),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(4),
      O => I017_out
    );
\Using_FPGA.Native_i_1__80\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(3),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(3),
      O => I013_out
    );
\Using_FPGA.Native_i_1__81\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(2),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(2),
      O => I09_out
    );
\Using_FPGA.Native_i_1__82\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(1),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(1),
      O => I05_out
    );
\Using_FPGA.Native_i_1__83\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => of_predecode_raw(0),
      O => I0_0
    );
\Using_FPGA.Native_i_3__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000888A8888"
    )
        port map (
      I0 => \^if_sel_input\(0),
      I1 => \Using_FPGA.Native_i_1__73\,
      I2 => \Using_FPGA.Native_i_1__73_0\,
      I3 => \Using_FPGA.Native_i_1__73_1\,
      I4 => IReady,
      I5 => \Using_FPGA.Native_i_1__73_2\,
      O => \^using_fpga.native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT4 is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    I2 : in STD_LOGIC;
    alu_AddSub_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT4 : entity is "MB_LUT4";
end mb_design_microblaze_0_1_MB_LUT4;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT4 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FA0A"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[0]\(0),
      I2 => I2,
      I3 => alu_AddSub_1,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1\ is
  port (
    New_Q_Sel_31 : out STD_LOGIC;
    \R_reg[32]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \R_reg[32]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => New_Q_Sel_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_488\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_488\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_488\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_488\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[10]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_490\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_490\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_490\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_490\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[11]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_492\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_492\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_492\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_492\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[12]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_494\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_494\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_494\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_494\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[13]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_496\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_496\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_496\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_496\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[14]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_498\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_498\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_498\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_498\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[15]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_500\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_500\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_500\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_500\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[16]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_502\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_502\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_502\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_502\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[17]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_504\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_504\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_504\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_504\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[18]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_506\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_506\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_506\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_506\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[19]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_508\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_508\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_508\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_508\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[1]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_510\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_510\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_510\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_510\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[20]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_512\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_512\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_512\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_512\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[21]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_514\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_514\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_514\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_514\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[22]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_516\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_516\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_516\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_516\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[23]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_518\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_518\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_518\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_518\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[24]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_520\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_520\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_520\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_520\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[25]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_522\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_522\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_522\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_522\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[26]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_524\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_524\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_524\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_524\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[27]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_526\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_526\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_526\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_526\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[28]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_528\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_528\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_528\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_528\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[29]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_530\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_530\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_530\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_530\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[2]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_532\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_532\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_532\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_532\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[30]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_534\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_534\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_534\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_534\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[31]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_536\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_536\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_536\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_536\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[3]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_538\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_538\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_538\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_538\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[4]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_540\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_540\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_540\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_540\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[5]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_542\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_542\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_542\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_542\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[6]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_544\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_544\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_544\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_544\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[7]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_546\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_546\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_546\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_546\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[8]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT4__parameterized1_548\ is
  port (
    S : out STD_LOGIC;
    \Q_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_548\ : entity is "MB_LUT4";
end \mb_design_microblaze_0_1_MB_LUT4__parameterized1_548\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT4__parameterized1_548\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => \Q_reg[9]\(0),
      I1 => Q(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6 is
  port (
    sel_input_iii_3 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6 : entity is "MB_LUT6";
end mb_design_microblaze_0_1_MB_LUT6;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => addr(0),
      I2 => '0',
      I3 => IReady_0,
      I4 => \Using_FPGA.Native_0\,
      I5 => I5,
      O => sel_input_iii_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_130 is
  port (
    sel_input_iii_2 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_130 : entity is "MB_LUT6";
end mb_design_microblaze_0_1_MB_LUT6_130;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_130 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => if_sel_input(1),
      I2 => addr(0),
      I3 => IReady_0,
      I4 => \Using_FPGA.Native_0\,
      I5 => I5,
      O => sel_input_iii_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_132 is
  port (
    sel_input_iii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_132 : entity is "MB_LUT6";
end mb_design_microblaze_0_1_MB_LUT6_132;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_132 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => if_sel_input(0),
      I2 => if_sel_input(1),
      I3 => IReady_0,
      I4 => \Using_FPGA.Native_1\,
      I5 => I5,
      O => sel_input_iii_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_134 is
  port (
    sel_input_iii_0 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_134 : entity is "MB_LUT6";
end mb_design_microblaze_0_1_MB_LUT6_134;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_134 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => if_sel_input(1),
      I3 => IReady_0,
      I4 => \Using_FPGA.Native_1\,
      I5 => I5,
      O => sel_input_iii_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[9]\(1),
      I2 => \MEM_DataBus_Addr_reg[9]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[9]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_691 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[8]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_691 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_691;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_691 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[8]\(1),
      I2 => \MEM_DataBus_Addr_reg[8]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[8]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_693 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[7]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_693 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_693;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_693 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[7]\(1),
      I2 => \MEM_DataBus_Addr_reg[7]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[7]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_695 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_695 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_695;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_695 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[6]\(1),
      I2 => \MEM_DataBus_Addr_reg[6]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[6]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_697 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[5]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_697 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_697;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_697 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[5]\(1),
      I2 => \MEM_DataBus_Addr_reg[5]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[5]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_699 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[4]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_699 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_699;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_699 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[4]\(1),
      I2 => \MEM_DataBus_Addr_reg[4]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[4]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_701 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[3]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_701 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_701;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_701 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[3]\(1),
      I2 => \MEM_DataBus_Addr_reg[3]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[3]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_703 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_EAR_reg[31]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_EAR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_703 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_703;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_703 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \mem_EAR_reg[31]\(1),
      I2 => \mem_EAR_reg[31]_0\(0),
      I3 => \mem_EAR_reg[31]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_705 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_EAR_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_EAR_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_705 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_705;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_705 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \mem_EAR_reg[30]\(1),
      I2 => \mem_EAR_reg[30]_0\(0),
      I3 => \mem_EAR_reg[30]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_707 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_707 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_707;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_707 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[2]\(1),
      I2 => \MEM_DataBus_Addr_reg[2]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[2]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_709 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_709 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_709;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_709 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[29]\(1),
      I2 => \MEM_DataBus_Addr_reg[29]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[29]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_711 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[28]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_711 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_711;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_711 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[28]\(1),
      I2 => \MEM_DataBus_Addr_reg[28]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[28]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_713 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_713 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_713;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_713 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[27]\(1),
      I2 => \MEM_DataBus_Addr_reg[27]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[27]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_715 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[26]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_715 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_715;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_715 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[26]\(1),
      I2 => \MEM_DataBus_Addr_reg[26]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[26]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_717 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_717 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_717;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_717 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[25]\(1),
      I2 => \MEM_DataBus_Addr_reg[25]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[25]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_719 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[24]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_719 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_719;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_719 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[24]\(1),
      I2 => \MEM_DataBus_Addr_reg[24]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[24]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_721 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[23]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_721 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_721;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_721 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[23]\(1),
      I2 => \MEM_DataBus_Addr_reg[23]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[23]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_723 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[22]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_723 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_723;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_723 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[22]\(1),
      I2 => \MEM_DataBus_Addr_reg[22]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[22]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_725 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[21]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_725 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_725;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_725 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[21]\(1),
      I2 => \MEM_DataBus_Addr_reg[21]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[21]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_727 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[20]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_727 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_727;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_727 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[20]\(1),
      I2 => \MEM_DataBus_Addr_reg[20]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[20]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_729 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_729 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_729;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_729 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[1]\(1),
      I2 => \MEM_DataBus_Addr_reg[1]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[1]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_731 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[19]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_731 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_731;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_731 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[19]\(1),
      I2 => \MEM_DataBus_Addr_reg[19]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[19]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_733 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[18]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_733 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_733;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_733 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[18]\(1),
      I2 => \MEM_DataBus_Addr_reg[18]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[18]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_735 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_735 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_735;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_735 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[17]\(1),
      I2 => \MEM_DataBus_Addr_reg[17]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[17]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_737 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[16]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_737 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_737;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_737 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[16]\(1),
      I2 => \MEM_DataBus_Addr_reg[16]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[16]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_739 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[15]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_739 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_739;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_739 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[15]\(1),
      I2 => \MEM_DataBus_Addr_reg[15]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[15]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_741 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[14]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_741 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_741;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_741 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[14]\(1),
      I2 => \MEM_DataBus_Addr_reg[14]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[14]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_743 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[13]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_743 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_743;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_743 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[13]\(1),
      I2 => \MEM_DataBus_Addr_reg[13]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[13]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_745 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[12]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_745 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_745;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_745 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[12]\(1),
      I2 => \MEM_DataBus_Addr_reg[12]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[12]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_747 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_747 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_747;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_747 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[11]\(1),
      I2 => \MEM_DataBus_Addr_reg[11]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[11]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_LUT6_2_749 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[10]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_LUT6_2_749 : entity is "MB_LUT6_2";
end mb_design_microblaze_0_1_MB_LUT6_2_749;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_LUT6_2_749 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \MEM_DataBus_Addr_reg[10]\(1),
      I2 => \MEM_DataBus_Addr_reg[10]_0\(0),
      I3 => \MEM_DataBus_Addr_reg[10]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized1\ is
  port (
    muxcy_di : out STD_LOGIC;
    muxcy_sel : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized1\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"00FF00FFFEFEFEFE"
    )
        port map (
      I0 => '0',
      I1 => '0',
      I2 => '0',
      I3 => '0',
      I4 => '0',
      I5 => '1',
      O5 => muxcy_di,
      O6 => muxcy_sel
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_10\ is
  port (
    \Instr[3]\ : out STD_LOGIC;
    Y : out STD_LOGIC_VECTOR ( 0 to 0 );
    I041_out : out STD_LOGIC;
    I139_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_10\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_10\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_10\ is
  signal \^instr[3]\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Instr[3]\ <= \^instr[3]\;
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => \^instr[3]\,
      O6 => Y(0)
    );
\Using_FPGA.Native_i_1__73\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80FF8000"
    )
        port map (
      I0 => \^instr[3]\,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\(0),
      O => I041_out
    );
\Using_FPGA.Native_i_2__90\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80FF8000"
    )
        port map (
      I0 => \^instr[3]\,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \Using_FPGA.Native_4\(0),
      I4 => \Using_FPGA.Native_5\(0),
      O => I139_out
    );
\ibuffer_reg[3][33]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^instr[3]\,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => \Using_FPGA.Native_1\(0),
      O => \in\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_11\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_11\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_11\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_11\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_12\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_12\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_12\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_12\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_13\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_13\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_13\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_13\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_14\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_14\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_14\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_14\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_15\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_15\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_15\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_15\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_16\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_16\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_16\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_16\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_2\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_2\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_2\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_2\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_3\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_3\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_3\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_3\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_4\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_4\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_4\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_4\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_431\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_431\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_431\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_431\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_432\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_432\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_432\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_432\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_433\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_433\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_433\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_433\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_434\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_434\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_434\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_434\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_435\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_435\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_435\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_435\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_436\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_436\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_436\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_436\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_437\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_437\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_437\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_437\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_438\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_438\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_438\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_438\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_439\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_439\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_439\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_439\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_440\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_440\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_440\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_440\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_441\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_441\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_441\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_441\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_442\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_442\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_442\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_442\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_443\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_443\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_443\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_443\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_444\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_444\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_444\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_444\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_445\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_445\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_445\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_445\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_446\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_446\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_446\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_446\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Q(1),
      I1 => A1(1),
      I2 => Q(0),
      I3 => A1(0),
      I4 => ex_load_btr,
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_5\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_5\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_5\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_6\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_6\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_6\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_6\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_7\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_7\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_7\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_7\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_8\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_8\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_8\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_8\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_9\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_9\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_9\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_9\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    addr_AddSub_31 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => addr_AddSub_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_338\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_338\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_338\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_338\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_341\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_341\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_341\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_341\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_344\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_344\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_344\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_344\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_347\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_347\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_347\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_347\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_350\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_350\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_350\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_350\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_353\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_353\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_353\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_353\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_356\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_356\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_356\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_356\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_359\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_359\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_359\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_359\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_362\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_362\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_362\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_362\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_365\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_365\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_365\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_365\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_368\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_368\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_368\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_368\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_371\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_371\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_371\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_371\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_374\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_374\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_374\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_374\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_377\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_377\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_377\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_377\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_380\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_380\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_380\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_380\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_383\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_383\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_383\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_383\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_386\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_386\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_386\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_386\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_389\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_389\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_389\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_389\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_392\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_392\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_392\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_392\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_395\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_395\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_395\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_395\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_398\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    I1 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_398\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_398\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_398\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => I1,
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_401\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_401\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_401\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_401\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_404\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_404\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_404\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_404\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_1\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_407\ is
  port (
    O5 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_407\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_407\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_407\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => O5,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_410\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_410\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_410\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_410\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_413\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_413\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_413\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_413\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_416\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_416\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_416\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_416\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_419\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_419\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_419\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_419\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_422\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_422\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_422\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_422\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_425\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_425\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_425\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_425\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_428\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_428\ : entity is "MB_LUT6_2";
end \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_428\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_428\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => '0',
      I2 => D(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => MEM_WB_Sel_Mem_PC,
      I5 => '1',
      O5 => \Using_FPGA.Native_0\,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10\ is
  port (
    A : out STD_LOGIC;
    I0 : in STD_LOGIC;
    of_predecode_raw : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__142_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__142_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__142_2\ : in STD_LOGIC;
    O : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10\ is
  signal of_read_ex_write_op1_conflict_part2 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => I0,
      I1 => of_predecode_raw(1),
      I2 => \Using_FPGA.Native_i_1__142_0\,
      I3 => of_predecode_raw(0),
      I4 => \Using_FPGA.Native_i_1__142_1\,
      I5 => \Using_FPGA.Native_i_1__142_2\,
      O => of_read_ex_write_op1_conflict_part2
    );
\Using_FPGA.Native_i_1__142\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => of_read_ex_write_op1_conflict_part2,
      I1 => O,
      I2 => ex_is_multi_or_load_instr,
      O => A
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10_101\ is
  port (
    of_read_mem_write_op3_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__126\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__126_0\ : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_101\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10_101\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_101\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => \Using_FPGA.Native_i_1__126\,
      I2 => Q(0),
      I3 => \Using_FPGA.Native_i_1__126_0\,
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op3_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10_93\ is
  port (
    of_read_ex_write_op2_conflict_part2 : out STD_LOGIC;
    I0 : in STD_LOGIC;
    of_predecode_raw : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__117\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__117_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__117_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_93\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10_93\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_93\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => I0,
      I1 => of_predecode_raw(1),
      I2 => \Using_FPGA.Native_i_1__117\,
      I3 => of_predecode_raw(0),
      I4 => \Using_FPGA.Native_i_1__117_0\,
      I5 => \Using_FPGA.Native_i_1__117_1\,
      O => of_read_ex_write_op2_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10_95\ is
  port (
    of_read_ex_write_op3_conflict_part2 : out STD_LOGIC;
    I0 : in STD_LOGIC;
    \Using_FPGA.Native_i_1__125\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__125_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__125_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__125_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__125_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_95\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10_95\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_95\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => I0,
      I1 => \Using_FPGA.Native_i_1__125\,
      I2 => \Using_FPGA.Native_i_1__125_0\,
      I3 => \Using_FPGA.Native_i_1__125_1\,
      I4 => \Using_FPGA.Native_i_1__125_2\,
      I5 => \Using_FPGA.Native_i_1__125_3\,
      O => of_read_ex_write_op3_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10_97\ is
  port (
    mem_is_multi_or_load_instr_reg : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    of_read_mem_write_op1_conflict_part1 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_97\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10_97\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_97\ is
  signal of_read_mem_write_op1_conflict_part2 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode_raw(1),
      I2 => Q(0),
      I3 => of_predecode_raw(0),
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op1_conflict_part2
    );
\Using_FPGA.Native_i_1__141\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => of_read_mem_write_op1_conflict_part2,
      I1 => of_read_mem_write_op1_conflict_part1,
      I2 => mem_is_multi_or_load_instr,
      O => mem_is_multi_or_load_instr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized10_99\ is
  port (
    of_read_mem_write_op2_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_99\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized10_99\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized10_99\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode_raw(1),
      I2 => Q(0),
      I3 => of_predecode_raw(0),
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op2_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized12\ is
  port (
    alu_AddSub_1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized12\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized12\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized12\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\(1),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O => alu_AddSub_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized2\ is
  port (
    sel_input_delayslot : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized2\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized2\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized2\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFFCCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => if_sel_input(1),
      I3 => IReady_0,
      I4 => \Using_FPGA.Native_1\,
      I5 => I5,
      O => sel_input_delayslot
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : in STD_LOGIC;
    I1 : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    I3 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I0,
      I1 => I1,
      I2 => mem_left_shift,
      I3 => I3,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[0]\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_628\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I09_in : in STD_LOGIC;
    I020_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[10]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_628\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_628\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_628\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I09_in,
      I1 => I020_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[10]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[10]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_629\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I010_in : in STD_LOGIC;
    I019_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[11]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_629\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_629\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_629\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I010_in,
      I1 => I019_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[11]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[11]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_630\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I011_in : in STD_LOGIC;
    I018_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[12]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_630\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_630\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_630\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I011_in,
      I1 => I018_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[12]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[12]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_631\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I012_in : in STD_LOGIC;
    I017_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[13]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_631\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_631\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_631\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I012_in,
      I1 => I017_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[13]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[13]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_632\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I013_in : in STD_LOGIC;
    I016_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[14]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_632\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_632\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_632\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I013_in,
      I1 => I016_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[14]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[14]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_633\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I014_in : in STD_LOGIC;
    I015_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[15]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_633\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_633\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_633\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I014_in,
      I1 => I015_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[15]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[15]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_634\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I015_in : in STD_LOGIC;
    I014_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[16]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_634\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_634\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_634\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I015_in,
      I1 => I014_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[16]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[16]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_635\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I016_in : in STD_LOGIC;
    I013_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[17]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_635\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_635\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_635\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I016_in,
      I1 => I013_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[17]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[17]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_636\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I017_in : in STD_LOGIC;
    I012_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[18]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_636\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_636\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_636\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I017_in,
      I1 => I012_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[18]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[18]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_637\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I018_in : in STD_LOGIC;
    I011_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[19]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_637\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_637\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_637\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I018_in,
      I1 => I011_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[19]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[19]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_638\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I00_in : in STD_LOGIC;
    I029_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[1]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_638\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_638\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_638\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I00_in,
      I1 => I029_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[1]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[1]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_639\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I019_in : in STD_LOGIC;
    I010_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[20]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_639\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_639\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_639\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I019_in,
      I1 => I010_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[20]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[20]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_640\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I020_in : in STD_LOGIC;
    I09_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[21]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_640\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_640\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_640\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I020_in,
      I1 => I09_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[21]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[21]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_641\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I021_in : in STD_LOGIC;
    I08_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[22]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_641\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_641\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_641\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I021_in,
      I1 => I08_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[22]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[22]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_642\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I022_in : in STD_LOGIC;
    I07_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[23]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_642\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_642\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_642\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I022_in,
      I1 => I07_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[23]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[23]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_643\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I023_in : in STD_LOGIC;
    I06_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[24]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_643\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_643\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_643\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I023_in,
      I1 => I06_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[24]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[24]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_644\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I024_in : in STD_LOGIC;
    I05_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[25]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_644\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_644\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_644\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I024_in,
      I1 => I05_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[25]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[25]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_645\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I025_in : in STD_LOGIC;
    I04_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[26]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_645\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_645\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_645\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I025_in,
      I1 => I04_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[26]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[26]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_646\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I026_in : in STD_LOGIC;
    I03_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[27]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_646\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_646\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_646\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I026_in,
      I1 => I03_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[27]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[27]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_647\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I027_in : in STD_LOGIC;
    I02_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[28]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_647\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_647\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_647\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I027_in,
      I1 => I02_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[28]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[28]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_648\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I028_in : in STD_LOGIC;
    I01_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[29]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_648\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_648\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_648\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I028_in,
      I1 => I01_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[29]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[29]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_649\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I01_in : in STD_LOGIC;
    I028_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[2]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_649\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_649\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_649\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I01_in,
      I1 => I028_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[2]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[2]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_650\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I029_in : in STD_LOGIC;
    I00_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[30]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_650\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_650\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_650\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I029_in,
      I1 => I00_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[30]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[30]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_651\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I1 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[31]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_651\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_651\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_651\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I1,
      I1 => I0,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[31]\,
      I4 => Q(0),
      I5 => '0',
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_652\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I02_in : in STD_LOGIC;
    I027_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[3]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_652\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_652\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_652\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I02_in,
      I1 => I027_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[3]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[3]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_653\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I03_in : in STD_LOGIC;
    I026_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[4]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_653\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_653\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_653\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I03_in,
      I1 => I026_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[4]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[4]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_654\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I04_in : in STD_LOGIC;
    I025_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[5]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_654\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_654\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_654\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I04_in,
      I1 => I025_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[5]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[5]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_655\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I05_in : in STD_LOGIC;
    I024_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[6]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_655\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_655\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_655\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I05_in,
      I1 => I024_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[6]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[6]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_656\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I06_in : in STD_LOGIC;
    I023_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[7]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_656\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_656\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_656\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I06_in,
      I1 => I023_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[7]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[7]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_657\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I07_in : in STD_LOGIC;
    I022_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[8]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_657\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_657\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_657\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I07_in,
      I1 => I022_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[8]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[8]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized26_658\ is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I08_in : in STD_LOGIC;
    I021_in : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    \WB_MEM_Result_reg[9]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_658\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized26_658\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized26_658\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I08_in,
      I1 => I021_in,
      I2 => mem_left_shift,
      I3 => \WB_MEM_Result_reg[9]\,
      I4 => Q(0),
      I5 => \WB_MEM_Result_reg[9]_0\(0),
      O => MEM_Barrel_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized4\ is
  port (
    sel_input_i_0 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized4\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized4\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized4\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFFFAE0AAE0A"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => IReady_0,
      I3 => \Using_FPGA.Native_1\,
      I4 => S,
      I5 => I5,
      O => sel_input_i_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized6\ is
  port (
    of_Valid_II : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    I5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized6\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized6\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized6\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF000051F551F5"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => IReady_0,
      I3 => \Using_FPGA.Native_1\,
      I4 => S,
      I5 => I5,
      O => of_Valid_II
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8\ is
  port (
    O : out STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => D(2),
      I1 => of_predecode_raw(2),
      I2 => D(1),
      I3 => of_predecode_raw(1),
      I4 => D(0),
      I5 => of_predecode_raw(0),
      O => O
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8_100\ is
  port (
    of_read_mem_write_op3_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__126\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_100\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8_100\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_100\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => D(1),
      I2 => Q(1),
      I3 => D(0),
      I4 => Q(0),
      I5 => \Using_FPGA.Native_i_1__126\,
      O => of_read_mem_write_op3_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8_92\ is
  port (
    of_read_ex_write_op2_conflict_part1 : out STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_92\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8_92\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_92\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => D(2),
      I1 => of_predecode_raw(2),
      I2 => D(1),
      I3 => of_predecode_raw(1),
      I4 => D(0),
      I5 => of_predecode_raw(0),
      O => of_read_ex_write_op2_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8_94\ is
  port (
    of_read_ex_write_op3_conflict_part1 : out STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_i_1__125\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_1__125_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_94\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8_94\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_94\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => D(2),
      I1 => \Using_FPGA.Native_i_1__125\(1),
      I2 => D(1),
      I3 => \Using_FPGA.Native_i_1__125\(0),
      I4 => D(0),
      I5 => \Using_FPGA.Native_i_1__125_0\,
      O => of_read_ex_write_op3_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8_96\ is
  port (
    of_read_mem_write_op1_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_96\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8_96\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_96\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode_raw(2),
      I2 => Q(1),
      I3 => of_predecode_raw(1),
      I4 => Q(0),
      I5 => of_predecode_raw(0),
      O => of_read_mem_write_op1_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_LUT6__parameterized8_98\ is
  port (
    of_read_mem_write_op2_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode_raw : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_98\ : entity is "MB_LUT6";
end \mb_design_microblaze_0_1_MB_LUT6__parameterized8_98\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_LUT6__parameterized8_98\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode_raw(2),
      I2 => Q(1),
      I3 => of_predecode_raw(1),
      I4 => Q(0),
      I5 => of_predecode_raw(0),
      O => of_read_mem_write_op2_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MULT_AND is
  port (
    DI : out STD_LOGIC;
    I0 : in STD_LOGIC;
    \Using_FPGA.Native_I1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MULT_AND : entity is "MB_MULT_AND";
end mb_design_microblaze_0_1_MB_MULT_AND;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MULT_AND is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => I0,
      I1 => \Using_FPGA.Native_I1\(0),
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY is
  port (
    carry_7 : out STD_LOGIC;
    SRL16_Sel_7 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_7,
      CYINIT => Q(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_106 is
  port (
    mem_wait_on_ready_N : out STD_LOGIC;
    MEM_DataBus_Ready : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_Write_DCache : in STD_LOGIC;
    mem_load_store_access : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_106 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_106;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_106 is
  signal S : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => mem_wait_on_ready_N,
      CYINIT => MEM_DataBus_Ready,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__137\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_Write_DCache,
      I2 => mem_load_store_access,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_107 is
  port (
    mem_div_stall_i_reg : out STD_LOGIC;
    wb_PipeRun_i_reg : out STD_LOGIC;
    wb_gpr_write_dbg0 : out STD_LOGIC;
    wb_gpr_write_i0 : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_1\ : out STD_LOGIC;
    Trace_WB_Jump_Taken_reg : in STD_LOGIC;
    mem_wait_on_ready_N : in STD_LOGIC;
    wb_valid_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_valid_instr : in STD_LOGIC;
    wb_valid_reg_0 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    wb_MSR_Clear_IE : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_107 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_107;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_107 is
  signal \<const0>\ : STD_LOGIC;
  signal \^mem_div_stall_i_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of wb_gpr_write_dbg_i_1 : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of wb_gpr_write_i_i_1 : label is "soft_lutpair59";
begin
  \^mem_div_stall_i_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  mem_div_stall_i_reg <= \^mem_div_stall_i_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5510555545000000"
    )
        port map (
      I0 => wb_MSR_Clear_IE,
      I1 => Q(0),
      I2 => wb_exception,
      I3 => \Using_FPGA.Native_2\,
      I4 => \^mem_div_stall_i_reg\,
      I5 => mem_MSR(0),
      O => \wb_exception_kind_i_reg[28]\
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \^mem_div_stall_i_reg\,
      I3 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EF40"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \^mem_div_stall_i_reg\,
      I3 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFB0BFBF0F000000"
    )
        port map (
      I0 => Q(0),
      I1 => wb_exception,
      I2 => \Using_FPGA.Native_3\,
      I3 => ex_MSR(0),
      I4 => \^mem_div_stall_i_reg\,
      I5 => mem_MSR(1),
      O => \wb_exception_kind_i_reg[28]_0\
    );
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF0FFFF4F404040"
    )
        port map (
      I0 => Q(0),
      I1 => wb_exception,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_8\,
      I4 => \^mem_div_stall_i_reg\,
      I5 => \Using_FPGA.Native_9\,
      O => \wb_exception_kind_i_reg[28]_1\
    );
wb_gpr_write_dbg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => mem_gpr_write_dbg,
      I1 => sync_reset,
      I2 => wb_exception,
      I3 => \^mem_div_stall_i_reg\,
      O => wb_gpr_write_dbg0
    );
wb_gpr_write_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => mem_gpr_write,
      I1 => sync_reset,
      I2 => wb_exception,
      I3 => \^mem_div_stall_i_reg\,
      O => wb_gpr_write_i0
    );
wb_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => wb_valid_reg(0),
      I1 => mem_valid_instr,
      I2 => \^mem_div_stall_i_reg\,
      I3 => wb_valid_reg_0,
      I4 => sync_reset,
      O => wb_PipeRun_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_108 is
  port (
    jump_carry1 : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_108 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_108;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_108 is
  signal \^jump_carry1\ : STD_LOGIC;
begin
  \^jump_carry1\ <= lopt;
  jump_carry1 <= \^jump_carry1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_109 is
  port (
    jump_carry2 : out STD_LOGIC;
    jump_carry1 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    force2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_109 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_109;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_109 is
  signal \Using_FPGA.Native_i_1__146_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__38_n_0\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry1,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => jump_carry2,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => \Using_FPGA.Native_i_2__38_n_0\,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_i_1__146_n_0\
    );
\Using_FPGA.Native_i_1__146\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => force2,
      I2 => \out\,
      O => \Using_FPGA.Native_i_1__146_n_0\
    );
\Using_FPGA.Native_i_2__38\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => force_Val2_N,
      I2 => \out\,
      O => \Using_FPGA.Native_i_2__38_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_110 is
  port (
    ex_jump_wanted : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    jump_carry2 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_110 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_110;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_110 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__128_n_0\ : STD_LOGIC;
  signal \^ex_jump_wanted\ : STD_LOGIC;
begin
  \^ex_jump_wanted\ <= lopt;
  ex_jump_wanted <= \^ex_jump_wanted\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__128_n_0\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__128\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000FD"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => ex_Take_Intr_or_Exc,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_i_1__128_n_0\
    );
\Using_FPGA.Native_i_1__131\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DD5D"
    )
        port map (
      I0 => \^ex_jump_wanted\,
      I1 => \Using_FPGA.Native_4\,
      I2 => ex_branch_with_delayslot,
      I3 => of_valid,
      O => ex_branch_with_delayslot_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_111 is
  port (
    jump_carry4 : out STD_LOGIC;
    ex_jump_wanted : in STD_LOGIC;
    ex_jump_q : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_111 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_111;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_111 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__139_n_0\ : STD_LOGIC;
  signal \^jump_carry4\ : STD_LOGIC;
begin
  \^jump_carry4\ <= lopt;
  jump_carry4 <= \^jump_carry4\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__139_n_0\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__139\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"45"
    )
        port map (
      I0 => ex_jump_q,
      I1 => of_valid,
      I2 => ex_branch_with_delayslot,
      O => \Using_FPGA.Native_i_1__139_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_112 is
  port (
    jump_carry5 : out STD_LOGIC;
    jump_carry4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_112 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_112;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_112 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^jump_carry5\ : STD_LOGIC;
begin
  \^jump_carry5\ <= lopt;
  jump_carry5 <= \^jump_carry5\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_113 is
  port (
    ex_jump_hold_reg : out STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : out STD_LOGIC;
    I5 : out STD_LOGIC;
    if_fetch_in_progress_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    \if_pc_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_delayslot_Instr0 : out STD_LOGIC;
    if_missed_fetch_reg : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_jump_hold_reg_0 : out STD_LOGIC;
    ex_jump_q_reg : out STD_LOGIC;
    jump_carry5 : in STD_LOGIC;
    of_Take_Exception : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg_1 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wb_exception : in STD_LOGIC;
    if_missed_fetch_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    keep_jump_taken_with_ds : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    \if_pc_reg[0]_0\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \if_pc_reg[0]_1\ : in STD_LOGIC;
    \if_pc_reg[1]\ : in STD_LOGIC;
    \if_pc_reg[2]\ : in STD_LOGIC;
    \if_pc_reg[3]\ : in STD_LOGIC;
    \if_pc_reg[4]\ : in STD_LOGIC;
    \if_pc_reg[5]\ : in STD_LOGIC;
    \if_pc_reg[6]\ : in STD_LOGIC;
    \if_pc_reg[7]\ : in STD_LOGIC;
    \if_pc_reg[8]\ : in STD_LOGIC;
    \if_pc_reg[9]\ : in STD_LOGIC;
    \if_pc_reg[10]\ : in STD_LOGIC;
    \if_pc_reg[11]\ : in STD_LOGIC;
    \if_pc_reg[12]\ : in STD_LOGIC;
    \if_pc_reg[13]\ : in STD_LOGIC;
    \if_pc_reg[14]\ : in STD_LOGIC;
    \if_pc_reg[15]\ : in STD_LOGIC;
    \if_pc_reg[16]\ : in STD_LOGIC;
    \if_pc_reg[17]\ : in STD_LOGIC;
    \if_pc_reg[18]\ : in STD_LOGIC;
    \if_pc_reg[19]\ : in STD_LOGIC;
    \if_pc_reg[20]\ : in STD_LOGIC;
    \if_pc_reg[21]\ : in STD_LOGIC;
    \if_pc_reg[22]\ : in STD_LOGIC;
    \if_pc_reg[23]\ : in STD_LOGIC;
    \if_pc_reg[24]\ : in STD_LOGIC;
    \if_pc_reg[25]\ : in STD_LOGIC;
    \if_pc_reg[26]\ : in STD_LOGIC;
    \if_pc_reg[27]\ : in STD_LOGIC;
    \if_pc_reg[28]\ : in STD_LOGIC;
    O : in STD_LOGIC;
    \if_pc_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \if_pc_reg[30]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    if_missed_fetch_reg_1 : in STD_LOGIC;
    if_missed_fetch_reg_2 : in STD_LOGIC;
    if_missed_fetch_reg_3 : in STD_LOGIC;
    of_read_imm_reg_ii_reg : in STD_LOGIC;
    of_read_imm_reg_ii_reg_0 : in STD_LOGIC;
    of_read_imm_reg_ii_reg_1 : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    ex_jump_hold_reg_1 : in STD_LOGIC;
    ex_jump_q : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_113 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_113;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_113 is
  signal \Using_FPGA.Native_i_1__143_n_0\ : STD_LOGIC;
  signal \^ex_jump_hold_reg\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Instr_Addr[0]_INST_0\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \Instr_Addr[10]_INST_0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \Instr_Addr[11]_INST_0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \Instr_Addr[12]_INST_0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \Instr_Addr[13]_INST_0\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \Instr_Addr[14]_INST_0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \Instr_Addr[15]_INST_0\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \Instr_Addr[16]_INST_0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \Instr_Addr[17]_INST_0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \Instr_Addr[18]_INST_0\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \Instr_Addr[19]_INST_0\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \Instr_Addr[1]_INST_0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \Instr_Addr[20]_INST_0\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \Instr_Addr[21]_INST_0\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \Instr_Addr[22]_INST_0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \Instr_Addr[23]_INST_0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \Instr_Addr[24]_INST_0\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \Instr_Addr[25]_INST_0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \Instr_Addr[26]_INST_0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \Instr_Addr[27]_INST_0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \Instr_Addr[28]_INST_0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \Instr_Addr[29]_INST_0\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \Instr_Addr[2]_INST_0\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \Instr_Addr[30]_INST_0\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \Instr_Addr[3]_INST_0\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \Instr_Addr[4]_INST_0\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \Instr_Addr[5]_INST_0\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \Instr_Addr[6]_INST_0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \Instr_Addr[7]_INST_0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \Instr_Addr[8]_INST_0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \Instr_Addr[9]_INST_0\ : label is "soft_lutpair48";
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_delayslot_Instr_i_1 : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of ex_jump_hold_i_1 : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of ex_jump_q_i_1 : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of if_missed_fetch_i_1 : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \if_pc[0]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of keep_jump_taken_with_ds_i_1 : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of mem_jump_taken_i_1 : label is "soft_lutpair42";
begin
  ex_jump_hold_reg <= \^ex_jump_hold_reg\;
\Instr_Addr[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(29),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[0]_1\,
      O => \if_pc_reg[0]\(31)
    );
\Instr_Addr[10]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(19),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[10]\,
      O => \if_pc_reg[0]\(21)
    );
\Instr_Addr[11]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(18),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[11]\,
      O => \if_pc_reg[0]\(20)
    );
\Instr_Addr[12]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(17),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[12]\,
      O => \if_pc_reg[0]\(19)
    );
\Instr_Addr[13]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(16),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[13]\,
      O => \if_pc_reg[0]\(18)
    );
\Instr_Addr[14]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(15),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[14]\,
      O => \if_pc_reg[0]\(17)
    );
\Instr_Addr[15]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(14),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[15]\,
      O => \if_pc_reg[0]\(16)
    );
\Instr_Addr[16]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(13),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[16]\,
      O => \if_pc_reg[0]\(15)
    );
\Instr_Addr[17]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(12),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[17]\,
      O => \if_pc_reg[0]\(14)
    );
\Instr_Addr[18]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(11),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[18]\,
      O => \if_pc_reg[0]\(13)
    );
\Instr_Addr[19]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(10),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[19]\,
      O => \if_pc_reg[0]\(12)
    );
\Instr_Addr[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(28),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[1]\,
      O => \if_pc_reg[0]\(30)
    );
\Instr_Addr[20]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(9),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[20]\,
      O => \if_pc_reg[0]\(11)
    );
\Instr_Addr[21]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(8),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[21]\,
      O => \if_pc_reg[0]\(10)
    );
\Instr_Addr[22]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(7),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[22]\,
      O => \if_pc_reg[0]\(9)
    );
\Instr_Addr[23]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(6),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[23]\,
      O => \if_pc_reg[0]\(8)
    );
\Instr_Addr[24]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(5),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[24]\,
      O => \if_pc_reg[0]\(7)
    );
\Instr_Addr[25]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(4),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[25]\,
      O => \if_pc_reg[0]\(6)
    );
\Instr_Addr[26]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(3),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[26]\,
      O => \if_pc_reg[0]\(5)
    );
\Instr_Addr[27]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(2),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[27]\,
      O => \if_pc_reg[0]\(4)
    );
\Instr_Addr[28]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(1),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[28]\,
      O => \if_pc_reg[0]\(3)
    );
\Instr_Addr[29]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(0),
      I1 => \^ex_jump_hold_reg\,
      I2 => O,
      O => \if_pc_reg[0]\(2)
    );
\Instr_Addr[2]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(27),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[2]\,
      O => \if_pc_reg[0]\(29)
    );
\Instr_Addr[30]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[30]\(1),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[30]_0\(1),
      O => \if_pc_reg[0]\(1)
    );
\Instr_Addr[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[30]\(0),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[30]_0\(0),
      O => \if_pc_reg[0]\(0)
    );
\Instr_Addr[3]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(26),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[3]\,
      O => \if_pc_reg[0]\(28)
    );
\Instr_Addr[4]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(25),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[4]\,
      O => \if_pc_reg[0]\(27)
    );
\Instr_Addr[5]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(24),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[5]\,
      O => \if_pc_reg[0]\(26)
    );
\Instr_Addr[6]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(23),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[6]\,
      O => \if_pc_reg[0]\(25)
    );
\Instr_Addr[7]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(22),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[7]\,
      O => \if_pc_reg[0]\(24)
    );
\Instr_Addr[8]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(21),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[8]\,
      O => \if_pc_reg[0]\(23)
    );
\Instr_Addr[9]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \if_pc_reg[0]_0\(20),
      I1 => \^ex_jump_hold_reg\,
      I2 => \if_pc_reg[9]\,
      O => \if_pc_reg[0]\(22)
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry5,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^ex_jump_hold_reg\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__143_n_0\
    );
\Using_FPGA.Native_i_1__143\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFABFFFF"
    )
        port map (
      I0 => ex_jump_hold,
      I1 => ex_mbar_stall_no_sleep_1,
      I2 => ex_first_cycle,
      I3 => ex_Take_Intr_or_Exc,
      I4 => ex_mbar_decode,
      I5 => ex_mbar_sleep,
      O => \Using_FPGA.Native_i_1__143_n_0\
    );
\Using_FPGA.Native_i_1__39\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAEAAAAAAAAAA"
    )
        port map (
      I0 => \^ex_jump_hold_reg\,
      I1 => Q(3),
      I2 => Q(2),
      I3 => Q(0),
      I4 => Q(1),
      I5 => wb_exception,
      O => I5
    );
ex_Take_Intr_or_Exc_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CF55CF00"
    )
        port map (
      I0 => \^ex_jump_hold_reg\,
      I1 => of_Take_Exception,
      I2 => ex_Take_Intr_or_Exc_reg_0,
      I3 => ex_Take_Intr_or_Exc_reg_1,
      I4 => ex_Take_Intr_or_Exc,
      I5 => sync_reset,
      O => ex_Take_Intr_or_Exc_reg
    );
ex_delayslot_Instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => ex_branch_with_delayslot,
      I2 => \^ex_jump_hold_reg\,
      O => ex_delayslot_Instr0
    );
ex_jump_hold_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0054"
    )
        port map (
      I0 => sync_reset,
      I1 => \^ex_jump_hold_reg\,
      I2 => ex_jump_hold,
      I3 => ex_jump_hold_reg_1,
      O => \Use_Async_Reset.sync_reset_reg\
    );
ex_jump_q_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => ex_jump_q,
      I1 => \^ex_jump_hold_reg\,
      I2 => ex_jump_hold_reg_1,
      O => ex_jump_q_reg
    );
if_missed_fetch_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E4"
    )
        port map (
      I0 => if_missed_fetch_reg_1,
      I1 => \^ex_jump_hold_reg\,
      I2 => if_missed_fetch_reg_2,
      I3 => if_missed_fetch_reg_0(0),
      I4 => if_missed_fetch_reg_3,
      O => if_missed_fetch_reg
    );
\if_pc[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_jump_hold_reg\,
      I1 => if_missed_fetch_reg_0(0),
      O => if_fetch_in_progress_reg(0)
    );
keep_jump_taken_with_ds_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => \^ex_jump_hold_reg\,
      I2 => ex_branch_with_delayslot,
      I3 => ex_Take_Intr_or_Exc_reg_1,
      I4 => sync_reset,
      O => keep_jump_taken_with_ds_reg
    );
mem_jump_taken_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_jump_hold_reg\,
      I1 => ex_jump_hold,
      O => ex_jump_hold_reg_0
    );
of_read_imm_reg_ii_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"002AFFFF002A0000"
    )
        port map (
      I0 => of_read_imm_reg_ii_reg,
      I1 => \^ex_jump_hold_reg\,
      I2 => of_read_imm_reg_ii_reg_0,
      I3 => of_read_imm_reg_ii_reg_1,
      I4 => ex_Take_Intr_or_Exc_reg_1,
      I5 => of_read_imm_reg_ii,
      O => ex_jump_nodelay_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_114 is
  port (
    CI : out STD_LOGIC;
    if_fetch_for_timing_optimization1 : in STD_LOGIC;
    if_pc_incr_carry1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_114 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_114;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_114 is
  signal \<const0>\ : STD_LOGIC;
  signal \^ci\ : STD_LOGIC;
begin
  CI <= \^ci\;
  \^ci\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_115 is
  port (
    if_pc_incr_carry0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_115 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_115;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_115 is
  signal if_valid : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => if_pc_incr_carry0,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_10,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => if_valid
    );
\Using_FPGA.Native_i_1__132\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      O => if_valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_116 is
  port (
    if_pc_incr_carry1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if_pc_incr_carry0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_116 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_116;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_116 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if_pc_incr_carry1\ : STD_LOGIC;
begin
  \^if_pc_incr_carry1\ <= lopt;
  if_pc_incr_carry1 <= \^if_pc_incr_carry1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_117 is
  port (
    of_PipeRun_carry_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_PipeRun_carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_117 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_117;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_117 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_2\ : STD_LOGIC;
begin
  \^of_piperun_carry_2\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_2 <= \^of_piperun_carry_2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_118 is
  port (
    of_PipeRun_carry_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_PipeRun_carry_4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_118 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_118;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_118 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_3\ : STD_LOGIC;
begin
  \^of_piperun_carry_3\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_3 <= \^of_piperun_carry_3\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_119 is
  port (
    of_PipeRun_carry_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_PipeRun_carry_5 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_119 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_119;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_119 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_PipeRun_carry_5,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_PipeRun_carry_4,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_120 is
  port (
    of_PipeRun_carry_5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_PipeRun_carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_120 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_120;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_120 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_5\ : STD_LOGIC;
begin
  \^of_piperun_carry_5\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_5 <= \^of_piperun_carry_5\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_121 is
  port (
    of_PipeRun_carry_6 : out STD_LOGIC;
    A : in STD_LOGIC;
    of_PipeRun_carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_121 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_121;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_121 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_6\ : STD_LOGIC;
begin
  \^of_piperun_carry_6\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_6 <= \^of_piperun_carry_6\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_122 is
  port (
    of_PipeRun_carry_7 : out STD_LOGIC;
    of_pipe_ctrl_reg0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_122 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_122;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_122 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_7\ : STD_LOGIC;
begin
  \^of_piperun_carry_7\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_7 <= \^of_piperun_carry_7\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_123 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    mem_valid_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_clear_MSR_BIP_hold_cmb108_out : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    ex_Write_DCache_decode_reg : out STD_LOGIC;
    mem_gpr_write_dbg_reg : out STD_LOGIC;
    mem_gpr_write_reg : out STD_LOGIC;
    \ex_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    of_PipeRun_carry_9 : in STD_LOGIC;
    mem_valid_reg_0 : in STD_LOGIC;
    mem_valid_reg_1 : in STD_LOGIC;
    mem_valid_reg_2 : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_valid_reg_3 : in STD_LOGIC;
    \mem_pc_i_reg[0]\ : in STD_LOGIC;
    \mem_pc_i_reg[0]_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg : in STD_LOGIC;
    of_clear_MSR_BIP_hold_s : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    of_set_MSR_EE_hold_reg : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    ex_Write_ICache_i : in STD_LOGIC;
    ex_write_dcache_instr : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    \ex_gpr_write_dbg__0\ : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_gpr_write_reg_0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_move_to_MSR_instr : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_MSR_Clear_IE : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_123 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_123;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_123 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__31_n_0\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_Write_ICache_i_cmb_inferred_i_1 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \mem_pc_i[0]_i_1\ : label is "soft_lutpair35";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_PipeRun_carry_9,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^using_fpga.native_0\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
\Using_FPGA.Native_i_1__121\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FF20"
    )
        port map (
      I0 => I0,
      I1 => of_set_MSR_IE_hold_reg,
      I2 => \^using_fpga.native_0\,
      I3 => of_clear_MSR_BIP_hold_s,
      I4 => \Using_FPGA.Native_5\,
      O => of_clear_MSR_BIP_hold_cmb108_out
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Using_FPGA.Native_6\,
      I1 => \Using_FPGA.Native_7\,
      I2 => \Using_FPGA.Native_i_2__31_n_0\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2320232323202020"
    )
        port map (
      I0 => mem_MSR(0),
      I1 => wb_MSR_Clear_IE,
      I2 => \Using_FPGA.Native_12\,
      I3 => p_2_out(0),
      I4 => \^using_fpga.native_0\,
      I5 => \Using_FPGA.Native_13\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => mem_MSR(1),
      I1 => \Using_FPGA.Native_12\,
      I2 => \Using_FPGA.Native_7\,
      I3 => p_2_out(1),
      I4 => \^using_fpga.native_0\,
      I5 => ex_MSR(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFE0EFEFEFE0E0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_12\,
      I1 => \Using_FPGA.Native_14\,
      I2 => \Using_FPGA.Native_7\,
      I3 => p_2_out(2),
      I4 => \^using_fpga.native_0\,
      I5 => \Using_FPGA.Native_15\,
      O => \Using_FPGA.Native_4\
    );
\Using_FPGA.Native_i_2__31\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FB08FFFFFB080000"
    )
        port map (
      I0 => \Using_FPGA.Native_8\(0),
      I1 => ex_move_to_MSR_instr,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_10\,
      I4 => \^using_fpga.native_0\,
      I5 => \Using_FPGA.Native_11\,
      O => \Using_FPGA.Native_i_2__31_n_0\
    );
ex_Write_DCache_decode_cmb_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => ex_write_dcache_instr,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_5\,
      O => ex_Write_DCache_decode_reg
    );
ex_Write_ICache_i_cmb_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => ex_Write_ICache_i,
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_5\,
      O => in0
    );
mem_gpr_write_dbg_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => mem_gpr_write_dbg,
      I1 => \^using_fpga.native_0\,
      I2 => \ex_gpr_write_dbg__0\,
      I3 => sync_reset,
      I4 => wb_exception,
      O => mem_gpr_write_dbg_reg
    );
mem_gpr_write_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => mem_gpr_write,
      I1 => \^using_fpga.native_0\,
      I2 => mem_gpr_write_reg_0,
      I3 => sync_reset,
      I4 => wb_exception,
      O => mem_gpr_write_reg
    );
\mem_pc_i[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \mem_pc_i_reg[0]\,
      I2 => \mem_pc_i_reg[0]_0\,
      O => E(0)
    );
mem_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0200020002AA0200"
    )
        port map (
      I0 => mem_valid_reg_0,
      I1 => mem_valid_reg_1,
      I2 => mem_valid_reg_2,
      I3 => \^using_fpga.native_0\,
      I4 => mem_valid_instr,
      I5 => mem_valid_reg_3,
      O => mem_valid_reg
    );
of_set_MSR_EE_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000FF0020"
    )
        port map (
      I0 => I4,
      I1 => of_set_MSR_IE_hold_reg,
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_5\,
      I4 => of_set_MSR_EE_hold_reg,
      I5 => sync_reset,
      O => \ex_gpr_write_addr_reg[2]\
    );
of_set_MSR_IE_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000FF0020"
    )
        port map (
      I0 => of_set_MSR_IE_hold_reg_0,
      I1 => of_set_MSR_IE_hold_reg,
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_5\,
      I4 => of_set_MSR_IE_hold_reg_1,
      I5 => sync_reset,
      O => \ex_gpr_write_addr_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_124 is
  port (
    of_PipeRun_carry_9 : out STD_LOGIC;
    ex_jump_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_PipeRun_carry_10 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_124 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_124;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_124 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_9\ : STD_LOGIC;
begin
  \^of_piperun_carry_9\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_9 <= \^of_piperun_carry_9\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_2__44\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFABFFFF"
    )
        port map (
      I0 => ex_jump_hold,
      I1 => ex_mbar_stall_no_sleep_1,
      I2 => ex_first_cycle,
      I3 => ex_Take_Intr_or_Exc,
      I4 => ex_mbar_decode,
      I5 => ex_mbar_sleep,
      O => ex_jump_hold_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_125 is
  port (
    of_PipeRun_carry_10 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_125 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_125;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_125 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^of_piperun_carry_10\ : STD_LOGIC;
begin
  \^of_piperun_carry_10\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  of_PipeRun_carry_10 <= \^of_piperun_carry_10\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_126 is
  port (
    of_pause_reg : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    ex_valid_keep_reg : out STD_LOGIC;
    of_Take_Interrupt_hold_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    OF_Take_Exception_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    of_PipeRun_carry_1 : in STD_LOGIC;
    ex_jump_nodelay_reg_0 : in STD_LOGIC;
    of_Take_Interrupt_hold_reg_0 : in STD_LOGIC;
    of_branch_with_delayslot140_out : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_jump_nodelay_reg_1 : in STD_LOGIC;
    of_pause : in STD_LOGIC;
    ex_valid_keep : in STD_LOGIC;
    of_next_ex_valid : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    of_Take_Interrupt_hold : in STD_LOGIC;
    OF_Take_Exception_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_MSR_Clear_IE : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_126 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_126;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_126 is
  signal \Using_FPGA.Native_i_1__138_n_0\ : STD_LOGIC;
  signal \^of_pause_reg\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of OF_Take_Exception_hold_i_1 : label is "soft_lutpair34";
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_first_cycle_i_1 : label is "soft_lutpair34";
begin
  of_pause_reg <= \^of_pause_reg\;
OF_Take_Exception_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000BA"
    )
        port map (
      I0 => OF_Take_Exception_hold,
      I1 => Q(0),
      I2 => wb_exception,
      I3 => \^of_pause_reg\,
      I4 => sync_reset,
      O => OF_Take_Exception_hold_reg
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_PipeRun_carry_1,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^of_pause_reg\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__138_n_0\
    );
\Using_FPGA.Native_i_1__138\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => of_pause,
      O => \Using_FPGA.Native_i_1__138_n_0\
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2320232323202020"
    )
        port map (
      I0 => mem_MSR(0),
      I1 => wb_MSR_Clear_IE,
      I2 => \Using_FPGA.Native_2\,
      I3 => p_2_out(0),
      I4 => \^of_pause_reg\,
      I5 => of_MSR(0),
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFE0EFEFEFE0E0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_4\,
      I3 => p_2_out(1),
      I4 => \^of_pause_reg\,
      I5 => of_MSR(1),
      O => \Using_FPGA.Native_1\
    );
ex_first_cycle_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^of_pause_reg\,
      I1 => sync_reset,
      I2 => wb_exception,
      O => \Use_Async_Reset.sync_reset_reg\
    );
ex_jump_nodelay_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E6E2EEE"
    )
        port map (
      I0 => ex_jump_nodelay_reg_0,
      I1 => \^of_pause_reg\,
      I2 => of_Take_Interrupt_hold_reg_0,
      I3 => of_branch_with_delayslot140_out,
      I4 => ex_jump,
      I5 => ex_jump_nodelay_reg_1,
      O => ex_jump_nodelay_reg
    );
ex_valid_keep_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => ex_valid_keep,
      I1 => \^of_pause_reg\,
      I2 => of_next_ex_valid,
      I3 => sync_reset,
      I4 => wb_exception,
      O => ex_valid_keep_reg
    );
of_Take_Interrupt_hold_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000B"
    )
        port map (
      I0 => of_Take_Interrupt_hold,
      I1 => of_Take_Interrupt_hold_reg_0,
      I2 => \^of_pause_reg\,
      I3 => sync_reset,
      O => of_Take_Interrupt_hold_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_127 is
  port (
    of_PipeRun_carry_1 : out STD_LOGIC;
    use_Reg_Neg_S_reg : in STD_LOGIC;
    of_PipeRun_carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_127 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_127;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_127 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_1\ : STD_LOGIC;
begin
  \^of_piperun_carry_1\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_1 <= \^of_piperun_carry_1\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_29 is
  port (
    carry_6 : out STD_LOGIC;
    SRL16_Sel_6 : in STD_LOGIC;
    carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_29 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_29;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_29 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_6\ : STD_LOGIC;
begin
  \^carry_6\ <= lopt;
  carry_6 <= \^carry_6\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_31 is
  port (
    carry_5 : out STD_LOGIC;
    SRL16_Sel_5 : in STD_LOGIC;
    carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_31 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_31;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_31 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_5\ : STD_LOGIC;
begin
  \^carry_5\ <= lopt;
  carry_5 <= \^carry_5\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_317 is
  port (
    ex_pre_alu_carry : out STD_LOGIC;
    muxcy_sel : in STD_LOGIC;
    muxcy_di : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_317 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_317;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_317 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => ex_pre_alu_carry,
      CYINIT => \Using_FPGA.Native_0\,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => muxcy_di,
      O(3) => lopt_10,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => muxcy_sel
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_318 is
  port (
    ex_alu_carryin : out STD_LOGIC;
    ex_pre_alu_carry : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_318 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_318;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_318 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_alu_carryin\ : STD_LOGIC;
begin
  \^ex_alu_carryin\ <= lopt;
  ex_alu_carryin <= \^ex_alu_carryin\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_33 is
  port (
    carry_4 : out STD_LOGIC;
    SRL16_Sel_4 : in STD_LOGIC;
    carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_33 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_33;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_33 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_4\ : STD_LOGIC;
begin
  \^carry_4\ <= lopt;
  carry_4 <= \^carry_4\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_334 is
  port (
    CI : out STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_334 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_334;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_334 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_35 is
  port (
    carry_3 : out STD_LOGIC;
    SRL16_Sel_3 : in STD_LOGIC;
    carry_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_35 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_35;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_35 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_37 is
  port (
    carry_2 : out STD_LOGIC;
    SRL16_Sel_2 : in STD_LOGIC;
    carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_37 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_37;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_37 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_39 is
  port (
    carry_1 : out STD_LOGIC;
    SRL16_Sel_1 : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_39 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_39;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_39 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_1\ : STD_LOGIC;
begin
  \^carry_1\ <= lopt;
  carry_1 <= \^carry_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_41 is
  port (
    Hit : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    SRL16_Sel_0 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_41 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_41;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_41 is
  signal \<const0>\ : STD_LOGIC;
  signal \^hit\ : STD_LOGIC;
  signal ex_dbg_pc_hit_i024_out : STD_LOGIC;
begin
  Hit <= \^hit\;
  \^hit\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEAFFFFAAAAAAAA"
    )
        port map (
      I0 => ex_dbg_pc_hit_i024_out,
      I1 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      I3 => mem_Exception_Taken,
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      I5 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA00A8AAAAAAAA"
    )
        port map (
      I0 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      I1 => \^hit\,
      I2 => D(0),
      I3 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\,
      I5 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\,
      O => ex_dbg_pc_hit_i024_out
    );
\Performance_Debug_Control.ex_dbg_pc_hit_single_step_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7744774477444744"
    )
        port map (
      I0 => single_Step_N,
      I1 => ex_dbg_pc_hit_i024_out,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      I3 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\,
      I4 => mem_Exception_Taken,
      I5 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      O => single_Step_N_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_43 is
  port (
    carry_7 : out STD_LOGIC;
    SRL16_Sel_7 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_43 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_43;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_43 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_7,
      CYINIT => Q(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_447 is
  port (
    zero_CI_6 : out STD_LOGIC;
    EX_Op1_CMP_Equal : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_447 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_447;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_447 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= \^lopt_6\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_6\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_6,
      CYINIT => '1',
      DI(3) => \^lopt_2\,
      DI(2) => \^lopt_2\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => EX_Op1_CMP_Equal
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_448 is
  port (
    ex_op1_cmp_eq_n_reg : out STD_LOGIC;
    ex_hold_div_by_zero_reg : out STD_LOGIC;
    div_busy : out STD_LOGIC;
    ex_op1_cmp_eq_n_reg_0 : out STD_LOGIC;
    \FPGA_Shift.cnt_shifts_reg[31]\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_1 : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    MEM_Div_By_Zero_reg : in STD_LOGIC;
    div_busy_reg : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_448 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_448;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_448 is
  signal \^ex_op1_cmp_eq_n_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of MEM_Div_By_Zero_i_1 : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of div_busy_i_1 : label is "soft_lutpair17";
begin
  \^ex_op1_cmp_eq_n_reg\ <= lopt;
  ex_op1_cmp_eq_n_reg <= \^ex_op1_cmp_eq_n_reg\;
\FPGA_Shift.cnt_shifts[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => \^ex_op1_cmp_eq_n_reg\,
      I1 => ex_start_div,
      O => ex_op1_cmp_eq_n_reg_0
    );
MEM_Div_By_Zero_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ex_op1_cmp_eq_n_reg\,
      I1 => ex_start_div,
      I2 => MEM_Div_By_Zero_reg,
      O => ex_hold_div_by_zero_reg
    );
div_busy_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"74"
    )
        port map (
      I0 => \^ex_op1_cmp_eq_n_reg\,
      I1 => ex_start_div,
      I2 => div_busy_reg,
      O => div_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_449 is
  port (
    zero_CI_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_2 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_449 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_449;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_449 is
  signal \^zero_ci_1\ : STD_LOGIC;
begin
  \^zero_ci_1\ <= lopt;
  zero_CI_1 <= \^zero_ci_1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_45 is
  port (
    carry_6 : out STD_LOGIC;
    SRL16_Sel_6 : in STD_LOGIC;
    carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_45 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_45;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_45 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_6\ : STD_LOGIC;
begin
  \^carry_6\ <= lopt;
  carry_6 <= \^carry_6\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_450 is
  port (
    zero_CI_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_450 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_450;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_450 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_2 <= \^lopt_3\;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => zero_CI_3,
      CO(3) => \^lopt_5\,
      CO(2) => \^lopt_3\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_2,
      CYINIT => '0',
      DI(3) => \^lopt_6\,
      DI(2) => ex_op1_cmp_equal_n,
      DI(1) => ex_op1_cmp_equal_n,
      DI(0) => ex_op1_cmp_equal_n,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_451 is
  port (
    zero_CI_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_4 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_451 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_451;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_451 is
  signal \^zero_ci_3\ : STD_LOGIC;
begin
  \^zero_ci_3\ <= lopt;
  zero_CI_3 <= \^zero_ci_3\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_452 is
  port (
    zero_CI_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_5 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_452 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_452;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_452 is
  signal \^zero_ci_4\ : STD_LOGIC;
begin
  \^zero_ci_4\ <= lopt;
  zero_CI_4 <= \^zero_ci_4\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_453 is
  port (
    zero_CI_5 : out STD_LOGIC;
    S : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_6 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_453 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_453;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_453 is
  signal \^zero_ci_5\ : STD_LOGIC;
begin
  \^zero_ci_5\ <= lopt;
  zero_CI_5 <= \^zero_ci_5\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_47 is
  port (
    carry_5 : out STD_LOGIC;
    SRL16_Sel_5 : in STD_LOGIC;
    carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_47 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_47;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_47 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_5\ : STD_LOGIC;
begin
  \^carry_5\ <= lopt;
  carry_5 <= \^carry_5\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_49 is
  port (
    carry_4 : out STD_LOGIC;
    SRL16_Sel_4 : in STD_LOGIC;
    carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_49 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_49;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_49 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_4\ : STD_LOGIC;
begin
  \^carry_4\ <= lopt;
  carry_4 <= \^carry_4\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_51 is
  port (
    carry_3 : out STD_LOGIC;
    SRL16_Sel_3 : in STD_LOGIC;
    carry_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_51 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_51;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_51 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_53 is
  port (
    carry_2 : out STD_LOGIC;
    SRL16_Sel_2 : in STD_LOGIC;
    carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_53 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_53;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_53 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_55 is
  port (
    carry_1 : out STD_LOGIC;
    SRL16_Sel_1 : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_55 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_55;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_55 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_1\ : STD_LOGIC;
begin
  \^carry_1\ <= lopt;
  carry_1 <= \^carry_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_57 is
  port (
    carry_0 : out STD_LOGIC;
    SRL16_Sel_0 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_57 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_57;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_57 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_0\ : STD_LOGIC;
begin
  \^carry_0\ <= lopt;
  carry_0 <= \^carry_0\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_59 is
  port (
    Hit : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    carry_0 : in STD_LOGIC;
    \Performance_Debug_Control.ex_pc_brk_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_59 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_59;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_59 is
  signal \^hit\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  Hit <= \^hit\;
\Performance_Debug_Control.ex_pc_brk_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^hit\,
      I1 => \Performance_Debug_Control.ex_pc_brk_reg\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_0,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^hit\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_659 is
  port (
    CI : out STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_alu_carryin : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_659 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_659;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_659 is
  signal \^ci\ : STD_LOGIC;
begin
  CI <= \^ci\;
  \^ci\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_752 is
  port (
    CI : out STD_LOGIC;
    S : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_752 : entity is "MB_MUXCY";
end mb_design_microblaze_0_1_MB_MUXCY_752;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_752 is
  signal \^ci\ : STD_LOGIC;
begin
  CI <= \^ci\;
  \^ci\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY is
  port (
    \if_pc_reg[0]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY is
  signal \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I2_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I2_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I2_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_I2_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => \if_pc_reg[0]\,
      S(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_288 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[10]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[10]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_288 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_288;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_288 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[10]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[10]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[10]\ <= \^if_pc_reg[10]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_289 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[11]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[11]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_289 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_289;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_289 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[11]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[11]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[11]\ <= \^if_pc_reg[11]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_290 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[12]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[12]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_290 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_290;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_290 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[12]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[12]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_291 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[13]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[13]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_291 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_291;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_291 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[13]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[13]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[13]\ <= \^if_pc_reg[13]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_292 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[14]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[14]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_292 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_292;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_292 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[14]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[14]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[14]\ <= \^if_pc_reg[14]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_293 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[15]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_293 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_293;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_293 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[15]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[15]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[15]\ <= \^if_pc_reg[15]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_294 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[16]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[16]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_294 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_294;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_294 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[16]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[16]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_295 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[17]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[17]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_295 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_295;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_295 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[17]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[17]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[17]\ <= \^if_pc_reg[17]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_296 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[18]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[18]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_296 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_296;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_296 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[18]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[18]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[18]\ <= \^if_pc_reg[18]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_297 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[19]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[19]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_297 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_297;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_297 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[19]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[19]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[19]\ <= \^if_pc_reg[19]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_298 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[1]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[1]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_298 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_298;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_298 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[1]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[1]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[1]\ <= \^if_pc_reg[1]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_299 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[20]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[20]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_299 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_299;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_299 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[20]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[20]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_300 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[21]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[21]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_300 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_300;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_300 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[21]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[21]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[21]\ <= \^if_pc_reg[21]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_301 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[22]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[22]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_301 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_301;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_301 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[22]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[22]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[22]\ <= \^if_pc_reg[22]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_302 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[23]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[23]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_302 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_302;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_302 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[23]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[23]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[23]\ <= \^if_pc_reg[23]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_303 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[24]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[24]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_303 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_303;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_303 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[24]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[24]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_304 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[25]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[25]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_304 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_304;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_304 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[25]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[25]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[25]\ <= \^if_pc_reg[25]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_305 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[26]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[26]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_305 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_305;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_305 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[26]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[26]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[26]\ <= \^if_pc_reg[26]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_306 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[27]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[27]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_306 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_306;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_306 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[27]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[27]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[27]\ <= \^if_pc_reg[27]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_307 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[28]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[28]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_307 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_307;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_307 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[28]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[28]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_308 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_308 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_308;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_308 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_309 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[2]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[2]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_309 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_309;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_309 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[2]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[2]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[2]\ <= \^if_pc_reg[2]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_310 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[3]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[3]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_310 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_310;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_310 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[3]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[3]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[3]\ <= \^if_pc_reg[3]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_311 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[4]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[4]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_311 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_311;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_311 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[4]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[4]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_312 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[5]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_312 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_312;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_312 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[5]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[5]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[5]\ <= \^if_pc_reg[5]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_313 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[6]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[6]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_313 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_313;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_313 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[6]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[6]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[6]\ <= \^if_pc_reg[6]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_314 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[7]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[7]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_314 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_314;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_314 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[7]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[7]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[7]\ <= \^if_pc_reg[7]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_315 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[8]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[8]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_315 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_315;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_315 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \if_pc_reg[8]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \if_pc_reg[8]\,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_316 is
  port (
    LO : out STD_LOGIC;
    \if_pc_reg[9]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_316 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_316;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_316 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^if_pc_reg[9]\ : STD_LOGIC;
begin
  LO <= \^lo\;
  \^if_pc_reg[9]\ <= lopt_2;
  \^lo\ <= lopt;
  \if_pc_reg[9]\ <= \^if_pc_reg[9]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_336 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    addr_AddSub_31 : in STD_LOGIC;
    LO : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_336 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_336;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_336 is
  signal \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I2_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I2_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I2_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_I2_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => \Using_FPGA.Native\(0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => addr_AddSub_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_339 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3017]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_339 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_339;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_339 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_342 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3018]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_342 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_342;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_342 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_345 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3019]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_345 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_345;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_345 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3019]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => \Using_FPGA.Native_I2_0\,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_348 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3020]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_348 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_348;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_348 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_351 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3021]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_351 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_351;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_351 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_354 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3022]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_354 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_354;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_354 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_357 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Byte_Access_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[16]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[16]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]_2\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_357 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_357;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_357 is
  signal \^wb_byte_access_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 16 to 16 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  WB_Byte_Access_reg(0) <= \^wb_byte_access_reg\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Trace_New_Reg_Value[16]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(16),
      I1 => \LOCKSTEP_Out_reg[3023]\,
      I2 => wb_byte_access,
      I3 => \LOCKSTEP_Out_reg[3023]_0\,
      I4 => \LOCKSTEP_Out_reg[3023]_1\,
      O => \^wb_byte_access_reg\(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3023]_2\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => wb_excep_return_addr(16),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\data_rd_reg[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_byte_access_reg\(0),
      I1 => \data_rd_reg_reg[16]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[16]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_360 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Byte_Access_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[17]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[17]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_360 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_360;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_360 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_byte_access_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 17 to 17 );
begin
  LO <= \^lo\;
  WB_Byte_Access_reg(0) <= \^wb_byte_access_reg\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(17) <= lopt_1;
\Trace_New_Reg_Value[17]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(17),
      I1 => \LOCKSTEP_Out_reg[3024]\,
      I2 => wb_byte_access,
      I3 => \LOCKSTEP_Out_reg[3024]_0\,
      I4 => \LOCKSTEP_Out_reg[3024]_1\,
      O => \^wb_byte_access_reg\(0)
    );
\data_rd_reg[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_byte_access_reg\(0),
      I1 => \data_rd_reg_reg[17]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[17]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_363 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[18]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[18]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3025]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3025]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3025]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3025]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_363 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_363;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_363 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[18]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 18 to 18 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[18]\(0) <= \^wb_btr_reg[18]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(18) <= lopt_1;
\Trace_New_Reg_Value[18]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(18),
      I1 => \LOCKSTEP_Out_reg[3025]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3025]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3025]_1\,
      O => \^wb_btr_reg[18]\(0)
    );
\data_rd_reg[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[18]\(0),
      I1 => \data_rd_reg_reg[18]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[18]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_366 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[19]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[19]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3026]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3026]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3026]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3026]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_366 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_366;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_366 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[19]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 19 to 19 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[19]\(0) <= \^wb_btr_reg[19]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(19) <= lopt_1;
\Trace_New_Reg_Value[19]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(19),
      I1 => \LOCKSTEP_Out_reg[3026]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3026]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3026]_1\,
      O => \^wb_btr_reg[19]\(0)
    );
\data_rd_reg[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[19]\(0),
      I1 => \data_rd_reg_reg[19]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[19]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_369 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3008]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_369 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_369;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_369 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_372 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[20]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[20]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3027]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3027]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3027]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3027]_2\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_372 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_372;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_372 is
  signal \^wb_btr_reg[20]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 20 to 20 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \WB_BTR_reg[20]\(0) <= \^wb_btr_reg[20]\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Trace_New_Reg_Value[20]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(20),
      I1 => \LOCKSTEP_Out_reg[3027]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3027]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3027]_1\,
      O => \^wb_btr_reg[20]\(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3027]_2\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => wb_excep_return_addr(20),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\data_rd_reg[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[20]\(0),
      I1 => \data_rd_reg_reg[20]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[20]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_375 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[21]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[21]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3028]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3028]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3028]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3028]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_375 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_375;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_375 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[21]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 21 to 21 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[21]\(0) <= \^wb_btr_reg[21]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(21) <= lopt_1;
\Trace_New_Reg_Value[21]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(21),
      I1 => \LOCKSTEP_Out_reg[3028]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3028]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3028]_1\,
      O => \^wb_btr_reg[21]\(0)
    );
\data_rd_reg[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[21]\(0),
      I1 => \data_rd_reg_reg[21]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[21]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_378 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[22]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[22]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3029]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3029]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3029]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3029]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_378 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_378;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_378 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[22]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 22 to 22 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[22]\(0) <= \^wb_btr_reg[22]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(22) <= lopt_1;
\Trace_New_Reg_Value[22]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(22),
      I1 => \LOCKSTEP_Out_reg[3029]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3029]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3029]_1\,
      O => \^wb_btr_reg[22]\(0)
    );
\data_rd_reg[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[22]\(0),
      I1 => \data_rd_reg_reg[22]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[22]_0\(0),
      I4 => \data_rd_reg_reg[22]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_381 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[23]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[23]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3030]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3030]_0\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3030]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3030]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_381 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_381;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_381 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[23]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 23 to 23 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[23]\(0) <= \^wb_btr_reg[23]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(23) <= lopt_1;
\Trace_New_Reg_Value[23]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBB8B8BBB8"
    )
        port map (
      I0 => wb_excep_return_addr(23),
      I1 => \LOCKSTEP_Out_reg[3030]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3030]_0\,
      I4 => wb_byte_access,
      I5 => \LOCKSTEP_Out_reg[3030]_1\,
      O => \^wb_btr_reg[23]\(0)
    );
\data_rd_reg[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[23]\(0),
      I1 => \data_rd_reg_reg[23]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[23]_0\(0),
      I4 => \data_rd_reg_reg[23]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_384 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[24]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[24]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3031]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3031]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3031]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3031]_2\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_384 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_384;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_384 is
  signal \^wb_btr_reg[24]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 24 to 24 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \WB_BTR_reg[24]\(0) <= \^wb_btr_reg[24]\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Trace_New_Reg_Value[24]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(24),
      I1 => \LOCKSTEP_Out_reg[3031]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3031]_0\,
      I4 => \LOCKSTEP_Out_reg[3031]_1\,
      O => \^wb_btr_reg[24]\(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3031]_2\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => wb_excep_return_addr(24),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\data_rd_reg[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[24]\(0),
      I1 => \data_rd_reg_reg[24]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[24]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_387 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[25]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[25]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3032]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3032]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3032]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3032]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_387 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_387;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_387 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[25]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 25 to 25 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[25]\(0) <= \^wb_btr_reg[25]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(25) <= lopt_1;
\Trace_New_Reg_Value[25]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(25),
      I1 => \LOCKSTEP_Out_reg[3032]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3032]_0\,
      I4 => \LOCKSTEP_Out_reg[3032]_1\,
      O => \^wb_btr_reg[25]\(0)
    );
\data_rd_reg[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[25]\(0),
      I1 => \data_rd_reg_reg[25]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[25]_0\(0),
      I4 => \data_rd_reg_reg[25]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_390 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[26]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[26]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3033]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3033]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3033]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3033]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_390 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_390;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_390 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[26]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 26 to 26 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[26]\(0) <= \^wb_btr_reg[26]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(26) <= lopt_1;
\Trace_New_Reg_Value[26]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(26),
      I1 => \LOCKSTEP_Out_reg[3033]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3033]_0\,
      I4 => \LOCKSTEP_Out_reg[3033]_1\,
      O => \^wb_btr_reg[26]\(0)
    );
\data_rd_reg[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[26]\(0),
      I1 => \data_rd_reg_reg[26]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[26]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_393 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[27]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[27]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3034]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3034]_0\ : in STD_LOGIC;
    wb_mul_result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3034]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3034]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_393 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_393;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_393 is
  signal \^lo\ : STD_LOGIC;
  signal \^use_hw_mul.using_dsp48_architectures.no_mul64.wb_mul_result_reg[27]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 27 to 27 );
begin
  LO <= \^lo\;
  \Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[27]\(0) <= \^use_hw_mul.using_dsp48_architectures.no_mul64.wb_mul_result_reg[27]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(27) <= lopt_1;
\Trace_New_Reg_Value[27]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(27),
      I1 => \LOCKSTEP_Out_reg[3034]\,
      I2 => \LOCKSTEP_Out_reg[3034]_0\,
      I3 => wb_mul_result(0),
      I4 => \LOCKSTEP_Out_reg[3034]_1\(0),
      I5 => Q(0),
      O => \^use_hw_mul.using_dsp48_architectures.no_mul64.wb_mul_result_reg[27]\(0)
    );
\data_rd_reg[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^use_hw_mul.using_dsp48_architectures.no_mul64.wb_mul_result_reg[27]\(0),
      I1 => \data_rd_reg_reg[27]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[27]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_396 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[28]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[28]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3035]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3035]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3035]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3035]_2\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_396 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_396;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_396 is
  signal \^wb_btr_reg[28]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 28 to 28 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \WB_BTR_reg[28]\(0) <= \^wb_btr_reg[28]\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Trace_New_Reg_Value[28]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(28),
      I1 => \LOCKSTEP_Out_reg[3035]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3035]_0\,
      I4 => \LOCKSTEP_Out_reg[3035]_1\,
      O => \^wb_btr_reg[28]\(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3035]_2\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => wb_excep_return_addr(28),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\data_rd_reg[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[28]\(0),
      I1 => \data_rd_reg_reg[28]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[28]_0\(0),
      I4 => \data_rd_reg_reg[28]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_399 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[29]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[29]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3036]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3036]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3036]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3036]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_399 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_399;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_399 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[29]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 29 to 29 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[29]\(0) <= \^wb_btr_reg[29]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(29) <= lopt_1;
\Trace_New_Reg_Value[29]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(29),
      I1 => \LOCKSTEP_Out_reg[3036]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3036]_0\,
      I4 => \LOCKSTEP_Out_reg[3036]_1\,
      O => \^wb_btr_reg[29]\(0)
    );
\data_rd_reg[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[29]\(0),
      I1 => \data_rd_reg_reg[29]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[29]_0\(0),
      I4 => \data_rd_reg_reg[29]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_402 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3009]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_402 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_402;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_402 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_405 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[30]_1\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3037]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3037]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3037]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3037]_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_405 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_405;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_405 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[30]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 30 to 30 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[30]\(0) <= \^wb_btr_reg[30]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(30) <= lopt_1;
\Trace_New_Reg_Value[30]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(30),
      I1 => \LOCKSTEP_Out_reg[3037]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3037]_0\,
      I4 => \LOCKSTEP_Out_reg[3037]_1\,
      O => \^wb_btr_reg[30]\(0)
    );
\data_rd_reg[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^wb_btr_reg[30]\(0),
      I1 => \data_rd_reg_reg[30]\,
      I2 => wb_gpr_wr_dbg,
      I3 => \data_rd_reg_reg[30]_0\(0),
      I4 => \data_rd_reg_reg[30]_1\,
      I5 => DI,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_408 is
  port (
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \data_rd_reg_reg[31]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    DI : in STD_LOGIC;
    \data_rd_reg_reg[31]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3038]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3038]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3038]_1\ : in STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_408 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_408;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_408 is
  signal \^lo\ : STD_LOGIC;
  signal \^wb_btr_reg[31]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 31 to 31 );
begin
  LO <= \^lo\;
  \WB_BTR_reg[31]\(0) <= \^wb_btr_reg[31]\(0);
  \^lo\ <= lopt;
  wb_excep_return_addr(31) <= lopt_1;
\Trace_New_Reg_Value[31]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBBBB8"
    )
        port map (
      I0 => wb_excep_return_addr(31),
      I1 => \LOCKSTEP_Out_reg[3038]\,
      I2 => Q(0),
      I3 => \LOCKSTEP_Out_reg[3038]_0\,
      I4 => \LOCKSTEP_Out_reg[3038]_1\,
      O => \^wb_btr_reg[31]\(0)
    );
\data_rd_reg[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^wb_btr_reg[31]\(0),
      I1 => \data_rd_reg_reg[31]\,
      I2 => wb_gpr_wr_dbg,
      I3 => DI,
      I4 => \data_rd_reg_reg[31]_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_411 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3010]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_411 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_411;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_411 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_414 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3011]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_414 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_414;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_414 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3011]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => \Using_FPGA.Native_I2_0\,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_417 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3012]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_417 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_417;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_417 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_420 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3013]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_420 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_420;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_420 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_423 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3014]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_423 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_423;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_423 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_426 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3015]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_426 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_426;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_426 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \LOCKSTEP_Out_reg[3015]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => \Using_FPGA.Native_I2_0\,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \Using_FPGA.Native\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_429 is
  port (
    LO : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_I2_0\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_429 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_429;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_429 is
  signal \^lo\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \Using_FPGA.Native\(0) <= \^using_fpga.native\(0);
  \^lo\ <= lopt;
  \^using_fpga.native\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_454 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FPGA_Impl1.D_Handle[0].D_Sel_reg\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_454 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_454;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_454 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  D(0) <= \^d\(0);
  \^d\(0) <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_455 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[10]\ : in STD_LOGIC;
    \D_reg[10]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_455 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_455;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_455 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_456 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[11]\ : in STD_LOGIC;
    \D_reg[11]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_456 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_456;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_456 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[11]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[11]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_457 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[12]\ : in STD_LOGIC;
    \D_reg[12]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_457 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_457;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_457 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_458 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[13]\ : in STD_LOGIC;
    \D_reg[13]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_458 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_458;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_458 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_459 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[14]\ : in STD_LOGIC;
    \D_reg[14]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_459 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_459;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_459 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_460 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[15]\ : in STD_LOGIC;
    \D_reg[15]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_460 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_460;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_460 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[15]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[15]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_461 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[16]\ : in STD_LOGIC;
    \D_reg[16]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_461 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_461;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_461 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_462 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[17]\ : in STD_LOGIC;
    \D_reg[17]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_462 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_462;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_462 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_463 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[18]\ : in STD_LOGIC;
    \D_reg[18]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_463 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_463;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_463 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_464 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[19]\ : in STD_LOGIC;
    \D_reg[19]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_464 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_464;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_464 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[19]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[19]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_465 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[1]\ : in STD_LOGIC;
    \D_reg[1]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_465 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_465;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_465 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_466 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[20]\ : in STD_LOGIC;
    \D_reg[20]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_466 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_466;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_466 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_467 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[21]\ : in STD_LOGIC;
    \D_reg[21]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_467 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_467;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_467 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_468 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[22]\ : in STD_LOGIC;
    \D_reg[22]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_468 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_468;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_468 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_469 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[23]\ : in STD_LOGIC;
    \D_reg[23]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_469 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_469;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_469 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[23]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_470 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[24]\ : in STD_LOGIC;
    \D_reg[24]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_470 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_470;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_470 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_471 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[25]\ : in STD_LOGIC;
    \D_reg[25]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_471 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_471;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_471 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_472 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[26]\ : in STD_LOGIC;
    \D_reg[26]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_472 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_472;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_472 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_473 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[27]\ : in STD_LOGIC;
    \D_reg[27]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_473 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_473;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_473 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[27]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[27]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_474 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[28]\ : in STD_LOGIC;
    \D_reg[28]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_474 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_474;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_474 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_475 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[29]\ : in STD_LOGIC;
    \D_reg[29]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_475 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_475;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_475 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_476 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[2]\ : in STD_LOGIC;
    \D_reg[2]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_476 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_476;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_476 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_477 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[30]\ : in STD_LOGIC;
    \D_reg[30]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_477 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_477;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_477 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_478 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_478 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_478;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_478 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => CI,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_479 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[3]\ : in STD_LOGIC;
    \D_reg[3]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_479 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_479;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_479 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_9;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_8 <= \^lopt_9\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[3]_0\,
      CO(3) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_9\,
      O(2) => \^lopt_8\,
      O(1) => \^lopt_7\,
      O(0) => O,
      S(3) => lopt_10,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[3]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_480 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[4]\ : in STD_LOGIC;
    \D_reg[4]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_480 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_480;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_480 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_481 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[5]\ : in STD_LOGIC;
    \D_reg[5]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_481 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_481;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_481 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_482 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[6]\ : in STD_LOGIC;
    \D_reg[6]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_482 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_482;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_482 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_483 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[7]\ : in STD_LOGIC;
    \D_reg[7]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_483 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_483;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_483 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \D_reg[7]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \D_reg[7]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_484 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[8]\ : in STD_LOGIC;
    \D_reg[8]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_484 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_484;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_484 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_485 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \D_reg[9]\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_485 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_485;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_485 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_486 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    negative_operands_reg : out STD_LOGIC;
    ex_hold_div_overflow_reg : out STD_LOGIC;
    New_Q_Sel_31 : in STD_LOGIC;
    LO : in STD_LOGIC;
    negative_operands : in STD_LOGIC;
    mem_div_stall : in STD_LOGIC;
    last_cycle : in STD_LOGIC;
    ex_hold_div_overflow_reg_0 : in STD_LOGIC;
    ex_hold_div_overflow : in STD_LOGIC;
    MEM_Div_Overflow_reg : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_486 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_486;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_486 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal has_overflow : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^d\(0) <= lopt;
MEM_Div_Overflow_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAFFFAACCA000"
    )
        port map (
      I0 => has_overflow,
      I1 => ex_hold_div_overflow,
      I2 => mem_div_stall,
      I3 => last_cycle,
      I4 => ex_hold_div_overflow_reg_0,
      I5 => MEM_Div_Overflow_reg,
      O => ex_hold_div_overflow_reg
    );
MEM_Div_Overflow_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^d\(0),
      I1 => negative_operands,
      O => has_overflow
    );
ex_hold_div_overflow_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000008FF00000800"
    )
        port map (
      I0 => \^d\(0),
      I1 => negative_operands,
      I2 => mem_div_stall,
      I3 => last_cycle,
      I4 => ex_hold_div_overflow_reg_0,
      I5 => ex_hold_div_overflow,
      O => negative_operands_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_487 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[10]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_487 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_487;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_487 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_489 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[11]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_489 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_489;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_489 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[11]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_491 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[12]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_491 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_491;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_491 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_493 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[13]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_493 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_493;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_493 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_495 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[14]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_495 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_495;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_495 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_497 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[15]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_497 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_497;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_497 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[15]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_499 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[16]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_499 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_499;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_499 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_501 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[17]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_501 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_501;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_501 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_503 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[18]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_503 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_503;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_503 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_505 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[19]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_505 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_505;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_505 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[19]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_507 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[1]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_507 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_507;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_507 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_509 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[20]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_509 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_509;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_509 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_511 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[21]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_511 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_511;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_511 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_513 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[22]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_513 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_513;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_513 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_515 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[23]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_515 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_515;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_515 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[23]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_517 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[24]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_517 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_517;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_517 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_519 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[25]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_519 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_519;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_519 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_521 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[26]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_521 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_521;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_521 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_523 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[27]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_523 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_523;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_523 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[27]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_525 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[28]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_525 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_525;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_525 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_527 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[29]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_527 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_527;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_527 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_529 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[2]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_529 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_529;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_529 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_531 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[30]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_531 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_531;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_531 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_533 is
  port (
    New_Q_Carry : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_div_unsigned : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    make_result_neg : in STD_LOGIC;
    last_cycle : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_533 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_533;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_533 is
  signal \^new_q_carry\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  New_Q_Carry(0) <= \^new_q_carry\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => \^new_q_carry\(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__30\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF202020"
    )
        port map (
      I0 => Q(0),
      I1 => ex_div_unsigned,
      I2 => ex_start_div,
      I3 => make_result_neg,
      I4 => last_cycle,
      O => \^new_q_carry\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_535 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[3]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_535 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_535;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_535 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_9;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_8 <= \^lopt_9\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[3]\,
      CO(3) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_9\,
      O(2) => \^lopt_8\,
      O(1) => \^lopt_7\,
      O(0) => O,
      S(3) => lopt_10,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_537 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[4]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_537 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_537;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_537 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_539 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[5]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_539 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_539;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_539 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_541 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[6]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_541 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_541;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_541 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_543 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[7]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_543 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_543;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_543 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[7]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_545 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[8]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_545 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_545;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_545 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_547 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_547 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_547;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_547 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_690 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[9]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_690 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_690;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_690 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[9]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[9]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[9]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[9]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_692 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[8]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_692 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_692;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_692 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[8]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[8]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[8]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[8]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_694 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[7]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_694 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_694;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_694 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[7]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[7]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[7]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[7]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_696 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[6]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_696 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_696;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_696 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\EX_Op3[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[6]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[6]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[6]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[6]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_698 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[5]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_698 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_698;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_698 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[5]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[5]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[5]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[5]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_700 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[4]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_700 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_700;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_700 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[4]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[4]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[4]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[4]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_702 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[3]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_702 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_702;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_702 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[3]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[3]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[3]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[3]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_704 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_704 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_704;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_704 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_706 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_706 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_706;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_706 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_708 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[2]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_708 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_708;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_708 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 to 2 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_11;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\EX_Op3[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[2]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[2]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_11,
      O(2) => \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\(2),
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[2]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[2]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_710 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_710 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_710;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_710 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_712 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_712 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_712;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_712 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_714 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_714 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_714;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_714 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_716 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_716 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_716;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_716 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_718 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_718 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_718;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_718 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_720 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_720 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_720;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_720 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_722 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_722 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_722;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_722 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_724 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_724 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_724;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_724 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_726 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_726 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_726;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_726 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_728 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_728 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_728;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_728 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_730 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[1]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_730 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_730;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_730 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[1]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[1]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[1]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[1]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_732 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_732 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_732;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_732 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_734 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_734 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_734;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_734 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_736 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_736 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_736;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_736 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_738 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_738 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_738;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_738 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_740 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_740 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_740;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_740 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_742 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[14]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_742 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_742;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_742 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\EX_Op3[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[14]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[14]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[14]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[14]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_744 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[13]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_744 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_744;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_744 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[13]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[13]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[13]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[13]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_746 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[12]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_746 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_746;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_746 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[12]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[12]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[12]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[12]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_748 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[11]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_748 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_748;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_748 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^a1\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
\EX_Op3[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[11]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[11]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[11]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[11]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_750 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[10]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_750 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_750;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_750 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\EX_Op3[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[10]\,
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[10]_0\(0),
      O => D(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => A1(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[10]\,
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[10]_0\(0),
      O => ex_sel_alu_i_reg(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXCY_XORCY_751 is
  port (
    \EX_Op2_reg[0]\ : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXCY_XORCY_751 : entity is "MB_MUXCY_XORCY";
end mb_design_microblaze_0_1_MB_MUXCY_XORCY_751;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXCY_XORCY_751 is
  signal \^a1\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_op2_reg[0]\ : STD_LOGIC;
begin
  A1(0) <= \^a1\(0);
  \EX_Op2_reg[0]\ <= \^ex_op2_reg[0]\;
  \^a1\(0) <= lopt_1;
  \^ex_op2_reg[0]\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7 is
  port (
    sel_input_i_1 : out STD_LOGIC;
    S : out STD_LOGIC;
    sel_input_iii_0 : in STD_LOGIC;
    sel_input_delayslot : in STD_LOGIC;
    ex_branch_with_delayslot_i : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wb_exception : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7 is
  signal \^s\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  S <= \^s\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => sel_input_iii_0,
      I1 => sel_input_delayslot,
      O => sel_input_i_1,
      S => \^s\
    );
\Using_FPGA.Native_i_1__38\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAA2AAAAAAAAAA"
    )
        port map (
      I0 => ex_branch_with_delayslot_i,
      I1 => Q(3),
      I2 => Q(2),
      I3 => Q(0),
      I4 => Q(1),
      I5 => wb_exception,
      O => \^s\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_136 is
  port (
    of_instr_ii_43 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0173_out : in STD_LOGIC;
    I1171_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_136 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_136;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_136 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0173_out,
      I1 => I1171_out,
      O => of_instr_ii_43,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_138 is
  port (
    of_instr_ii_33 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0133_out : in STD_LOGIC;
    I1131_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_138 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_138;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_138 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0133_out,
      I1 => I1131_out,
      O => of_instr_ii_33,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_140 is
  port (
    of_instr_ii_32 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0129_out : in STD_LOGIC;
    I1127_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_140 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_140;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_140 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0129_out,
      I1 => I1127_out,
      O => of_instr_ii_32,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_142 is
  port (
    of_instr_ii_31 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0125_out : in STD_LOGIC;
    I1123_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_142 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_142;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_142 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0125_out,
      I1 => I1123_out,
      O => of_instr_ii_31,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_144 is
  port (
    of_instr_ii_30 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0121_out : in STD_LOGIC;
    I1119_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_144 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_144;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_144 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0121_out,
      I1 => I1119_out,
      O => of_instr_ii_30,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_146 is
  port (
    of_instr_ii_29 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0117_out : in STD_LOGIC;
    I1115_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_146 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_146;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_146 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0117_out,
      I1 => I1115_out,
      O => of_instr_ii_29,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_148 is
  port (
    of_instr_ii_28 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0113_out : in STD_LOGIC;
    I1111_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_148 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_148;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_148 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0113_out,
      I1 => I1111_out,
      O => of_instr_ii_28,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_150 is
  port (
    of_instr_ii_27 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0109_out : in STD_LOGIC;
    I1107_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_150 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_150;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_150 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0109_out,
      I1 => I1107_out,
      O => of_instr_ii_27,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_152 is
  port (
    of_instr_ii_26 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0105_out : in STD_LOGIC;
    I1103_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_152 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_152;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_152 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0105_out,
      I1 => I1103_out,
      O => of_instr_ii_26,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_154 is
  port (
    of_instr_ii_25 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0101_out : in STD_LOGIC;
    I199_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_154 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_154;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_154 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0101_out,
      I1 => I199_out,
      O => of_instr_ii_25,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_156 is
  port (
    of_instr_ii_24 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I097_out : in STD_LOGIC;
    I195_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_156 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_156;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_156 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I097_out,
      I1 => I195_out,
      O => of_instr_ii_24,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_158 is
  port (
    of_instr_ii_42 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0169_out : in STD_LOGIC;
    I1167_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_158 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_158;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_158 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0169_out,
      I1 => I1167_out,
      O => of_instr_ii_42,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_160 is
  port (
    of_instr_ii_23 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I093_out : in STD_LOGIC;
    I191_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_160 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_160;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_160 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I093_out,
      I1 => I191_out,
      O => of_instr_ii_23,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_162 is
  port (
    of_instr_ii_22 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I089_out : in STD_LOGIC;
    I187_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_162 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_162;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_162 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I089_out,
      I1 => I187_out,
      O => of_instr_ii_22,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_164 is
  port (
    of_instr_ii_21 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I085_out : in STD_LOGIC;
    I183_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_164 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_164;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_164 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I085_out,
      I1 => I183_out,
      O => of_instr_ii_21,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_166 is
  port (
    of_instr_ii_20 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I081_out : in STD_LOGIC;
    I179_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_166 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_166;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_166 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I081_out,
      I1 => I179_out,
      O => of_instr_ii_20,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_168 is
  port (
    of_instr_ii_19 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I077_out : in STD_LOGIC;
    I175_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_168 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_168;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_168 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I077_out,
      I1 => I175_out,
      O => of_instr_ii_19,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_170 is
  port (
    of_instr_ii_18 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I073_out : in STD_LOGIC;
    I171_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_170 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_170;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_170 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I073_out,
      I1 => I171_out,
      O => of_instr_ii_18,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_172 is
  port (
    of_instr_ii_17 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I069_out : in STD_LOGIC;
    I167_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_172 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_172;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_172 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I069_out,
      I1 => I167_out,
      O => of_instr_ii_17,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_174 is
  port (
    of_instr_ii_16 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I065_out : in STD_LOGIC;
    I163_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_174 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_174;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_174 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I065_out,
      I1 => I163_out,
      O => of_instr_ii_16,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_176 is
  port (
    of_instr_ii_15 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I061_out : in STD_LOGIC;
    I159_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_176 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_176;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_176 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I061_out,
      I1 => I159_out,
      O => of_instr_ii_15,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_178 is
  port (
    of_instr_ii_14 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I057_out : in STD_LOGIC;
    I155_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_178 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_178;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_178 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I057_out,
      I1 => I155_out,
      O => of_instr_ii_14,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_180 is
  port (
    of_instr_ii_41 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0165_out : in STD_LOGIC;
    I1163_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_180 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_180;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_180 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0165_out,
      I1 => I1163_out,
      O => of_instr_ii_41,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_182 is
  port (
    of_instr_ii_13 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I053_out : in STD_LOGIC;
    I151_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_182 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_182;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_182 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I053_out,
      I1 => I151_out,
      O => of_instr_ii_13,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_184 is
  port (
    of_instr_ii_12 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I049_out : in STD_LOGIC;
    I147_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_184 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_184;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_184 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I049_out,
      I1 => I147_out,
      O => of_instr_ii_12,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_186 is
  port (
    of_instr_ii_11 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I045_out : in STD_LOGIC;
    I143_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_186 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_186;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_186 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I045_out,
      I1 => I143_out,
      O => of_instr_ii_11,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_188 is
  port (
    of_instr_ii_10 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_188 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_188;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_188 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I041_out,
      I1 => I139_out,
      O => of_instr_ii_10,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_190 is
  port (
    of_instr_ii_9 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I037_out : in STD_LOGIC;
    I135_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_190 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_190;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_190 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I037_out,
      I1 => I135_out,
      O => of_instr_ii_9,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_192 is
  port (
    of_instr_ii_8 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I033_out : in STD_LOGIC;
    I131_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_192 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_192;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_192 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I033_out,
      I1 => I131_out,
      O => of_instr_ii_8,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_194 is
  port (
    of_instr_ii_7 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I029_out : in STD_LOGIC;
    I127_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_194 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_194;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_194 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I029_out,
      I1 => I127_out,
      O => of_instr_ii_7,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_196 is
  port (
    of_instr_ii_6 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I025_out : in STD_LOGIC;
    I123_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_196 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_196;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_196 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I025_out,
      I1 => I123_out,
      O => of_instr_ii_6,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_198 is
  port (
    of_instr_ii_5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I021_out : in STD_LOGIC;
    I119_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_198 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_198;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_198 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I021_out,
      I1 => I119_out,
      O => of_instr_ii_5,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_200 is
  port (
    of_instr_ii_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I017_out : in STD_LOGIC;
    I115_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_200 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_200;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_200 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I017_out,
      I1 => I115_out,
      O => of_instr_ii_4,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_202 is
  port (
    of_instr_ii_40 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0161_out : in STD_LOGIC;
    I1159_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_202 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_202;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_202 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0161_out,
      I1 => I1159_out,
      O => of_instr_ii_40,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_204 is
  port (
    of_instr_ii_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I013_out : in STD_LOGIC;
    I111_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_204 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_204;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_204 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I013_out,
      I1 => I111_out,
      O => of_instr_ii_3,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_206 is
  port (
    of_instr_ii_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I09_out : in STD_LOGIC;
    I17_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_206 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_206;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_206 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I09_out,
      I1 => I17_out,
      O => of_instr_ii_2,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_208 is
  port (
    of_instr_ii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I05_out : in STD_LOGIC;
    I13_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_208 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_208;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_208 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I05_out,
      I1 => I13_out,
      O => of_instr_ii_1,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_210 is
  port (
    of_instr_ii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0_0 : in STD_LOGIC;
    I1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_210 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_210;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_210 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0_0,
      I1 => I1,
      O => of_instr_ii_0,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_212 is
  port (
    of_instr_ii_39 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0157_out : in STD_LOGIC;
    I1155_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_212 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_212;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_212 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0157_out,
      I1 => I1155_out,
      O => of_instr_ii_39,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_214 is
  port (
    of_instr_ii_38 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0153_out : in STD_LOGIC;
    I1151_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_214 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_214;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_214 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0153_out,
      I1 => I1151_out,
      O => of_instr_ii_38,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_216 is
  port (
    of_instr_ii_37 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0149_out : in STD_LOGIC;
    I1147_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_216 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_216;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_216 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0149_out,
      I1 => I1147_out,
      O => of_instr_ii_37,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_218 is
  port (
    of_instr_ii_36 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0145_out : in STD_LOGIC;
    I1143_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_218 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_218;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_218 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0145_out,
      I1 => I1143_out,
      O => of_instr_ii_36,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_220 is
  port (
    of_instr_ii_35 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0141_out : in STD_LOGIC;
    I1139_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_220 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_220;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_220 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0141_out,
      I1 => I1139_out,
      O => of_instr_ii_35,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_222 is
  port (
    of_instr_ii_34 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0137_out : in STD_LOGIC;
    I1135_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_222 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_222;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_222 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0137_out,
      I1 => I1135_out,
      O => of_instr_ii_34,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_225 is
  port (
    of_pc_ii_31 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0125_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_225 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_225;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_225 is
  signal I1123_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0125_out,
      I1 => I1123_out,
      O => of_pc_ii_31,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__79\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1123_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_227 is
  port (
    of_pc_ii_21 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I085_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_227 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_227;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_227 is
  signal I183_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I085_out,
      I1 => I183_out,
      O => of_pc_ii_21,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__69\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I183_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_229 is
  port (
    of_pc_ii_20 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I081_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_229 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_229;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_229 is
  signal I179_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I081_out,
      I1 => I179_out,
      O => of_pc_ii_20,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__68\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I179_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_231 is
  port (
    of_pc_ii_19 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I077_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_231 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_231;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_231 is
  signal I175_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I077_out,
      I1 => I175_out,
      O => of_pc_ii_19,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__67\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I175_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_233 is
  port (
    of_pc_ii_18 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I073_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_233 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_233;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_233 is
  signal I171_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I073_out,
      I1 => I171_out,
      O => of_pc_ii_18,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__66\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I171_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_235 is
  port (
    of_pc_ii_17 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I069_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_235 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_235;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_235 is
  signal I167_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I069_out,
      I1 => I167_out,
      O => of_pc_ii_17,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__65\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I167_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_237 is
  port (
    of_pc_ii_16 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I065_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_237 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_237;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_237 is
  signal I163_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I065_out,
      I1 => I163_out,
      O => of_pc_ii_16,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__64\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I163_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_239 is
  port (
    of_pc_ii_15 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I061_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_239 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_239;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_239 is
  signal I159_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I061_out,
      I1 => I159_out,
      O => of_pc_ii_15,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__63\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I159_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_241 is
  port (
    of_pc_ii_14 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I057_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_241 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_241;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_241 is
  signal I155_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I057_out,
      I1 => I155_out,
      O => of_pc_ii_14,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__62\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I155_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_243 is
  port (
    of_pc_ii_13 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I053_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_243 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_243;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_243 is
  signal I151_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I053_out,
      I1 => I151_out,
      O => of_pc_ii_13,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__61\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I151_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_245 is
  port (
    of_pc_ii_12 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I049_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_245 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_245;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_245 is
  signal I147_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I049_out,
      I1 => I147_out,
      O => of_pc_ii_12,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__60\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I147_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_247 is
  port (
    of_pc_ii_30 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0121_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_247 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_247;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_247 is
  signal I1119_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0121_out,
      I1 => I1119_out,
      O => of_pc_ii_30,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__78\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1119_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_249 is
  port (
    of_pc_ii_11 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I045_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_249 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_249;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_249 is
  signal I143_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I045_out,
      I1 => I143_out,
      O => of_pc_ii_11,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__59\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I143_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_251 is
  port (
    of_pc_ii_10 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_251 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_251;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_251 is
  signal I139_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I041_out,
      I1 => I139_out,
      O => of_pc_ii_10,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__58\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I139_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_253 is
  port (
    of_pc_ii_9 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I037_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_253 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_253;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_253 is
  signal I135_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I037_out,
      I1 => I135_out,
      O => of_pc_ii_9,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__57\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I135_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_255 is
  port (
    of_pc_ii_8 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I033_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_255 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_255;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_255 is
  signal I131_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I033_out,
      I1 => I131_out,
      O => of_pc_ii_8,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__56\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I131_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_257 is
  port (
    of_pc_ii_7 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I029_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_257 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_257;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_257 is
  signal I127_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I029_out,
      I1 => I127_out,
      O => of_pc_ii_7,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__55\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I127_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_259 is
  port (
    of_pc_ii_6 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I025_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_259 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_259;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_259 is
  signal I123_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I025_out,
      I1 => I123_out,
      O => of_pc_ii_6,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__54\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I123_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_261 is
  port (
    of_pc_ii_5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I021_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_261 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_261;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_261 is
  signal I119_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I021_out,
      I1 => I119_out,
      O => of_pc_ii_5,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__53\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I119_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_263 is
  port (
    of_pc_ii_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I017_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_263 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_263;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_263 is
  signal I115_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I017_out,
      I1 => I115_out,
      O => of_pc_ii_4,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__52\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I115_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_265 is
  port (
    of_pc_ii_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I013_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_265 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_265;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_265 is
  signal I111_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I013_out,
      I1 => I111_out,
      O => of_pc_ii_3,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__51\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I111_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_267 is
  port (
    of_pc_ii_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I09_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_267 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_267;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_267 is
  signal I17_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I09_out,
      I1 => I17_out,
      O => of_pc_ii_2,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__50\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I17_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_269 is
  port (
    of_pc_ii_29 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0117_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_269 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_269;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_269 is
  signal I1115_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0117_out,
      I1 => I1115_out,
      O => of_pc_ii_29,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__77\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1115_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_271 is
  port (
    of_pc_ii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I05_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_271 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_271;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_271 is
  signal I13_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I05_out,
      I1 => I13_out,
      O => of_pc_ii_1,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__49\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I13_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_273 is
  port (
    of_pc_ii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_273 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_273;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_273 is
  signal I1 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0,
      I1 => I1,
      O => of_pc_ii_0,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__48\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_275 is
  port (
    of_pc_ii_28 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0113_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_275 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_275;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_275 is
  signal I1111_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0113_out,
      I1 => I1111_out,
      O => of_pc_ii_28,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__76\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1111_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_277 is
  port (
    of_pc_ii_27 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0109_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_277 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_277;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_277 is
  signal I1107_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0109_out,
      I1 => I1107_out,
      O => of_pc_ii_27,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__75\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1107_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_279 is
  port (
    of_pc_ii_26 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0105_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_279 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_279;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_279 is
  signal I1103_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0105_out,
      I1 => I1103_out,
      O => of_pc_ii_26,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__74\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1103_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_281 is
  port (
    of_pc_ii_25 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0101_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_281 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_281;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_281 is
  signal I199_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0101_out,
      I1 => I199_out,
      O => of_pc_ii_25,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__73\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I199_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_283 is
  port (
    of_pc_ii_24 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I097_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_283 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_283;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_283 is
  signal I195_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I097_out,
      I1 => I195_out,
      O => of_pc_ii_24,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__72\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I195_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_285 is
  port (
    of_pc_ii_23 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I093_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_285 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_285;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_285 is
  signal I191_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I093_out,
      I1 => I191_out,
      O => of_pc_ii_23,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__71\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I191_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_287 is
  port (
    of_pc_ii_22 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I089_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_287 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_287;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_287 is
  signal I187_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I089_out,
      I1 => I187_out,
      O => of_pc_ii_22,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__70\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I187_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_564 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    I1 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_564 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_564;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_564 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[0]\(0),
      I1 => I1,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_4__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[16]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_565 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[26]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[10]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_565 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_565;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_565 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[10]\(0),
      I1 => \EX_Op1_reg[10]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[26]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_566 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[27]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[11]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_566 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_566;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_566 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[11]\(0),
      I1 => \EX_Op1_reg[11]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[27]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_567 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[28]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[12]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_567 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_567;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_567 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[12]\(0),
      I1 => \EX_Op1_reg[12]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[28]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_568 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[13]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_568 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_568;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_568 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[13]\(0),
      I1 => \EX_Op1_reg[13]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[29]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_569 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[30]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[14]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_569 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_569;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_569 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[14]\(0),
      I1 => \EX_Op1_reg[14]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[30]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_570 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[31]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[15]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_570 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_570;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_570 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[15]\(0),
      I1 => \EX_Op1_reg[15]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[31]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_571 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[0]\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[16]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_571 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_571;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_571 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[16]_0\(0),
      I1 => \EX_Op1_reg[16]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[16]\
    );
\Using_FPGA.Native_i_3__30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_572 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[17]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[17]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_572 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_572;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_572 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[17]_0\(0),
      I1 => \EX_Op1_reg[17]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__28\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1D441D77"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\(1),
      I2 => Q(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[17]\
    );
\Using_FPGA.Native_i_3__31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[1]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_573 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[2]\ : out STD_LOGIC;
    \EX_Op1_reg[18]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[18]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_573 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_573;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_573 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[18]_0\(0),
      I1 => \EX_Op1_reg[18]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[18]\
    );
\Using_FPGA.Native_i_3__32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[2]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_574 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[19]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_574 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_574;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_574 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[19]_0\(0),
      I1 => \EX_Op1_reg[19]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[19]\
    );
\Using_FPGA.Native_i_3__33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[3]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_575 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[17]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[1]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_575 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_575;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_575 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[1]\(0),
      I1 => \EX_Op1_reg[1]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[17]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_576 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[4]\ : out STD_LOGIC;
    \EX_Op1_reg[20]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[20]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_576 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_576;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_576 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[20]_0\(0),
      I1 => \EX_Op1_reg[20]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[20]\
    );
\Using_FPGA.Native_i_3__34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_577 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[5]\ : out STD_LOGIC;
    \EX_Op1_reg[21]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[21]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_577 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_577;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_577 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[21]_0\(0),
      I1 => \EX_Op1_reg[21]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[21]\
    );
\Using_FPGA.Native_i_3__35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[5]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_578 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[6]\ : out STD_LOGIC;
    \EX_Op1_reg[22]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[22]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_578 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_578;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_578 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[22]_0\(0),
      I1 => \EX_Op1_reg[22]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[22]\
    );
\Using_FPGA.Native_i_3__36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[6]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_579 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[7]\ : out STD_LOGIC;
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[23]_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_579 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_579;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_579 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[23]_0\(0),
      I1 => \EX_Op1_reg[23]_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3550355F"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \out\,
      O => \EX_Op1_reg[23]\
    );
\Using_FPGA.Native_i_3__37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(3),
      I1 => ex_swap_byte_instr,
      I2 => Q(2),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[7]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_580 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[24]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_580 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_580;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_580 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[24]\(0),
      I1 => \EX_Op1_reg[24]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[8]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_581 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[25]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_581 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_581;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_581 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[25]\(0),
      I1 => \EX_Op1_reg[25]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[9]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_582 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    \EX_Op2_reg[31]\ : out STD_LOGIC;
    \EX_Op2_reg[28]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[26]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_582 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_582;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_582 is
  signal \^ex_op1_reg[24]\ : STD_LOGIC;
  signal \^ex_op2_reg[28]\ : STD_LOGIC;
  signal \^ex_op2_reg[31]\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Op1_reg[24]\ <= \^ex_op1_reg[24]\;
  \EX_Op2_reg[28]\ <= \^ex_op2_reg[28]\;
  \EX_Op2_reg[31]\ <= \^ex_op2_reg[31]\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[26]\(0),
      I1 => \EX_Op1_reg[26]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_4__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \^ex_op1_reg[24]\,
      I2 => \Using_FPGA.Native_1\,
      O => \EX_Op1_reg[16]\
    );
\Using_FPGA.Native_i_4__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF6FF6"
    )
        port map (
      I0 => Q(7),
      I1 => \Using_FPGA.Native_2\(7),
      I2 => Q(6),
      I3 => \Using_FPGA.Native_2\(6),
      I4 => \^ex_op2_reg[31]\,
      I5 => \^ex_op2_reg[28]\,
      O => \^ex_op1_reg[24]\
    );
\Using_FPGA.Native_i_7__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(0),
      I1 => Q(0),
      I2 => Q(2),
      I3 => \Using_FPGA.Native_2\(2),
      I4 => Q(1),
      I5 => \Using_FPGA.Native_2\(1),
      O => \^ex_op2_reg[31]\
    );
\Using_FPGA.Native_i_8__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(3),
      I1 => Q(3),
      I2 => Q(4),
      I3 => \Using_FPGA.Native_2\(4),
      I4 => Q(5),
      I5 => \Using_FPGA.Native_2\(5),
      O => \^ex_op2_reg[28]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_583 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CLZ_Instr_reg : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[27]\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_583 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_583;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_583 is
  signal \^ex_sel_alu_i_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_sel_alu_i_reg(0) <= \^ex_sel_alu_i_reg\(0);
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \^ex_sel_alu_i_reg\(0),
      I1 => \EX_Op1_reg[27]\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => EX_Fwd(0),
      I1 => GPR_Op1(0),
      I2 => WB_Fwd(0),
      I3 => of_op1_sel(0),
      I4 => of_op1_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[27]\(0),
      O => \^ex_sel_alu_i_reg\(0)
    );
\Using_FPGA.Native_i_3__40\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => ex_clz_instr,
      O => EX_CLZ_Instr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_584 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_Shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[28]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_584 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_584;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_584 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[28]\(0),
      I1 => \EX_Op1_reg[28]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAEFEEAAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => ex_clz_instr,
      I5 => \Using_FPGA.Native_4\,
      O => EX_Shift_Logic_Result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_585 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[0]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 );
    ex_clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_3__2_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__2_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__2_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__2_3\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__2_4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__2_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_585 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_585;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_585 is
  signal \^ex_op1_reg[1]\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_10__3_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_11_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_13_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_8__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_9__1_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Op1_reg[1]\ <= \^ex_op1_reg[1]\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[29]\(0),
      I1 => \EX_Op1_reg[29]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_10__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Q(3),
      I1 => Q(2),
      I2 => Q(1),
      I3 => Q(0),
      O => \Using_FPGA.Native_i_10__3_n_0\
    );
\Using_FPGA.Native_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => Q(9),
      I1 => Q(8),
      I2 => Q(11),
      I3 => Q(10),
      O => \Using_FPGA.Native_i_11_n_0\
    );
\Using_FPGA.Native_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => Q(6),
      I1 => Q(7),
      O => \Using_FPGA.Native_i_13_n_0\
    );
\Using_FPGA.Native_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFAE00AE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_8__0_n_0\,
      I1 => \Using_FPGA.Native_i_9__1_n_0\,
      I2 => \Using_FPGA.Native_i_10__3_n_0\,
      I3 => \Using_FPGA.Native_0\,
      I4 => \Using_FPGA.Native_i_11_n_0\,
      I5 => \^ex_op1_reg[1]\,
      O => \EX_Op1_reg[19]\
    );
\Using_FPGA.Native_i_3__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFEFFFFFFFFEFFE"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \Using_FPGA.Native_5\,
      I2 => Q(14),
      I3 => \Using_FPGA.Native_6\(0),
      I4 => Q(15),
      I5 => \Using_FPGA.Native_6\(1),
      O => \^ex_op1_reg[1]\
    );
\Using_FPGA.Native_i_4__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000002FFFFFFFF"
    )
        port map (
      I0 => \^ex_op1_reg[1]\,
      I1 => Q(15),
      I2 => Q(14),
      I3 => Q(12),
      I4 => Q(13),
      I5 => ex_clz_instr,
      O => \EX_Op1_reg[0]\
    );
\Using_FPGA.Native_i_5__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000800000"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_0\,
      I2 => ex_pattern_cmp_sel,
      I3 => \Using_FPGA.Native_2\(0),
      I4 => \^ex_op1_reg[1]\,
      I5 => \Using_FPGA.Native_3\,
      O => EX_Pattern_Cmp_Sel_reg
    );
\Using_FPGA.Native_i_8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000FE00"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__2_0\,
      I1 => \Using_FPGA.Native_i_3__2_1\,
      I2 => \Using_FPGA.Native_i_3__2_2\,
      I3 => \Using_FPGA.Native_i_13_n_0\,
      I4 => Q(4),
      I5 => Q(5),
      O => \Using_FPGA.Native_i_8__0_n_0\
    );
\Using_FPGA.Native_i_9__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000FE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__2_3\,
      I1 => \Using_FPGA.Native_i_3__2_4\,
      I2 => \Using_FPGA.Native_i_3__2_5\,
      I3 => \Using_FPGA.Native_i_3__2_0\,
      I4 => \Using_FPGA.Native_i_3__2_1\,
      I5 => \Using_FPGA.Native_i_3__2_2\,
      O => \Using_FPGA.Native_i_9__1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_586 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[18]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[2]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_586 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_586;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_586 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[2]\(0),
      I1 => \EX_Op1_reg[2]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[18]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_587 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[0]\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Op1_reg[16]_0\ : out STD_LOGIC;
    \EX_Op2_reg[25]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 23 downto 0 );
    ex_clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__1_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_3__1_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_587 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_587;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_587 is
  signal \^ex_op1_reg[16]\ : STD_LOGIC;
  signal \^ex_op2_reg[25]\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_10__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_11__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_7__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_8__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_9__3_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Op1_reg[16]\ <= \^ex_op1_reg[16]\;
  \EX_Op2_reg[25]\ <= \^ex_op2_reg[25]\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[30]\(0),
      I1 => \EX_Op1_reg[30]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_10__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1110"
    )
        port map (
      I0 => Q(21),
      I1 => Q(20),
      I2 => Q(19),
      I3 => Q(18),
      O => \Using_FPGA.Native_i_10__2_n_0\
    );
\Using_FPGA.Native_i_11__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEEEEEEFFFE"
    )
        port map (
      I0 => Q(5),
      I1 => Q(4),
      I2 => Q(0),
      I3 => Q(1),
      I4 => Q(2),
      I5 => Q(3),
      O => \Using_FPGA.Native_i_11__0_n_0\
    );
\Using_FPGA.Native_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \Using_FPGA.Native_3\(0),
      I1 => Q(4),
      I2 => \Using_FPGA.Native_3\(1),
      I3 => Q(5),
      O => \^ex_op2_reg[25]\
    );
\Using_FPGA.Native_i_3__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFB800B8"
    )
        port map (
      I0 => \Using_FPGA.Native_i_7__2_n_0\,
      I1 => \^ex_op1_reg[16]\,
      I2 => \Using_FPGA.Native_i_8__1_n_0\,
      I3 => \Using_FPGA.Native_1\,
      I4 => \Using_FPGA.Native_i_9__3_n_0\,
      I5 => \Using_FPGA.Native_0\,
      O => \EX_Op1_reg[16]_0\
    );
\Using_FPGA.Native_i_4__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0004FFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_i_10__2_n_0\,
      I1 => \Using_FPGA.Native_0\,
      I2 => Q(23),
      I3 => Q(22),
      I4 => ex_clz_instr,
      O => \EX_Op1_reg[0]\
    );
\Using_FPGA.Native_i_5__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004C00"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => ex_pattern_cmp_sel,
      I2 => \^ex_op1_reg[16]\,
      I3 => \Using_FPGA.Native_0\,
      I4 => \Using_FPGA.Native_2\(0),
      O => EX_Pattern_Cmp_Sel_reg
    );
\Using_FPGA.Native_i_5__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF6FF6"
    )
        port map (
      I0 => Q(11),
      I1 => \Using_FPGA.Native_3\(3),
      I2 => Q(10),
      I3 => \Using_FPGA.Native_3\(2),
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => \^ex_op1_reg[16]\
    );
\Using_FPGA.Native_i_7__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111111111110001"
    )
        port map (
      I0 => Q(11),
      I1 => Q(10),
      I2 => Q(6),
      I3 => Q(7),
      I4 => Q(8),
      I5 => Q(9),
      O => \Using_FPGA.Native_i_7__2_n_0\
    );
\Using_FPGA.Native_i_8__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__1_0\,
      I1 => \Using_FPGA.Native_i_3__1_1\,
      I2 => \^ex_op2_reg[25]\,
      I3 => \Using_FPGA.Native_i_11__0_n_0\,
      O => \Using_FPGA.Native_i_8__1_n_0\
    );
\Using_FPGA.Native_i_9__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111111111110001"
    )
        port map (
      I0 => Q(17),
      I1 => Q(16),
      I2 => Q(12),
      I3 => Q(13),
      I4 => Q(14),
      I5 => Q(15),
      O => \Using_FPGA.Native_i_9__3_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_588 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[4]\ : out STD_LOGIC;
    \EX_Op2_reg[7]\ : out STD_LOGIC;
    \EX_Op2_reg[20]\ : out STD_LOGIC;
    \EX_Op2_reg[23]\ : out STD_LOGIC;
    \EX_Op2_reg[17]\ : out STD_LOGIC;
    \EX_Op1_reg[15]\ : out STD_LOGIC;
    EX_CLZ_Instr_reg : out STD_LOGIC;
    \EX_Logic_Op_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[31]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__1_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 22 downto 0 );
    \Using_FPGA.Native_i_3_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    ex_pattern_cmp_sel : in STD_LOGIC;
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__29_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__29_1\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__29_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_588 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_588;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_588 is
  signal \^ex_op1_reg[9]\ : STD_LOGIC;
  signal \^ex_op2_reg[17]\ : STD_LOGIC;
  signal \^ex_op2_reg[20]\ : STD_LOGIC;
  signal \^ex_op2_reg[23]\ : STD_LOGIC;
  signal \^ex_op2_reg[4]\ : STD_LOGIC;
  signal \^ex_op2_reg[7]\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_10__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_11__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_12_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_13__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_14__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_18_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_19_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_20_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_5__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_7__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_8__3_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_9__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_9_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_12__0\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_14__0\ : label is "soft_lutpair9";
begin
  \EX_Op1_reg[9]\ <= \^ex_op1_reg[9]\;
  \EX_Op2_reg[17]\ <= \^ex_op2_reg[17]\;
  \EX_Op2_reg[20]\ <= \^ex_op2_reg[20]\;
  \EX_Op2_reg[23]\ <= \^ex_op2_reg[23]\;
  \EX_Op2_reg[4]\ <= \^ex_op2_reg[4]\;
  \EX_Op2_reg[7]\ <= \^ex_op2_reg[7]\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[31]\(0),
      I1 => \EX_Op1_reg[31]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(11),
      I1 => \Using_FPGA.Native_i_3_0\(18),
      I2 => \Using_FPGA.Native_i_3_0\(19),
      I3 => Q(12),
      I4 => \Using_FPGA.Native_i_3_0\(20),
      I5 => Q(13),
      O => \Using_FPGA.Native_i_10__0_n_0\
    );
\Using_FPGA.Native_i_10__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(3),
      I1 => \Using_FPGA.Native_i_3_0\(10),
      I2 => \Using_FPGA.Native_i_3_0\(11),
      I3 => Q(4),
      I4 => \Using_FPGA.Native_i_3_0\(12),
      I5 => Q(5),
      O => \^ex_op2_reg[20]\
    );
\Using_FPGA.Native_i_11__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \Using_FPGA.Native_i_18_n_0\,
      I1 => ex_clz_instr,
      I2 => \Using_FPGA.Native_i_3_0\(30),
      O => \Using_FPGA.Native_i_11__1_n_0\
    );
\Using_FPGA.Native_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000002002"
    )
        port map (
      I0 => ex_clz_instr,
      I1 => \Using_FPGA.Native_i_4__1_0\,
      I2 => Q(22),
      I3 => \Using_FPGA.Native_i_3_0\(29),
      I4 => \^ex_op2_reg[4]\,
      I5 => \^ex_op2_reg[7]\,
      O => \Using_FPGA.Native_i_12_n_0\
    );
\Using_FPGA.Native_i_12__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => Q(6),
      I1 => \Using_FPGA.Native_i_3_0\(13),
      I2 => Q(7),
      I3 => \Using_FPGA.Native_i_3_0\(14),
      O => \^ex_op2_reg[17]\
    );
\Using_FPGA.Native_i_13__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(6),
      I1 => \Using_FPGA.Native_i_19_n_0\,
      O => \Using_FPGA.Native_i_13__0_n_0\
    );
\Using_FPGA.Native_i_14__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(14),
      I1 => \Using_FPGA.Native_i_20_n_0\,
      O => \Using_FPGA.Native_i_14__0_n_0\
    );
\Using_FPGA.Native_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(15),
      I1 => ex_swap_byte_instr,
      I2 => \Using_FPGA.Native_i_3_0\(23),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[15]\
    );
\Using_FPGA.Native_i_18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF00F2"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(24),
      I1 => \Using_FPGA.Native_i_3_0\(25),
      I2 => \Using_FPGA.Native_i_3_0\(26),
      I3 => \Using_FPGA.Native_i_3_0\(27),
      I4 => \Using_FPGA.Native_i_3_0\(28),
      I5 => \Using_FPGA.Native_i_3_0\(29),
      O => \Using_FPGA.Native_i_18_n_0\
    );
\Using_FPGA.Native_i_19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF5504"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(3),
      I1 => \Using_FPGA.Native_i_3_0\(0),
      I2 => \Using_FPGA.Native_i_3_0\(1),
      I3 => \Using_FPGA.Native_i_3_0\(2),
      I4 => \Using_FPGA.Native_i_3_0\(4),
      I5 => \Using_FPGA.Native_i_3_0\(5),
      O => \Using_FPGA.Native_i_19_n_0\
    );
\Using_FPGA.Native_i_20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF00F2"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(8),
      I1 => \Using_FPGA.Native_i_3_0\(9),
      I2 => \Using_FPGA.Native_i_3_0\(10),
      I3 => \Using_FPGA.Native_i_3_0\(11),
      I4 => \Using_FPGA.Native_i_3_0\(12),
      I5 => \Using_FPGA.Native_i_3_0\(13),
      O => \Using_FPGA.Native_i_20_n_0\
    );
\Using_FPGA.Native_i_2__29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A0AFA06FAFAFA06F"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(0),
      I1 => \Using_FPGA.Native_i_5__2_n_0\,
      I2 => \Using_FPGA.Native_2\(1),
      I3 => \Using_FPGA.Native_i_6__5_n_0\,
      I4 => \^ex_op1_reg[9]\,
      I5 => \Using_FPGA.Native_i_7__5_n_0\,
      O => \EX_Logic_Op_reg[1]\
    );
\Using_FPGA.Native_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF10FFFFFF10"
    )
        port map (
      I0 => \Using_FPGA.Native_i_8__3_n_0\,
      I1 => \Using_FPGA.Native_i_9_n_0\,
      I2 => ex_clz_instr,
      I3 => \Using_FPGA.Native_0\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \Using_FPGA.Native_i_11__1_n_0\,
      O => EX_CLZ_Instr_reg
    );
\Using_FPGA.Native_i_4__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFDFFDFDFDDDF"
    )
        port map (
      I0 => \Using_FPGA.Native_i_12_n_0\,
      I1 => \^ex_op1_reg[9]\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_4\,
      I4 => \Using_FPGA.Native_i_13__0_n_0\,
      I5 => \Using_FPGA.Native_i_14__0_n_0\,
      O => EX_CLZ_Instr_reg_0
    );
\Using_FPGA.Native_i_5__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__29_0\,
      I1 => \Using_FPGA.Native_i_2__29_1\,
      I2 => \Using_FPGA.Native_i_2__29_2\,
      I3 => \^ex_op2_reg[20]\,
      I4 => \^ex_op2_reg[23]\,
      I5 => \^ex_op2_reg[17]\,
      O => \Using_FPGA.Native_i_5__2_n_0\
    );
\Using_FPGA.Native_i_6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(16),
      I1 => \Using_FPGA.Native_i_3_0\(23),
      I2 => \Using_FPGA.Native_i_3_0\(25),
      I3 => Q(18),
      I4 => \Using_FPGA.Native_i_3_0\(24),
      I5 => Q(17),
      O => \^ex_op2_reg[7]\
    );
\Using_FPGA.Native_i_6__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFBEFFFFFFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__1_0\,
      I1 => Q(22),
      I2 => \Using_FPGA.Native_i_3_0\(29),
      I3 => \^ex_op2_reg[4]\,
      I4 => \^ex_op2_reg[7]\,
      I5 => ex_pattern_cmp_sel,
      O => \Using_FPGA.Native_i_6__5_n_0\
    );
\Using_FPGA.Native_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(19),
      I1 => \Using_FPGA.Native_i_3_0\(26),
      I2 => \Using_FPGA.Native_i_3_0\(27),
      I3 => Q(20),
      I4 => \Using_FPGA.Native_i_3_0\(28),
      I5 => Q(21),
      O => \^ex_op2_reg[4]\
    );
\Using_FPGA.Native_i_7__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEFF"
    )
        port map (
      I0 => \^ex_op2_reg[20]\,
      I1 => \^ex_op2_reg[23]\,
      I2 => \^ex_op2_reg[17]\,
      I3 => ex_pattern_cmp_sel,
      O => \Using_FPGA.Native_i_7__5_n_0\
    );
\Using_FPGA.Native_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFEFFFFFFFFEFFE"
    )
        port map (
      I0 => \Using_FPGA.Native_i_9__0_n_0\,
      I1 => \Using_FPGA.Native_i_10__0_n_0\,
      I2 => \Using_FPGA.Native_i_3_0\(21),
      I3 => Q(14),
      I4 => \Using_FPGA.Native_i_3_0\(22),
      I5 => Q(15),
      O => \^ex_op1_reg[9]\
    );
\Using_FPGA.Native_i_8__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFF00F2"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3_0\(16),
      I1 => \Using_FPGA.Native_i_3_0\(17),
      I2 => \Using_FPGA.Native_i_3_0\(18),
      I3 => \Using_FPGA.Native_i_3_0\(19),
      I4 => \Using_FPGA.Native_i_3_0\(20),
      I5 => \Using_FPGA.Native_i_3_0\(21),
      O => \Using_FPGA.Native_i_8__3_n_0\
    );
\Using_FPGA.Native_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCCCCCCCCCCCDCCD"
    )
        port map (
      I0 => Q(15),
      I1 => \Using_FPGA.Native_i_3_0\(22),
      I2 => Q(14),
      I3 => \Using_FPGA.Native_i_3_0\(21),
      I4 => \Using_FPGA.Native_i_10__0_n_0\,
      I5 => \Using_FPGA.Native_i_9__0_n_0\,
      O => \Using_FPGA.Native_i_9_n_0\
    );
\Using_FPGA.Native_i_9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(8),
      I1 => \Using_FPGA.Native_i_3_0\(15),
      I2 => \Using_FPGA.Native_i_3_0\(17),
      I3 => Q(10),
      I4 => \Using_FPGA.Native_i_3_0\(16),
      I5 => Q(9),
      O => \Using_FPGA.Native_i_9__0_n_0\
    );
\Using_FPGA.Native_i_9__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_i_3_0\(7),
      I2 => \Using_FPGA.Native_i_3_0\(9),
      I3 => Q(2),
      I4 => \Using_FPGA.Native_i_3_0\(8),
      I5 => Q(1),
      O => \^ex_op2_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_589 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[3]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_589 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_589;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_589 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[3]\(0),
      I1 => \EX_Op1_reg[3]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[19]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_590 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[20]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[4]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_590 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_590;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_590 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[4]\(0),
      I1 => \EX_Op1_reg[4]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[20]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_591 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[21]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[5]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_591 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_591;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_591 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[5]\(0),
      I1 => \EX_Op1_reg[5]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[21]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_592 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[22]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[6]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_592 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_592;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_592 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[6]\(0),
      I1 => \EX_Op1_reg[6]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[22]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_593 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[7]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_593 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_593;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_593 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[7]\(0),
      I1 => \EX_Op1_reg[7]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_594 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[8]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_594 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_594;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_594 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[8]\(0),
      I1 => \EX_Op1_reg[8]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[24]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_MUXF7_595 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[25]\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[9]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_MUXF7_595 : entity is "MB_MUXF7";
end mb_design_microblaze_0_1_MB_MUXF7_595;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_MUXF7_595 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \EX_Op1_reg[9]\(0),
      I1 => \EX_Op1_reg[9]_0\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_3__23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E200"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      I3 => ex_swap_instr,
      O => \EX_Op1_reg[25]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_549 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[20]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_549 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_549;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_549 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[20]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_550 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[22]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_550 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_550;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_550 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[22]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_551 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[24]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_551 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_551;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_551 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[24]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_552 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[26]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_552 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_552;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_552 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[26]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_553 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_553 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_553;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_553 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[28]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_554 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_554 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_554;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_554 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[30]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_555 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[2]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_555 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_555;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_555 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[2]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_556 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[4]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_556 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_556;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_556 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[4]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_557 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[6]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_557 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_557;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_557 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[6]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_558 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[8]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_558 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_558;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_558 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[8]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_559 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[10]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_559 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_559;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_559 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[10]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_560 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[12]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_560 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_560;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_560 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[12]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_561 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[14]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_561 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_561;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_561 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[14]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_562 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[16]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_562 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_562;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_562 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[16]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_RAM32M_563 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[18]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_RAM32M_563 : entity is "MB_RAM32M";
end mb_design_microblaze_0_1_MB_RAM32M_563;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_RAM32M_563 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => \EX_Branch_CMP_Op1_reg[18]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRL16E is
  port (
    Q_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRL16E : entity is "MB_SRL16E";
end mb_design_microblaze_0_1_MB_SRL16E;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRL16E is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"002B",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized1\ is
  port (
    tdo_config_word1_14 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized1\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_2/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"02F9",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_14
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized11\ is
  port (
    tdo_config_word1_5 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized11\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized11\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized11\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0064",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized13\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_TDO_3 : in STD_LOGIC;
    Dbg_TDO_4 : in STD_LOGIC;
    Dbg_TDO_5 : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO_6 : in STD_LOGIC;
    Dbg_TDO_7 : in STD_LOGIC;
    Dbg_TDO_INST_0_i_1_0 : in STD_LOGIC;
    Dbg_TDO_INST_0_i_1_1 : in STD_LOGIC;
    Dbg_TDO_INST_0_i_1_2 : in STD_LOGIC;
    tdo_config_word1_5 : in STD_LOGIC;
    tdo_config_word1_6 : in STD_LOGIC;
    tdo_config_word1_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized13\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized13\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized13\ is
  signal Dbg_TDO_INST_0_i_18_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_1_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_7_n_0 : STD_LOGIC;
  signal tdo_config_word1_4 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF45405555"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_1_n_0,
      I1 => Dbg_TDO_0,
      I2 => Dbg_TDO_1,
      I3 => Dbg_TDO_2(0),
      I4 => Dbg_TDO_3,
      I5 => Dbg_TDO_4,
      O => Dbg_TDO
    );
Dbg_TDO_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFC0F5"
    )
        port map (
      I0 => Dbg_TDO_5,
      I1 => Dbg_TDO_INST_0_i_7_n_0,
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(1),
      I4 => Dbg_TDO_6,
      I5 => Dbg_TDO_7,
      O => Dbg_TDO_INST_0_i_1_n_0
    );
Dbg_TDO_INST_0_i_18: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => tdo_config_word1_4,
      I1 => tdo_config_word1_5,
      I2 => Q(5),
      I3 => tdo_config_word1_6,
      I4 => Q(4),
      I5 => tdo_config_word1_7,
      O => Dbg_TDO_INST_0_i_18_n_0
    );
Dbg_TDO_INST_0_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3030101F3F3F101F"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_18_n_0,
      I1 => Dbg_TDO_INST_0_i_1_0,
      I2 => Q(7),
      I3 => Dbg_TDO_INST_0_i_1_1,
      I4 => Q(6),
      I5 => Dbg_TDO_INST_0_i_1_2,
      O => Dbg_TDO_INST_0_i_7_n_0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"2500",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized3\ is
  port (
    tdo_config_word1_13 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized3\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized3\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_13
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized3_19\ is
  port (
    tdo_config_word1_9 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized3_19\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized3_19\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized3_19\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized5\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    tdo_config_word1_13 : in STD_LOGIC;
    tdo_config_word1_14 : in STD_LOGIC;
    Q_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized5\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized5\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized5\ is
  signal tdo_config_word1_12 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => tdo_config_word1_12,
      I1 => tdo_config_word1_13,
      I2 => Q(5),
      I3 => tdo_config_word1_14,
      I4 => Q(4),
      I5 => Q_0,
      O => \Serial_Dbg_Intf.shift_count_reg[5]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"60FF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_12
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized5_20\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    tdo_config_word1_9 : in STD_LOGIC;
    tdo_config_word1_10 : in STD_LOGIC;
    tdo_config_word1_11 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized5_20\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized5_20\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized5_20\ is
  signal tdo_config_word1_8 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_21: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => tdo_config_word1_8,
      I1 => tdo_config_word1_9,
      I2 => Q(5),
      I3 => tdo_config_word1_10,
      I4 => Q(4),
      I5 => tdo_config_word1_11,
      O => \Serial_Dbg_Intf.shift_count_reg[5]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"60FF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized7\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[4]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 6 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    tdo_config_word1_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized7\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7\ is
  signal tdo_config_word1_1 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_19: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E2000000"
    )
        port map (
      I0 => tdo_config_word1_1,
      I1 => Q(4),
      I2 => tdo_config_word1_0,
      I3 => Q(5),
      I4 => Q(6),
      O => \Serial_Dbg_Intf.shift_count_reg[4]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_17\ is
  port (
    tdo_config_word1_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_17\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_17\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_17\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_18\ is
  port (
    tdo_config_word1_11 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_18\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_18\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_18\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_11
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_21\ is
  port (
    tdo_config_word1_7 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_21\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_21\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized7_21\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized9\ is
  port (
    tdo_config_word1_10 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized9\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized9\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"6000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_10
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_MB_SRL16E__parameterized9_22\ is
  port (
    tdo_config_word1_6 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_MB_SRL16E__parameterized9_22\ : entity is "MB_SRL16E";
end \mb_design_microblaze_0_1_MB_SRL16E__parameterized9_22\;

architecture STRUCTURE of \mb_design_microblaze_0_1_MB_SRL16E__parameterized9_22\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"6000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E is
  port (
    SRL16_Sel_7 : out STD_LOGIC;
    which_pc : out STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_7 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E is
  signal \Use_unisim.MB_SRL16CE_I1_i_2__0_n_0\ : STD_LOGIC;
  signal \Use_unisim.MB_SRL16CE_I1_n_1\ : STD_LOGIC;
  signal \^which_pc\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
  which_pc(0) <= \^which_pc\(0);
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \^which_pc\(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_7,
      Q => SRL16_Sel_7,
      Q15 => \Use_unisim.MB_SRL16CE_I1_n_1\
    );
\Use_unisim.MB_SRL16CE_I1_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(5),
      I3 => Dbg_Reg_En(4),
      I4 => \Use_unisim.MB_SRL16CE_I1_i_2__0_n_0\,
      O => \^which_pc\(0)
    );
\Use_unisim.MB_SRL16CE_I1_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => Dbg_Reg_En(0),
      I1 => Dbg_Reg_En(2),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      O => \Use_unisim.MB_SRL16CE_I1_i_2__0_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_30 is
  port (
    SRL16_Sel_6 : out STD_LOGIC;
    SRL16_MC15_7 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_6 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_30 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_30;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_30 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_6,
      Q => SRL16_Sel_6,
      Q15 => SRL16_MC15_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_32 is
  port (
    SRL16_Sel_5 : out STD_LOGIC;
    SRL16_MC15_6 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_5 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_32 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_32;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_32 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_5,
      Q => SRL16_Sel_5,
      Q15 => SRL16_MC15_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_34 is
  port (
    SRL16_Sel_4 : out STD_LOGIC;
    SRL16_MC15_5 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_4 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_34 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_34;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_34 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_4,
      Q => SRL16_Sel_4,
      Q15 => SRL16_MC15_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_36 is
  port (
    SRL16_Sel_3 : out STD_LOGIC;
    SRL16_MC15_4 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_3 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_36 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_36;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_36 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_3,
      Q => SRL16_Sel_3,
      Q15 => SRL16_MC15_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_38 is
  port (
    SRL16_Sel_2 : out STD_LOGIC;
    SRL16_MC15_3 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_2 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_38 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_38;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_38 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_2,
      Q => SRL16_Sel_2,
      Q15 => SRL16_MC15_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_40 is
  port (
    SRL16_Sel_1 : out STD_LOGIC;
    SRL16_MC15_2 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_40 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_40;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_40 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_1,
      Q => SRL16_Sel_1,
      Q15 => SRL16_MC15_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_42 is
  port (
    SRL16_Sel_0 : out STD_LOGIC;
    SRL16_MC15_1 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_42 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_42;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_42 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => Dbg_TDI,
      Q => SRL16_Sel_0,
      Q15 => SRL16_MC15_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_44 is
  port (
    SRL16_Sel_7 : out STD_LOGIC;
    which_pc : out STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_7 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_44 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_44;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_44 is
  signal \Use_unisim.MB_SRL16CE_I1_i_2_n_0\ : STD_LOGIC;
  signal \Use_unisim.MB_SRL16CE_I1_n_1\ : STD_LOGIC;
  signal \^which_pc\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
  which_pc(0) <= \^which_pc\(0);
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \^which_pc\(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_7,
      Q => SRL16_Sel_7,
      Q15 => \Use_unisim.MB_SRL16CE_I1_n_1\
    );
\Use_unisim.MB_SRL16CE_I1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000004"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(5),
      I3 => Dbg_Reg_En(4),
      I4 => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\,
      O => \^which_pc\(0)
    );
\Use_unisim.MB_SRL16CE_I1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(0),
      I1 => Dbg_Reg_En(2),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(7),
      O => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_46 is
  port (
    SRL16_Sel_6 : out STD_LOGIC;
    SRL16_MC15_7 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_6 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_46 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_46;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_46 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_6,
      Q => SRL16_Sel_6,
      Q15 => SRL16_MC15_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_48 is
  port (
    SRL16_Sel_5 : out STD_LOGIC;
    SRL16_MC15_6 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_5 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_48 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_48;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_48 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_5,
      Q => SRL16_Sel_5,
      Q15 => SRL16_MC15_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_50 is
  port (
    SRL16_Sel_4 : out STD_LOGIC;
    SRL16_MC15_5 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_4 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_50 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_50;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_50 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_4,
      Q => SRL16_Sel_4,
      Q15 => SRL16_MC15_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_52 is
  port (
    SRL16_Sel_3 : out STD_LOGIC;
    SRL16_MC15_4 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_3 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_52 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_52;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_52 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_3,
      Q => SRL16_Sel_3,
      Q15 => SRL16_MC15_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_54 is
  port (
    SRL16_Sel_2 : out STD_LOGIC;
    SRL16_MC15_3 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_2 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_54 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_54;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_54 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_2,
      Q => SRL16_Sel_2,
      Q15 => SRL16_MC15_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_56 is
  port (
    SRL16_Sel_1 : out STD_LOGIC;
    SRL16_MC15_2 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    SRL16_MC15_1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_56 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_56;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_56 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => SRL16_MC15_1,
      Q => SRL16_Sel_1,
      Q15 => SRL16_MC15_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MB_SRLC16E_58 is
  port (
    SRL16_Sel_0 : out STD_LOGIC;
    SRL16_MC15_1 : out STD_LOGIC;
    which_pc : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MB_SRLC16E_58 : entity is "MB_SRLC16E";
end mb_design_microblaze_0_1_MB_SRLC16E_58;

architecture STRUCTURE of mb_design_microblaze_0_1_MB_SRLC16E_58 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => which_pc(0),
      CLK => Dbg_Clk,
      D => Dbg_TDI,
      Q => SRL16_Sel_0,
      Q15 => SRL16_MC15_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Shift_Logic_Module_gti is
  port (
    \out\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Shift_Logic_Module_gti : entity is "Shift_Logic_Module_gti";
end mb_design_microblaze_0_1_Shift_Logic_Module_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Shift_Logic_Module_gti is
  signal sign_byte : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sign_byte : signal is "true";
  signal sign_doublet : STD_LOGIC;
  attribute RTL_KEEP of sign_doublet : signal is "true";
begin
  \EX_Op1_reg[16]\ <= sign_doublet;
  \out\ <= sign_byte;
  sign_byte <= in0;
  sign_doublet <= \Using_FPGA.Native\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    reset_temp : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_temp,
      Q => sync(1),
      R => '0'
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_0 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : out STD_LOGIC;
    sleep_reset_mode_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_0 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_0;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_0 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
sleep_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => sync(2),
      I1 => sleep_reset_mode_reg(0),
      O => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_1 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_1 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_1;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_1 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_60 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    normal_stop_cmd_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_60 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_60;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_60 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.normal_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => normal_stop_cmd_i0
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_61 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    force_stop_cmd_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_61 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_61;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_61 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.force_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => force_stop_cmd_i0
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_62 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    start_single_cmd0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Serial_Dbg_Intf.trig_in_1_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_62 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_62;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_62 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.start_single_cmd_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(1),
      O => start_single_cmd0
    );
\Serial_Dbg_Intf.trig_in_1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BABBAAAABABBBABB"
    )
        port map (
      I0 => sync_reset,
      I1 => Dbg_Trig_In(0),
      I2 => Q(1),
      I3 => sync(2),
      I4 => Q(0),
      I5 => \Serial_Dbg_Intf.trig_in_1_reg\(0),
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_63 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_MSR0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_63 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_63;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_63 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_MSR_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => read_register_MSR0
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_64 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_PC0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_64 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_64;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_64 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_PC_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => read_register_PC0
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_65 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_65 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_65;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_65 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_66 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_debug_ready_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_66 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_66;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_66 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.if_debug_ready_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => if_debug_ready_i0
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_67 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    continue_from_brk0 : out STD_LOGIC;
    \Serial_Dbg_Intf.sample_synced_1_reg[7]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Serial_Dbg_Intf.continue_from_brk_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_67 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_67;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_67 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.continue_from_brk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => Q(0),
      I1 => sync(2),
      I2 => Q(1),
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg\(0),
      O => continue_from_brk0
    );
\Serial_Dbg_Intf.trig_ack_out_1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00D4"
    )
        port map (
      I0 => Q(0),
      I1 => sync(2),
      I2 => Dbg_Trig_Ack_Out(0),
      I3 => sync_reset,
      O => \Serial_Dbg_Intf.sample_synced_1_reg[7]\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_68 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Serial_Dbg_Intf.trig_in_1_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_68 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_68;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_68 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.trig_in_1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0D"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      I2 => \Serial_Dbg_Intf.trig_in_1_reg\,
      O => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_bit_69 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_bit_69 : entity is "mb_sync_bit";
end mb_design_microblaze_0_1_mb_sync_bit_69;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_bit_69 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_brki_hit : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => dbg_brki_hit,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_23\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Pause : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_23\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_23\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_23\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => Pause,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_24\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    running_clock : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_24\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_24\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_24\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => running_clock,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_25\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Sleep : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_25\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_25\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_25\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => Sleep,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_26\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Single_Synchronize.use_async_reset.sync_reg_0\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_26\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_26\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_26\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => \Single_Synchronize.use_async_reset.sync_reg_0\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_70\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_70\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_70\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_70\ is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  AR(0) <= \^ar\(0);
\Serial_Dbg_Intf.New_Instr_Reg_TCK[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      O => \^ar\(0)
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \^ar\(0),
      D => Q(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_71\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    AR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_71\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_71\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized2_71\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => AR(0),
      D => Q(0),
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized4\ is
  port (
    \Serial_Dbg_Intf.continue_from_brk_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Clk : in STD_LOGIC;
    dbg_continue_i_reg : in STD_LOGIC;
    dbg_continue_i_reg_0 : in STD_LOGIC;
    dbg_continue_i_reg_1 : in STD_LOGIC;
    dbg_continue_i_reg_2 : in STD_LOGIC;
    start_single_cmd : in STD_LOGIC;
    of_pause : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized4\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4\ is
  signal dbg_continue_i_i_2_n_0 : STD_LOGIC;
  signal dbg_wakeup_synced : STD_LOGIC;
begin
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => LOCKSTEP_Master_Out(1),
      Q => dbg_wakeup_synced,
      R => sync_reset
    );
dbg_continue_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF00FF00FE00"
    )
        port map (
      I0 => dbg_continue_i_reg_1,
      I1 => dbg_continue_i_reg_2,
      I2 => start_single_cmd,
      I3 => of_pause,
      I4 => dbg_continue_i_i_2_n_0,
      I5 => LOCKSTEP_Master_Out(0),
      O => \Serial_Dbg_Intf.continue_from_brk_reg\
    );
dbg_continue_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => dbg_continue_i_reg,
      I1 => LOCKSTEP_Master_Out(2),
      I2 => dbg_continue_i_reg_0,
      I3 => dbg_wakeup_synced,
      O => dbg_continue_i_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_27\ is
  port (
    trig_ack_in_0_synced : out STD_LOGIC;
    \Single_Synchronize.use_sync_reset.sync_reg_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    trig_ack_in_0_synced_1 : in STD_LOGIC;
    mb_halted_1 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_27\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_27\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_27\ is
  signal \^trig_ack_in_0_synced\ : STD_LOGIC;
begin
  trig_ack_in_0_synced <= \^trig_ack_in_0_synced\;
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => \^trig_ack_in_0_synced\,
      R => sync_reset
    );
trig_in_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000DDDD0D00"
    )
        port map (
      I0 => \^trig_ack_in_0_synced\,
      I1 => trig_ack_in_0_synced_1,
      I2 => mb_halted_1,
      I3 => D(0),
      I4 => Dbg_Trig_In(0),
      I5 => sync_reset,
      O => \Single_Synchronize.use_sync_reset.sync_reg_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_28\ is
  port (
    trig_out_0_synced : out STD_LOGIC;
    \Performance_Debug_Control.trig_out_0_synced_1_reg\ : out STD_LOGIC;
    \Performance_Debug_Control.dbg_stop_i_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    trig_out_0_synced_1 : in STD_LOGIC;
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.dbg_stop_i_reg_0\ : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    dbg_stop_1 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_stop_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_28\ : entity is "mb_sync_bit";
end \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_28\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_bit__parameterized4_28\ is
  signal dbg_stop_i1 : STD_LOGIC;
  signal \^trig_out_0_synced\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_stop_i_i_2\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.trig_ack_out_0_i_1\ : label is "soft_lutpair110";
begin
  trig_out_0_synced <= \^trig_out_0_synced\;
\Performance_Debug_Control.dbg_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAFFAAAE"
    )
        port map (
      I0 => \Performance_Debug_Control.dbg_stop_i_reg_0\,
      I1 => Dbg_Stop,
      I2 => dbg_stop_1,
      I3 => D(0),
      I4 => dbg_stop_i1,
      I5 => dbg_stop_i,
      O => \Performance_Debug_Control.dbg_stop_i_reg\
    );
\Performance_Debug_Control.dbg_stop_i_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^trig_out_0_synced\,
      I1 => trig_out_0_synced_1,
      O => dbg_stop_i1
    );
\Performance_Debug_Control.trig_ack_out_0_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00D4"
    )
        port map (
      I0 => trig_out_0_synced_1,
      I1 => \^trig_out_0_synced\,
      I2 => Dbg_Trig_Ack_Out(0),
      I3 => sync_reset,
      O => \Performance_Debug_Control.trig_out_0_synced_1_reg\
    );
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => \^trig_out_0_synced\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_read_data_mux is
  port (
    wb_databus_read_data : out STD_LOGIC_VECTOR ( 0 to 31 );
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_dext_Data_Strobe : in STD_LOGIC;
    \Trace_New_Reg_Value[16]_INST_0_i_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_read_data_mux : entity is "read_data_mux";
end mb_design_microblaze_0_1_read_data_mux;

architecture STRUCTURE of mb_design_microblaze_0_1_read_data_mux is
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_3\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_4\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_5\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_6\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_3\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_4\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_5\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_6\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_3\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_4\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_5\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_6\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_3\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_4\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_5\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_6\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_3\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_4\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_5\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_6\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_3\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_4\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_5\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_6\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_3\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_4\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_5\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_6\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_3\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_4\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_5\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_6\ : label is "soft_lutpair128";
begin
\Trace_New_Reg_Value[16]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(23),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(23),
      O => wb_databus_read_data(8)
    );
\Trace_New_Reg_Value[16]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(31),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(31),
      O => wb_databus_read_data(0)
    );
\Trace_New_Reg_Value[16]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(7),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(7),
      O => wb_databus_read_data(24)
    );
\Trace_New_Reg_Value[16]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(15),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(15),
      O => wb_databus_read_data(16)
    );
\Trace_New_Reg_Value[17]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(22),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(22),
      O => wb_databus_read_data(9)
    );
\Trace_New_Reg_Value[17]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(30),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(30),
      O => wb_databus_read_data(1)
    );
\Trace_New_Reg_Value[17]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(6),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(6),
      O => wb_databus_read_data(25)
    );
\Trace_New_Reg_Value[17]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(14),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(14),
      O => wb_databus_read_data(17)
    );
\Trace_New_Reg_Value[18]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(21),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(21),
      O => wb_databus_read_data(10)
    );
\Trace_New_Reg_Value[18]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(29),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(29),
      O => wb_databus_read_data(2)
    );
\Trace_New_Reg_Value[18]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(5),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(5),
      O => wb_databus_read_data(26)
    );
\Trace_New_Reg_Value[18]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(13),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(13),
      O => wb_databus_read_data(18)
    );
\Trace_New_Reg_Value[19]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(20),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(20),
      O => wb_databus_read_data(11)
    );
\Trace_New_Reg_Value[19]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(28),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(28),
      O => wb_databus_read_data(3)
    );
\Trace_New_Reg_Value[19]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(4),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(4),
      O => wb_databus_read_data(27)
    );
\Trace_New_Reg_Value[19]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(12),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(12),
      O => wb_databus_read_data(19)
    );
\Trace_New_Reg_Value[20]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(19),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(19),
      O => wb_databus_read_data(12)
    );
\Trace_New_Reg_Value[20]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(27),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(27),
      O => wb_databus_read_data(4)
    );
\Trace_New_Reg_Value[20]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(3),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(3),
      O => wb_databus_read_data(28)
    );
\Trace_New_Reg_Value[20]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(11),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(11),
      O => wb_databus_read_data(20)
    );
\Trace_New_Reg_Value[21]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(18),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(18),
      O => wb_databus_read_data(13)
    );
\Trace_New_Reg_Value[21]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(26),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(26),
      O => wb_databus_read_data(5)
    );
\Trace_New_Reg_Value[21]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(2),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(2),
      O => wb_databus_read_data(29)
    );
\Trace_New_Reg_Value[21]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(10),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(10),
      O => wb_databus_read_data(21)
    );
\Trace_New_Reg_Value[22]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(17),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(17),
      O => wb_databus_read_data(14)
    );
\Trace_New_Reg_Value[22]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(25),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(25),
      O => wb_databus_read_data(6)
    );
\Trace_New_Reg_Value[22]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(1),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(1),
      O => wb_databus_read_data(30)
    );
\Trace_New_Reg_Value[22]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(9),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(9),
      O => wb_databus_read_data(22)
    );
\Trace_New_Reg_Value[23]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(16),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(16),
      O => wb_databus_read_data(15)
    );
\Trace_New_Reg_Value[23]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(24),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(24),
      O => wb_databus_read_data(7)
    );
\Trace_New_Reg_Value[23]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(0),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(0),
      O => wb_databus_read_data(31)
    );
\Trace_New_Reg_Value[23]_INST_0_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(8),
      I1 => wb_dext_Data_Strobe,
      I2 => \Trace_New_Reg_Value[16]_INST_0_i_1\(8),
      O => wb_databus_read_data(23)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[10]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[10]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_749
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[10]\(1 downto 0) => \MEM_DataBus_Addr_reg[10]\(1 downto 0),
      \MEM_DataBus_Addr_reg[10]_0\(0) => \MEM_DataBus_Addr_reg[10]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_750
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[10]\ => \EX_Branch_CMP_Op1_reg[10]\,
      \EX_Branch_CMP_Op1_reg[10]_0\(0) => \EX_Branch_CMP_Op1_reg[10]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_660 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[11]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_660 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_660;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_660 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_747
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[11]\(1 downto 0) => \MEM_DataBus_Addr_reg[11]\(1 downto 0),
      \MEM_DataBus_Addr_reg[11]_0\(0) => \MEM_DataBus_Addr_reg[11]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_748
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[11]\ => \EX_Branch_CMP_Op1_reg[11]\,
      \EX_Branch_CMP_Op1_reg[11]_0\(0) => \EX_Branch_CMP_Op1_reg[11]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_661 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[12]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[12]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_661 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_661;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_661 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_745
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[12]\(1 downto 0) => \MEM_DataBus_Addr_reg[12]\(1 downto 0),
      \MEM_DataBus_Addr_reg[12]_0\(0) => \MEM_DataBus_Addr_reg[12]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_746
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[12]\ => \EX_Branch_CMP_Op1_reg[12]\,
      \EX_Branch_CMP_Op1_reg[12]_0\(0) => \EX_Branch_CMP_Op1_reg[12]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_662 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[13]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[13]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_662 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_662;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_662 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_743
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[13]\(1 downto 0) => \MEM_DataBus_Addr_reg[13]\(1 downto 0),
      \MEM_DataBus_Addr_reg[13]_0\(0) => \MEM_DataBus_Addr_reg[13]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_744
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[13]\ => \EX_Branch_CMP_Op1_reg[13]\,
      \EX_Branch_CMP_Op1_reg[13]_0\(0) => \EX_Branch_CMP_Op1_reg[13]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_663 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[14]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[14]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_663 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_663;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_663 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_741
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[14]\(1 downto 0) => \MEM_DataBus_Addr_reg[14]\(1 downto 0),
      \MEM_DataBus_Addr_reg[14]_0\(0) => \MEM_DataBus_Addr_reg[14]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_742
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[14]\ => \EX_Branch_CMP_Op1_reg[14]\,
      \EX_Branch_CMP_Op1_reg[14]_0\(0) => \EX_Branch_CMP_Op1_reg[14]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_664 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[15]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_664 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_664;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_664 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_739
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[15]\(1 downto 0) => \MEM_DataBus_Addr_reg[15]\(1 downto 0),
      \MEM_DataBus_Addr_reg[15]_0\(0) => \MEM_DataBus_Addr_reg[15]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_740
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_665 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[16]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_665 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_665;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_665 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_737
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[16]\(1 downto 0) => \MEM_DataBus_Addr_reg[16]\(1 downto 0),
      \MEM_DataBus_Addr_reg[16]_0\(0) => \MEM_DataBus_Addr_reg[16]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_738
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_666 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_666 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_666;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_666 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_735
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[17]\(1 downto 0) => \MEM_DataBus_Addr_reg[17]\(1 downto 0),
      \MEM_DataBus_Addr_reg[17]_0\(0) => \MEM_DataBus_Addr_reg[17]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_736
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_667 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[18]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_667 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_667;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_667 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_733
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[18]\(1 downto 0) => \MEM_DataBus_Addr_reg[18]\(1 downto 0),
      \MEM_DataBus_Addr_reg[18]_0\(0) => \MEM_DataBus_Addr_reg[18]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_734
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_668 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[19]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_668 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_668;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_668 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_731
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[19]\(1 downto 0) => \MEM_DataBus_Addr_reg[19]\(1 downto 0),
      \MEM_DataBus_Addr_reg[19]_0\(0) => \MEM_DataBus_Addr_reg[19]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_732
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_669 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[1]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_669 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_669;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_669 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_729
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[1]\(1 downto 0) => \MEM_DataBus_Addr_reg[1]\(1 downto 0),
      \MEM_DataBus_Addr_reg[1]_0\(0) => \MEM_DataBus_Addr_reg[1]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_730
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[1]\ => \EX_Branch_CMP_Op1_reg[1]\,
      \EX_Branch_CMP_Op1_reg[1]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_670 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[20]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_670 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_670;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_670 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_727
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[20]\(1 downto 0) => \MEM_DataBus_Addr_reg[20]\(1 downto 0),
      \MEM_DataBus_Addr_reg[20]_0\(0) => \MEM_DataBus_Addr_reg[20]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_728
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_671 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[21]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_671 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_671;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_671 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_725
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[21]\(1 downto 0) => \MEM_DataBus_Addr_reg[21]\(1 downto 0),
      \MEM_DataBus_Addr_reg[21]_0\(0) => \MEM_DataBus_Addr_reg[21]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_726
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_672 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[22]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_672 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_672;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_672 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_723
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[22]\(1 downto 0) => \MEM_DataBus_Addr_reg[22]\(1 downto 0),
      \MEM_DataBus_Addr_reg[22]_0\(0) => \MEM_DataBus_Addr_reg[22]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_724
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_673 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[23]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_673 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_673;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_673 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_721
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[23]\(1 downto 0) => \MEM_DataBus_Addr_reg[23]\(1 downto 0),
      \MEM_DataBus_Addr_reg[23]_0\(0) => \MEM_DataBus_Addr_reg[23]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_722
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_674 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[24]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_674 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_674;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_674 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_719
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[24]\(1 downto 0) => \MEM_DataBus_Addr_reg[24]\(1 downto 0),
      \MEM_DataBus_Addr_reg[24]_0\(0) => \MEM_DataBus_Addr_reg[24]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_720
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_675 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_675 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_675;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_675 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_717
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[25]\(1 downto 0) => \MEM_DataBus_Addr_reg[25]\(1 downto 0),
      \MEM_DataBus_Addr_reg[25]_0\(0) => \MEM_DataBus_Addr_reg[25]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_718
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_676 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[26]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_676 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_676;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_676 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_715
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[26]\(1 downto 0) => \MEM_DataBus_Addr_reg[26]\(1 downto 0),
      \MEM_DataBus_Addr_reg[26]_0\(0) => \MEM_DataBus_Addr_reg[26]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_716
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_677 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_677 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_677;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_677 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_713
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[27]\(1 downto 0) => \MEM_DataBus_Addr_reg[27]\(1 downto 0),
      \MEM_DataBus_Addr_reg[27]_0\(0) => \MEM_DataBus_Addr_reg[27]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_714
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_678 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[28]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_678 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_678;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_678 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_711
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[28]\(1 downto 0) => \MEM_DataBus_Addr_reg[28]\(1 downto 0),
      \MEM_DataBus_Addr_reg[28]_0\(0) => \MEM_DataBus_Addr_reg[28]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_712
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_679 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_679 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_679;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_679 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_709
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[29]\(1 downto 0) => \MEM_DataBus_Addr_reg[29]\(1 downto 0),
      \MEM_DataBus_Addr_reg[29]_0\(0) => \MEM_DataBus_Addr_reg[29]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_710
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_680 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[2]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_680 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_680;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_680 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_707
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[2]\(1 downto 0) => \MEM_DataBus_Addr_reg[2]\(1 downto 0),
      \MEM_DataBus_Addr_reg[2]_0\(0) => \MEM_DataBus_Addr_reg[2]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_708
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[2]\ => \EX_Branch_CMP_Op1_reg[2]\,
      \EX_Branch_CMP_Op1_reg[2]_0\(0) => \EX_Branch_CMP_Op1_reg[2]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_681 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_EAR_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_EAR_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_681 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_681;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_681 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_705
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      \mem_EAR_reg[30]\(1 downto 0) => \mem_EAR_reg[30]\(1 downto 0),
      \mem_EAR_reg[30]_0\(0) => \mem_EAR_reg[30]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_706
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_682 is
  port (
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_EAR_reg[31]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_EAR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_682 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_682;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_682 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_703
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      \mem_EAR_reg[31]\(1 downto 0) => \mem_EAR_reg[31]\(1 downto 0),
      \mem_EAR_reg[31]_0\(0) => \mem_EAR_reg[31]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_704
     port map (
      A1(0) => A1(0),
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_683 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[3]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[3]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_683 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_683;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_683 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_701
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[3]\(1 downto 0) => \MEM_DataBus_Addr_reg[3]\(1 downto 0),
      \MEM_DataBus_Addr_reg[3]_0\(0) => \MEM_DataBus_Addr_reg[3]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_702
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[3]\ => \EX_Branch_CMP_Op1_reg[3]\,
      \EX_Branch_CMP_Op1_reg[3]_0\(0) => \EX_Branch_CMP_Op1_reg[3]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_684 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[4]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[4]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_684 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_684;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_684 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_699
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[4]\(1 downto 0) => \MEM_DataBus_Addr_reg[4]\(1 downto 0),
      \MEM_DataBus_Addr_reg[4]_0\(0) => \MEM_DataBus_Addr_reg[4]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_700
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[4]\ => \EX_Branch_CMP_Op1_reg[4]\,
      \EX_Branch_CMP_Op1_reg[4]_0\(0) => \EX_Branch_CMP_Op1_reg[4]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_685 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[5]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[5]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_685 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_685;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_685 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_697
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[5]\(1 downto 0) => \MEM_DataBus_Addr_reg[5]\(1 downto 0),
      \MEM_DataBus_Addr_reg[5]_0\(0) => \MEM_DataBus_Addr_reg[5]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_698
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[5]\ => \EX_Branch_CMP_Op1_reg[5]\,
      \EX_Branch_CMP_Op1_reg[5]_0\(0) => \EX_Branch_CMP_Op1_reg[5]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_686 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[6]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_686 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_686;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_686 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_695
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[6]\(1 downto 0) => \MEM_DataBus_Addr_reg[6]\(1 downto 0),
      \MEM_DataBus_Addr_reg[6]_0\(0) => \MEM_DataBus_Addr_reg[6]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_696
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[6]\ => \EX_Branch_CMP_Op1_reg[6]\,
      \EX_Branch_CMP_Op1_reg[6]_0\(0) => \EX_Branch_CMP_Op1_reg[6]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_687 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[7]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[7]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_687 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_687;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_687 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_693
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[7]\(1 downto 0) => \MEM_DataBus_Addr_reg[7]\(1 downto 0),
      \MEM_DataBus_Addr_reg[7]_0\(0) => \MEM_DataBus_Addr_reg[7]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_694
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[7]\ => \EX_Branch_CMP_Op1_reg[7]\,
      \EX_Branch_CMP_Op1_reg[7]_0\(0) => \EX_Branch_CMP_Op1_reg[7]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_688 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[8]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[8]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_688 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_688;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_688 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2_691
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[8]\(1 downto 0) => \MEM_DataBus_Addr_reg[8]\(1 downto 0),
      \MEM_DataBus_Addr_reg[8]_0\(0) => \MEM_DataBus_Addr_reg[8]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_692
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[8]\ => \EX_Branch_CMP_Op1_reg[8]\,
      \EX_Branch_CMP_Op1_reg[8]_0\(0) => \EX_Branch_CMP_Op1_reg[8]_0\(0),
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => LO,
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU_Bit_689 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[9]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \MEM_DataBus_Addr_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU_Bit_689 : entity is "ALU_Bit";
end mb_design_microblaze_0_1_ALU_Bit_689;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU_Bit_689 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.mb_design_microblaze_0_1_MB_LUT6_2
     port map (
      DI => op2_is_1,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \MEM_DataBus_Addr_reg[9]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[9]_0\(0) => \MEM_DataBus_Addr_reg[9]_0\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_690
     port map (
      A1(0) => A1(0),
      D(0) => D(0),
      DI => op2_is_1,
      \EX_Branch_CMP_Op1_reg[9]\ => \EX_Branch_CMP_Op1_reg[9]\,
      \EX_Branch_CMP_Op1_reg[9]_0\(0) => \EX_Branch_CMP_Op1_reg[9]_0\(0),
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      S => alu_AddSub,
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_ALU_Bit__parameterized2\ is
  port (
    \EX_Op2_reg[0]\ : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    I2 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_ALU_Bit__parameterized2\ : entity is "ALU_Bit";
end \mb_design_microblaze_0_1_ALU_Bit__parameterized2\;

architecture STRUCTURE of \mb_design_microblaze_0_1_ALU_Bit__parameterized2\ is
  signal alu_AddSub : STD_LOGIC;
  signal alu_AddSub_1 : STD_LOGIC;
  signal invert_result : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_2\ <= lopt_4;
  lopt_2 <= op2_is_1;
  lopt_3 <= alu_AddSub;
\Last_Bit.I_ALU_LUT_2\: entity work.mb_design_microblaze_0_1_MB_LUT4
     port map (
      I2 => I2,
      \MEM_DataBus_Addr_reg[0]\(0) => \MEM_DataBus_Addr_reg[0]\(1),
      Q(0) => Q(0),
      S => alu_AddSub,
      alu_AddSub_1 => alu_AddSub_1
    );
\Last_Bit.I_ALU_LUT_V5\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized12\
     port map (
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(1 downto 0) => \MEM_DataBus_Addr_reg[0]\(1 downto 0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      alu_AddSub_1 => alu_AddSub_1
    );
\Last_Bit.MULT_AND_I\: entity work.mb_design_microblaze_0_1_MB_MULT_AND
     port map (
      DI => op2_is_1,
      I0 => I0,
      \Using_FPGA.Native_I1\(0) => \MEM_DataBus_Addr_reg[0]\(1)
    );
\Last_Bit.MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_751
     port map (
      A1(0) => A1(0),
      CI => invert_result,
      DI => op2_is_1,
      \EX_Op2_reg[0]\ => \EX_Op2_reg[0]\,
      S => alu_AddSub,
      lopt => lopt_1,
      lopt_1 => \^lopt_2\
    );
\Last_Bit.Pre_MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_752
     port map (
      CI => invert_result,
      LO => LO,
      S => S,
      ex_unsigned_op => ex_unsigned_op,
      lopt => lopt
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Barrel_Shifter_gti is
  port (
    MEM_Barrel_Result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Use_HW_BS.Using_BitField.mem_mask1_reg[30]_0\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\ : in STD_LOGIC;
    ex_void_bit : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_left_shift_i : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Barrel_Shifter_gti : entity is "Barrel_Shifter_gti";
end mb_design_microblaze_0_1_Barrel_Shifter_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Barrel_Shifter_gti is
  signal I0 : STD_LOGIC;
  signal I00_in : STD_LOGIC;
  signal I010_in : STD_LOGIC;
  signal I011_in : STD_LOGIC;
  signal I012_in : STD_LOGIC;
  signal I013_in : STD_LOGIC;
  signal I014_in : STD_LOGIC;
  signal I015_in : STD_LOGIC;
  signal I016_in : STD_LOGIC;
  signal I017_in : STD_LOGIC;
  signal I018_in : STD_LOGIC;
  signal I019_in : STD_LOGIC;
  signal I01_in : STD_LOGIC;
  signal I020_in : STD_LOGIC;
  signal I021_in : STD_LOGIC;
  signal I022_in : STD_LOGIC;
  signal I023_in : STD_LOGIC;
  signal I024_in : STD_LOGIC;
  signal I025_in : STD_LOGIC;
  signal I026_in : STD_LOGIC;
  signal I027_in : STD_LOGIC;
  signal I028_in : STD_LOGIC;
  signal I029_in : STD_LOGIC;
  signal I02_in : STD_LOGIC;
  signal I03_in : STD_LOGIC;
  signal I04_in : STD_LOGIC;
  signal I05_in : STD_LOGIC;
  signal I06_in : STD_LOGIC;
  signal I07_in : STD_LOGIC;
  signal I08_in : STD_LOGIC;
  signal I09_in : STD_LOGIC;
  signal I1 : STD_LOGIC;
  signal I3 : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal I5 : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[10].mem_Rd_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[11].mem_Rd_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[12].mem_Rd_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[13].mem_Rd_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[14].mem_Rd_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[15].mem_Rd_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[16].mem_Rd_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[17].mem_Rd_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[18].mem_Rd_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[19].mem_Rd_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[1].mem_Rd_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[20].mem_Rd_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[21].mem_Rd_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[22].mem_Rd_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[23].mem_Rd_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[24].mem_Rd_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[25].mem_Rd_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[26].mem_Rd_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[27].mem_Rd_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[28].mem_Rd_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[29].mem_Rd_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[2].mem_Rd_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[30].mem_Rd_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[31].mem_Rd_reg_n_0_[31]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[3].mem_Rd_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[4].mem_Rd_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[5].mem_Rd_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[6].mem_Rd_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[7].mem_Rd_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[8].mem_Rd_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.Gen_Bits[9].mem_Rd_reg_n_0_[9]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\ : STD_LOGIC;
  signal mask_reset : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of mask_reset : signal is std.standard.true;
  signal mem_left_shift : STD_LOGIC;
  signal mem_mux3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_shift16_8 : STD_LOGIC_VECTOR ( 0 to 1 );
  signal mem_void_bit : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__0\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__10\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__11\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__12\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__13\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__14\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__2\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__3\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__4\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__5\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__6\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__7\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__8\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__9\ : label is "soft_lutpair1";
begin
  mask_reset <= \Use_HW_BS.Using_BitField.mem_mask1_reg[30]_0\;
\Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(31),
      Q => I3,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[10].mem_Rd_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[10].mem_Rd_reg_n_0_[10]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[11].mem_Rd_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[11].mem_Rd_reg_n_0_[11]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[12].mem_Rd_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[12].mem_Rd_reg_n_0_[12]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[13].mem_Rd_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[13].mem_Rd_reg_n_0_[13]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[14].mem_Rd_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[14].mem_Rd_reg_n_0_[14]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[15].mem_Rd_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[15].mem_Rd_reg_n_0_[15]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[16].mem_Rd_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[16].mem_Rd_reg_n_0_[16]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[17].mem_Rd_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[17].mem_Rd_reg_n_0_[17]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[18].mem_Rd_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[18].mem_Rd_reg_n_0_[18]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[19].mem_Rd_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[19].mem_Rd_reg_n_0_[19]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[1].mem_Rd_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(30),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[1].mem_Rd_reg_n_0_[1]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[20].mem_Rd_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[20].mem_Rd_reg_n_0_[20]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[21].mem_Rd_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[21].mem_Rd_reg_n_0_[21]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[22].mem_Rd_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[22].mem_Rd_reg_n_0_[22]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[23].mem_Rd_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[23].mem_Rd_reg_n_0_[23]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[24].mem_Rd_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[24].mem_Rd_reg_n_0_[24]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[25].mem_Rd_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[25].mem_Rd_reg_n_0_[25]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[26].mem_Rd_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[26].mem_Rd_reg_n_0_[26]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[27].mem_Rd_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[27].mem_Rd_reg_n_0_[27]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[28].mem_Rd_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[28].mem_Rd_reg_n_0_[28]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[29].mem_Rd_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[29].mem_Rd_reg_n_0_[29]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[2].mem_Rd_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[2].mem_Rd_reg_n_0_[2]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[30].mem_Rd_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[30].mem_Rd_reg_n_0_[30]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[31].mem_Rd_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[31].mem_Rd_reg_n_0_[31]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[3].mem_Rd_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[3].mem_Rd_reg_n_0_[3]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[4].mem_Rd_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[4].mem_Rd_reg_n_0_[4]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[5].mem_Rd_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[5].mem_Rd_reg_n_0_[5]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[6].mem_Rd_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[6].mem_Rd_reg_n_0_[6]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[7].mem_Rd_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[7].mem_Rd_reg_n_0_[7]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[8].mem_Rd_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[8].mem_Rd_reg_n_0_[8]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Gen_Bits[9].mem_Rd_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.Gen_Bits[9].mem_Rd_reg_n_0_[9]\,
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.Res_Bits[0].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26\
     port map (
      I0 => I0,
      I1 => I1,
      I3 => I3,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(0),
      Q(0) => I4,
      \WB_MEM_Result_reg[0]\(0) => I5,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[10].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_628\
     port map (
      I020_in => I020_in,
      I09_in => I09_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(10),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\,
      \WB_MEM_Result_reg[10]\ => \Use_HW_BS.Using_BitField.Gen_Bits[10].mem_Rd_reg_n_0_[10]\,
      \WB_MEM_Result_reg[10]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[11].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_629\
     port map (
      I010_in => I010_in,
      I019_in => I019_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(11),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\,
      \WB_MEM_Result_reg[11]\ => \Use_HW_BS.Using_BitField.Gen_Bits[11].mem_Rd_reg_n_0_[11]\,
      \WB_MEM_Result_reg[11]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[12].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_630\
     port map (
      I011_in => I011_in,
      I018_in => I018_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(12),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\,
      \WB_MEM_Result_reg[12]\ => \Use_HW_BS.Using_BitField.Gen_Bits[12].mem_Rd_reg_n_0_[12]\,
      \WB_MEM_Result_reg[12]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[13].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_631\
     port map (
      I012_in => I012_in,
      I017_in => I017_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(13),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\,
      \WB_MEM_Result_reg[13]\ => \Use_HW_BS.Using_BitField.Gen_Bits[13].mem_Rd_reg_n_0_[13]\,
      \WB_MEM_Result_reg[13]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[14].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_632\
     port map (
      I013_in => I013_in,
      I016_in => I016_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(14),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\,
      \WB_MEM_Result_reg[14]\ => \Use_HW_BS.Using_BitField.Gen_Bits[14].mem_Rd_reg_n_0_[14]\,
      \WB_MEM_Result_reg[14]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[15].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_633\
     port map (
      I014_in => I014_in,
      I015_in => I015_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(15),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\,
      \WB_MEM_Result_reg[15]\ => \Use_HW_BS.Using_BitField.Gen_Bits[15].mem_Rd_reg_n_0_[15]\,
      \WB_MEM_Result_reg[15]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[16].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_634\
     port map (
      I014_in => I014_in,
      I015_in => I015_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(16),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\,
      \WB_MEM_Result_reg[16]\ => \Use_HW_BS.Using_BitField.Gen_Bits[16].mem_Rd_reg_n_0_[16]\,
      \WB_MEM_Result_reg[16]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[17].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_635\
     port map (
      I013_in => I013_in,
      I016_in => I016_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(17),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\,
      \WB_MEM_Result_reg[17]\ => \Use_HW_BS.Using_BitField.Gen_Bits[17].mem_Rd_reg_n_0_[17]\,
      \WB_MEM_Result_reg[17]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[18].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_636\
     port map (
      I012_in => I012_in,
      I017_in => I017_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(18),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\,
      \WB_MEM_Result_reg[18]\ => \Use_HW_BS.Using_BitField.Gen_Bits[18].mem_Rd_reg_n_0_[18]\,
      \WB_MEM_Result_reg[18]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[19].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_637\
     port map (
      I011_in => I011_in,
      I018_in => I018_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(19),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\,
      \WB_MEM_Result_reg[19]\ => \Use_HW_BS.Using_BitField.Gen_Bits[19].mem_Rd_reg_n_0_[19]\,
      \WB_MEM_Result_reg[19]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[1].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_638\
     port map (
      I00_in => I00_in,
      I029_in => I029_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(1),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\,
      \WB_MEM_Result_reg[1]\ => \Use_HW_BS.Using_BitField.Gen_Bits[1].mem_Rd_reg_n_0_[1]\,
      \WB_MEM_Result_reg[1]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[20].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_639\
     port map (
      I010_in => I010_in,
      I019_in => I019_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(20),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\,
      \WB_MEM_Result_reg[20]\ => \Use_HW_BS.Using_BitField.Gen_Bits[20].mem_Rd_reg_n_0_[20]\,
      \WB_MEM_Result_reg[20]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[21].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_640\
     port map (
      I020_in => I020_in,
      I09_in => I09_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(21),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\,
      \WB_MEM_Result_reg[21]\ => \Use_HW_BS.Using_BitField.Gen_Bits[21].mem_Rd_reg_n_0_[21]\,
      \WB_MEM_Result_reg[21]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[22].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_641\
     port map (
      I021_in => I021_in,
      I08_in => I08_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(22),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\,
      \WB_MEM_Result_reg[22]\ => \Use_HW_BS.Using_BitField.Gen_Bits[22].mem_Rd_reg_n_0_[22]\,
      \WB_MEM_Result_reg[22]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[23].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_642\
     port map (
      I022_in => I022_in,
      I07_in => I07_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(23),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\,
      \WB_MEM_Result_reg[23]\ => \Use_HW_BS.Using_BitField.Gen_Bits[23].mem_Rd_reg_n_0_[23]\,
      \WB_MEM_Result_reg[23]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[24].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_643\
     port map (
      I023_in => I023_in,
      I06_in => I06_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(24),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\,
      \WB_MEM_Result_reg[24]\ => \Use_HW_BS.Using_BitField.Gen_Bits[24].mem_Rd_reg_n_0_[24]\,
      \WB_MEM_Result_reg[24]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[25].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_644\
     port map (
      I024_in => I024_in,
      I05_in => I05_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(25),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\,
      \WB_MEM_Result_reg[25]\ => \Use_HW_BS.Using_BitField.Gen_Bits[25].mem_Rd_reg_n_0_[25]\,
      \WB_MEM_Result_reg[25]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[26].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_645\
     port map (
      I025_in => I025_in,
      I04_in => I04_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(26),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\,
      \WB_MEM_Result_reg[26]\ => \Use_HW_BS.Using_BitField.Gen_Bits[26].mem_Rd_reg_n_0_[26]\,
      \WB_MEM_Result_reg[26]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[27].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_646\
     port map (
      I026_in => I026_in,
      I03_in => I03_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(27),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\,
      \WB_MEM_Result_reg[27]\ => \Use_HW_BS.Using_BitField.Gen_Bits[27].mem_Rd_reg_n_0_[27]\,
      \WB_MEM_Result_reg[27]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[28].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_647\
     port map (
      I027_in => I027_in,
      I02_in => I02_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(28),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\,
      \WB_MEM_Result_reg[28]\ => \Use_HW_BS.Using_BitField.Gen_Bits[28].mem_Rd_reg_n_0_[28]\,
      \WB_MEM_Result_reg[28]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[29].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_648\
     port map (
      I01_in => I01_in,
      I028_in => I028_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(29),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\,
      \WB_MEM_Result_reg[29]\ => \Use_HW_BS.Using_BitField.Gen_Bits[29].mem_Rd_reg_n_0_[29]\,
      \WB_MEM_Result_reg[29]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[2].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_649\
     port map (
      I01_in => I01_in,
      I028_in => I028_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(2),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\,
      \WB_MEM_Result_reg[2]\ => \Use_HW_BS.Using_BitField.Gen_Bits[2].mem_Rd_reg_n_0_[2]\,
      \WB_MEM_Result_reg[2]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[30].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_650\
     port map (
      I00_in => I00_in,
      I029_in => I029_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(30),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\,
      \WB_MEM_Result_reg[30]\ => \Use_HW_BS.Using_BitField.Gen_Bits[30].mem_Rd_reg_n_0_[30]\,
      \WB_MEM_Result_reg[30]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[31].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_651\
     port map (
      I0 => I0,
      I1 => I1,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(31),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\,
      \WB_MEM_Result_reg[31]\ => \Use_HW_BS.Using_BitField.Gen_Bits[31].mem_Rd_reg_n_0_[31]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[3].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_652\
     port map (
      I027_in => I027_in,
      I02_in => I02_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(3),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\,
      \WB_MEM_Result_reg[3]\ => \Use_HW_BS.Using_BitField.Gen_Bits[3].mem_Rd_reg_n_0_[3]\,
      \WB_MEM_Result_reg[3]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[4].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_653\
     port map (
      I026_in => I026_in,
      I03_in => I03_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(4),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\,
      \WB_MEM_Result_reg[4]\ => \Use_HW_BS.Using_BitField.Gen_Bits[4].mem_Rd_reg_n_0_[4]\,
      \WB_MEM_Result_reg[4]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[5].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_654\
     port map (
      I025_in => I025_in,
      I04_in => I04_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(5),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\,
      \WB_MEM_Result_reg[5]\ => \Use_HW_BS.Using_BitField.Gen_Bits[5].mem_Rd_reg_n_0_[5]\,
      \WB_MEM_Result_reg[5]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[6].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_655\
     port map (
      I024_in => I024_in,
      I05_in => I05_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(6),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\,
      \WB_MEM_Result_reg[6]\ => \Use_HW_BS.Using_BitField.Gen_Bits[6].mem_Rd_reg_n_0_[6]\,
      \WB_MEM_Result_reg[6]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[7].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_656\
     port map (
      I023_in => I023_in,
      I06_in => I06_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(7),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\,
      \WB_MEM_Result_reg[7]\ => \Use_HW_BS.Using_BitField.Gen_Bits[7].mem_Rd_reg_n_0_[7]\,
      \WB_MEM_Result_reg[7]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[8].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_657\
     port map (
      I022_in => I022_in,
      I07_in => I07_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(8),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\,
      \WB_MEM_Result_reg[8]\ => \Use_HW_BS.Using_BitField.Gen_Bits[8].mem_Rd_reg_n_0_[8]\,
      \WB_MEM_Result_reg[8]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[9].MEM_Res_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized26_658\
     port map (
      I021_in => I021_in,
      I08_in => I08_in,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(9),
      Q(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\,
      \WB_MEM_Result_reg[9]\ => \Use_HW_BS.Using_BitField.Gen_Bits[9].mem_Rd_reg_n_0_[9]\,
      \WB_MEM_Result_reg[9]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(31),
      Q => I4,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[10]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[11]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[12]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[13]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[14]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[15]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[16]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[17]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[18]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[19]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(30),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[20]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[21]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[22]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[23]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[24]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[25]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[26]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[27]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[28]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[29]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[30]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[31]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[4]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[5]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[6]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[7]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[8]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[9]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(30),
      Q => I5,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\,
      R => mask_reset
    );
\Use_HW_BS.mem_left_shift_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => ex_left_shift_i,
      Q => mem_left_shift,
      S => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(31),
      Q => mem_mux3(0),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(21),
      Q => mem_mux3(10),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(20),
      Q => mem_mux3(11),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(19),
      Q => mem_mux3(12),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(18),
      Q => mem_mux3(13),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(17),
      Q => mem_mux3(14),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(16),
      Q => mem_mux3(15),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(15),
      Q => mem_mux3(16),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(14),
      Q => mem_mux3(17),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(13),
      Q => mem_mux3(18),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(12),
      Q => mem_mux3(19),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(30),
      Q => mem_mux3(1),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(11),
      Q => mem_mux3(20),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(10),
      Q => mem_mux3(21),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(9),
      Q => mem_mux3(22),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(8),
      Q => mem_mux3(23),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(7),
      Q => mem_mux3(24),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(6),
      Q => mem_mux3(25),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(5),
      Q => mem_mux3(26),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(4),
      Q => mem_mux3(27),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(3),
      Q => mem_mux3(28),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(2),
      Q => mem_mux3(29),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(29),
      Q => mem_mux3(2),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(1),
      Q => mem_mux3(30),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(0),
      Q => mem_mux3(31),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(28),
      Q => mem_mux3(3),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(27),
      Q => mem_mux3(4),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(26),
      Q => mem_mux3(5),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(25),
      Q => mem_mux3(6),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(24),
      Q => mem_mux3(7),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(23),
      Q => mem_mux3(8),
      R => SR(0)
    );
\Use_HW_BS.mem_mux3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(22),
      Q => mem_mux3(9),
      R => SR(0)
    );
\Use_HW_BS.mem_shift16_8_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => Q(1),
      Q => mem_shift16_8(0),
      R => SR(0)
    );
\Use_HW_BS.mem_shift16_8_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => Q(0),
      Q => mem_shift16_8(1),
      R => SR(0)
    );
\Use_HW_BS.mem_void_bit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => ex_void_bit,
      Q => mem_void_bit,
      R => SR(0)
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(8),
      I1 => mem_mux3(0),
      I2 => mem_mux3(24),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(16),
      O => I0
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(9),
      I1 => mem_mux3(1),
      I2 => mem_mux3(25),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(17),
      O => I00_in
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(10),
      I1 => mem_mux3(2),
      I2 => mem_mux3(26),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(18),
      O => I01_in
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(19),
      I1 => mem_mux3(11),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(27),
      O => I010_in
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(20),
      I1 => mem_mux3(12),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(28),
      O => I011_in
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(21),
      I1 => mem_mux3(13),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(29),
      O => I012_in
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(22),
      I1 => mem_mux3(14),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(30),
      O => I013_in
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(23),
      I1 => mem_mux3(15),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(31),
      O => I014_in
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(11),
      I1 => mem_mux3(3),
      I2 => mem_mux3(27),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(19),
      O => I02_in
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(12),
      I1 => mem_mux3(4),
      I2 => mem_mux3(28),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(20),
      O => I03_in
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(13),
      I1 => mem_mux3(5),
      I2 => mem_mux3(29),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(21),
      O => I04_in
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(14),
      I1 => mem_mux3(6),
      I2 => mem_mux3(30),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(22),
      O => I05_in
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(15),
      I1 => mem_mux3(7),
      I2 => mem_mux3(31),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(23),
      O => I06_in
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(16),
      I1 => mem_mux3(8),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(24),
      O => I07_in
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(17),
      I1 => mem_mux3(9),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(25),
      O => I08_in
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(18),
      I1 => mem_mux3(10),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(26),
      O => I09_in
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(24),
      I1 => mem_mux3(16),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I015_in
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(25),
      I1 => mem_mux3(17),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I016_in
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(26),
      I1 => mem_mux3(18),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I017_in
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(27),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I026_in
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(28),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I027_in
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(29),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I028_in
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(30),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I029_in
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(31),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I1
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(27),
      I1 => mem_mux3(19),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I018_in
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(28),
      I1 => mem_mux3(20),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I019_in
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(29),
      I1 => mem_mux3(21),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I020_in
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(30),
      I1 => mem_mux3(22),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I021_in
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(31),
      I1 => mem_mux3(23),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I022_in
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(24),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I023_in
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(25),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I024_in
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(26),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I025_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Data_Flow_Logic is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 6 downto 0 );
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 24 downto 0 );
    \WB_MEM_Result_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    R : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    Clk : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 24 downto 0 );
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 24 downto 0 );
    mem_sel_msr : in STD_LOGIC;
    \WB_MEM_Result_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[31]_1\ : in STD_LOGIC;
    \WB_MEM_Result_reg[0]_1\ : in STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Data_Flow_Logic : entity is "Data_Flow_Logic";
end mb_design_microblaze_0_1_Data_Flow_Logic;

architecture STRUCTURE of mb_design_microblaze_0_1_Data_Flow_Logic is
  signal \^d\ : STD_LOGIC_VECTOR ( 24 downto 0 );
begin
  D(24 downto 0) <= \^d\(24 downto 0);
\Gen_Bits[0].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_596
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(6),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(30)
    );
\Gen_Bits[10].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_597
     port map (
      Clk => Clk,
      D(0) => \^d\(15),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(15),
      Q(0) => Q(15),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(20),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[11].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_598
     port map (
      Clk => Clk,
      D(0) => \^d\(14),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(14),
      Q(0) => Q(14),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(19),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[12].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_599
     port map (
      Clk => Clk,
      D(0) => \^d\(13),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(13),
      Q(0) => Q(13),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(18),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[13].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_600
     port map (
      Clk => Clk,
      D(0) => \^d\(12),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(12),
      Q(0) => Q(12),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(17),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[14].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_601
     port map (
      Clk => Clk,
      D(0) => \^d\(11),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(11),
      Q(0) => Q(11),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(16),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[15].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_602
     port map (
      Clk => Clk,
      D(0) => \^d\(10),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(10),
      Q(0) => Q(10),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(15),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[16].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_603
     port map (
      Clk => Clk,
      D(0) => \^d\(9),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(9),
      Q(0) => Q(9),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(14),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[17].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_604
     port map (
      Clk => Clk,
      D(0) => \^d\(8),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(8),
      Q(0) => Q(8),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(13),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[18].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_605
     port map (
      Clk => Clk,
      D(0) => \^d\(7),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(7),
      Q(0) => Q(7),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(12),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[19].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_606
     port map (
      Clk => Clk,
      D(0) => \^d\(6),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(6),
      Q(0) => Q(6),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(11),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[1].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_607
     port map (
      Clk => Clk,
      D(0) => \^d\(24),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(24),
      Q(0) => Q(24),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(29),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[20].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_608
     port map (
      Clk => Clk,
      D(0) => \^d\(5),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(5),
      Q(0) => Q(5),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(10),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[21].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_609
     port map (
      Clk => Clk,
      D(0) => \^d\(4),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(4),
      Q(0) => Q(4),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(9),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[22].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_610
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(5),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(8)
    );
\Gen_Bits[23].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_611
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(4),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(7)
    );
\Gen_Bits[24].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_612
     port map (
      Clk => Clk,
      D(0) => \^d\(3),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(3),
      Q(0) => Q(3),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(6),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[25].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_613
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(3),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(5)
    );
\Gen_Bits[26].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_614
     port map (
      Clk => Clk,
      D(0) => \^d\(2),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(2),
      Q(0) => Q(2),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(4),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[27].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_615
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      EX_Fwd(0) => EX_Fwd(0),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(1),
      Q(0) => Q(1),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[28].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_616
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(2),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(3)
    );
\Gen_Bits[29].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_617
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(1),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(2)
    );
\Gen_Bits[2].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_618
     port map (
      Clk => Clk,
      D(0) => \^d\(23),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(23),
      Q(0) => Q(23),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(28),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[30].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_619
     port map (
      Clk => Clk,
      R => R,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(1)
    );
\Gen_Bits[31].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_620
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(0),
      Q(0) => Q(0),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[3].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_621
     port map (
      Clk => Clk,
      D(0) => \^d\(22),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(22),
      Q(0) => Q(22),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(27),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[4].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_622
     port map (
      Clk => Clk,
      D(0) => \^d\(21),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(21),
      Q(0) => Q(21),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(26),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[5].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_623
     port map (
      Clk => Clk,
      D(0) => \^d\(20),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(20),
      Q(0) => Q(20),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(25),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[6].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_624
     port map (
      Clk => Clk,
      D(0) => \^d\(19),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(19),
      Q(0) => Q(19),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(24),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[7].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_625
     port map (
      Clk => Clk,
      D(0) => \^d\(18),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(18),
      Q(0) => Q(18),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(23),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[8].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_626
     port map (
      Clk => Clk,
      D(0) => \^d\(17),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(17),
      Q(0) => Q(17),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(22),
      mem_sel_msr => mem_sel_msr
    );
\Gen_Bits[9].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_627
     port map (
      Clk => Clk,
      D(0) => \^d\(16),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(16),
      Q(0) => Q(16),
      R => R,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(21),
      mem_sel_msr => mem_sel_msr
    );
MEM_Not_Mul_Op_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => ex_not_mul_op,
      Q => SR(0),
      S => sync_reset
    );
\WB_MEM_Result_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(6),
      Q => \WB_MEM_Result_reg[0]_0\(31),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(15),
      Q => \WB_MEM_Result_reg[0]_0\(21),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(14),
      Q => \WB_MEM_Result_reg[0]_0\(20),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(13),
      Q => \WB_MEM_Result_reg[0]_0\(19),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(12),
      Q => \WB_MEM_Result_reg[0]_0\(18),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(11),
      Q => \WB_MEM_Result_reg[0]_0\(17),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(10),
      Q => \WB_MEM_Result_reg[0]_0\(16),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(9),
      Q => \WB_MEM_Result_reg[0]_0\(15),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(8),
      Q => \WB_MEM_Result_reg[0]_0\(14),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(7),
      Q => \WB_MEM_Result_reg[0]_0\(13),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(6),
      Q => \WB_MEM_Result_reg[0]_0\(12),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(24),
      Q => \WB_MEM_Result_reg[0]_0\(30),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(5),
      Q => \WB_MEM_Result_reg[0]_0\(11),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(4),
      Q => \WB_MEM_Result_reg[0]_0\(10),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(5),
      Q => \WB_MEM_Result_reg[0]_0\(9),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(4),
      Q => \WB_MEM_Result_reg[0]_0\(8),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(3),
      Q => \WB_MEM_Result_reg[0]_0\(7),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(3),
      Q => \WB_MEM_Result_reg[0]_0\(6),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(2),
      Q => \WB_MEM_Result_reg[0]_0\(5),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(1),
      Q => \WB_MEM_Result_reg[0]_0\(4),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(2),
      Q => \WB_MEM_Result_reg[0]_0\(3),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(1),
      Q => \WB_MEM_Result_reg[0]_0\(2),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(23),
      Q => \WB_MEM_Result_reg[0]_0\(29),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \WB_MEM_Result_reg[0]_1\(0),
      Q => \WB_MEM_Result_reg[0]_0\(1),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(0),
      Q => \WB_MEM_Result_reg[0]_0\(0),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(22),
      Q => \WB_MEM_Result_reg[0]_0\(28),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(21),
      Q => \WB_MEM_Result_reg[0]_0\(27),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(20),
      Q => \WB_MEM_Result_reg[0]_0\(26),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(19),
      Q => \WB_MEM_Result_reg[0]_0\(25),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(18),
      Q => \WB_MEM_Result_reg[0]_0\(24),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(17),
      Q => \WB_MEM_Result_reg[0]_0\(23),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
\WB_MEM_Result_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \WB_MEM_Result_reg[31]_1\,
      D => \^d\(16),
      Q => \WB_MEM_Result_reg[0]_0\(22),
      R => \WB_MEM_Result_reg[31]_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Div_unit_gti is
  port (
    \Q_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_last_cycle_reg_0 : out STD_LOGIC;
    div_iterations_early_reg_0 : out STD_LOGIC;
    ex_hold_div_by_zero_reg_0 : out STD_LOGIC;
    negative_operands : out STD_LOGIC;
    MEM_Div_Overflow_reg_0 : out STD_LOGIC;
    make_result_neg : out STD_LOGIC;
    mem_daxi_exception_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_div_stall_i_reg_0 : out STD_LOGIC;
    MEM_Div_By_Zero_reg_0 : out STD_LOGIC;
    MEM_Div_Overflow_reg_1 : out STD_LOGIC;
    Clk : in STD_LOGIC;
    \FPGA_Impl1.D_Handle[0].D_Sel_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_start_div : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    div_busy : in STD_LOGIC;
    MEM_Div_By_Zero_reg_1 : in STD_LOGIC;
    MEM_Div_By_Zero_reg_2 : in STD_LOGIC;
    negative_operands_reg_0 : in STD_LOGIC;
    make_result_neg_reg_0 : in STD_LOGIC;
    \FPGA_Shift.cnt_shifts_reg[31]_0\ : in STD_LOGIC;
    MEM_DAXI_Exception : in STD_LOGIC;
    DUE : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_exception_from_ex : in STD_LOGIC;
    restore_wb_msr_to_ex : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_div_unsigned : in STD_LOGIC;
    div_iterations_early_reg_1 : in STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    \D_reg[30]_0\ : in STD_LOGIC;
    \D_reg[29]_0\ : in STD_LOGIC;
    \D_reg[28]_0\ : in STD_LOGIC;
    \D_reg[27]_0\ : in STD_LOGIC;
    \D_reg[26]_0\ : in STD_LOGIC;
    \D_reg[25]_0\ : in STD_LOGIC;
    \D_reg[24]_0\ : in STD_LOGIC;
    \D_reg[23]_0\ : in STD_LOGIC;
    \D_reg[22]_0\ : in STD_LOGIC;
    \D_reg[21]_0\ : in STD_LOGIC;
    \D_reg[20]_0\ : in STD_LOGIC;
    \D_reg[19]_0\ : in STD_LOGIC;
    \D_reg[18]_0\ : in STD_LOGIC;
    \D_reg[17]_0\ : in STD_LOGIC;
    \D_reg[16]_0\ : in STD_LOGIC;
    \D_reg[15]_0\ : in STD_LOGIC;
    \D_reg[14]_0\ : in STD_LOGIC;
    \D_reg[13]_0\ : in STD_LOGIC;
    \D_reg[12]_0\ : in STD_LOGIC;
    \D_reg[11]_0\ : in STD_LOGIC;
    \D_reg[10]_0\ : in STD_LOGIC;
    \D_reg[9]_0\ : in STD_LOGIC;
    \D_reg[8]_0\ : in STD_LOGIC;
    \D_reg[7]_0\ : in STD_LOGIC;
    \D_reg[6]_0\ : in STD_LOGIC;
    \D_reg[5]_0\ : in STD_LOGIC;
    \D_reg[4]_0\ : in STD_LOGIC;
    \D_reg[3]_0\ : in STD_LOGIC;
    \D_reg[2]_0\ : in STD_LOGIC;
    \D_reg[1]_0\ : in STD_LOGIC;
    \Q_reg[32]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \R_reg[32]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Div_unit_gti : entity is "Div_unit_gti";
end mb_design_microblaze_0_1_Div_unit_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Div_unit_gti is
  signal D_1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \FPGA_Impl1.D_Handle[0].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_2\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_2\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_1\ : STD_LOGIC;
  signal \FPGA_Shift.cnt_shifts_reg[1]_srl30_n_0\ : STD_LOGIC;
  signal \FPGA_Shift.cnt_shifts_reg_n_0_[31]\ : STD_LOGIC;
  signal LO : STD_LOGIC;
  signal \^mem_div_overflow_reg_0\ : STD_LOGIC;
  signal New_Q_Carry : STD_LOGIC_VECTOR ( 32 to 32 );
  signal New_Q_Sel_0 : STD_LOGIC;
  signal New_Q_Sel_1 : STD_LOGIC;
  signal New_Q_Sel_10 : STD_LOGIC;
  signal New_Q_Sel_11 : STD_LOGIC;
  signal New_Q_Sel_12 : STD_LOGIC;
  signal New_Q_Sel_13 : STD_LOGIC;
  signal New_Q_Sel_14 : STD_LOGIC;
  signal New_Q_Sel_15 : STD_LOGIC;
  signal New_Q_Sel_16 : STD_LOGIC;
  signal New_Q_Sel_17 : STD_LOGIC;
  signal New_Q_Sel_18 : STD_LOGIC;
  signal New_Q_Sel_19 : STD_LOGIC;
  signal New_Q_Sel_2 : STD_LOGIC;
  signal New_Q_Sel_20 : STD_LOGIC;
  signal New_Q_Sel_21 : STD_LOGIC;
  signal New_Q_Sel_22 : STD_LOGIC;
  signal New_Q_Sel_23 : STD_LOGIC;
  signal New_Q_Sel_24 : STD_LOGIC;
  signal New_Q_Sel_25 : STD_LOGIC;
  signal New_Q_Sel_26 : STD_LOGIC;
  signal New_Q_Sel_27 : STD_LOGIC;
  signal New_Q_Sel_28 : STD_LOGIC;
  signal New_Q_Sel_29 : STD_LOGIC;
  signal New_Q_Sel_3 : STD_LOGIC;
  signal New_Q_Sel_30 : STD_LOGIC;
  signal New_Q_Sel_31 : STD_LOGIC;
  signal New_Q_Sel_4 : STD_LOGIC;
  signal New_Q_Sel_5 : STD_LOGIC;
  signal New_Q_Sel_6 : STD_LOGIC;
  signal New_Q_Sel_7 : STD_LOGIC;
  signal New_Q_Sel_8 : STD_LOGIC;
  signal New_Q_Sel_9 : STD_LOGIC;
  signal O : STD_LOGIC;
  signal Q0 : STD_LOGIC;
  signal \Q[32]_i_3_n_0\ : STD_LOGIC;
  signal Q_0 : STD_LOGIC_VECTOR ( 32 to 32 );
  signal \^q_reg[0]_0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal R : STD_LOGIC_VECTOR ( 0 to 32 );
  signal \R[0]_i_2_n_0\ : STD_LOGIC;
  signal \R[0]_i_3_n_0\ : STD_LOGIC;
  signal \R[0]_i_4_n_0\ : STD_LOGIC;
  signal \R[0]_i_5_n_0\ : STD_LOGIC;
  signal \R[12]_i_2_n_0\ : STD_LOGIC;
  signal \R[12]_i_3_n_0\ : STD_LOGIC;
  signal \R[12]_i_4_n_0\ : STD_LOGIC;
  signal \R[12]_i_5_n_0\ : STD_LOGIC;
  signal \R[16]_i_2_n_0\ : STD_LOGIC;
  signal \R[16]_i_3_n_0\ : STD_LOGIC;
  signal \R[16]_i_4_n_0\ : STD_LOGIC;
  signal \R[16]_i_5_n_0\ : STD_LOGIC;
  signal \R[20]_i_2_n_0\ : STD_LOGIC;
  signal \R[20]_i_3_n_0\ : STD_LOGIC;
  signal \R[20]_i_4_n_0\ : STD_LOGIC;
  signal \R[20]_i_5_n_0\ : STD_LOGIC;
  signal \R[24]_i_2_n_0\ : STD_LOGIC;
  signal \R[24]_i_3_n_0\ : STD_LOGIC;
  signal \R[24]_i_4_n_0\ : STD_LOGIC;
  signal \R[24]_i_5_n_0\ : STD_LOGIC;
  signal \R[28]_i_2_n_0\ : STD_LOGIC;
  signal \R[28]_i_3_n_0\ : STD_LOGIC;
  signal \R[28]_i_4_n_0\ : STD_LOGIC;
  signal \R[28]_i_5_n_0\ : STD_LOGIC;
  signal \R[4]_i_2_n_0\ : STD_LOGIC;
  signal \R[4]_i_3_n_0\ : STD_LOGIC;
  signal \R[4]_i_4_n_0\ : STD_LOGIC;
  signal \R[4]_i_5_n_0\ : STD_LOGIC;
  signal \R[8]_i_2_n_0\ : STD_LOGIC;
  signal \R[8]_i_3_n_0\ : STD_LOGIC;
  signal \R[8]_i_4_n_0\ : STD_LOGIC;
  signal \R[8]_i_5_n_0\ : STD_LOGIC;
  signal \R_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[12]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[12]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[12]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[12]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[20]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[20]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[20]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[20]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[28]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[28]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[28]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[28]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[4]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \R_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \R_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \R_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \R_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal Res_Neg : STD_LOGIC;
  signal div_count_is_2 : STD_LOGIC;
  signal div_iterations_early_i_1_n_0 : STD_LOGIC;
  signal \^div_iterations_early_reg_0\ : STD_LOGIC;
  signal ex_hold_div_by_zero_i_1_n_0 : STD_LOGIC;
  signal \^ex_hold_div_by_zero_reg_0\ : STD_LOGIC;
  signal ex_hold_div_overflow : STD_LOGIC;
  signal last_cycle : STD_LOGIC;
  signal last_cycle_i_1_n_0 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_102 : STD_LOGIC;
  signal lopt_103 : STD_LOGIC;
  signal lopt_104 : STD_LOGIC;
  signal lopt_105 : STD_LOGIC;
  signal lopt_106 : STD_LOGIC;
  signal lopt_107 : STD_LOGIC;
  signal lopt_108 : STD_LOGIC;
  signal lopt_109 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_110 : STD_LOGIC;
  signal lopt_111 : STD_LOGIC;
  signal lopt_112 : STD_LOGIC;
  signal lopt_113 : STD_LOGIC;
  signal lopt_114 : STD_LOGIC;
  signal lopt_115 : STD_LOGIC;
  signal lopt_116 : STD_LOGIC;
  signal lopt_117 : STD_LOGIC;
  signal lopt_118 : STD_LOGIC;
  signal lopt_119 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_120 : STD_LOGIC;
  signal lopt_121 : STD_LOGIC;
  signal lopt_122 : STD_LOGIC;
  signal lopt_123 : STD_LOGIC;
  signal lopt_124 : STD_LOGIC;
  signal lopt_125 : STD_LOGIC;
  signal lopt_126 : STD_LOGIC;
  signal lopt_127 : STD_LOGIC;
  signal lopt_128 : STD_LOGIC;
  signal lopt_129 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_130 : STD_LOGIC;
  signal lopt_131 : STD_LOGIC;
  signal lopt_132 : STD_LOGIC;
  signal lopt_133 : STD_LOGIC;
  signal lopt_134 : STD_LOGIC;
  signal lopt_135 : STD_LOGIC;
  signal lopt_136 : STD_LOGIC;
  signal lopt_137 : STD_LOGIC;
  signal lopt_138 : STD_LOGIC;
  signal lopt_139 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
  signal \^make_result_neg\ : STD_LOGIC;
  signal mem_div_by_zero : STD_LOGIC;
  signal mem_div_stall : STD_LOGIC;
  signal mem_div_stall_i_i_1_n_0 : STD_LOGIC;
  signal mem_last_cycle_i_1_n_0 : STD_LOGIC;
  signal \^mem_last_cycle_reg_0\ : STD_LOGIC;
  signal \^negative_operands\ : STD_LOGIC;
  signal new_Q : STD_LOGIC_VECTOR ( 32 to 32 );
  signal next_sub : STD_LOGIC;
  signal next_sub_i_1_n_0 : STD_LOGIC;
  signal p_0_in5_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC_VECTOR ( 32 downto 1 );
  signal reset_overflow : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_overflow : signal is std.standard.true;
  signal \NLW_FPGA_Shift.cnt_shifts_reg[1]_srl30_Q31_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_Q_reg[32]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Q_reg[32]_i_2_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute SHREG_EXTRACT : string;
  attribute SHREG_EXTRACT of \FPGA_Shift.cnt_shifts_reg[0]\ : label is "yes";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \FPGA_Shift.cnt_shifts_reg[1]_srl30\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Data_Flow_I/Using_Div_Unit.Div_unit_I1/FPGA_Shift.cnt_shifts_reg ";
  attribute srl_name : string;
  attribute srl_name of \FPGA_Shift.cnt_shifts_reg[1]_srl30\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Data_Flow_I/Using_Div_Unit.Div_unit_I1/FPGA_Shift.cnt_shifts_reg[1]_srl30 ";
  attribute SHREG_EXTRACT of \FPGA_Shift.cnt_shifts_reg[31]\ : label is "yes";
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Q_reg[32]_i_2\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[0]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[12]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[16]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[20]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[24]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[28]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[4]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R_reg[8]_i_1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of div_iterations_early_i_1 : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of last_cycle_i_1 : label is "soft_lutpair16";
begin
  E(0) <= \^e\(0);
  MEM_Div_Overflow_reg_0 <= \^mem_div_overflow_reg_0\;
  \Q_reg[0]_0\(31 downto 0) <= \^q_reg[0]_0\(31 downto 0);
  div_iterations_early_reg_0 <= \^div_iterations_early_reg_0\;
  ex_hold_div_by_zero_reg_0 <= \^ex_hold_div_by_zero_reg_0\;
  make_result_neg <= \^make_result_neg\;
  mem_last_cycle_reg_0 <= \^mem_last_cycle_reg_0\;
  negative_operands <= \^negative_operands\;
  reset_overflow <= sync_reset;
\D_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[0].MUXCY_XOR_I_n_0\,
      Q => D_1(0),
      R => '0'
    );
\D_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_1\,
      Q => D_1(10),
      R => '0'
    );
\D_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_1\,
      Q => D_1(11),
      R => '0'
    );
\D_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_1\,
      Q => D_1(12),
      R => '0'
    );
\D_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_1\,
      Q => D_1(13),
      R => '0'
    );
\D_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_1\,
      Q => D_1(14),
      R => '0'
    );
\D_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_1\,
      Q => D_1(15),
      R => '0'
    );
\D_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_1\,
      Q => D_1(16),
      R => '0'
    );
\D_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_1\,
      Q => D_1(17),
      R => '0'
    );
\D_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_1\,
      Q => D_1(18),
      R => '0'
    );
\D_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_1\,
      Q => D_1(19),
      R => '0'
    );
\D_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_1\,
      Q => D_1(1),
      R => '0'
    );
\D_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_1\,
      Q => D_1(20),
      R => '0'
    );
\D_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_1\,
      Q => D_1(21),
      R => '0'
    );
\D_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_1\,
      Q => D_1(22),
      R => '0'
    );
\D_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_1\,
      Q => D_1(23),
      R => '0'
    );
\D_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_1\,
      Q => D_1(24),
      R => '0'
    );
\D_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_1\,
      Q => D_1(25),
      R => '0'
    );
\D_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_1\,
      Q => D_1(26),
      R => '0'
    );
\D_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_1\,
      Q => D_1(27),
      R => '0'
    );
\D_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_1\,
      Q => D_1(28),
      R => '0'
    );
\D_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_1\,
      Q => D_1(29),
      R => '0'
    );
\D_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_1\,
      Q => D_1(2),
      R => '0'
    );
\D_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_1\,
      Q => D_1(30),
      R => '0'
    );
\D_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O,
      Q => D_1(31),
      R => '0'
    );
\D_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_1\,
      Q => D_1(3),
      R => '0'
    );
\D_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_1\,
      Q => D_1(4),
      R => '0'
    );
\D_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_1\,
      Q => D_1(5),
      R => '0'
    );
\D_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_1\,
      Q => D_1(6),
      R => '0'
    );
\D_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_1\,
      Q => D_1(7),
      R => '0'
    );
\D_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_1\,
      Q => D_1(8),
      R => '0'
    );
\D_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_1\,
      Q => D_1(9),
      R => '0'
    );
\FPGA_Impl1.D_Handle[0].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_454
     port map (
      D(0) => \FPGA_Impl1.D_Handle[0].MUXCY_XOR_I_n_0\,
      \FPGA_Impl1.D_Handle[0].D_Sel_reg\ => \FPGA_Impl1.D_Handle[0].D_Sel_reg\,
      LO => \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_0\,
      lopt => lopt_69
    );
\FPGA_Impl1.D_Handle[10].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_455
     port map (
      \D_reg[10]\ => \D_reg[10]_0\,
      \D_reg[10]_0\ => \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_1\,
      lopt => lopt_45,
      lopt_1 => lopt_46,
      lopt_2 => lopt_51
    );
\FPGA_Impl1.D_Handle[11].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_456
     port map (
      \D_reg[11]\ => \D_reg[11]_0\,
      \D_reg[11]_0\ => \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[11].MUXCY_XOR_I_n_1\,
      lopt => lopt_45,
      lopt_1 => lopt_46,
      lopt_10 => lopt_52,
      lopt_11 => lopt_53,
      lopt_2 => \D_reg[10]_0\,
      lopt_3 => lopt_47,
      lopt_4 => lopt_48,
      lopt_5 => \D_reg[9]_0\,
      lopt_6 => lopt_49,
      lopt_7 => lopt_50,
      lopt_8 => \D_reg[8]_0\,
      lopt_9 => lopt_51
    );
\FPGA_Impl1.D_Handle[12].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_457
     port map (
      \D_reg[12]\ => \D_reg[12]_0\,
      \D_reg[12]_0\ => \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[12].MUXCY_XOR_I_n_1\,
      lopt => lopt_40,
      lopt_1 => lopt_41,
      lopt_2 => lopt_44
    );
\FPGA_Impl1.D_Handle[13].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_458
     port map (
      \D_reg[13]\ => \D_reg[13]_0\,
      \D_reg[13]_0\ => \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[13].MUXCY_XOR_I_n_1\,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      lopt_2 => lopt_43
    );
\FPGA_Impl1.D_Handle[14].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_459
     port map (
      \D_reg[14]\ => \D_reg[14]_0\,
      \D_reg[14]_0\ => \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[14].MUXCY_XOR_I_n_1\,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_2 => lopt_42
    );
\FPGA_Impl1.D_Handle[15].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_460
     port map (
      \D_reg[15]\ => \D_reg[15]_0\,
      \D_reg[15]_0\ => \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[15].MUXCY_XOR_I_n_1\,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_10 => lopt_43,
      lopt_11 => lopt_44,
      lopt_2 => \D_reg[14]_0\,
      lopt_3 => lopt_38,
      lopt_4 => lopt_39,
      lopt_5 => \D_reg[13]_0\,
      lopt_6 => lopt_40,
      lopt_7 => lopt_41,
      lopt_8 => \D_reg[12]_0\,
      lopt_9 => lopt_42
    );
\FPGA_Impl1.D_Handle[16].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_461
     port map (
      \D_reg[16]\ => \D_reg[16]_0\,
      \D_reg[16]_0\ => \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[16].MUXCY_XOR_I_n_1\,
      lopt => lopt_31,
      lopt_1 => lopt_32,
      lopt_2 => lopt_35
    );
\FPGA_Impl1.D_Handle[17].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_462
     port map (
      \D_reg[17]\ => \D_reg[17]_0\,
      \D_reg[17]_0\ => \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[17].MUXCY_XOR_I_n_1\,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_34
    );
\FPGA_Impl1.D_Handle[18].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_463
     port map (
      \D_reg[18]\ => \D_reg[18]_0\,
      \D_reg[18]_0\ => \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[18].MUXCY_XOR_I_n_1\,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_33
    );
\FPGA_Impl1.D_Handle[19].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_464
     port map (
      \D_reg[19]\ => \D_reg[19]_0\,
      \D_reg[19]_0\ => \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[19].MUXCY_XOR_I_n_1\,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => \D_reg[18]_0\,
      lopt_3 => lopt_29,
      lopt_4 => lopt_30,
      lopt_5 => \D_reg[17]_0\,
      lopt_6 => lopt_31,
      lopt_7 => lopt_32,
      lopt_8 => \D_reg[16]_0\,
      lopt_9 => lopt_33
    );
\FPGA_Impl1.D_Handle[1].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_465
     port map (
      \D_reg[1]\ => \D_reg[1]_0\,
      \D_reg[1]_0\ => \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[1].MUXCY_XOR_I_n_1\,
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_2 => lopt_68
    );
\FPGA_Impl1.D_Handle[20].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_466
     port map (
      \D_reg[20]\ => \D_reg[20]_0\,
      \D_reg[20]_0\ => \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[20].MUXCY_XOR_I_n_1\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      lopt_2 => lopt_26
    );
\FPGA_Impl1.D_Handle[21].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_467
     port map (
      \D_reg[21]\ => \D_reg[21]_0\,
      \D_reg[21]_0\ => \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[21].MUXCY_XOR_I_n_1\,
      lopt => lopt_20,
      lopt_1 => lopt_21,
      lopt_2 => lopt_25
    );
\FPGA_Impl1.D_Handle[22].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_468
     port map (
      \D_reg[22]\ => \D_reg[22]_0\,
      \D_reg[22]_0\ => \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[22].MUXCY_XOR_I_n_1\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_24
    );
\FPGA_Impl1.D_Handle[23].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_469
     port map (
      \D_reg[23]\ => \D_reg[23]_0\,
      \D_reg[23]_0\ => \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[23].MUXCY_XOR_I_n_1\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_10 => lopt_25,
      lopt_11 => lopt_26,
      lopt_2 => \D_reg[22]_0\,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => \D_reg[21]_0\,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => \D_reg[20]_0\,
      lopt_9 => lopt_24
    );
\FPGA_Impl1.D_Handle[24].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_470
     port map (
      \D_reg[24]\ => \D_reg[24]_0\,
      \D_reg[24]_0\ => \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[24].MUXCY_XOR_I_n_1\,
      lopt => lopt_13,
      lopt_1 => lopt_14,
      lopt_2 => lopt_17
    );
\FPGA_Impl1.D_Handle[25].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_471
     port map (
      \D_reg[25]\ => \D_reg[25]_0\,
      \D_reg[25]_0\ => \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[25].MUXCY_XOR_I_n_1\,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_16
    );
\FPGA_Impl1.D_Handle[26].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_472
     port map (
      \D_reg[26]\ => \D_reg[26]_0\,
      \D_reg[26]_0\ => \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[26].MUXCY_XOR_I_n_1\,
      lopt => lopt_9,
      lopt_1 => lopt_10,
      lopt_2 => lopt_15
    );
\FPGA_Impl1.D_Handle[27].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_473
     port map (
      \D_reg[27]\ => \D_reg[27]_0\,
      \D_reg[27]_0\ => \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[27].MUXCY_XOR_I_n_1\,
      lopt => lopt_9,
      lopt_1 => lopt_10,
      lopt_10 => lopt_16,
      lopt_11 => lopt_17,
      lopt_2 => \D_reg[26]_0\,
      lopt_3 => lopt_11,
      lopt_4 => lopt_12,
      lopt_5 => \D_reg[25]_0\,
      lopt_6 => lopt_13,
      lopt_7 => lopt_14,
      lopt_8 => \D_reg[24]_0\,
      lopt_9 => lopt_15
    );
\FPGA_Impl1.D_Handle[28].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_474
     port map (
      \D_reg[28]\ => \D_reg[28]_0\,
      \D_reg[28]_0\ => \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[28].MUXCY_XOR_I_n_1\,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      lopt_2 => lopt_8
    );
\FPGA_Impl1.D_Handle[29].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_475
     port map (
      \D_reg[29]\ => \D_reg[29]_0\,
      \D_reg[29]_0\ => \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[29].MUXCY_XOR_I_n_1\,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_7
    );
\FPGA_Impl1.D_Handle[2].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_476
     port map (
      \D_reg[2]\ => \D_reg[2]_0\,
      \D_reg[2]_0\ => \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[2].MUXCY_XOR_I_n_1\,
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => lopt_67
    );
\FPGA_Impl1.D_Handle[30].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_477
     port map (
      \D_reg[30]\ => \D_reg[30]_0\,
      \D_reg[30]_0\ => LO,
      LO => \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[30].MUXCY_XOR_I_n_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_6
    );
\FPGA_Impl1.D_Handle[31].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_478
     port map (
      CI => CI,
      LO => LO,
      O => O,
      S => S,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_7,
      lopt_11 => lopt_8,
      lopt_2 => \D_reg[30]_0\,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \D_reg[29]_0\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \D_reg[28]_0\,
      lopt_9 => lopt_6
    );
\FPGA_Impl1.D_Handle[3].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_479
     port map (
      \D_reg[3]\ => \D_reg[3]_0\,
      \D_reg[3]_0\ => \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[3].MUXCY_XOR_I_n_1\,
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => \D_reg[2]_0\,
      lopt_3 => lopt_65,
      lopt_4 => lopt_66,
      lopt_5 => \D_reg[1]_0\,
      lopt_6 => lopt_67,
      lopt_7 => lopt_68,
      lopt_8 => lopt_69,
      lopt_9 => \FPGA_Impl1.D_Handle[0].D_Sel_reg\
    );
\FPGA_Impl1.D_Handle[4].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_480
     port map (
      \D_reg[4]\ => \D_reg[4]_0\,
      \D_reg[4]_0\ => \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[4].MUXCY_XOR_I_n_1\,
      lopt => lopt_58,
      lopt_1 => lopt_59,
      lopt_2 => lopt_62
    );
\FPGA_Impl1.D_Handle[5].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_481
     port map (
      \D_reg[5]\ => \D_reg[5]_0\,
      \D_reg[5]_0\ => \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[5].MUXCY_XOR_I_n_1\,
      lopt => lopt_56,
      lopt_1 => lopt_57,
      lopt_2 => lopt_61
    );
\FPGA_Impl1.D_Handle[6].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_482
     port map (
      \D_reg[6]\ => \D_reg[6]_0\,
      \D_reg[6]_0\ => \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[6].MUXCY_XOR_I_n_1\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_60
    );
\FPGA_Impl1.D_Handle[7].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_483
     port map (
      \D_reg[7]\ => \D_reg[7]_0\,
      \D_reg[7]_0\ => \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[7].MUXCY_XOR_I_n_1\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_10 => lopt_61,
      lopt_11 => lopt_62,
      lopt_2 => \D_reg[6]_0\,
      lopt_3 => lopt_56,
      lopt_4 => lopt_57,
      lopt_5 => \D_reg[5]_0\,
      lopt_6 => lopt_58,
      lopt_7 => lopt_59,
      lopt_8 => \D_reg[4]_0\,
      lopt_9 => lopt_60
    );
\FPGA_Impl1.D_Handle[8].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_484
     port map (
      \D_reg[8]\ => \D_reg[8]_0\,
      \D_reg[8]_0\ => \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[8].MUXCY_XOR_I_n_1\,
      lopt => lopt_49,
      lopt_1 => lopt_50,
      lopt_2 => lopt_53
    );
\FPGA_Impl1.D_Handle[9].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_485
     port map (
      CI => \FPGA_Impl1.D_Handle[10].MUXCY_XOR_I_n_0\,
      \D_reg[9]\ => \D_reg[9]_0\,
      LO => \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl1.D_Handle[9].MUXCY_XOR_I_n_1\,
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_52
    );
\FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_486
     port map (
      D(0) => p_0_in5_in,
      LO => \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_0\,
      MEM_Div_Overflow_reg => \^mem_div_overflow_reg_0\,
      New_Q_Sel_31 => New_Q_Sel_31,
      ex_hold_div_overflow => ex_hold_div_overflow,
      ex_hold_div_overflow_reg => \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_2\,
      ex_hold_div_overflow_reg_0 => MEM_Div_By_Zero_reg_1,
      last_cycle => last_cycle,
      lopt => lopt_139,
      mem_div_stall => mem_div_stall,
      negative_operands => \^negative_operands\,
      negative_operands_reg => \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_1\
    );
\FPGA_Impl2.New_Q_Handle[0].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      New_Q_Sel_31 => New_Q_Sel_31,
      Q(0) => Q(31),
      \R_reg[32]\(0) => \^q_reg[0]_0\(30),
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_487
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_1\,
      \Q_reg[10]\ => \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_21,
      lopt => lopt_115,
      lopt_1 => lopt_116,
      lopt_2 => lopt_121
    );
\FPGA_Impl2.New_Q_Handle[10].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_488\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(21),
      \Q_reg[10]\(0) => \^q_reg[0]_0\(20),
      S => New_Q_Sel_21,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_489
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_1\,
      \Q_reg[11]\ => \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_20,
      lopt => lopt_115,
      lopt_1 => lopt_116,
      lopt_10 => lopt_122,
      lopt_11 => lopt_123,
      lopt_2 => New_Q_Sel_21,
      lopt_3 => lopt_117,
      lopt_4 => lopt_118,
      lopt_5 => New_Q_Sel_22,
      lopt_6 => lopt_119,
      lopt_7 => lopt_120,
      lopt_8 => New_Q_Sel_23,
      lopt_9 => lopt_121
    );
\FPGA_Impl2.New_Q_Handle[11].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_490\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(20),
      \Q_reg[11]\(0) => \^q_reg[0]_0\(19),
      S => New_Q_Sel_20,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_491
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_1\,
      \Q_reg[12]\ => \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_19,
      lopt => lopt_110,
      lopt_1 => lopt_111,
      lopt_2 => lopt_114
    );
\FPGA_Impl2.New_Q_Handle[12].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_492\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(19),
      \Q_reg[12]\(0) => \^q_reg[0]_0\(18),
      S => New_Q_Sel_19,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_493
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_1\,
      \Q_reg[13]\ => \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_18,
      lopt => lopt_108,
      lopt_1 => lopt_109,
      lopt_2 => lopt_113
    );
\FPGA_Impl2.New_Q_Handle[13].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_494\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(18),
      \Q_reg[13]\(0) => \^q_reg[0]_0\(17),
      S => New_Q_Sel_18,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_495
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_1\,
      \Q_reg[14]\ => \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_17,
      lopt => lopt_106,
      lopt_1 => lopt_107,
      lopt_2 => lopt_112
    );
\FPGA_Impl2.New_Q_Handle[14].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_496\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(17),
      \Q_reg[14]\(0) => \^q_reg[0]_0\(16),
      S => New_Q_Sel_17,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_497
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_1\,
      \Q_reg[15]\ => \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_16,
      lopt => lopt_106,
      lopt_1 => lopt_107,
      lopt_10 => lopt_113,
      lopt_11 => lopt_114,
      lopt_2 => New_Q_Sel_17,
      lopt_3 => lopt_108,
      lopt_4 => lopt_109,
      lopt_5 => New_Q_Sel_18,
      lopt_6 => lopt_110,
      lopt_7 => lopt_111,
      lopt_8 => New_Q_Sel_19,
      lopt_9 => lopt_112
    );
\FPGA_Impl2.New_Q_Handle[15].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_498\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(16),
      \Q_reg[15]\(0) => \^q_reg[0]_0\(15),
      S => New_Q_Sel_16,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_499
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_1\,
      \Q_reg[16]\ => \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_15,
      lopt => lopt_101,
      lopt_1 => lopt_102,
      lopt_2 => lopt_105
    );
\FPGA_Impl2.New_Q_Handle[16].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_500\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(15),
      \Q_reg[16]\(0) => \^q_reg[0]_0\(14),
      S => New_Q_Sel_15,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_501
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_1\,
      \Q_reg[17]\ => \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_14,
      lopt => lopt_99,
      lopt_1 => lopt_100,
      lopt_2 => lopt_104
    );
\FPGA_Impl2.New_Q_Handle[17].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_502\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(14),
      \Q_reg[17]\(0) => \^q_reg[0]_0\(13),
      S => New_Q_Sel_14,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_503
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_1\,
      \Q_reg[18]\ => \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_13,
      lopt => lopt_97,
      lopt_1 => lopt_98,
      lopt_2 => lopt_103
    );
\FPGA_Impl2.New_Q_Handle[18].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_504\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(13),
      \Q_reg[18]\(0) => \^q_reg[0]_0\(12),
      S => New_Q_Sel_13,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_505
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_1\,
      \Q_reg[19]\ => \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_12,
      lopt => lopt_97,
      lopt_1 => lopt_98,
      lopt_10 => lopt_104,
      lopt_11 => lopt_105,
      lopt_2 => New_Q_Sel_13,
      lopt_3 => lopt_99,
      lopt_4 => lopt_100,
      lopt_5 => New_Q_Sel_14,
      lopt_6 => lopt_101,
      lopt_7 => lopt_102,
      lopt_8 => New_Q_Sel_15,
      lopt_9 => lopt_103
    );
\FPGA_Impl2.New_Q_Handle[19].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_506\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(12),
      \Q_reg[19]\(0) => \^q_reg[0]_0\(11),
      S => New_Q_Sel_12,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_507
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_1\,
      \Q_reg[1]\ => \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_30,
      lopt => lopt_135,
      lopt_1 => lopt_136,
      lopt_2 => lopt_138
    );
\FPGA_Impl2.New_Q_Handle[1].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_508\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(30),
      \Q_reg[1]\(0) => \^q_reg[0]_0\(29),
      S => New_Q_Sel_30,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_509
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_1\,
      \Q_reg[20]\ => \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_11,
      lopt => lopt_92,
      lopt_1 => lopt_93,
      lopt_2 => lopt_96
    );
\FPGA_Impl2.New_Q_Handle[20].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_510\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(11),
      \Q_reg[20]\(0) => \^q_reg[0]_0\(10),
      S => New_Q_Sel_11,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_511
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_1\,
      \Q_reg[21]\ => \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_10,
      lopt => lopt_90,
      lopt_1 => lopt_91,
      lopt_2 => lopt_95
    );
\FPGA_Impl2.New_Q_Handle[21].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_512\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(10),
      \Q_reg[21]\(0) => \^q_reg[0]_0\(9),
      S => New_Q_Sel_10,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_513
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_1\,
      \Q_reg[22]\ => \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_9,
      lopt => lopt_88,
      lopt_1 => lopt_89,
      lopt_2 => lopt_94
    );
\FPGA_Impl2.New_Q_Handle[22].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_514\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(9),
      \Q_reg[22]\(0) => \^q_reg[0]_0\(8),
      S => New_Q_Sel_9,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_515
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_1\,
      \Q_reg[23]\ => \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_8,
      lopt => lopt_88,
      lopt_1 => lopt_89,
      lopt_10 => lopt_95,
      lopt_11 => lopt_96,
      lopt_2 => New_Q_Sel_9,
      lopt_3 => lopt_90,
      lopt_4 => lopt_91,
      lopt_5 => New_Q_Sel_10,
      lopt_6 => lopt_92,
      lopt_7 => lopt_93,
      lopt_8 => New_Q_Sel_11,
      lopt_9 => lopt_94
    );
\FPGA_Impl2.New_Q_Handle[23].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_516\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(8),
      \Q_reg[23]\(0) => \^q_reg[0]_0\(7),
      S => New_Q_Sel_8,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_517
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_1\,
      \Q_reg[24]\ => \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_7,
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_87
    );
\FPGA_Impl2.New_Q_Handle[24].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_518\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(7),
      \Q_reg[24]\(0) => \^q_reg[0]_0\(6),
      S => New_Q_Sel_7,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_519
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_1\,
      \Q_reg[25]\ => \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_6,
      lopt => lopt_81,
      lopt_1 => lopt_82,
      lopt_2 => lopt_86
    );
\FPGA_Impl2.New_Q_Handle[25].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_520\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(6),
      \Q_reg[25]\(0) => \^q_reg[0]_0\(5),
      S => New_Q_Sel_6,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_521
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_1\,
      \Q_reg[26]\ => \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_5,
      lopt => lopt_79,
      lopt_1 => lopt_80,
      lopt_2 => lopt_85
    );
\FPGA_Impl2.New_Q_Handle[26].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_522\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(5),
      \Q_reg[26]\(0) => \^q_reg[0]_0\(4),
      S => New_Q_Sel_5,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_523
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_1\,
      \Q_reg[27]\ => \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_4,
      lopt => lopt_79,
      lopt_1 => lopt_80,
      lopt_10 => lopt_86,
      lopt_11 => lopt_87,
      lopt_2 => New_Q_Sel_5,
      lopt_3 => lopt_81,
      lopt_4 => lopt_82,
      lopt_5 => New_Q_Sel_6,
      lopt_6 => lopt_83,
      lopt_7 => lopt_84,
      lopt_8 => New_Q_Sel_7,
      lopt_9 => lopt_85
    );
\FPGA_Impl2.New_Q_Handle[27].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_524\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(4),
      \Q_reg[27]\(0) => \^q_reg[0]_0\(3),
      S => New_Q_Sel_4,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_525
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_1\,
      \Q_reg[28]\ => \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_3,
      lopt => lopt_74,
      lopt_1 => lopt_75,
      lopt_2 => lopt_78
    );
\FPGA_Impl2.New_Q_Handle[28].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_526\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(3),
      \Q_reg[28]\(0) => \^q_reg[0]_0\(2),
      S => New_Q_Sel_3,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_527
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_1\,
      \Q_reg[29]\ => \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_2,
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_2 => lopt_77
    );
\FPGA_Impl2.New_Q_Handle[29].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_528\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(2),
      \Q_reg[29]\(0) => \^q_reg[0]_0\(1),
      S => New_Q_Sel_2,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_529
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_1\,
      \Q_reg[2]\ => \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_29,
      lopt => lopt_133,
      lopt_1 => lopt_134,
      lopt_2 => lopt_137
    );
\FPGA_Impl2.New_Q_Handle[2].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_530\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(29),
      \Q_reg[2]\(0) => \^q_reg[0]_0\(28),
      S => New_Q_Sel_29,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_531
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_1\,
      \Q_reg[30]\ => \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_1\,
      S => New_Q_Sel_1,
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_2 => lopt_76
    );
\FPGA_Impl2.New_Q_Handle[30].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_532\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(1),
      \Q_reg[30]\(0) => \^q_reg[0]_0\(0),
      S => New_Q_Sel_1,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_533
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_1\,
      New_Q_Carry(0) => New_Q_Carry(32),
      O => \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_2\,
      Q(0) => Q(31),
      S => New_Q_Sel_0,
      ex_div_unsigned => ex_div_unsigned,
      ex_start_div => ex_start_div,
      last_cycle => last_cycle,
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_10 => lopt_77,
      lopt_11 => lopt_78,
      lopt_2 => New_Q_Sel_1,
      lopt_3 => lopt_72,
      lopt_4 => lopt_73,
      lopt_5 => New_Q_Sel_2,
      lopt_6 => lopt_74,
      lopt_7 => lopt_75,
      lopt_8 => New_Q_Sel_3,
      lopt_9 => lopt_76,
      make_result_neg => \^make_result_neg\
    );
\FPGA_Impl2.New_Q_Handle[31].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_534\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q_0(32),
      \Q_reg[31]\(0) => Q(0),
      S => New_Q_Sel_0,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_535
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_1\,
      \Q_reg[3]\ => \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_28,
      lopt => lopt_133,
      lopt_1 => lopt_134,
      lopt_2 => New_Q_Sel_29,
      lopt_3 => lopt_135,
      lopt_4 => lopt_136,
      lopt_5 => New_Q_Sel_30,
      lopt_6 => lopt_137,
      lopt_7 => lopt_138,
      lopt_8 => lopt_139,
      lopt_9 => New_Q_Sel_31
    );
\FPGA_Impl2.New_Q_Handle[3].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_536\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(28),
      \Q_reg[3]\(0) => \^q_reg[0]_0\(27),
      S => New_Q_Sel_28,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_537
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_1\,
      \Q_reg[4]\ => \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_27,
      lopt => lopt_128,
      lopt_1 => lopt_129,
      lopt_2 => lopt_132
    );
\FPGA_Impl2.New_Q_Handle[4].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_538\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(27),
      \Q_reg[4]\(0) => \^q_reg[0]_0\(26),
      S => New_Q_Sel_27,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_539
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_1\,
      \Q_reg[5]\ => \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_26,
      lopt => lopt_126,
      lopt_1 => lopt_127,
      lopt_2 => lopt_131
    );
\FPGA_Impl2.New_Q_Handle[5].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_540\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(26),
      \Q_reg[5]\(0) => \^q_reg[0]_0\(25),
      S => New_Q_Sel_26,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_541
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_1\,
      \Q_reg[6]\ => \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_25,
      lopt => lopt_124,
      lopt_1 => lopt_125,
      lopt_2 => lopt_130
    );
\FPGA_Impl2.New_Q_Handle[6].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_542\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(25),
      \Q_reg[6]\(0) => \^q_reg[0]_0\(24),
      S => New_Q_Sel_25,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_543
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_1\,
      \Q_reg[7]\ => \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_24,
      lopt => lopt_124,
      lopt_1 => lopt_125,
      lopt_10 => lopt_131,
      lopt_11 => lopt_132,
      lopt_2 => New_Q_Sel_25,
      lopt_3 => lopt_126,
      lopt_4 => lopt_127,
      lopt_5 => New_Q_Sel_26,
      lopt_6 => lopt_128,
      lopt_7 => lopt_129,
      lopt_8 => New_Q_Sel_27,
      lopt_9 => lopt_130
    );
\FPGA_Impl2.New_Q_Handle[7].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_544\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(24),
      \Q_reg[7]\(0) => \^q_reg[0]_0\(23),
      S => New_Q_Sel_24,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_545
     port map (
      LO => \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_1\,
      \Q_reg[8]\ => \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_0\,
      S => New_Q_Sel_23,
      lopt => lopt_119,
      lopt_1 => lopt_120,
      lopt_2 => lopt_123
    );
\FPGA_Impl2.New_Q_Handle[8].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_546\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(23),
      \Q_reg[8]\(0) => \^q_reg[0]_0\(22),
      S => New_Q_Sel_23,
      ex_start_div => ex_start_div
    );
\FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_547
     port map (
      CI => \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_0\,
      LO => \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_0\,
      O => \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_1\,
      S => New_Q_Sel_22,
      lopt => lopt_117,
      lopt_1 => lopt_118,
      lopt_2 => lopt_122
    );
\FPGA_Impl2.New_Q_Handle[9].New_Q_LUT4\: entity work.\mb_design_microblaze_0_1_MB_LUT4__parameterized1_548\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q(22),
      \Q_reg[9]\(0) => \^q_reg[0]_0\(21),
      S => New_Q_Sel_22,
      ex_start_div => ex_start_div
    );
\FPGA_Shift.cnt_shifts_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \FPGA_Shift.cnt_shifts_reg[1]_srl30_n_0\,
      Q => div_count_is_2,
      R => '0'
    );
\FPGA_Shift.cnt_shifts_reg[1]_srl30\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11101",
      CE => '1',
      CLK => Clk,
      D => \FPGA_Shift.cnt_shifts_reg_n_0_[31]\,
      Q => \FPGA_Shift.cnt_shifts_reg[1]_srl30_n_0\,
      Q31 => \NLW_FPGA_Shift.cnt_shifts_reg[1]_srl30_Q31_UNCONNECTED\
    );
\FPGA_Shift.cnt_shifts_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \FPGA_Shift.cnt_shifts_reg[31]_0\,
      Q => \FPGA_Shift.cnt_shifts_reg_n_0_[31]\,
      R => '0'
    );
MEM_Div_By_Zero_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => MEM_Div_By_Zero_reg_1,
      D => MEM_Div_By_Zero_reg_2,
      Q => mem_div_by_zero,
      R => reset_overflow
    );
MEM_Div_Overflow_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_2\,
      Q => \^mem_div_overflow_reg_0\,
      R => reset_overflow
    );
\Q[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^e\(0),
      I1 => ex_start_div,
      O => Q0
    );
\Q[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^e\(0),
      I1 => Res_Neg,
      O => new_Q(32)
    );
\Q[32]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => next_sub,
      I1 => R(0),
      O => \Q[32]_i_3_n_0\
    );
\Q_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => p_0_in5_in,
      Q => \^q_reg[0]_0\(31),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[10].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(21),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[11].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(20),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[12].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(19),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[13].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(18),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[14].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(17),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[15].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(16),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[16].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(15),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[17].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(14),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[18].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(13),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[19].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(12),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[1].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(30),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[20].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(11),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[21].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(10),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[22].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(9),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[23].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(8),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[24].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(7),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[25].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(6),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[26].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(5),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[27].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(4),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[28].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(3),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[29].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(2),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[2].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(29),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[30].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(1),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[31].MUXCY_XOR_I_n_2\,
      Q => \^q_reg[0]_0\(0),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => new_Q(32),
      Q => Q_0(32),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[32]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[0]_i_1_n_0\,
      CO(3 downto 0) => \NLW_Q_reg[32]_i_2_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 1) => \NLW_Q_reg[32]_i_2_O_UNCONNECTED\(3 downto 1),
      O(0) => Res_Neg,
      S(3 downto 1) => B"000",
      S(0) => \Q[32]_i_3_n_0\
    );
\Q_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[3].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(28),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[4].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(27),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[5].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(26),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[6].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(25),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[7].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(24),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[8].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(23),
      R => \Q_reg[32]_0\(0)
    );
\Q_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Q0,
      D => \FPGA_Impl2.New_Q_Handle[9].MUXCY_XOR_I_n_1\,
      Q => \^q_reg[0]_0\(22),
      R => \Q_reg[32]_0\(0)
    );
\R[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(0),
      I1 => next_sub,
      I2 => R(1),
      O => \R[0]_i_2_n_0\
    );
\R[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(1),
      I1 => next_sub,
      I2 => R(2),
      O => \R[0]_i_3_n_0\
    );
\R[0]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(2),
      I1 => next_sub,
      I2 => R(3),
      O => \R[0]_i_4_n_0\
    );
\R[0]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(3),
      I1 => next_sub,
      I2 => R(4),
      O => \R[0]_i_5_n_0\
    );
\R[12]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(12),
      I1 => next_sub,
      I2 => R(13),
      O => \R[12]_i_2_n_0\
    );
\R[12]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(13),
      I1 => next_sub,
      I2 => R(14),
      O => \R[12]_i_3_n_0\
    );
\R[12]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(14),
      I1 => next_sub,
      I2 => R(15),
      O => \R[12]_i_4_n_0\
    );
\R[12]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(15),
      I1 => next_sub,
      I2 => R(16),
      O => \R[12]_i_5_n_0\
    );
\R[16]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(16),
      I1 => next_sub,
      I2 => R(17),
      O => \R[16]_i_2_n_0\
    );
\R[16]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(17),
      I1 => next_sub,
      I2 => R(18),
      O => \R[16]_i_3_n_0\
    );
\R[16]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(18),
      I1 => next_sub,
      I2 => R(19),
      O => \R[16]_i_4_n_0\
    );
\R[16]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(19),
      I1 => next_sub,
      I2 => R(20),
      O => \R[16]_i_5_n_0\
    );
\R[20]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(20),
      I1 => next_sub,
      I2 => R(21),
      O => \R[20]_i_2_n_0\
    );
\R[20]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(21),
      I1 => next_sub,
      I2 => R(22),
      O => \R[20]_i_3_n_0\
    );
\R[20]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(22),
      I1 => next_sub,
      I2 => R(23),
      O => \R[20]_i_4_n_0\
    );
\R[20]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(23),
      I1 => next_sub,
      I2 => R(24),
      O => \R[20]_i_5_n_0\
    );
\R[24]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(24),
      I1 => next_sub,
      I2 => R(25),
      O => \R[24]_i_2_n_0\
    );
\R[24]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(25),
      I1 => next_sub,
      I2 => R(26),
      O => \R[24]_i_3_n_0\
    );
\R[24]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(26),
      I1 => next_sub,
      I2 => R(27),
      O => \R[24]_i_4_n_0\
    );
\R[24]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(27),
      I1 => next_sub,
      I2 => R(28),
      O => \R[24]_i_5_n_0\
    );
\R[28]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(28),
      I1 => next_sub,
      I2 => R(29),
      O => \R[28]_i_2_n_0\
    );
\R[28]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(29),
      I1 => next_sub,
      I2 => R(30),
      O => \R[28]_i_3_n_0\
    );
\R[28]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(30),
      I1 => next_sub,
      I2 => R(31),
      O => \R[28]_i_4_n_0\
    );
\R[28]_i_5\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => D_1(31),
      O => \R[28]_i_5_n_0\
    );
\R[4]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(4),
      I1 => next_sub,
      I2 => R(5),
      O => \R[4]_i_2_n_0\
    );
\R[4]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(5),
      I1 => next_sub,
      I2 => R(6),
      O => \R[4]_i_3_n_0\
    );
\R[4]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(6),
      I1 => next_sub,
      I2 => R(7),
      O => \R[4]_i_4_n_0\
    );
\R[4]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(7),
      I1 => next_sub,
      I2 => R(8),
      O => \R[4]_i_5_n_0\
    );
\R[8]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(8),
      I1 => next_sub,
      I2 => R(9),
      O => \R[8]_i_2_n_0\
    );
\R[8]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(9),
      I1 => next_sub,
      I2 => R(10),
      O => \R[8]_i_3_n_0\
    );
\R[8]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(10),
      I1 => next_sub,
      I2 => R(11),
      O => \R[8]_i_4_n_0\
    );
\R[8]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D_1(11),
      I1 => next_sub,
      I2 => R(12),
      O => \R[8]_i_5_n_0\
    );
\R_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(32),
      Q => R(0),
      R => ex_start_div
    );
\R_reg[0]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[4]_i_1_n_0\,
      CO(3) => \R_reg[0]_i_1_n_0\,
      CO(2) => \R_reg[0]_i_1_n_1\,
      CO(1) => \R_reg[0]_i_1_n_2\,
      CO(0) => \R_reg[0]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(1),
      DI(2) => R(2),
      DI(1) => R(3),
      DI(0) => R(4),
      O(3 downto 0) => p_2_in(32 downto 29),
      S(3) => \R[0]_i_2_n_0\,
      S(2) => \R[0]_i_3_n_0\,
      S(1) => \R[0]_i_4_n_0\,
      S(0) => \R[0]_i_5_n_0\
    );
\R_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(22),
      Q => R(10),
      R => ex_start_div
    );
\R_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(21),
      Q => R(11),
      R => ex_start_div
    );
\R_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(20),
      Q => R(12),
      R => ex_start_div
    );
\R_reg[12]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[16]_i_1_n_0\,
      CO(3) => \R_reg[12]_i_1_n_0\,
      CO(2) => \R_reg[12]_i_1_n_1\,
      CO(1) => \R_reg[12]_i_1_n_2\,
      CO(0) => \R_reg[12]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(13),
      DI(2) => R(14),
      DI(1) => R(15),
      DI(0) => R(16),
      O(3 downto 0) => p_2_in(20 downto 17),
      S(3) => \R[12]_i_2_n_0\,
      S(2) => \R[12]_i_3_n_0\,
      S(1) => \R[12]_i_4_n_0\,
      S(0) => \R[12]_i_5_n_0\
    );
\R_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(19),
      Q => R(13),
      R => ex_start_div
    );
\R_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(18),
      Q => R(14),
      R => ex_start_div
    );
\R_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(17),
      Q => R(15),
      R => ex_start_div
    );
\R_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(16),
      Q => R(16),
      R => ex_start_div
    );
\R_reg[16]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[20]_i_1_n_0\,
      CO(3) => \R_reg[16]_i_1_n_0\,
      CO(2) => \R_reg[16]_i_1_n_1\,
      CO(1) => \R_reg[16]_i_1_n_2\,
      CO(0) => \R_reg[16]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(17),
      DI(2) => R(18),
      DI(1) => R(19),
      DI(0) => R(20),
      O(3 downto 0) => p_2_in(16 downto 13),
      S(3) => \R[16]_i_2_n_0\,
      S(2) => \R[16]_i_3_n_0\,
      S(1) => \R[16]_i_4_n_0\,
      S(0) => \R[16]_i_5_n_0\
    );
\R_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(15),
      Q => R(17),
      R => ex_start_div
    );
\R_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(14),
      Q => R(18),
      R => ex_start_div
    );
\R_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(13),
      Q => R(19),
      R => ex_start_div
    );
\R_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(31),
      Q => R(1),
      R => ex_start_div
    );
\R_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(12),
      Q => R(20),
      R => ex_start_div
    );
\R_reg[20]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[24]_i_1_n_0\,
      CO(3) => \R_reg[20]_i_1_n_0\,
      CO(2) => \R_reg[20]_i_1_n_1\,
      CO(1) => \R_reg[20]_i_1_n_2\,
      CO(0) => \R_reg[20]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(21),
      DI(2) => R(22),
      DI(1) => R(23),
      DI(0) => R(24),
      O(3 downto 0) => p_2_in(12 downto 9),
      S(3) => \R[20]_i_2_n_0\,
      S(2) => \R[20]_i_3_n_0\,
      S(1) => \R[20]_i_4_n_0\,
      S(0) => \R[20]_i_5_n_0\
    );
\R_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(11),
      Q => R(21),
      R => ex_start_div
    );
\R_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(10),
      Q => R(22),
      R => ex_start_div
    );
\R_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(9),
      Q => R(23),
      R => ex_start_div
    );
\R_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(8),
      Q => R(24),
      R => ex_start_div
    );
\R_reg[24]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[28]_i_1_n_0\,
      CO(3) => \R_reg[24]_i_1_n_0\,
      CO(2) => \R_reg[24]_i_1_n_1\,
      CO(1) => \R_reg[24]_i_1_n_2\,
      CO(0) => \R_reg[24]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(25),
      DI(2) => R(26),
      DI(1) => R(27),
      DI(0) => R(28),
      O(3 downto 0) => p_2_in(8 downto 5),
      S(3) => \R[24]_i_2_n_0\,
      S(2) => \R[24]_i_3_n_0\,
      S(1) => \R[24]_i_4_n_0\,
      S(0) => \R[24]_i_5_n_0\
    );
\R_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(7),
      Q => R(25),
      R => ex_start_div
    );
\R_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(6),
      Q => R(26),
      R => ex_start_div
    );
\R_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(5),
      Q => R(27),
      R => ex_start_div
    );
\R_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(4),
      Q => R(28),
      R => ex_start_div
    );
\R_reg[28]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \R_reg[28]_i_1_n_0\,
      CO(2) => \R_reg[28]_i_1_n_1\,
      CO(1) => \R_reg[28]_i_1_n_2\,
      CO(0) => \R_reg[28]_i_1_n_3\,
      CYINIT => R(32),
      DI(3) => R(29),
      DI(2) => R(30),
      DI(1) => R(31),
      DI(0) => next_sub,
      O(3 downto 0) => p_2_in(4 downto 1),
      S(3) => \R[28]_i_2_n_0\,
      S(2) => \R[28]_i_3_n_0\,
      S(1) => \R[28]_i_4_n_0\,
      S(0) => \R[28]_i_5_n_0\
    );
\R_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(3),
      Q => R(29),
      R => ex_start_div
    );
\R_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(30),
      Q => R(2),
      R => ex_start_div
    );
\R_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(2),
      Q => R(30),
      R => ex_start_div
    );
\R_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(1),
      Q => R(31),
      R => ex_start_div
    );
\R_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => p_0_in5_in,
      Q => R(32),
      R => '0'
    );
\R_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(29),
      Q => R(3),
      R => ex_start_div
    );
\R_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(28),
      Q => R(4),
      R => ex_start_div
    );
\R_reg[4]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[8]_i_1_n_0\,
      CO(3) => \R_reg[4]_i_1_n_0\,
      CO(2) => \R_reg[4]_i_1_n_1\,
      CO(1) => \R_reg[4]_i_1_n_2\,
      CO(0) => \R_reg[4]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(5),
      DI(2) => R(6),
      DI(1) => R(7),
      DI(0) => R(8),
      O(3 downto 0) => p_2_in(28 downto 25),
      S(3) => \R[4]_i_2_n_0\,
      S(2) => \R[4]_i_3_n_0\,
      S(1) => \R[4]_i_4_n_0\,
      S(0) => \R[4]_i_5_n_0\
    );
\R_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(27),
      Q => R(5),
      R => ex_start_div
    );
\R_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(26),
      Q => R(6),
      R => ex_start_div
    );
\R_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(25),
      Q => R(7),
      R => ex_start_div
    );
\R_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(24),
      Q => R(8),
      R => ex_start_div
    );
\R_reg[8]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R_reg[12]_i_1_n_0\,
      CO(3) => \R_reg[8]_i_1_n_0\,
      CO(2) => \R_reg[8]_i_1_n_1\,
      CO(1) => \R_reg[8]_i_1_n_2\,
      CO(0) => \R_reg[8]_i_1_n_3\,
      CYINIT => '0',
      DI(3) => R(9),
      DI(2) => R(10),
      DI(1) => R(11),
      DI(0) => R(12),
      O(3 downto 0) => p_2_in(24 downto 21),
      S(3) => \R[8]_i_2_n_0\,
      S(2) => \R[8]_i_3_n_0\,
      S(1) => \R[8]_i_4_n_0\,
      S(0) => \R[8]_i_5_n_0\
    );
\R_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(23),
      Q => R(9),
      R => ex_start_div
    );
\Using_FPGA.Native_i_1__144\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => mem_div_stall,
      O => mem_div_stall_i_reg_0
    );
\Using_FPGA.Native_i_1__16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF55540000"
    )
        port map (
      I0 => restore_wb_msr_to_ex,
      I1 => \^mem_div_overflow_reg_0\,
      I2 => mem_div_by_zero,
      I3 => \Using_FPGA.Native\,
      I4 => \Using_FPGA.Native_0\,
      I5 => D(0),
      O => MEM_Div_Overflow_reg_1
    );
div_busy_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => div_busy,
      Q => \^e\(0),
      R => reset_overflow
    );
div_iterations_early_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000330A"
    )
        port map (
      I0 => \^div_iterations_early_reg_0\,
      I1 => div_iterations_early_reg_1,
      I2 => div_count_is_2,
      I3 => ex_start_div,
      I4 => reset_overflow,
      O => div_iterations_early_i_1_n_0
    );
div_iterations_early_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => div_iterations_early_i_1_n_0,
      Q => \^div_iterations_early_reg_0\,
      R => '0'
    );
ex_hold_div_by_zero_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000CA"
    )
        port map (
      I0 => \^ex_hold_div_by_zero_reg_0\,
      I1 => div_iterations_early_reg_1,
      I2 => ex_start_div,
      I3 => MEM_Div_By_Zero_reg_1,
      I4 => reset_overflow,
      O => ex_hold_div_by_zero_i_1_n_0
    );
ex_hold_div_by_zero_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_hold_div_by_zero_i_1_n_0,
      Q => \^ex_hold_div_by_zero_reg_0\,
      R => '0'
    );
ex_hold_div_overflow_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \FPGA_Impl2.New_Q_Handle[0].MUXCY_XOR_I_n_1\,
      Q => ex_hold_div_overflow,
      R => reset_overflow
    );
last_cycle_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => div_count_is_2,
      I1 => ex_start_div,
      I2 => reset_overflow,
      O => last_cycle_i_1_n_0
    );
last_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => last_cycle_i_1_n_0,
      Q => last_cycle,
      R => '0'
    );
make_result_neg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => make_result_neg_reg_0,
      Q => \^make_result_neg\,
      R => reset_overflow
    );
mem_div_stall_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F074F000"
    )
        port map (
      I0 => div_iterations_early_reg_1,
      I1 => ex_start_div,
      I2 => \^div_iterations_early_reg_0\,
      I3 => mem_div_stall,
      I4 => MEM_Div_By_Zero_reg_1,
      O => mem_div_stall_i_i_1_n_0
    );
mem_div_stall_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_div_stall_i_i_1_n_0,
      Q => mem_div_stall,
      R => reset_overflow
    );
mem_last_cycle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => \^mem_last_cycle_reg_0\,
      I1 => last_cycle,
      I2 => ex_start_div,
      I3 => reset_overflow,
      O => mem_last_cycle_i_1_n_0
    );
mem_last_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_last_cycle_i_1_n_0,
      Q => \^mem_last_cycle_reg_0\,
      R => '0'
    );
negative_operands_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => negative_operands_reg_0,
      Q => \^negative_operands\,
      R => reset_overflow
    );
next_sub_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF2E"
    )
        port map (
      I0 => next_sub,
      I1 => \^e\(0),
      I2 => Res_Neg,
      I3 => ex_start_div,
      I4 => reset_overflow,
      O => next_sub_i_1_n_0
    );
next_sub_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => next_sub_i_1_n_0,
      Q => next_sub,
      R => '0'
    );
\wb_exception_kind_i[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFE0000"
    )
        port map (
      I0 => MEM_DAXI_Exception,
      I1 => DUE,
      I2 => \^mem_div_overflow_reg_0\,
      I3 => mem_div_by_zero,
      I4 => mem_MSR(0),
      I5 => mem_exception_from_ex,
      O => mem_daxi_exception_i_reg(0)
    );
\wb_exception_kind_i[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => mem_div_by_zero,
      I1 => \^mem_div_overflow_reg_0\,
      O => MEM_Div_By_Zero_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Operand_Select_gti is
  port (
    \EX_Op2_reg[30]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op1_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op1_reg[16]_0\ : out STD_LOGIC;
    \EX_Op1_reg[17]_0\ : out STD_LOGIC;
    \EX_Op1_reg[18]_0\ : out STD_LOGIC;
    \EX_Op1_reg[19]_0\ : out STD_LOGIC;
    \EX_Op1_reg[20]_0\ : out STD_LOGIC;
    \EX_Op1_reg[21]_0\ : out STD_LOGIC;
    \EX_Op1_reg[22]_0\ : out STD_LOGIC;
    \EX_Op1_reg[23]_0\ : out STD_LOGIC;
    \EX_Op1_reg[24]_0\ : out STD_LOGIC;
    \EX_Op1_reg[25]_0\ : out STD_LOGIC;
    \EX_Op1_reg[26]_0\ : out STD_LOGIC;
    \EX_Op1_reg[27]_0\ : out STD_LOGIC;
    \EX_Op1_reg[28]_0\ : out STD_LOGIC;
    \EX_Op1_reg[29]_0\ : out STD_LOGIC;
    \EX_Op1_reg[30]_0\ : out STD_LOGIC;
    \EX_Op1_reg[31]_0\ : out STD_LOGIC;
    \EX_Op1_reg[0]_1\ : out STD_LOGIC;
    \EX_Op1_reg[1]_0\ : out STD_LOGIC;
    \EX_Op1_reg[2]_0\ : out STD_LOGIC;
    \EX_Op1_reg[3]_0\ : out STD_LOGIC;
    \EX_Op1_reg[4]_0\ : out STD_LOGIC;
    \EX_Op1_reg[5]_0\ : out STD_LOGIC;
    \EX_Op1_reg[6]_0\ : out STD_LOGIC;
    \EX_Op1_reg[7]_0\ : out STD_LOGIC;
    \EX_Op1_reg[8]_0\ : out STD_LOGIC;
    \EX_Op1_reg[9]_0\ : out STD_LOGIC;
    \EX_Op1_reg[0]_2\ : out STD_LOGIC;
    \EX_Op1_reg[1]_1\ : out STD_LOGIC;
    \EX_Op1_reg[0]_3\ : out STD_LOGIC;
    EX_CLZ_Instr_reg : out STD_LOGIC;
    \EX_Op1_reg[15]_0\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    CI : out STD_LOGIC;
    EX_Shift_Logic_Result : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[16]_1\ : out STD_LOGIC;
    \EX_Op1_reg[24]_1\ : out STD_LOGIC;
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[23]_1\ : out STD_LOGIC;
    \EX_Op1_reg[22]_1\ : out STD_LOGIC;
    \EX_Op1_reg[21]_1\ : out STD_LOGIC;
    \EX_Op1_reg[20]_1\ : out STD_LOGIC;
    \EX_Op1_reg[19]_1\ : out STD_LOGIC;
    \EX_Op1_reg[18]_1\ : out STD_LOGIC;
    \EX_Op1_reg[16]_2\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    \EX_Op1_reg[17]_1\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : out STD_LOGIC;
    \EX_Logic_Op_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[16]_3\ : out STD_LOGIC;
    \EX_Op1_reg[19]_2\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_0 : out STD_LOGIC;
    EX_CLZ_Instr_reg_1 : out STD_LOGIC;
    \EX_Op1_reg[16]_4\ : out STD_LOGIC;
    \EX_Op2_reg[22]_0\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op2_reg[29]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2_reg[21]_0\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 13 downto 0 );
    ex_addr_low_bits : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op1_reg[29]_1\ : out STD_LOGIC;
    S : out STD_LOGIC;
    EX_Div_Unsigned_reg : out STD_LOGIC;
    EX_Div_Unsigned_reg_0 : out STD_LOGIC;
    EX_Div_Unsigned_reg_1 : out STD_LOGIC;
    EX_Div_Unsigned_reg_2 : out STD_LOGIC;
    EX_Div_Unsigned_reg_3 : out STD_LOGIC;
    EX_Div_Unsigned_reg_4 : out STD_LOGIC;
    EX_Div_Unsigned_reg_5 : out STD_LOGIC;
    EX_Div_Unsigned_reg_6 : out STD_LOGIC;
    EX_Div_Unsigned_reg_7 : out STD_LOGIC;
    EX_Div_Unsigned_reg_8 : out STD_LOGIC;
    EX_Div_Unsigned_reg_9 : out STD_LOGIC;
    EX_Div_Unsigned_reg_10 : out STD_LOGIC;
    EX_Div_Unsigned_reg_11 : out STD_LOGIC;
    EX_Div_Unsigned_reg_12 : out STD_LOGIC;
    EX_Div_Unsigned_reg_13 : out STD_LOGIC;
    EX_Div_Unsigned_reg_14 : out STD_LOGIC;
    EX_Div_Unsigned_reg_15 : out STD_LOGIC;
    EX_Div_Unsigned_reg_16 : out STD_LOGIC;
    EX_Div_Unsigned_reg_17 : out STD_LOGIC;
    EX_Div_Unsigned_reg_18 : out STD_LOGIC;
    EX_Div_Unsigned_reg_19 : out STD_LOGIC;
    EX_Div_Unsigned_reg_20 : out STD_LOGIC;
    EX_Div_Unsigned_reg_21 : out STD_LOGIC;
    EX_Div_Unsigned_reg_22 : out STD_LOGIC;
    EX_Div_Unsigned_reg_23 : out STD_LOGIC;
    EX_Div_Unsigned_reg_24 : out STD_LOGIC;
    EX_Div_Unsigned_reg_25 : out STD_LOGIC;
    EX_Div_Unsigned_reg_26 : out STD_LOGIC;
    EX_Div_Unsigned_reg_27 : out STD_LOGIC;
    EX_Div_Unsigned_reg_28 : out STD_LOGIC;
    EX_Div_Unsigned_reg_29 : out STD_LOGIC;
    \EX_Op2_reg[0]_0\ : out STD_LOGIC;
    S_0 : out STD_LOGIC;
    I0 : out STD_LOGIC;
    I2 : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]_0\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \imm_reg_reg[0]_0\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    of_op1_sel_spr : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op1_reg[1]_2\ : in STD_LOGIC;
    \EX_Op1_reg[2]_1\ : in STD_LOGIC;
    \EX_Op1_reg[3]_1\ : in STD_LOGIC;
    \EX_Op1_reg[4]_1\ : in STD_LOGIC;
    \EX_Op1_reg[5]_1\ : in STD_LOGIC;
    \EX_Op1_reg[6]_1\ : in STD_LOGIC;
    \EX_Op1_reg[7]_1\ : in STD_LOGIC;
    \EX_Op1_reg[8]_1\ : in STD_LOGIC;
    \EX_Op1_reg[9]_1\ : in STD_LOGIC;
    \EX_Op1_reg[10]_0\ : in STD_LOGIC;
    \EX_Op1_reg[11]_0\ : in STD_LOGIC;
    \EX_Op1_reg[12]_0\ : in STD_LOGIC;
    \EX_Op1_reg[13]_0\ : in STD_LOGIC;
    \EX_Op1_reg[14]_0\ : in STD_LOGIC;
    \EX_Op1_reg[15]_1\ : in STD_LOGIC;
    \EX_Op1_reg[16]_5\ : in STD_LOGIC;
    \EX_Op1_reg[17]_2\ : in STD_LOGIC;
    \EX_Op1_reg[18]_2\ : in STD_LOGIC;
    \EX_Op1_reg[19]_3\ : in STD_LOGIC;
    \EX_Op1_reg[20]_2\ : in STD_LOGIC;
    \EX_Op1_reg[21]_2\ : in STD_LOGIC;
    \EX_Op1_reg[24]_2\ : in STD_LOGIC;
    \EX_Op1_reg[26]_1\ : in STD_LOGIC;
    \EX_Op1_reg[27]_1\ : in STD_LOGIC;
    \EX_Op1_reg[31]_1\ : in STD_LOGIC;
    ex_doublet_access : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_4__1\ : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    ex_reverse_mem_access : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_imm_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3_reg[0]_1\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_bit_extract : in STD_LOGIC;
    ex_mux1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_void_bit : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]\ : in STD_LOGIC;
    ex_left_shift_i : in STD_LOGIC;
    ex_bit_insert : in STD_LOGIC;
    ex_byte_access : in STD_LOGIC;
    ex_MTS_MSR : in STD_LOGIC;
    ex_MSRSET : in STD_LOGIC;
    ex_MSRCLR : in STD_LOGIC;
    \EX_Op1_reg[0]_4\ : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    negative_operands : in STD_LOGIC;
    make_result_neg : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    EX_ALU_Sel_Logic : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_imm_data : in STD_LOGIC_VECTOR ( 0 to 15 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[31]_0\ : in STD_LOGIC;
    \EX_Op2_reg[0]_1\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op1_reg[0]_5\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \EX_Op1_reg[30]_1\ : in STD_LOGIC;
    of_op1_sel_spr_pc : in STD_LOGIC;
    \EX_Op1_reg[28]_1\ : in STD_LOGIC;
    \EX_Op1_reg[25]_1\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[22]_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Operand_Select_gti : entity is "Operand_Select_gti";
end mb_design_microblaze_0_1_Operand_Select_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Operand_Select_gti is
  signal \Barrel_Shifter_I/mem_mask0123_in\ : STD_LOGIC;
  signal \Barrel_Shifter_I/p_2_out\ : STD_LOGIC_VECTOR ( 4 downto 2 );
  signal \^ex_op1_reg[0]_0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^ex_op1_reg[16]_1\ : STD_LOGIC;
  signal \^ex_op1_reg[1]_1\ : STD_LOGIC;
  signal \^ex_op1_reg[24]_1\ : STD_LOGIC;
  signal \^ex_op3_reg[0]_0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Gen_Bit[10].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[11].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[12].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[13].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[14].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[15].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[16].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[17].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[18].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[19].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[1].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[20].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[21].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[22].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[23].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[24].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[25].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[26].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[26].MUXF7_I1_n_3\ : STD_LOGIC;
  signal \Gen_Bit[26].MUXF7_I1_n_4\ : STD_LOGIC;
  signal \Gen_Bit[27].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[27].MUXF7_I1_n_1\ : STD_LOGIC;
  signal \Gen_Bit[28].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[29].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[2].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[30].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[30].MUXF7_I1_n_5\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_1\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_2\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_3\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_4\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_5\ : STD_LOGIC;
  signal \Gen_Bit[31].MUXF7_I1_n_9\ : STD_LOGIC;
  signal \Gen_Bit[3].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[4].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[5].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[6].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[7].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[8].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \Gen_Bit[9].MUXF7_I1_n_0\ : STD_LOGIC;
  signal I1 : STD_LOGIC;
  signal O : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_4_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__0__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__3_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2_n_0\ : STD_LOGIC;
  signal ex_branch_cmp_op1 : STD_LOGIC_VECTOR ( 30 to 31 );
  signal of_op2 : STD_LOGIC_VECTOR ( 27 to 27 );
  signal of_op3 : STD_LOGIC_VECTOR ( 27 to 27 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Byte_Enable[0]_INST_0_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Data_Addr[31]_INST_0\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0_i_3 : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0_i_4 : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[16]_i_1\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[24]_i_1\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[2]_i_4\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[6]_i_2\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[8]_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__32\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__33\ : label is "soft_lutpair15";
begin
  \EX_Op1_reg[0]_0\(31 downto 0) <= \^ex_op1_reg[0]_0\(31 downto 0);
  \EX_Op1_reg[16]_1\ <= \^ex_op1_reg[16]_1\;
  \EX_Op1_reg[1]_1\ <= \^ex_op1_reg[1]_1\;
  \EX_Op1_reg[24]_1\ <= \^ex_op1_reg[24]_1\;
  \EX_Op3_reg[0]_0\(31 downto 0) <= \^ex_op3_reg[0]_0\(31 downto 0);
  Q(31 downto 0) <= \^q\(31 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Byte_Enable[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000969600FFFFFF"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => ex_reverse_mem_access,
      I3 => ex_doublet_access,
      I4 => \^using_fpga.native_0\,
      I5 => ex_byte_access,
      O => \Using_FPGA.Native_1\(3)
    );
\Byte_Enable[0]_INST_0_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"96696969"
    )
        port map (
      I0 => ex_reverse_mem_access,
      I1 => \^q\(1),
      I2 => \^ex_op1_reg[0]_0\(1),
      I3 => \^ex_op1_reg[0]_0\(0),
      I4 => \^q\(0),
      O => \^using_fpga.native_0\
    );
\Byte_Enable[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000696900FFFFFF"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => ex_reverse_mem_access,
      I3 => ex_doublet_access,
      I4 => \^using_fpga.native_0\,
      I5 => ex_byte_access,
      O => \Using_FPGA.Native_1\(2)
    );
\Byte_Enable[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"96FF000096FF00FF"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => ex_reverse_mem_access,
      I3 => ex_byte_access,
      I4 => \^using_fpga.native_0\,
      I5 => ex_doublet_access,
      O => \Using_FPGA.Native_1\(1)
    );
\Byte_Enable[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"69FF000069FF00FF"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => ex_reverse_mem_access,
      I3 => ex_byte_access,
      I4 => \^using_fpga.native_0\,
      I5 => ex_doublet_access,
      O => \Using_FPGA.Native_1\(0)
    );
\Data_Addr[30]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E00E0EE00EE00EE0"
    )
        port map (
      I0 => ex_byte_access,
      I1 => ex_doublet_access,
      I2 => \^q\(1),
      I3 => \^ex_op1_reg[0]_0\(1),
      I4 => \^ex_op1_reg[0]_0\(0),
      I5 => \^q\(0),
      O => \Using_FPGA.Native_1\(13)
    );
\Data_Addr[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => ex_byte_access,
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => \^q\(0),
      O => \Using_FPGA.Native_1\(12)
    );
\Data_Write[16]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(7),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(23),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(15),
      O => \Using_FPGA.Native_1\(11)
    );
\Data_Write[17]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(6),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(22),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(14),
      O => \Using_FPGA.Native_1\(10)
    );
\Data_Write[18]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(5),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(21),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(13),
      O => \Using_FPGA.Native_1\(9)
    );
\Data_Write[19]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(4),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(20),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(12),
      O => \Using_FPGA.Native_1\(8)
    );
\Data_Write[20]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(3),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(19),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(11),
      O => \Using_FPGA.Native_1\(7)
    );
\Data_Write[21]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(2),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(18),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(10),
      O => \Using_FPGA.Native_1\(6)
    );
\Data_Write[22]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(1),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(17),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(9),
      O => \Using_FPGA.Native_1\(5)
    );
\Data_Write[23]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^ex_op3_reg[0]_0\(0),
      I1 => ex_byte_access,
      I2 => \^ex_op3_reg[0]_0\(16),
      I3 => ex_reverse_mem_access,
      I4 => \^ex_op3_reg[0]_0\(8),
      O => \Using_FPGA.Native_1\(4)
    );
\EX_Branch_CMP_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(30),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(20),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(19),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(18),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(17),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(16),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(15),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(14),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(13),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(12),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(11),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(29),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(10),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(9),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(8),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(7),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(6),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(5),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(4),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[27].MUXF7_I1_n_1\,
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(3),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(2),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(28),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(1),
      Q => ex_branch_cmp_op1(30),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(0),
      Q => ex_branch_cmp_op1(31),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(27),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(26),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(25),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(24),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(23),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(22),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(22),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => D(21),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => O,
      Q => \^ex_op1_reg[0]_0\(31),
      R => sync_reset
    );
\EX_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[10].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[11].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[12].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[13].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[14].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[15].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[16].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[17].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[18].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[19].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[1].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(30),
      R => sync_reset
    );
\EX_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[20].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[21].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[22].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[23].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[24].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[25].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[26].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[27].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[28].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[29].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[2].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[30].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[31].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[3].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[4].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[5].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[6].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[7].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[8].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \Gen_Bit[9].MUXF7_I1_n_0\,
      Q => \^ex_op1_reg[0]_0\(22),
      R => sync_reset
    );
\EX_Op2[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => EX_Fwd(0),
      I1 => of_op2_imm_addr(0),
      I2 => WB_Fwd(0),
      I3 => of_op2_sel(0),
      I4 => of_op2_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[27]_0\(0),
      O => of_op2(27)
    );
\EX_Op2_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(30),
      Q => \^q\(31),
      R => sync_reset
    );
\EX_Op2_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(20),
      Q => \^q\(21),
      R => sync_reset
    );
\EX_Op2_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(19),
      Q => \^q\(20),
      R => sync_reset
    );
\EX_Op2_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(18),
      Q => \^q\(19),
      R => sync_reset
    );
\EX_Op2_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(17),
      Q => \^q\(18),
      R => sync_reset
    );
\EX_Op2_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(16),
      Q => \^q\(17),
      R => sync_reset
    );
\EX_Op2_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(15),
      Q => \^q\(16),
      R => sync_reset
    );
\EX_Op2_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(14),
      Q => \^q\(15),
      R => sync_reset
    );
\EX_Op2_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(13),
      Q => \^q\(14),
      R => sync_reset
    );
\EX_Op2_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(12),
      Q => \^q\(13),
      R => sync_reset
    );
\EX_Op2_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(11),
      Q => \^q\(12),
      R => sync_reset
    );
\EX_Op2_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(29),
      Q => \^q\(30),
      R => sync_reset
    );
\EX_Op2_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(10),
      Q => \^q\(11),
      R => sync_reset
    );
\EX_Op2_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(9),
      Q => \^q\(10),
      R => sync_reset
    );
\EX_Op2_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(8),
      Q => \^q\(9),
      R => sync_reset
    );
\EX_Op2_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(7),
      Q => \^q\(8),
      R => sync_reset
    );
\EX_Op2_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(6),
      Q => \^q\(7),
      R => sync_reset
    );
\EX_Op2_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(5),
      Q => \^q\(6),
      R => sync_reset
    );
\EX_Op2_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(4),
      Q => \^q\(5),
      R => sync_reset
    );
\EX_Op2_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => of_op2(27),
      Q => \^q\(4),
      R => sync_reset
    );
\EX_Op2_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(3),
      Q => \^q\(3),
      R => sync_reset
    );
\EX_Op2_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(2),
      Q => \^q\(2),
      R => sync_reset
    );
\EX_Op2_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(28),
      Q => \^q\(29),
      R => sync_reset
    );
\EX_Op2_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(1),
      Q => \^q\(1),
      R => sync_reset
    );
\EX_Op2_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(0),
      Q => \^q\(0),
      R => sync_reset
    );
\EX_Op2_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(27),
      Q => \^q\(28),
      R => sync_reset
    );
\EX_Op2_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(26),
      Q => \^q\(27),
      R => sync_reset
    );
\EX_Op2_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(25),
      Q => \^q\(26),
      R => sync_reset
    );
\EX_Op2_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(24),
      Q => \^q\(25),
      R => sync_reset
    );
\EX_Op2_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(23),
      Q => \^q\(24),
      R => sync_reset
    );
\EX_Op2_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(22),
      Q => \^q\(23),
      R => sync_reset
    );
\EX_Op2_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op2_reg[0]_1\(21),
      Q => \^q\(22),
      R => sync_reset
    );
\EX_Op3[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0AAFFCCF0AA00CC"
    )
        port map (
      I0 => EX_Fwd(0),
      I1 => GPR_Op3(0),
      I2 => WB_Fwd(0),
      I3 => of_op3_sel(0),
      I4 => of_op3_sel(1),
      I5 => \EX_Branch_CMP_Op1_reg[27]_0\(0),
      O => of_op3(27)
    );
\EX_Op3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(30),
      Q => \^ex_op3_reg[0]_0\(31),
      R => sync_reset
    );
\EX_Op3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(20),
      Q => \^ex_op3_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Op3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(19),
      Q => \^ex_op3_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(18),
      Q => \^ex_op3_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Op3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(17),
      Q => \^ex_op3_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Op3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(16),
      Q => \^ex_op3_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Op3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(15),
      Q => \^ex_op3_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Op3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(14),
      Q => \^ex_op3_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Op3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(13),
      Q => \^ex_op3_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Op3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(12),
      Q => \^ex_op3_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Op3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(11),
      Q => \^ex_op3_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Op3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(29),
      Q => \^ex_op3_reg[0]_0\(30),
      R => sync_reset
    );
\EX_Op3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(10),
      Q => \^ex_op3_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Op3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(9),
      Q => \^ex_op3_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Op3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(8),
      Q => \^ex_op3_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Op3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(7),
      Q => \^ex_op3_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Op3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(6),
      Q => \^ex_op3_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Op3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(5),
      Q => \^ex_op3_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Op3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(4),
      Q => \^ex_op3_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Op3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => of_op3(27),
      Q => \^ex_op3_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Op3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(3),
      Q => \^ex_op3_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Op3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(2),
      Q => \^ex_op3_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Op3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(28),
      Q => \^ex_op3_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Op3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(1),
      Q => \^ex_op3_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Op3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(0),
      Q => \^ex_op3_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Op3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(27),
      Q => \^ex_op3_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Op3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(26),
      Q => \^ex_op3_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Op3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(25),
      Q => \^ex_op3_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Op3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(24),
      Q => \^ex_op3_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Op3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(23),
      Q => \^ex_op3_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Op3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(22),
      Q => \^ex_op3_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Op3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \EX_Branch_CMP_Op1_reg[31]_0\,
      D => \EX_Op3_reg[0]_1\(21),
      Q => \^ex_op3_reg[0]_0\(22),
      R => sync_reset
    );
\Gen_Bit[0].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_564
     port map (
      D(0) => O,
      \EX_Op1_reg[0]\(0) => D(30),
      \EX_Op1_reg[16]\ => \EX_Op1_reg[16]_0\,
      I1 => I1,
      Q(1) => \^ex_op1_reg[0]_0\(15),
      Q(0) => \^ex_op1_reg[0]_0\(7),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[10].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_565
     port map (
      D(0) => \Gen_Bit[10].MUXF7_I1_n_0\,
      \EX_Op1_reg[10]\(0) => D(20),
      \EX_Op1_reg[10]_0\ => \EX_Op1_reg[10]_0\,
      \EX_Op1_reg[26]\ => \EX_Op1_reg[26]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(13),
      Q(0) => \^ex_op1_reg[0]_0\(5),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[11].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_566
     port map (
      D(0) => \Gen_Bit[11].MUXF7_I1_n_0\,
      \EX_Op1_reg[11]\(0) => D(19),
      \EX_Op1_reg[11]_0\ => \EX_Op1_reg[11]_0\,
      \EX_Op1_reg[27]\ => \EX_Op1_reg[27]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(12),
      Q(0) => \^ex_op1_reg[0]_0\(4),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[12].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_567
     port map (
      D(0) => \Gen_Bit[12].MUXF7_I1_n_0\,
      \EX_Op1_reg[12]\(0) => D(18),
      \EX_Op1_reg[12]_0\ => \EX_Op1_reg[12]_0\,
      \EX_Op1_reg[28]\ => \EX_Op1_reg[28]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(11),
      Q(0) => \^ex_op1_reg[0]_0\(3),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[13].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_568
     port map (
      D(0) => \Gen_Bit[13].MUXF7_I1_n_0\,
      \EX_Op1_reg[13]\(0) => D(17),
      \EX_Op1_reg[13]_0\ => \EX_Op1_reg[13]_0\,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(10),
      Q(0) => \^ex_op1_reg[0]_0\(2),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[14].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_569
     port map (
      D(0) => \Gen_Bit[14].MUXF7_I1_n_0\,
      \EX_Op1_reg[14]\(0) => D(16),
      \EX_Op1_reg[14]_0\ => \EX_Op1_reg[14]_0\,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(9),
      Q(0) => \^ex_op1_reg[0]_0\(1),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[15].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_570
     port map (
      D(0) => \Gen_Bit[15].MUXF7_I1_n_0\,
      \EX_Op1_reg[15]\(0) => D(15),
      \EX_Op1_reg[15]_0\ => \EX_Op1_reg[15]_1\,
      \EX_Op1_reg[31]\ => \EX_Op1_reg[31]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(8),
      Q(0) => \^ex_op1_reg[0]_0\(0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[16].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_571
     port map (
      D(0) => \Gen_Bit[16].MUXF7_I1_n_0\,
      \EX_Op1_reg[0]\ => \EX_Op1_reg[0]_1\,
      \EX_Op1_reg[16]\ => \EX_Op1_reg[16]_2\,
      \EX_Op1_reg[16]_0\(0) => D(14),
      \EX_Op1_reg[16]_1\ => \EX_Op1_reg[16]_5\,
      Q(3) => \^ex_op1_reg[0]_0\(31),
      Q(2) => \^ex_op1_reg[0]_0\(23),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(16 downto 15),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[17].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_572
     port map (
      D(0) => \Gen_Bit[17].MUXF7_I1_n_0\,
      \EX_Op1_reg[17]\ => \EX_Op1_reg[17]_1\,
      \EX_Op1_reg[17]_0\(0) => D(13),
      \EX_Op1_reg[17]_1\ => \EX_Op1_reg[17]_2\,
      \EX_Op1_reg[1]\ => \EX_Op1_reg[1]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(30),
      Q(2) => \^ex_op1_reg[0]_0\(22),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(15 downto 14),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[18].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_573
     port map (
      D(0) => \Gen_Bit[18].MUXF7_I1_n_0\,
      \EX_Op1_reg[18]\ => \EX_Op1_reg[18]_1\,
      \EX_Op1_reg[18]_0\(0) => D(12),
      \EX_Op1_reg[18]_1\ => \EX_Op1_reg[18]_2\,
      \EX_Op1_reg[2]\ => \EX_Op1_reg[2]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(29),
      Q(2) => \^ex_op1_reg[0]_0\(21),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(14 downto 13),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[19].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_574
     port map (
      D(0) => \Gen_Bit[19].MUXF7_I1_n_0\,
      \EX_Op1_reg[19]\ => \EX_Op1_reg[19]_1\,
      \EX_Op1_reg[19]_0\(0) => D(11),
      \EX_Op1_reg[19]_1\ => \EX_Op1_reg[19]_3\,
      \EX_Op1_reg[3]\ => \EX_Op1_reg[3]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(28),
      Q(2) => \^ex_op1_reg[0]_0\(20),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(13 downto 12),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[1].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_575
     port map (
      D(0) => \Gen_Bit[1].MUXF7_I1_n_0\,
      \EX_Op1_reg[17]\ => \EX_Op1_reg[17]_0\,
      \EX_Op1_reg[1]\(0) => D(29),
      \EX_Op1_reg[1]_0\ => \EX_Op1_reg[1]_2\,
      Q(1) => \^ex_op1_reg[0]_0\(14),
      Q(0) => \^ex_op1_reg[0]_0\(6),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[20].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_576
     port map (
      D(0) => \Gen_Bit[20].MUXF7_I1_n_0\,
      \EX_Op1_reg[20]\ => \EX_Op1_reg[20]_1\,
      \EX_Op1_reg[20]_0\(0) => D(10),
      \EX_Op1_reg[20]_1\ => \EX_Op1_reg[20]_2\,
      \EX_Op1_reg[4]\ => \EX_Op1_reg[4]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(27),
      Q(2) => \^ex_op1_reg[0]_0\(19),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(12 downto 11),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[21].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_577
     port map (
      D(0) => \Gen_Bit[21].MUXF7_I1_n_0\,
      \EX_Op1_reg[21]\ => \EX_Op1_reg[21]_1\,
      \EX_Op1_reg[21]_0\(0) => D(9),
      \EX_Op1_reg[21]_1\ => \EX_Op1_reg[21]_2\,
      \EX_Op1_reg[5]\ => \EX_Op1_reg[5]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(26),
      Q(2) => \^ex_op1_reg[0]_0\(18),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(11 downto 10),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[22].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_578
     port map (
      D(0) => \Gen_Bit[22].MUXF7_I1_n_0\,
      \EX_Op1_reg[22]\ => \EX_Op1_reg[22]_1\,
      \EX_Op1_reg[22]_0\(0) => D(8),
      \EX_Op1_reg[22]_1\ => \Using_FPGA.Native_i_2__4_n_0\,
      \EX_Op1_reg[6]\ => \EX_Op1_reg[6]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(25),
      Q(2) => \^ex_op1_reg[0]_0\(17),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(10 downto 9),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[23].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_579
     port map (
      D(0) => \Gen_Bit[23].MUXF7_I1_n_0\,
      \EX_Op1_reg[23]\ => \EX_Op1_reg[23]_1\,
      \EX_Op1_reg[23]_0\(0) => D(7),
      \EX_Op1_reg[23]_1\ => \Using_FPGA.Native_i_2__3_n_0\,
      \EX_Op1_reg[7]\ => \EX_Op1_reg[7]_0\,
      Q(3) => \^ex_op1_reg[0]_0\(24),
      Q(2) => \^ex_op1_reg[0]_0\(16),
      Q(1 downto 0) => \^ex_op1_reg[0]_0\(9 downto 8),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_5\(1 downto 0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\ => \out\
    );
\Gen_Bit[24].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_580
     port map (
      D(0) => \Gen_Bit[24].MUXF7_I1_n_0\,
      \EX_Op1_reg[24]\(0) => D(6),
      \EX_Op1_reg[24]_0\ => \EX_Op1_reg[24]_2\,
      \EX_Op1_reg[8]\ => \EX_Op1_reg[8]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(31),
      Q(0) => \^ex_op1_reg[0]_0\(23),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[25].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_581
     port map (
      D(0) => \Gen_Bit[25].MUXF7_I1_n_0\,
      \EX_Op1_reg[25]\(0) => D(5),
      \EX_Op1_reg[25]_0\ => \Using_FPGA.Native_i_2__2_n_0\,
      \EX_Op1_reg[9]\ => \EX_Op1_reg[9]_0\,
      Q(1) => \^ex_op1_reg[0]_0\(30),
      Q(0) => \^ex_op1_reg[0]_0\(22),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[26].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_582
     port map (
      D(0) => \Gen_Bit[26].MUXF7_I1_n_0\,
      \EX_Op1_reg[16]\ => \EX_Op1_reg[16]_4\,
      \EX_Op1_reg[24]\ => \^ex_op1_reg[24]_1\,
      \EX_Op1_reg[26]\(0) => D(4),
      \EX_Op1_reg[26]_0\ => \EX_Op1_reg[26]_1\,
      \EX_Op2_reg[28]\ => \Gen_Bit[26].MUXF7_I1_n_4\,
      \EX_Op2_reg[31]\ => \Gen_Bit[26].MUXF7_I1_n_3\,
      Q(7 downto 0) => \^ex_op1_reg[0]_0\(7 downto 0),
      \Using_FPGA.Native_0\ => \^ex_op1_reg[16]_1\,
      \Using_FPGA.Native_1\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \Using_FPGA.Native_2\(7 downto 0) => \^q\(7 downto 0),
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[27].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_583
     port map (
      D(0) => \Gen_Bit[27].MUXF7_I1_n_0\,
      \EX_Branch_CMP_Op1_reg[27]\(0) => \EX_Branch_CMP_Op1_reg[27]_0\(0),
      EX_CLZ_Instr_reg => EX_CLZ_Instr_reg,
      EX_Fwd(0) => EX_Fwd(0),
      \EX_Op1_reg[27]\ => \EX_Op1_reg[27]_1\,
      GPR_Op1(0) => GPR_Op1(0),
      \Using_FPGA.Native_0\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \Using_FPGA.Native_1\ => \^ex_op1_reg[1]_1\,
      WB_Fwd(0) => WB_Fwd(0),
      ex_clz_instr => ex_clz_instr,
      ex_sel_alu_i_reg(0) => \Gen_Bit[27].MUXF7_I1_n_1\,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[28].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_584
     port map (
      D(0) => \Gen_Bit[28].MUXF7_I1_n_0\,
      \EX_Op1_reg[28]\(0) => D(3),
      \EX_Op1_reg[28]_0\ => \Using_FPGA.Native_i_2__1_n_0\,
      EX_Shift_Logic_Result(0) => EX_Shift_Logic_Result(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \Using_FPGA.Native_2\ => \^ex_op1_reg[16]_1\,
      \Using_FPGA.Native_3\ => \^ex_op1_reg[24]_1\,
      \Using_FPGA.Native_4\ => \^ex_op1_reg[1]_1\,
      ex_clz_instr => ex_clz_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[29].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_585
     port map (
      D(0) => \Gen_Bit[29].MUXF7_I1_n_0\,
      \EX_Op1_reg[0]\ => \EX_Op1_reg[0]_3\,
      \EX_Op1_reg[19]\ => \EX_Op1_reg[19]_2\,
      \EX_Op1_reg[1]\ => \^ex_op1_reg[1]_1\,
      \EX_Op1_reg[29]\(0) => D(2),
      \EX_Op1_reg[29]_0\ => \Using_FPGA.Native_i_2__0__0_n_0\,
      EX_Pattern_Cmp_Sel_reg => EX_Pattern_Cmp_Sel_reg_0,
      Q(15 downto 12) => \^ex_op1_reg[0]_0\(31 downto 28),
      Q(11 downto 8) => \^ex_op1_reg[0]_0\(23 downto 20),
      Q(7 downto 4) => \^ex_op1_reg[0]_0\(15 downto 12),
      Q(3 downto 0) => \^ex_op1_reg[0]_0\(7 downto 4),
      \Using_FPGA.Native_0\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \Using_FPGA.Native_1\ => \^ex_op1_reg[16]_1\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_6\(1),
      \Using_FPGA.Native_3\ => \^ex_op1_reg[24]_1\,
      \Using_FPGA.Native_4\ => \Gen_Bit[31].MUXF7_I1_n_2\,
      \Using_FPGA.Native_5\ => \Gen_Bit[31].MUXF7_I1_n_1\,
      \Using_FPGA.Native_6\(1 downto 0) => \^q\(31 downto 30),
      \Using_FPGA.Native_i_3__2_0\ => \Gen_Bit[31].MUXF7_I1_n_3\,
      \Using_FPGA.Native_i_3__2_1\ => \Gen_Bit[31].MUXF7_I1_n_4\,
      \Using_FPGA.Native_i_3__2_2\ => \Gen_Bit[31].MUXF7_I1_n_5\,
      \Using_FPGA.Native_i_3__2_3\ => \Gen_Bit[26].MUXF7_I1_n_4\,
      \Using_FPGA.Native_i_3__2_4\ => \Gen_Bit[26].MUXF7_I1_n_3\,
      \Using_FPGA.Native_i_3__2_5\ => \Gen_Bit[30].MUXF7_I1_n_5\,
      ex_clz_instr => ex_clz_instr,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[2].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_586
     port map (
      D(0) => \Gen_Bit[2].MUXF7_I1_n_0\,
      \EX_Op1_reg[18]\ => \EX_Op1_reg[18]_0\,
      \EX_Op1_reg[2]\(0) => D(28),
      \EX_Op1_reg[2]_0\ => \EX_Op1_reg[2]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(13),
      Q(0) => \^ex_op1_reg[0]_0\(5),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[30].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_587
     port map (
      D(0) => \Gen_Bit[30].MUXF7_I1_n_0\,
      \EX_Op1_reg[0]\ => \EX_Op1_reg[0]_2\,
      \EX_Op1_reg[16]\ => \^ex_op1_reg[16]_1\,
      \EX_Op1_reg[16]_0\ => \EX_Op1_reg[16]_3\,
      \EX_Op1_reg[30]\(0) => D(1),
      \EX_Op1_reg[30]_0\ => \Using_FPGA.Native_i_2_n_0\,
      \EX_Op2_reg[25]\ => \Gen_Bit[30].MUXF7_I1_n_5\,
      EX_Pattern_Cmp_Sel_reg => EX_Pattern_Cmp_Sel_reg,
      Q(23 downto 18) => \^ex_op1_reg[0]_0\(31 downto 26),
      Q(17 downto 12) => \^ex_op1_reg[0]_0\(23 downto 18),
      Q(11 downto 6) => \^ex_op1_reg[0]_0\(15 downto 10),
      Q(5 downto 0) => \^ex_op1_reg[0]_0\(7 downto 2),
      \Using_FPGA.Native_0\ => \^ex_op1_reg[1]_1\,
      \Using_FPGA.Native_1\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_6\(1),
      \Using_FPGA.Native_3\(3 downto 2) => \^q\(15 downto 14),
      \Using_FPGA.Native_3\(1 downto 0) => \^q\(7 downto 6),
      \Using_FPGA.Native_4\ => \Gen_Bit[31].MUXF7_I1_n_4\,
      \Using_FPGA.Native_5\ => \Gen_Bit[31].MUXF7_I1_n_3\,
      \Using_FPGA.Native_i_3__1_0\ => \Gen_Bit[26].MUXF7_I1_n_4\,
      \Using_FPGA.Native_i_3__1_1\ => \Gen_Bit[26].MUXF7_I1_n_3\,
      ex_clz_instr => ex_clz_instr,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[31].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_588
     port map (
      D(0) => \Gen_Bit[31].MUXF7_I1_n_0\,
      EX_CLZ_Instr_reg => EX_CLZ_Instr_reg_0,
      EX_CLZ_Instr_reg_0 => EX_CLZ_Instr_reg_1,
      \EX_Logic_Op_reg[1]\ => \EX_Logic_Op_reg[1]\,
      \EX_Op1_reg[15]\ => \EX_Op1_reg[15]_0\,
      \EX_Op1_reg[31]\(0) => D(0),
      \EX_Op1_reg[31]_0\ => \EX_Op1_reg[31]_1\,
      \EX_Op1_reg[9]\ => \Gen_Bit[31].MUXF7_I1_n_9\,
      \EX_Op2_reg[17]\ => \Gen_Bit[31].MUXF7_I1_n_5\,
      \EX_Op2_reg[20]\ => \Gen_Bit[31].MUXF7_I1_n_3\,
      \EX_Op2_reg[23]\ => \Gen_Bit[31].MUXF7_I1_n_4\,
      \EX_Op2_reg[4]\ => \Gen_Bit[31].MUXF7_I1_n_1\,
      \EX_Op2_reg[7]\ => \Gen_Bit[31].MUXF7_I1_n_2\,
      Q(22 downto 0) => \^q\(30 downto 8),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \^ex_op1_reg[1]_1\,
      \Using_FPGA.Native_2\(1 downto 0) => \Using_FPGA.Native_6\(1 downto 0),
      \Using_FPGA.Native_3\ => \^ex_op1_reg[16]_1\,
      \Using_FPGA.Native_4\ => \^ex_op1_reg[24]_1\,
      \Using_FPGA.Native_i_2__29_0\ => \Gen_Bit[26].MUXF7_I1_n_4\,
      \Using_FPGA.Native_i_2__29_1\ => \Gen_Bit[26].MUXF7_I1_n_3\,
      \Using_FPGA.Native_i_2__29_2\ => \Gen_Bit[30].MUXF7_I1_n_5\,
      \Using_FPGA.Native_i_3_0\(30 downto 0) => \^ex_op1_reg[0]_0\(31 downto 1),
      \Using_FPGA.Native_i_4__1_0\ => \Using_FPGA.Native_i_4__1\,
      ex_clz_instr => ex_clz_instr,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[3].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_589
     port map (
      D(0) => \Gen_Bit[3].MUXF7_I1_n_0\,
      \EX_Op1_reg[19]\ => \EX_Op1_reg[19]_0\,
      \EX_Op1_reg[3]\(0) => D(27),
      \EX_Op1_reg[3]_0\ => \EX_Op1_reg[3]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(12),
      Q(0) => \^ex_op1_reg[0]_0\(4),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[4].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_590
     port map (
      D(0) => \Gen_Bit[4].MUXF7_I1_n_0\,
      \EX_Op1_reg[20]\ => \EX_Op1_reg[20]_0\,
      \EX_Op1_reg[4]\(0) => D(26),
      \EX_Op1_reg[4]_0\ => \EX_Op1_reg[4]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(11),
      Q(0) => \^ex_op1_reg[0]_0\(3),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[5].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_591
     port map (
      D(0) => \Gen_Bit[5].MUXF7_I1_n_0\,
      \EX_Op1_reg[21]\ => \EX_Op1_reg[21]_0\,
      \EX_Op1_reg[5]\(0) => D(25),
      \EX_Op1_reg[5]_0\ => \EX_Op1_reg[5]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(10),
      Q(0) => \^ex_op1_reg[0]_0\(2),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[6].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_592
     port map (
      D(0) => \Gen_Bit[6].MUXF7_I1_n_0\,
      \EX_Op1_reg[22]\ => \EX_Op1_reg[22]_0\,
      \EX_Op1_reg[6]\(0) => D(24),
      \EX_Op1_reg[6]_0\ => \EX_Op1_reg[6]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(9),
      Q(0) => \^ex_op1_reg[0]_0\(1),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[7].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_593
     port map (
      D(0) => \Gen_Bit[7].MUXF7_I1_n_0\,
      \EX_Op1_reg[23]\ => \EX_Op1_reg[23]_0\,
      \EX_Op1_reg[7]\(0) => D(23),
      \EX_Op1_reg[7]_0\ => \EX_Op1_reg[7]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(8),
      Q(0) => \^ex_op1_reg[0]_0\(0),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[8].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_594
     port map (
      D(0) => \Gen_Bit[8].MUXF7_I1_n_0\,
      \EX_Op1_reg[24]\ => \EX_Op1_reg[24]_0\,
      \EX_Op1_reg[8]\(0) => D(22),
      \EX_Op1_reg[8]_0\ => \EX_Op1_reg[8]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(15),
      Q(0) => \^ex_op1_reg[0]_0\(7),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[9].MUXF7_I1\: entity work.mb_design_microblaze_0_1_MB_MUXF7_595
     port map (
      D(0) => \Gen_Bit[9].MUXF7_I1_n_0\,
      \EX_Op1_reg[25]\ => \EX_Op1_reg[25]_0\,
      \EX_Op1_reg[9]\(0) => D(21),
      \EX_Op1_reg[9]_0\ => \EX_Op1_reg[9]_1\,
      Q(1) => \^ex_op1_reg[0]_0\(14),
      Q(0) => \^ex_op1_reg[0]_0\(6),
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
Read_Strobe_INST_0_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8778"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => \^ex_op1_reg[0]_0\(1),
      I3 => \^q\(1),
      O => ex_addr_low_bits(1)
    );
Read_Strobe_INST_0_i_4: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^ex_op1_reg[0]_0\(0),
      O => ex_addr_low_bits(0)
    );
\Use_HW_BS.Using_BitField.mem_mask0[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBBAAAA00505555"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(21)
    );
\Use_HW_BS.Using_BitField.mem_mask0[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBFFAAAA50005555"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(2),
      I2 => \^q\(8),
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\,
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(20)
    );
\Use_HW_BS.Using_BitField.mem_mask0[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAFAF55445544"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(9),
      I2 => \^q\(3),
      I3 => \^q\(8),
      I4 => \^q\(2),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(19)
    );
\Use_HW_BS.Using_BitField.mem_mask0[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555F5FCCC0CCC0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(18)
    );
\Use_HW_BS.Using_BitField.mem_mask0[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBAAAAAA50555555"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(17)
    );
\Use_HW_BS.Using_BitField.mem_mask0[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555F5FCCC0CCC0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(16)
    );
\Use_HW_BS.Using_BitField.mem_mask0[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2E"
    )
        port map (
      I0 => \^q\(10),
      I1 => ex_bit_insert,
      I2 => \^q\(4),
      O => \EX_Op2_reg[21]_0\(15)
    );
\Use_HW_BS.Using_BitField.mem_mask0[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05055555FCCCFCCC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(14)
    );
\Use_HW_BS.Using_BitField.mem_mask0[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAA22555555F5"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(13)
    );
\Use_HW_BS.Using_BitField.mem_mask0[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA22AAAA55F55555"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(2),
      I2 => \^q\(8),
      I3 => \Barrel_Shifter_I/p_2_out\(3),
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\,
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(12)
    );
\Use_HW_BS.Using_BitField.mem_mask0[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F5FFFFF88008800"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\,
      I1 => \^q\(10),
      I2 => \^q\(4),
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(30)
    );
\Use_HW_BS.Using_BitField.mem_mask0[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000B8308800"
    )
        port map (
      I0 => \^q\(1),
      I1 => ex_bit_insert,
      I2 => \^q\(7),
      I3 => \^q\(0),
      I4 => \^q\(6),
      I5 => \Barrel_Shifter_I/p_2_out\(2),
      O => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0A0AAAAADD55DD55"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(9),
      I2 => \^q\(3),
      I3 => \^q\(8),
      I4 => \^q\(2),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(11)
    );
\Use_HW_BS.Using_BitField.mem_mask0[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05055555FCCCFCCC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(10)
    );
\Use_HW_BS.Using_BitField.mem_mask0[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA22005555F5FF"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(9)
    );
\Use_HW_BS.Using_BitField.mem_mask0[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"05055555FCCCFCCC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(8)
    );
\Use_HW_BS.Using_BitField.mem_mask0[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0505FFCC"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(9),
      I2 => \^q\(4),
      I3 => \^q\(10),
      I4 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(7)
    );
\Use_HW_BS.Using_BitField.mem_mask0[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000505FFFCFFFC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(6)
    );
\Use_HW_BS.Using_BitField.mem_mask0[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA22000055F5FFFF"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(5)
    );
\Use_HW_BS.Using_BitField.mem_mask0[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22AA0000F555FFFF"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(2),
      I2 => \^q\(8),
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\,
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(4)
    );
\Use_HW_BS.Using_BitField.mem_mask0[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000A0AFFDDFFDD"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(9),
      I2 => \^q\(3),
      I3 => \^q\(8),
      I4 => \^q\(2),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(3)
    );
\Use_HW_BS.Using_BitField.mem_mask0[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000505FFFCFFFC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(2)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFBB00000050"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(29)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => \^q\(4),
      I1 => ex_bit_insert,
      I2 => \^q\(10),
      O => \Barrel_Shifter_I/p_2_out\(4)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => \^q\(2),
      I1 => ex_bit_insert,
      I2 => \^q\(8),
      O => \Barrel_Shifter_I/p_2_out\(2)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"47"
    )
        port map (
      I0 => \^q\(3),
      I1 => ex_bit_insert,
      I2 => \^q\(9),
      O => \Barrel_Shifter_I/p_2_out\(3)
    );
\Use_HW_BS.Using_BitField.mem_mask0[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22000000F5FFFFFF"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(1),
      I2 => \^q\(7),
      I3 => \Barrel_Shifter_I/p_2_out\(2),
      I4 => \Barrel_Shifter_I/p_2_out\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(1)
    );
\Use_HW_BS.Using_BitField.mem_mask0[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000505FFFCFFFC"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(0)
    );
\Use_HW_BS.Using_BitField.mem_mask0[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBBFFFF00500000"
    )
        port map (
      I0 => \Barrel_Shifter_I/p_2_out\(4),
      I1 => \^q\(2),
      I2 => \^q\(8),
      I3 => \Barrel_Shifter_I/p_2_out\(3),
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\,
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(28)
    );
\Use_HW_BS.Using_BitField.mem_mask0[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFACCFA"
    )
        port map (
      I0 => \^q\(6),
      I1 => \^q\(0),
      I2 => \^q\(7),
      I3 => ex_bit_insert,
      I4 => \^q\(1),
      O => \Use_HW_BS.Using_BitField.mem_mask0[3]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F5F5FFFF0C000C00"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(8),
      I2 => \Barrel_Shifter_I/p_2_out\(4),
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(27)
    );
\Use_HW_BS.Using_BitField.mem_mask0[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F5FFFFF88008800"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\,
      I1 => \^q\(10),
      I2 => \^q\(4),
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(26)
    );
\Use_HW_BS.Using_BitField.mem_mask0[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8308800FFFFFFFF"
    )
        port map (
      I0 => \^q\(1),
      I1 => ex_bit_insert,
      I2 => \^q\(7),
      I3 => \^q\(0),
      I4 => \^q\(6),
      I5 => \Barrel_Shifter_I/p_2_out\(2),
      O => \Use_HW_BS.Using_BitField.mem_mask0[5]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0033FFFFFAFA0000"
    )
        port map (
      I0 => \^q\(8),
      I1 => \^q\(2),
      I2 => \^q\(7),
      I3 => \^q\(1),
      I4 => \Barrel_Shifter_I/mem_mask0123_in\,
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(25)
    );
\Use_HW_BS.Using_BitField.mem_mask0[6]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCA000A0"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(4),
      I2 => \^q\(9),
      I3 => ex_bit_insert,
      I4 => \^q\(3),
      O => \Barrel_Shifter_I/mem_mask0123_in\
    );
\Use_HW_BS.Using_BitField.mem_mask0[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F5FFFFF88008800"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\,
      I1 => \^q\(10),
      I2 => \^q\(4),
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(24)
    );
\Use_HW_BS.Using_BitField.mem_mask0[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBBFCB8FFFFFFFF"
    )
        port map (
      I0 => \^q\(1),
      I1 => ex_bit_insert,
      I2 => \^q\(7),
      I3 => \^q\(0),
      I4 => \^q\(6),
      I5 => \Barrel_Shifter_I/p_2_out\(2),
      O => \Use_HW_BS.Using_BitField.mem_mask0[7]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5F5FCC00"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(9),
      I2 => \^q\(4),
      I3 => \^q\(10),
      I4 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(23)
    );
\Use_HW_BS.Using_BitField.mem_mask0[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555F5FCCC0CCC0"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(10),
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_2_n_0\,
      I3 => \^q\(9),
      I4 => \^q\(3),
      I5 => ex_bit_insert,
      O => \EX_Op2_reg[21]_0\(22)
    );
\Use_HW_BS.Using_BitField.mem_mask1[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF7FFFFFFFFFFEFF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(30)
    );
\Use_HW_BS.Using_BitField.mem_mask1[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"555555557777FE7F"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(20)
    );
\Use_HW_BS.Using_BitField.mem_mask1[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555577777E77"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(19)
    );
\Use_HW_BS.Using_BitField.mem_mask1[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555577577677"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(18)
    );
\Use_HW_BS.Using_BitField.mem_mask1[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555557557677"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(17)
    );
\Use_HW_BS.Using_BitField.mem_mask1[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555557657"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(16)
    );
\Use_HW_BS.Using_BitField.mem_mask1[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000010FFFFFFEF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(15)
    );
\Use_HW_BS.Using_BitField.mem_mask1[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F7FFFFEF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(14)
    );
\Use_HW_BS.Using_BitField.mem_mask1[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1511555555555455"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(13)
    );
\Use_HW_BS.Using_BitField.mem_mask1[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111551555555455"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(12)
    );
\Use_HW_BS.Using_BitField.mem_mask1[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000005575FFEF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(11)
    );
\Use_HW_BS.Using_BitField.mem_mask1[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F77FFFFFFFFFEFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(29)
    );
\Use_HW_BS.Using_BitField.mem_mask1[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000005555F7EF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(10)
    );
\Use_HW_BS.Using_BitField.mem_mask1[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000555577E7"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(9)
    );
\Use_HW_BS.Using_BitField.mem_mask1[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000055557567"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(7),
      I2 => ex_bit_extract,
      I3 => \^q\(6),
      I4 => \^q\(8),
      I5 => \^q\(10),
      O => \EX_Op2_reg[22]_0\(8)
    );
\Use_HW_BS.Using_BitField.mem_mask1[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000010055555455"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(7)
    );
\Use_HW_BS.Using_BitField.mem_mask1[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1101111111111011"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(6)
    );
\Use_HW_BS.Using_BitField.mem_mask1[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000015115455"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(5)
    );
\Use_HW_BS.Using_BitField.mem_mask1[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000011115415"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(4)
    );
\Use_HW_BS.Using_BitField.mem_mask1[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101010101100101"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(8),
      I3 => \^q\(6),
      I4 => ex_bit_extract,
      I5 => \^q\(7),
      O => \EX_Op2_reg[22]_0\(3)
    );
\Use_HW_BS.Using_BitField.mem_mask1[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000011011011"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(2)
    );
\Use_HW_BS.Using_BitField.mem_mask1[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000001001011"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(1)
    );
\Use_HW_BS.Using_BitField.mem_mask1[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7777FF7FFFFFFEFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(28)
    );
\Use_HW_BS.Using_BitField.mem_mask1[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000001000001"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(0)
    );
\Use_HW_BS.Using_BitField.mem_mask1[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F7F7F7F7FFE7F7F"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(8),
      I3 => \^q\(6),
      I4 => ex_bit_extract,
      I5 => \^q\(7),
      O => \EX_Op2_reg[22]_0\(27)
    );
\Use_HW_BS.Using_BitField.mem_mask1[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77777777FF7FFEFF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(26)
    );
\Use_HW_BS.Using_BitField.mem_mask1[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"777777777F77FEFF"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(25)
    );
\Use_HW_BS.Using_BitField.mem_mask1[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"777777777F777E7F"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      I2 => \^q\(7),
      I3 => ex_bit_extract,
      I4 => \^q\(6),
      I5 => \^q\(8),
      O => \EX_Op2_reg[22]_0\(24)
    );
\Use_HW_BS.Using_BitField.mem_mask1[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555755FFFFFEFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(23)
    );
\Use_HW_BS.Using_BitField.mem_mask1[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555FF7FFEFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(22)
    );
\Use_HW_BS.Using_BitField.mem_mask1[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"555555557F77FEFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(8),
      I2 => \^q\(6),
      I3 => ex_bit_extract,
      I4 => \^q\(7),
      I5 => \^q\(9),
      O => \EX_Op2_reg[22]_0\(21)
    );
\Use_HW_BS.mem_mux3[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BBB8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[0]\,
      I1 => \^q\(2),
      I2 => \Use_HW_BS.mem_mux3[0]_i_3_n_0\,
      I3 => \Use_HW_BS.mem_mux3[0]_i_4_n_0\,
      O => \EX_Op2_reg[29]_0\(1)
    );
\Use_HW_BS.mem_mux3[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00CC00FA00CC000A"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\(0),
      I1 => ex_mux1(2),
      I2 => ex_left_shift_i,
      I3 => \^q\(1),
      I4 => \^q\(0),
      I5 => \^ex_op1_reg[0]_0\(31),
      O => \Use_HW_BS.mem_mux3[0]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8C808C8C8C808080"
    )
        port map (
      I0 => ex_mux1(1),
      I1 => \^q\(1),
      I2 => \^q\(0),
      I3 => \^ex_op1_reg[0]_0\(29),
      I4 => ex_left_shift_i,
      I5 => \^ex_op1_reg[0]_0\(2),
      O => \Use_HW_BS.mem_mux3[0]_i_4_n_0\
    );
\Use_HW_BS.mem_mux3[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF00FE02"
    )
        port map (
      I0 => ex_mux1(0),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => ex_void_bit,
      I4 => \^q\(2),
      O => \EX_Op2_reg[29]_0\(0)
    );
\Using_FPGA.Native_I1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(0),
      O => S
    );
\Using_FPGA.Native_I1_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(1),
      O => EX_Div_Unsigned_reg
    );
\Using_FPGA.Native_I1_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(2),
      O => EX_Div_Unsigned_reg_0
    );
\Using_FPGA.Native_I1_i_1__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(11),
      O => EX_Div_Unsigned_reg_9
    );
\Using_FPGA.Native_I1_i_1__11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(12),
      O => EX_Div_Unsigned_reg_10
    );
\Using_FPGA.Native_I1_i_1__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(13),
      O => EX_Div_Unsigned_reg_11
    );
\Using_FPGA.Native_I1_i_1__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(14),
      O => EX_Div_Unsigned_reg_12
    );
\Using_FPGA.Native_I1_i_1__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(15),
      O => EX_Div_Unsigned_reg_13
    );
\Using_FPGA.Native_I1_i_1__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(16),
      O => EX_Div_Unsigned_reg_14
    );
\Using_FPGA.Native_I1_i_1__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(17),
      O => EX_Div_Unsigned_reg_15
    );
\Using_FPGA.Native_I1_i_1__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(18),
      O => EX_Div_Unsigned_reg_16
    );
\Using_FPGA.Native_I1_i_1__18\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(19),
      O => EX_Div_Unsigned_reg_17
    );
\Using_FPGA.Native_I1_i_1__19\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(20),
      O => EX_Div_Unsigned_reg_18
    );
\Using_FPGA.Native_I1_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(3),
      O => EX_Div_Unsigned_reg_1
    );
\Using_FPGA.Native_I1_i_1__20\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(21),
      O => EX_Div_Unsigned_reg_19
    );
\Using_FPGA.Native_I1_i_1__21\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(22),
      O => EX_Div_Unsigned_reg_20
    );
\Using_FPGA.Native_I1_i_1__22\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(23),
      O => EX_Div_Unsigned_reg_21
    );
\Using_FPGA.Native_I1_i_1__23\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(24),
      O => EX_Div_Unsigned_reg_22
    );
\Using_FPGA.Native_I1_i_1__24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(25),
      O => EX_Div_Unsigned_reg_23
    );
\Using_FPGA.Native_I1_i_1__25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(26),
      O => EX_Div_Unsigned_reg_24
    );
\Using_FPGA.Native_I1_i_1__26\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(27),
      O => EX_Div_Unsigned_reg_25
    );
\Using_FPGA.Native_I1_i_1__27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(28),
      O => EX_Div_Unsigned_reg_26
    );
\Using_FPGA.Native_I1_i_1__28\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(29),
      O => EX_Div_Unsigned_reg_27
    );
\Using_FPGA.Native_I1_i_1__29\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(30),
      O => EX_Div_Unsigned_reg_28
    );
\Using_FPGA.Native_I1_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(4),
      O => EX_Div_Unsigned_reg_2
    );
\Using_FPGA.Native_I1_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(5),
      O => EX_Div_Unsigned_reg_3
    );
\Using_FPGA.Native_I1_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(6),
      O => EX_Div_Unsigned_reg_4
    );
\Using_FPGA.Native_I1_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(7),
      O => EX_Div_Unsigned_reg_5
    );
\Using_FPGA.Native_I1_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(8),
      O => EX_Div_Unsigned_reg_6
    );
\Using_FPGA.Native_I1_i_1__8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(9),
      O => EX_Div_Unsigned_reg_7
    );
\Using_FPGA.Native_I1_i_1__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^ex_op1_reg[0]_0\(10),
      O => EX_Div_Unsigned_reg_8
    );
\Using_FPGA.Native_I1_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\(31),
      I1 => ex_div_unsigned,
      O => CI
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ex_branch_cmp_op1(30),
      I1 => ex_branch_cmp_op1(31),
      O => \EX_Branch_CMP_Op1_reg[30]_0\
    );
\Using_FPGA.Native_i_1__31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"009F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => ex_cmp_op,
      I3 => EX_ALU_Sel_Logic,
      O => S_0
    );
\Using_FPGA.Native_i_1__32\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^q\(31),
      I1 => EX_ALU_Sel_Logic,
      O => I0
    );
\Using_FPGA.Native_i_1__33\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => ex_cmp_op,
      O => I2
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(0),
      I1 => \EX_Op1_reg[30]_1\,
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2_n_0\
    );
\Using_FPGA.Native_i_2__0__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(1),
      I1 => \EX_Op1_reg[0]_4\,
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2__0__0_n_0\
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(2),
      I1 => \EX_Op1_reg[28]_1\,
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2__1_n_0\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(3),
      I1 => \EX_Op1_reg[25]_1\,
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2__2_n_0\
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(4),
      I1 => ex_MSR(0),
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2__3_n_0\
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(5),
      I1 => \EX_Op1_reg[22]_2\,
      I2 => of_op1_sel_spr_pc,
      O => \Using_FPGA.Native_i_2__4_n_0\
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op1_reg[0]_5\(6),
      I1 => \EX_Op1_reg[0]_4\,
      I2 => of_op1_sel_spr_pc,
      O => I1
    );
\Using_FPGA.Native_i_3__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000FF09FF6"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^ex_op1_reg[0]_0\(1),
      I2 => \^ex_op1_reg[0]_0\(0),
      I3 => \^q\(0),
      I4 => ex_doublet_access,
      I5 => \Using_FPGA.Native_2\,
      O => \EX_Op2_reg[30]_0\
    );
\Using_FPGA.Native_i_4__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBBBBBB888B888"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\(2),
      I1 => ex_MTS_MSR,
      I2 => ex_MSRSET,
      I3 => \^q\(2),
      I4 => ex_MSRCLR,
      I5 => \EX_Op1_reg[0]_4\,
      O => \EX_Op1_reg[29]_1\
    );
\imm_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(0),
      Q => \imm_reg_reg[0]_0\(15),
      R => sync_reset
    );
\imm_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(10),
      Q => \imm_reg_reg[0]_0\(5),
      R => sync_reset
    );
\imm_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(11),
      Q => \imm_reg_reg[0]_0\(4),
      R => sync_reset
    );
\imm_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(12),
      Q => \imm_reg_reg[0]_0\(3),
      R => sync_reset
    );
\imm_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(13),
      Q => \imm_reg_reg[0]_0\(2),
      R => sync_reset
    );
\imm_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(14),
      Q => \imm_reg_reg[0]_0\(1),
      R => sync_reset
    );
\imm_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(15),
      Q => \imm_reg_reg[0]_0\(0),
      R => sync_reset
    );
\imm_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(1),
      Q => \imm_reg_reg[0]_0\(14),
      R => sync_reset
    );
\imm_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(2),
      Q => \imm_reg_reg[0]_0\(13),
      R => sync_reset
    );
\imm_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(3),
      Q => \imm_reg_reg[0]_0\(12),
      R => sync_reset
    );
\imm_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(4),
      Q => \imm_reg_reg[0]_0\(11),
      R => sync_reset
    );
\imm_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(5),
      Q => \imm_reg_reg[0]_0\(10),
      R => sync_reset
    );
\imm_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(6),
      Q => \imm_reg_reg[0]_0\(9),
      R => sync_reset
    );
\imm_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(7),
      Q => \imm_reg_reg[0]_0\(8),
      R => sync_reset
    );
\imm_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(8),
      Q => \imm_reg_reg[0]_0\(7),
      R => sync_reset
    );
\imm_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(9),
      Q => \imm_reg_reg[0]_0\(6),
      R => sync_reset
    );
make_result_neg_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"06FF0600"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => ex_div_unsigned,
      I3 => ex_start_div,
      I4 => make_result_neg,
      O => \EX_Op2_reg[0]_0\
    );
\mem_byte_selects[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => ex_reverse_mem_access,
      I1 => \^ex_op1_reg[0]_0\(0),
      I2 => \^q\(0),
      O => \Using_FPGA.Native\(0)
    );
negative_operands_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"40FF4000"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^ex_op1_reg[0]_0\(31),
      I2 => \^q\(31),
      I3 => ex_start_div,
      I4 => negative_operands,
      O => EX_Div_Unsigned_reg_29
    );
sign_doublet_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\(15),
      I1 => \Using_FPGA.Native_5\(0),
      I2 => \Using_FPGA.Native_5\(1),
      I3 => \^ex_op1_reg[0]_0\(7),
      O => in0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_PC_Module_gti is
  port (
    \if_pc_reg[0]_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    O : out STD_LOGIC;
    \if_pc_reg[28]_0\ : out STD_LOGIC;
    \if_pc_reg[27]_0\ : out STD_LOGIC;
    \if_pc_reg[26]_0\ : out STD_LOGIC;
    \if_pc_reg[25]_0\ : out STD_LOGIC;
    \if_pc_reg[24]_0\ : out STD_LOGIC;
    \if_pc_reg[23]_0\ : out STD_LOGIC;
    \if_pc_reg[22]_0\ : out STD_LOGIC;
    \if_pc_reg[21]_0\ : out STD_LOGIC;
    \if_pc_reg[20]_0\ : out STD_LOGIC;
    \if_pc_reg[19]_0\ : out STD_LOGIC;
    \if_pc_reg[18]_0\ : out STD_LOGIC;
    \if_pc_reg[17]_0\ : out STD_LOGIC;
    \if_pc_reg[16]_0\ : out STD_LOGIC;
    \if_pc_reg[15]_0\ : out STD_LOGIC;
    \if_pc_reg[14]_0\ : out STD_LOGIC;
    \if_pc_reg[13]_0\ : out STD_LOGIC;
    \if_pc_reg[12]_0\ : out STD_LOGIC;
    \if_pc_reg[11]_0\ : out STD_LOGIC;
    \if_pc_reg[10]_0\ : out STD_LOGIC;
    \if_pc_reg[9]_0\ : out STD_LOGIC;
    \if_pc_reg[8]_0\ : out STD_LOGIC;
    \if_pc_reg[7]_0\ : out STD_LOGIC;
    \if_pc_reg[6]_0\ : out STD_LOGIC;
    \if_pc_reg[5]_0\ : out STD_LOGIC;
    \if_pc_reg[4]_0\ : out STD_LOGIC;
    \if_pc_reg[3]_0\ : out STD_LOGIC;
    \if_pc_reg[2]_0\ : out STD_LOGIC;
    \if_pc_reg[1]_0\ : out STD_LOGIC;
    \mem_pc_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \ex_pc_i_reg[31]_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \EX_Op1_reg[9]\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    if_pre_buffer_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[0]_2\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_PC_Module_gti : entity is "PC_Module_gti";
end mb_design_microblaze_0_1_PC_Module_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_PC_Module_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal I0 : STD_LOGIC;
  signal I0101_out : STD_LOGIC;
  signal I0105_out : STD_LOGIC;
  signal I0109_out : STD_LOGIC;
  signal I0113_out : STD_LOGIC;
  signal I0117_out : STD_LOGIC;
  signal I0121_out : STD_LOGIC;
  signal I0125_out : STD_LOGIC;
  signal I013_out : STD_LOGIC;
  signal I017_out : STD_LOGIC;
  signal I021_out : STD_LOGIC;
  signal I025_out : STD_LOGIC;
  signal I029_out : STD_LOGIC;
  signal I033_out : STD_LOGIC;
  signal I037_out : STD_LOGIC;
  signal I041_out : STD_LOGIC;
  signal I045_out : STD_LOGIC;
  signal I049_out : STD_LOGIC;
  signal I053_out : STD_LOGIC;
  signal I057_out : STD_LOGIC;
  signal I05_out : STD_LOGIC;
  signal I061_out : STD_LOGIC;
  signal I065_out : STD_LOGIC;
  signal I069_out : STD_LOGIC;
  signal I073_out : STD_LOGIC;
  signal I077_out : STD_LOGIC;
  signal I081_out : STD_LOGIC;
  signal I085_out : STD_LOGIC;
  signal I089_out : STD_LOGIC;
  signal I093_out : STD_LOGIC;
  signal I097_out : STD_LOGIC;
  signal I09_out : STD_LOGIC;
  signal LO : STD_LOGIC;
  signal \PC_Buffer_reg[3][31]_srl4_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal S : STD_LOGIC;
  signal S102_in : STD_LOGIC;
  signal S107_in : STD_LOGIC;
  signal S112_in : STD_LOGIC;
  signal S117_in : STD_LOGIC;
  signal S122_in : STD_LOGIC;
  signal S127_in : STD_LOGIC;
  signal S12_in : STD_LOGIC;
  signal S132_in : STD_LOGIC;
  signal S137_in : STD_LOGIC;
  signal S142_in : STD_LOGIC;
  signal S147_in : STD_LOGIC;
  signal S152_in : STD_LOGIC;
  signal S17_in : STD_LOGIC;
  signal S22_in : STD_LOGIC;
  signal S27_in : STD_LOGIC;
  signal S32_in : STD_LOGIC;
  signal S37_in : STD_LOGIC;
  signal S42_in : STD_LOGIC;
  signal S47_in : STD_LOGIC;
  signal S52_in : STD_LOGIC;
  signal S57_in : STD_LOGIC;
  signal S62_in : STD_LOGIC;
  signal S67_in : STD_LOGIC;
  signal S72_in : STD_LOGIC;
  signal S77_in : STD_LOGIC;
  signal S82_in : STD_LOGIC;
  signal S87_in : STD_LOGIC;
  signal S92_in : STD_LOGIC;
  signal S97_in : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[10].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[11].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[12].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[14].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[15].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[16].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[18].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[19].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[20].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[22].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[23].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[24].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[26].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[27].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[28].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[2].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[3].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[4].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[6].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[7].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[8].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal ex_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_pc_ii_0 : STD_LOGIC;
  signal of_pc_ii_1 : STD_LOGIC;
  signal of_pc_ii_10 : STD_LOGIC;
  signal of_pc_ii_11 : STD_LOGIC;
  signal of_pc_ii_12 : STD_LOGIC;
  signal of_pc_ii_13 : STD_LOGIC;
  signal of_pc_ii_14 : STD_LOGIC;
  signal of_pc_ii_15 : STD_LOGIC;
  signal of_pc_ii_16 : STD_LOGIC;
  signal of_pc_ii_17 : STD_LOGIC;
  signal of_pc_ii_18 : STD_LOGIC;
  signal of_pc_ii_19 : STD_LOGIC;
  signal of_pc_ii_2 : STD_LOGIC;
  signal of_pc_ii_20 : STD_LOGIC;
  signal of_pc_ii_21 : STD_LOGIC;
  signal of_pc_ii_22 : STD_LOGIC;
  signal of_pc_ii_23 : STD_LOGIC;
  signal of_pc_ii_24 : STD_LOGIC;
  signal of_pc_ii_25 : STD_LOGIC;
  signal of_pc_ii_26 : STD_LOGIC;
  signal of_pc_ii_27 : STD_LOGIC;
  signal of_pc_ii_28 : STD_LOGIC;
  signal of_pc_ii_29 : STD_LOGIC;
  signal of_pc_ii_3 : STD_LOGIC;
  signal of_pc_ii_30 : STD_LOGIC;
  signal of_pc_ii_31 : STD_LOGIC;
  signal of_pc_ii_4 : STD_LOGIC;
  signal of_pc_ii_5 : STD_LOGIC;
  signal of_pc_ii_6 : STD_LOGIC;
  signal of_pc_ii_7 : STD_LOGIC;
  signal of_pc_ii_8 : STD_LOGIC;
  signal of_pc_ii_9 : STD_LOGIC;
  signal p_1_in103_in : STD_LOGIC;
  signal p_1_in108_in : STD_LOGIC;
  signal p_1_in113_in : STD_LOGIC;
  signal p_1_in118_in : STD_LOGIC;
  signal p_1_in123_in : STD_LOGIC;
  signal p_1_in128_in : STD_LOGIC;
  signal p_1_in133_in : STD_LOGIC;
  signal p_1_in138_in : STD_LOGIC;
  signal p_1_in13_in : STD_LOGIC;
  signal p_1_in143_in : STD_LOGIC;
  signal p_1_in148_in : STD_LOGIC;
  signal p_1_in153_in : STD_LOGIC;
  signal p_1_in18_in : STD_LOGIC;
  signal p_1_in23_in : STD_LOGIC;
  signal p_1_in28_in : STD_LOGIC;
  signal p_1_in33_in : STD_LOGIC;
  signal p_1_in38_in : STD_LOGIC;
  signal p_1_in43_in : STD_LOGIC;
  signal p_1_in48_in : STD_LOGIC;
  signal p_1_in53_in : STD_LOGIC;
  signal p_1_in58_in : STD_LOGIC;
  signal p_1_in63_in : STD_LOGIC;
  signal p_1_in68_in : STD_LOGIC;
  signal p_1_in73_in : STD_LOGIC;
  signal p_1_in78_in : STD_LOGIC;
  signal p_1_in83_in : STD_LOGIC;
  signal p_1_in88_in : STD_LOGIC;
  signal p_1_in8_in : STD_LOGIC;
  signal p_1_in93_in : STD_LOGIC;
  signal p_1_in98_in : STD_LOGIC;
  signal p_2_in4_in : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \PC_Buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \PC_Buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][9]_srl4 ";
begin
  D(31 downto 0) <= \^d\(31 downto 0);
  Q(1 downto 0) <= \^q\(1 downto 0);
  \^lopt_2\ <= lopt_3;
  lopt_2 <= S;
\Instruction_Prefetch_Mux[0].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_224
     port map (
      Clk => Clk,
      D(0) => \^d\(31),
      I0125_out => I0125_out,
      Q(0) => S152_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_31 => of_pc_ii_31,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[0].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_225
     port map (
      I0125_out => I0125_out,
      Q(0) => S152_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_31 => of_pc_ii_31,
      \out\(0) => p_1_in153_in
    );
\Instruction_Prefetch_Mux[10].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_226
     port map (
      Clk => Clk,
      D(0) => \^d\(21),
      \EX_Op1_reg[10]\ => \EX_Op1_reg[9]\,
      I085_out => I085_out,
      Q(0) => S102_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_21 => of_pc_ii_21,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[10].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_227
     port map (
      I085_out => I085_out,
      Q(0) => S102_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_21 => of_pc_ii_21,
      \out\(0) => p_1_in103_in
    );
\Instruction_Prefetch_Mux[11].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_228
     port map (
      Clk => Clk,
      D(0) => \^d\(20),
      \EX_Op1_reg[11]\ => \EX_Op1_reg[9]\,
      I081_out => I081_out,
      Q(0) => S97_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_20 => of_pc_ii_20,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[11].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_229
     port map (
      I081_out => I081_out,
      Q(0) => S97_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_20 => of_pc_ii_20,
      \out\(0) => p_1_in98_in
    );
\Instruction_Prefetch_Mux[12].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_230
     port map (
      Clk => Clk,
      D(0) => \^d\(19),
      \EX_Op1_reg[12]\ => \EX_Op1_reg[9]\,
      I077_out => I077_out,
      Q(0) => S92_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_19 => of_pc_ii_19,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[12].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_231
     port map (
      I077_out => I077_out,
      Q(0) => S92_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_19 => of_pc_ii_19,
      \out\(0) => p_1_in93_in
    );
\Instruction_Prefetch_Mux[13].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_232
     port map (
      Clk => Clk,
      D(0) => \^d\(18),
      \EX_Op1_reg[13]\ => \EX_Op1_reg[9]\,
      I073_out => I073_out,
      Q(0) => S87_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_18 => of_pc_ii_18,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[13].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_233
     port map (
      I073_out => I073_out,
      Q(0) => S87_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_18 => of_pc_ii_18,
      \out\(0) => p_1_in88_in
    );
\Instruction_Prefetch_Mux[14].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_234
     port map (
      Clk => Clk,
      D(0) => \^d\(17),
      \EX_Op1_reg[14]\ => \EX_Op1_reg[9]\,
      I069_out => I069_out,
      Q(0) => S82_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_17 => of_pc_ii_17,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[14].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_235
     port map (
      I069_out => I069_out,
      Q(0) => S82_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_17 => of_pc_ii_17,
      \out\(0) => p_1_in83_in
    );
\Instruction_Prefetch_Mux[15].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_236
     port map (
      Clk => Clk,
      D(0) => \^d\(16),
      \EX_Op1_reg[15]\ => \EX_Op1_reg[9]\,
      I065_out => I065_out,
      Q(0) => S77_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_16 => of_pc_ii_16,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[15].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_237
     port map (
      I065_out => I065_out,
      Q(0) => S77_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_16 => of_pc_ii_16,
      \out\(0) => p_1_in78_in
    );
\Instruction_Prefetch_Mux[16].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_238
     port map (
      Clk => Clk,
      D(0) => \^d\(15),
      \EX_Op1_reg[16]\ => \EX_Op1_reg[9]\,
      I061_out => I061_out,
      Q(0) => S72_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_15 => of_pc_ii_15,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[16].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_239
     port map (
      I061_out => I061_out,
      Q(0) => S72_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_15 => of_pc_ii_15,
      \out\(0) => p_1_in73_in
    );
\Instruction_Prefetch_Mux[17].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_240
     port map (
      Clk => Clk,
      D(0) => \^d\(14),
      \EX_Op1_reg[17]\ => \EX_Op1_reg[9]\,
      I057_out => I057_out,
      Q(0) => S67_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_14 => of_pc_ii_14,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[17].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_241
     port map (
      I057_out => I057_out,
      Q(0) => S67_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_14 => of_pc_ii_14,
      \out\(0) => p_1_in68_in
    );
\Instruction_Prefetch_Mux[18].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_242
     port map (
      Clk => Clk,
      D(0) => \^d\(13),
      \EX_Op1_reg[18]\ => \EX_Op1_reg[9]\,
      I053_out => I053_out,
      Q(0) => S62_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_13 => of_pc_ii_13,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[18].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_243
     port map (
      I053_out => I053_out,
      Q(0) => S62_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_13 => of_pc_ii_13,
      \out\(0) => p_1_in63_in
    );
\Instruction_Prefetch_Mux[19].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_244
     port map (
      Clk => Clk,
      D(0) => \^d\(12),
      \EX_Op1_reg[19]\ => \EX_Op1_reg[9]\,
      I049_out => I049_out,
      Q(0) => S57_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_12 => of_pc_ii_12,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[19].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_245
     port map (
      I049_out => I049_out,
      Q(0) => S57_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_12 => of_pc_ii_12,
      \out\(0) => p_1_in58_in
    );
\Instruction_Prefetch_Mux[1].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_246
     port map (
      Clk => Clk,
      D(0) => \^d\(30),
      \EX_Op1_reg[1]\ => \EX_Op1_reg[9]\,
      I0121_out => I0121_out,
      Q(0) => S147_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_30 => of_pc_ii_30,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[1].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_247
     port map (
      I0121_out => I0121_out,
      Q(0) => S147_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_30 => of_pc_ii_30,
      \out\(0) => p_1_in148_in
    );
\Instruction_Prefetch_Mux[20].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_248
     port map (
      Clk => Clk,
      D(0) => \^d\(11),
      \EX_Op1_reg[20]\ => \EX_Op1_reg[9]\,
      I045_out => I045_out,
      Q(0) => S52_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_11 => of_pc_ii_11,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[20].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_249
     port map (
      I045_out => I045_out,
      Q(0) => S52_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_11 => of_pc_ii_11,
      \out\(0) => p_1_in53_in
    );
\Instruction_Prefetch_Mux[21].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_250
     port map (
      Clk => Clk,
      D(0) => \^d\(10),
      \EX_Op1_reg[21]\ => \EX_Op1_reg[9]\,
      I041_out => I041_out,
      Q(0) => S47_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_10 => of_pc_ii_10,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[21].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_251
     port map (
      I041_out => I041_out,
      Q(0) => S47_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_10 => of_pc_ii_10,
      \out\(0) => p_1_in48_in
    );
\Instruction_Prefetch_Mux[22].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_252
     port map (
      Clk => Clk,
      D(0) => \^d\(9),
      I037_out => I037_out,
      Q(0) => S42_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_9 => of_pc_ii_9,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[22].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_253
     port map (
      I037_out => I037_out,
      Q(0) => S42_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_9 => of_pc_ii_9,
      \out\(0) => p_1_in43_in
    );
\Instruction_Prefetch_Mux[23].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_254
     port map (
      Clk => Clk,
      D(0) => \^d\(8),
      I033_out => I033_out,
      Q(0) => S37_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_8 => of_pc_ii_8,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[23].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_255
     port map (
      I033_out => I033_out,
      Q(0) => S37_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_8 => of_pc_ii_8,
      \out\(0) => p_1_in38_in
    );
\Instruction_Prefetch_Mux[24].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_256
     port map (
      Clk => Clk,
      D(0) => \^d\(7),
      \EX_Op1_reg[24]\ => \EX_Op1_reg[9]\,
      I029_out => I029_out,
      Q(0) => S32_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_7 => of_pc_ii_7,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[24].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_257
     port map (
      I029_out => I029_out,
      Q(0) => S32_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_7 => of_pc_ii_7,
      \out\(0) => p_1_in33_in
    );
\Instruction_Prefetch_Mux[25].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_258
     port map (
      Clk => Clk,
      D(0) => \^d\(6),
      I025_out => I025_out,
      Q(0) => S27_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_6 => of_pc_ii_6,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[25].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_259
     port map (
      I025_out => I025_out,
      Q(0) => S27_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_6 => of_pc_ii_6,
      \out\(0) => p_1_in28_in
    );
\Instruction_Prefetch_Mux[26].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_260
     port map (
      Clk => Clk,
      D(0) => \^d\(5),
      \EX_Op1_reg[26]\ => \EX_Op1_reg[9]\,
      I021_out => I021_out,
      Q(0) => S22_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_5 => of_pc_ii_5,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[26].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_261
     port map (
      I021_out => I021_out,
      Q(0) => S22_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_5 => of_pc_ii_5,
      \out\(0) => p_1_in23_in
    );
\Instruction_Prefetch_Mux[27].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_262
     port map (
      Clk => Clk,
      D(0) => \^d\(4),
      \EX_Op1_reg[27]\ => \EX_Op1_reg[9]\,
      I017_out => I017_out,
      Q(0) => S17_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_4 => of_pc_ii_4,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[27].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_263
     port map (
      I017_out => I017_out,
      Q(0) => S17_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_4 => of_pc_ii_4,
      \out\(0) => p_1_in18_in
    );
\Instruction_Prefetch_Mux[28].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_264
     port map (
      Clk => Clk,
      D(0) => \^d\(3),
      I013_out => I013_out,
      Q(0) => S12_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_3 => of_pc_ii_3,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[28].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_265
     port map (
      I013_out => I013_out,
      Q(0) => S12_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_3 => of_pc_ii_3,
      \out\(0) => p_1_in13_in
    );
\Instruction_Prefetch_Mux[29].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_266
     port map (
      Clk => Clk,
      D(0) => \^d\(2),
      I09_out => I09_out,
      Q(0) => S,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_2 => of_pc_ii_2,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[29].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_267
     port map (
      I09_out => I09_out,
      Q(0) => S,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_2 => of_pc_ii_2,
      \out\(0) => p_1_in8_in
    );
\Instruction_Prefetch_Mux[2].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_268
     port map (
      Clk => Clk,
      D(0) => \^d\(29),
      \EX_Op1_reg[2]\ => \EX_Op1_reg[9]\,
      I0117_out => I0117_out,
      Q(0) => S142_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_29 => of_pc_ii_29,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[2].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_269
     port map (
      I0117_out => I0117_out,
      Q(0) => S142_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_29 => of_pc_ii_29,
      \out\(0) => p_1_in143_in
    );
\Instruction_Prefetch_Mux[30].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_270
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      I05_out => I05_out,
      Q(0) => \^q\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      of_pc_ii_1 => of_pc_ii_1,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[30].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_271
     port map (
      I05_out => I05_out,
      Q(0) => \^q\(1),
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_1 => of_pc_ii_1,
      \out\(0) => p_2_in4_in
    );
\Instruction_Prefetch_Mux[31].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_272
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      \EX_Op1_reg[31]\ => \EX_Op1_reg[9]\,
      I0 => I0,
      Q(0) => \^q\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_0 => of_pc_ii_0,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[31].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_273
     port map (
      I0 => I0,
      Q(0) => \^q\(0),
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_0 => of_pc_ii_0,
      \out\(0) => \PC_Buffer_reg[3][31]_srl4_n_0\
    );
\Instruction_Prefetch_Mux[3].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_274
     port map (
      Clk => Clk,
      D(0) => \^d\(28),
      \EX_Op1_reg[3]\ => \EX_Op1_reg[9]\,
      I0113_out => I0113_out,
      Q(0) => S137_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_28 => of_pc_ii_28,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[3].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_275
     port map (
      I0113_out => I0113_out,
      Q(0) => S137_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_28 => of_pc_ii_28,
      \out\(0) => p_1_in138_in
    );
\Instruction_Prefetch_Mux[4].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_276
     port map (
      Clk => Clk,
      D(0) => \^d\(27),
      \EX_Op1_reg[4]\ => \EX_Op1_reg[9]\,
      I0109_out => I0109_out,
      Q(0) => S132_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_27 => of_pc_ii_27,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[4].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_277
     port map (
      I0109_out => I0109_out,
      Q(0) => S132_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_27 => of_pc_ii_27,
      \out\(0) => p_1_in133_in
    );
\Instruction_Prefetch_Mux[5].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_278
     port map (
      Clk => Clk,
      D(0) => \^d\(26),
      \EX_Op1_reg[5]\ => \EX_Op1_reg[9]\,
      I0105_out => I0105_out,
      Q(0) => S127_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_26 => of_pc_ii_26,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[5].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_279
     port map (
      I0105_out => I0105_out,
      Q(0) => S127_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_26 => of_pc_ii_26,
      \out\(0) => p_1_in128_in
    );
\Instruction_Prefetch_Mux[6].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_280
     port map (
      Clk => Clk,
      D(0) => \^d\(25),
      \EX_Op1_reg[6]\ => \EX_Op1_reg[9]\,
      I0101_out => I0101_out,
      Q(0) => S122_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_25 => of_pc_ii_25,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[6].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_281
     port map (
      I0101_out => I0101_out,
      Q(0) => S122_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_25 => of_pc_ii_25,
      \out\(0) => p_1_in123_in
    );
\Instruction_Prefetch_Mux[7].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_282
     port map (
      Clk => Clk,
      D(0) => \^d\(24),
      \EX_Op1_reg[7]\ => \EX_Op1_reg[9]\,
      I097_out => I097_out,
      Q(0) => S117_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_24 => of_pc_ii_24,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[7].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_283
     port map (
      I097_out => I097_out,
      Q(0) => S117_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_24 => of_pc_ii_24,
      \out\(0) => p_1_in118_in
    );
\Instruction_Prefetch_Mux[8].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_284
     port map (
      Clk => Clk,
      D(0) => \^d\(23),
      \EX_Op1_reg[8]\ => \EX_Op1_reg[9]\,
      I093_out => I093_out,
      Q(0) => S112_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_23 => of_pc_ii_23,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[8].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_285
     port map (
      I093_out => I093_out,
      Q(0) => S112_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_23 => of_pc_ii_23,
      \out\(0) => p_1_in113_in
    );
\Instruction_Prefetch_Mux[9].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_286
     port map (
      Clk => Clk,
      D(0) => \^d\(22),
      \EX_Op1_reg[9]\ => \EX_Op1_reg[9]\,
      I089_out => I089_out,
      Q(0) => S107_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      of_pc_ii_22 => of_pc_ii_22,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[9].PC_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_287
     port map (
      I089_out => I089_out,
      Q(0) => S107_in,
      \Using_FPGA.Native_0\ => \ex_pc_i_reg[31]_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      of_pc_ii_22 => of_pc_ii_22,
      \out\(0) => p_1_in108_in
    );
\PC_Buffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S152_in,
      Q => p_1_in153_in
    );
\PC_Buffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S102_in,
      Q => p_1_in103_in
    );
\PC_Buffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S97_in,
      Q => p_1_in98_in
    );
\PC_Buffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S92_in,
      Q => p_1_in93_in
    );
\PC_Buffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S87_in,
      Q => p_1_in88_in
    );
\PC_Buffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S82_in,
      Q => p_1_in83_in
    );
\PC_Buffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S77_in,
      Q => p_1_in78_in
    );
\PC_Buffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S72_in,
      Q => p_1_in73_in
    );
\PC_Buffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S67_in,
      Q => p_1_in68_in
    );
\PC_Buffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S62_in,
      Q => p_1_in63_in
    );
\PC_Buffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S57_in,
      Q => p_1_in58_in
    );
\PC_Buffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S147_in,
      Q => p_1_in148_in
    );
\PC_Buffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S52_in,
      Q => p_1_in53_in
    );
\PC_Buffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S47_in,
      Q => p_1_in48_in
    );
\PC_Buffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S42_in,
      Q => p_1_in43_in
    );
\PC_Buffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S37_in,
      Q => p_1_in38_in
    );
\PC_Buffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S32_in,
      Q => p_1_in33_in
    );
\PC_Buffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S27_in,
      Q => p_1_in28_in
    );
\PC_Buffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S22_in,
      Q => p_1_in23_in
    );
\PC_Buffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S17_in,
      Q => p_1_in18_in
    );
\PC_Buffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S12_in,
      Q => p_1_in13_in
    );
\PC_Buffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S,
      Q => p_1_in8_in
    );
\PC_Buffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S142_in,
      Q => p_1_in143_in
    );
\PC_Buffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \^q\(1),
      Q => p_2_in4_in
    );
\PC_Buffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \^q\(0),
      Q => \PC_Buffer_reg[3][31]_srl4_n_0\
    );
\PC_Buffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S137_in,
      Q => p_1_in138_in
    );
\PC_Buffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S132_in,
      Q => p_1_in133_in
    );
\PC_Buffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S127_in,
      Q => p_1_in128_in
    );
\PC_Buffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S122_in,
      Q => p_1_in123_in
    );
\PC_Buffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S117_in,
      Q => p_1_in118_in
    );
\PC_Buffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S112_in,
      Q => p_1_in113_in
    );
\PC_Buffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => S107_in,
      Q => p_1_in108_in
    );
\Using_FPGA.Incr_PC[0].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY
     port map (
      LO => \Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0\,
      Q(0) => S152_in,
      \if_pc_reg[0]\ => \if_pc_reg[0]_0\
    );
\Using_FPGA.Incr_PC[10].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_288
     port map (
      LO => \Using_FPGA.Incr_PC[10].MUXCY_XOR_I_n_0\,
      Q(0) => S102_in,
      \if_pc_reg[10]\ => \if_pc_reg[10]_0\,
      \if_pc_reg[10]_0\ => \Using_FPGA.Incr_PC[11].MUXCY_XOR_I_n_0\,
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_46
    );
\Using_FPGA.Incr_PC[11].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_289
     port map (
      LO => \Using_FPGA.Incr_PC[11].MUXCY_XOR_I_n_0\,
      Q(0) => S97_in,
      \if_pc_reg[11]\ => \if_pc_reg[11]_0\,
      \if_pc_reg[11]_0\ => \Using_FPGA.Incr_PC[12].MUXCY_XOR_I_n_0\,
      lopt => lopt_39,
      lopt_1 => lopt_40,
      lopt_2 => lopt_45
    );
\Using_FPGA.Incr_PC[12].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_290
     port map (
      LO => \Using_FPGA.Incr_PC[12].MUXCY_XOR_I_n_0\,
      Q(0) => S92_in,
      \if_pc_reg[12]\ => \if_pc_reg[12]_0\,
      \if_pc_reg[12]_0\ => \Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0\,
      lopt => lopt_39,
      lopt_1 => lopt_40,
      lopt_10 => lopt_46,
      lopt_11 => lopt_47,
      lopt_2 => S97_in,
      lopt_3 => lopt_41,
      lopt_4 => lopt_42,
      lopt_5 => S102_in,
      lopt_6 => lopt_43,
      lopt_7 => lopt_44,
      lopt_8 => S107_in,
      lopt_9 => lopt_45
    );
\Using_FPGA.Incr_PC[13].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_291
     port map (
      LO => \Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0\,
      Q(0) => S87_in,
      \if_pc_reg[13]\ => \if_pc_reg[13]_0\,
      \if_pc_reg[13]_0\ => \Using_FPGA.Incr_PC[14].MUXCY_XOR_I_n_0\,
      lopt => lopt_34,
      lopt_1 => lopt_35,
      lopt_2 => lopt_38
    );
\Using_FPGA.Incr_PC[14].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_292
     port map (
      LO => \Using_FPGA.Incr_PC[14].MUXCY_XOR_I_n_0\,
      Q(0) => S82_in,
      \if_pc_reg[14]\ => \if_pc_reg[14]_0\,
      \if_pc_reg[14]_0\ => \Using_FPGA.Incr_PC[15].MUXCY_XOR_I_n_0\,
      lopt => lopt_32,
      lopt_1 => lopt_33,
      lopt_2 => lopt_37
    );
\Using_FPGA.Incr_PC[15].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_293
     port map (
      LO => \Using_FPGA.Incr_PC[15].MUXCY_XOR_I_n_0\,
      Q(0) => S77_in,
      \if_pc_reg[15]\ => \if_pc_reg[15]_0\,
      \if_pc_reg[15]_0\ => \Using_FPGA.Incr_PC[16].MUXCY_XOR_I_n_0\,
      lopt => lopt_30,
      lopt_1 => lopt_31,
      lopt_2 => lopt_36
    );
\Using_FPGA.Incr_PC[16].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_294
     port map (
      LO => \Using_FPGA.Incr_PC[16].MUXCY_XOR_I_n_0\,
      Q(0) => S72_in,
      \if_pc_reg[16]\ => \if_pc_reg[16]_0\,
      \if_pc_reg[16]_0\ => \Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0\,
      lopt => lopt_30,
      lopt_1 => lopt_31,
      lopt_10 => lopt_37,
      lopt_11 => lopt_38,
      lopt_2 => S77_in,
      lopt_3 => lopt_32,
      lopt_4 => lopt_33,
      lopt_5 => S82_in,
      lopt_6 => lopt_34,
      lopt_7 => lopt_35,
      lopt_8 => S87_in,
      lopt_9 => lopt_36
    );
\Using_FPGA.Incr_PC[17].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_295
     port map (
      LO => \Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0\,
      Q(0) => S67_in,
      \if_pc_reg[17]\ => \if_pc_reg[17]_0\,
      \if_pc_reg[17]_0\ => \Using_FPGA.Incr_PC[18].MUXCY_XOR_I_n_0\,
      lopt => lopt_25,
      lopt_1 => lopt_26,
      lopt_2 => lopt_29
    );
\Using_FPGA.Incr_PC[18].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_296
     port map (
      LO => \Using_FPGA.Incr_PC[18].MUXCY_XOR_I_n_0\,
      Q(0) => S62_in,
      \if_pc_reg[18]\ => \if_pc_reg[18]_0\,
      \if_pc_reg[18]_0\ => \Using_FPGA.Incr_PC[19].MUXCY_XOR_I_n_0\,
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_2 => lopt_28
    );
\Using_FPGA.Incr_PC[19].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_297
     port map (
      LO => \Using_FPGA.Incr_PC[19].MUXCY_XOR_I_n_0\,
      Q(0) => S57_in,
      \if_pc_reg[19]\ => \if_pc_reg[19]_0\,
      \if_pc_reg[19]_0\ => \Using_FPGA.Incr_PC[20].MUXCY_XOR_I_n_0\,
      lopt => lopt_21,
      lopt_1 => lopt_22,
      lopt_2 => lopt_27
    );
\Using_FPGA.Incr_PC[1].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_298
     port map (
      LO => \Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0\,
      Q(0) => S147_in,
      \if_pc_reg[1]\ => \if_pc_reg[1]_0\,
      \if_pc_reg[1]_0\ => \Using_FPGA.Incr_PC[2].MUXCY_XOR_I_n_0\,
      lopt => lopt_61,
      lopt_1 => lopt_62,
      lopt_2 => lopt_65
    );
\Using_FPGA.Incr_PC[20].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_299
     port map (
      LO => \Using_FPGA.Incr_PC[20].MUXCY_XOR_I_n_0\,
      Q(0) => S52_in,
      \if_pc_reg[20]\ => \if_pc_reg[20]_0\,
      \if_pc_reg[20]_0\ => \Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0\,
      lopt => lopt_21,
      lopt_1 => lopt_22,
      lopt_10 => lopt_28,
      lopt_11 => lopt_29,
      lopt_2 => S57_in,
      lopt_3 => lopt_23,
      lopt_4 => lopt_24,
      lopt_5 => S62_in,
      lopt_6 => lopt_25,
      lopt_7 => lopt_26,
      lopt_8 => S67_in,
      lopt_9 => lopt_27
    );
\Using_FPGA.Incr_PC[21].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_300
     port map (
      LO => \Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0\,
      Q(0) => S47_in,
      \if_pc_reg[21]\ => \if_pc_reg[21]_0\,
      \if_pc_reg[21]_0\ => \Using_FPGA.Incr_PC[22].MUXCY_XOR_I_n_0\,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      lopt_2 => lopt_20
    );
\Using_FPGA.Incr_PC[22].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_301
     port map (
      LO => \Using_FPGA.Incr_PC[22].MUXCY_XOR_I_n_0\,
      Q(0) => S42_in,
      \if_pc_reg[22]\ => \if_pc_reg[22]_0\,
      \if_pc_reg[22]_0\ => \Using_FPGA.Incr_PC[23].MUXCY_XOR_I_n_0\,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      lopt_2 => lopt_19
    );
\Using_FPGA.Incr_PC[23].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_302
     port map (
      LO => \Using_FPGA.Incr_PC[23].MUXCY_XOR_I_n_0\,
      Q(0) => S37_in,
      \if_pc_reg[23]\ => \if_pc_reg[23]_0\,
      \if_pc_reg[23]_0\ => \Using_FPGA.Incr_PC[24].MUXCY_XOR_I_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_18
    );
\Using_FPGA.Incr_PC[24].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_303
     port map (
      LO => \Using_FPGA.Incr_PC[24].MUXCY_XOR_I_n_0\,
      Q(0) => S32_in,
      \if_pc_reg[24]\ => \if_pc_reg[24]_0\,
      \if_pc_reg[24]_0\ => \Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_10 => lopt_19,
      lopt_11 => lopt_20,
      lopt_2 => S37_in,
      lopt_3 => lopt_14,
      lopt_4 => lopt_15,
      lopt_5 => S42_in,
      lopt_6 => lopt_16,
      lopt_7 => lopt_17,
      lopt_8 => S47_in,
      lopt_9 => lopt_18
    );
\Using_FPGA.Incr_PC[25].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_304
     port map (
      LO => \Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0\,
      Q(0) => S27_in,
      \if_pc_reg[25]\ => \if_pc_reg[25]_0\,
      \if_pc_reg[25]_0\ => \Using_FPGA.Incr_PC[26].MUXCY_XOR_I_n_0\,
      lopt => lopt_7,
      lopt_1 => lopt_8,
      lopt_2 => lopt_11
    );
\Using_FPGA.Incr_PC[26].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_305
     port map (
      LO => \Using_FPGA.Incr_PC[26].MUXCY_XOR_I_n_0\,
      Q(0) => S22_in,
      \if_pc_reg[26]\ => \if_pc_reg[26]_0\,
      \if_pc_reg[26]_0\ => \Using_FPGA.Incr_PC[27].MUXCY_XOR_I_n_0\,
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_2 => lopt_10
    );
\Using_FPGA.Incr_PC[27].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_306
     port map (
      LO => \Using_FPGA.Incr_PC[27].MUXCY_XOR_I_n_0\,
      Q(0) => S17_in,
      \if_pc_reg[27]\ => \if_pc_reg[27]_0\,
      \if_pc_reg[27]_0\ => \Using_FPGA.Incr_PC[28].MUXCY_XOR_I_n_0\,
      lopt => \^lopt_3\,
      lopt_1 => lopt_4,
      lopt_2 => lopt_9
    );
\Using_FPGA.Incr_PC[28].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_307
     port map (
      LO => \Using_FPGA.Incr_PC[28].MUXCY_XOR_I_n_0\,
      Q(0) => S12_in,
      \if_pc_reg[28]\ => \if_pc_reg[28]_0\,
      \if_pc_reg[28]_0\ => LO,
      lopt => \^lopt_3\,
      lopt_1 => lopt_4,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => S17_in,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => S22_in,
      lopt_6 => lopt_7,
      lopt_7 => lopt_8,
      lopt_8 => S27_in,
      lopt_9 => lopt_9
    );
\Using_FPGA.Incr_PC[29].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_308
     port map (
      CI => CI,
      LO => LO,
      O => O,
      Q(0) => S,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \^lopt_2\
    );
\Using_FPGA.Incr_PC[2].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_309
     port map (
      LO => \Using_FPGA.Incr_PC[2].MUXCY_XOR_I_n_0\,
      Q(0) => S142_in,
      \if_pc_reg[2]\ => \if_pc_reg[2]_0\,
      \if_pc_reg[2]_0\ => \Using_FPGA.Incr_PC[3].MUXCY_XOR_I_n_0\,
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_64
    );
\Using_FPGA.Incr_PC[3].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_310
     port map (
      LO => \Using_FPGA.Incr_PC[3].MUXCY_XOR_I_n_0\,
      Q(0) => S137_in,
      \if_pc_reg[3]\ => \if_pc_reg[3]_0\,
      \if_pc_reg[3]_0\ => \Using_FPGA.Incr_PC[4].MUXCY_XOR_I_n_0\,
      lopt => lopt_57,
      lopt_1 => lopt_58,
      lopt_2 => lopt_63
    );
\Using_FPGA.Incr_PC[4].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_311
     port map (
      LO => \Using_FPGA.Incr_PC[4].MUXCY_XOR_I_n_0\,
      Q(0) => S132_in,
      \if_pc_reg[4]\ => \if_pc_reg[4]_0\,
      \if_pc_reg[4]_0\ => \Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0\,
      lopt => lopt_57,
      lopt_1 => lopt_58,
      lopt_10 => lopt_64,
      lopt_11 => lopt_65,
      lopt_2 => S137_in,
      lopt_3 => lopt_59,
      lopt_4 => lopt_60,
      lopt_5 => S142_in,
      lopt_6 => lopt_61,
      lopt_7 => lopt_62,
      lopt_8 => S147_in,
      lopt_9 => lopt_63
    );
\Using_FPGA.Incr_PC[5].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_312
     port map (
      LO => \Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0\,
      Q(0) => S127_in,
      \if_pc_reg[5]\ => \if_pc_reg[5]_0\,
      \if_pc_reg[5]_0\ => \Using_FPGA.Incr_PC[6].MUXCY_XOR_I_n_0\,
      lopt => lopt_52,
      lopt_1 => lopt_53,
      lopt_2 => lopt_56
    );
\Using_FPGA.Incr_PC[6].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_313
     port map (
      LO => \Using_FPGA.Incr_PC[6].MUXCY_XOR_I_n_0\,
      Q(0) => S122_in,
      \if_pc_reg[6]\ => \if_pc_reg[6]_0\,
      \if_pc_reg[6]_0\ => \Using_FPGA.Incr_PC[7].MUXCY_XOR_I_n_0\,
      lopt => lopt_50,
      lopt_1 => lopt_51,
      lopt_2 => lopt_55
    );
\Using_FPGA.Incr_PC[7].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_314
     port map (
      LO => \Using_FPGA.Incr_PC[7].MUXCY_XOR_I_n_0\,
      Q(0) => S117_in,
      \if_pc_reg[7]\ => \if_pc_reg[7]_0\,
      \if_pc_reg[7]_0\ => \Using_FPGA.Incr_PC[8].MUXCY_XOR_I_n_0\,
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_54
    );
\Using_FPGA.Incr_PC[8].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_315
     port map (
      LO => \Using_FPGA.Incr_PC[8].MUXCY_XOR_I_n_0\,
      Q(0) => S112_in,
      \if_pc_reg[8]\ => \if_pc_reg[8]_0\,
      \if_pc_reg[8]_0\ => \Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0\,
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_10 => lopt_55,
      lopt_11 => lopt_56,
      lopt_2 => S117_in,
      lopt_3 => lopt_50,
      lopt_4 => lopt_51,
      lopt_5 => S122_in,
      lopt_6 => lopt_52,
      lopt_7 => lopt_53,
      lopt_8 => S127_in,
      lopt_9 => lopt_54
    );
\Using_FPGA.Incr_PC[9].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_316
     port map (
      CI => \Using_FPGA.Incr_PC[10].MUXCY_XOR_I_n_0\,
      LO => \Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0\,
      Q(0) => S107_in,
      \if_pc_reg[9]\ => \if_pc_reg[9]_0\,
      lopt => lopt_43,
      lopt_1 => lopt_44,
      lopt_2 => lopt_47
    );
\ex_pc_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(31),
      Q => ex_pc(0),
      R => sync_reset
    );
\ex_pc_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(21),
      Q => ex_pc(10),
      R => sync_reset
    );
\ex_pc_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(20),
      Q => ex_pc(11),
      R => sync_reset
    );
\ex_pc_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(19),
      Q => ex_pc(12),
      R => sync_reset
    );
\ex_pc_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(18),
      Q => ex_pc(13),
      R => sync_reset
    );
\ex_pc_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(17),
      Q => ex_pc(14),
      R => sync_reset
    );
\ex_pc_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(16),
      Q => ex_pc(15),
      R => sync_reset
    );
\ex_pc_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(15),
      Q => ex_pc(16),
      R => sync_reset
    );
\ex_pc_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(14),
      Q => ex_pc(17),
      R => sync_reset
    );
\ex_pc_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(13),
      Q => ex_pc(18),
      R => sync_reset
    );
\ex_pc_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(12),
      Q => ex_pc(19),
      R => sync_reset
    );
\ex_pc_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(30),
      Q => ex_pc(1),
      R => sync_reset
    );
\ex_pc_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(11),
      Q => ex_pc(20),
      R => sync_reset
    );
\ex_pc_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(10),
      Q => ex_pc(21),
      R => sync_reset
    );
\ex_pc_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(9),
      Q => ex_pc(22),
      R => sync_reset
    );
\ex_pc_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(8),
      Q => ex_pc(23),
      R => sync_reset
    );
\ex_pc_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(7),
      Q => ex_pc(24),
      R => sync_reset
    );
\ex_pc_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(6),
      Q => ex_pc(25),
      R => sync_reset
    );
\ex_pc_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(5),
      Q => ex_pc(26),
      R => sync_reset
    );
\ex_pc_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(4),
      Q => ex_pc(27),
      R => sync_reset
    );
\ex_pc_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(3),
      Q => ex_pc(28),
      R => sync_reset
    );
\ex_pc_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(2),
      Q => ex_pc(29),
      R => sync_reset
    );
\ex_pc_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(29),
      Q => ex_pc(2),
      R => sync_reset
    );
\ex_pc_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(1),
      Q => ex_pc(30),
      R => sync_reset
    );
\ex_pc_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(0),
      Q => ex_pc(31),
      R => sync_reset
    );
\ex_pc_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(28),
      Q => ex_pc(3),
      R => sync_reset
    );
\ex_pc_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(27),
      Q => ex_pc(4),
      R => sync_reset
    );
\ex_pc_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(26),
      Q => ex_pc(5),
      R => sync_reset
    );
\ex_pc_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(25),
      Q => ex_pc(6),
      R => sync_reset
    );
\ex_pc_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(24),
      Q => ex_pc(7),
      R => sync_reset
    );
\ex_pc_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(23),
      Q => ex_pc(8),
      R => sync_reset
    );
\ex_pc_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \ex_pc_i_reg[31]_0\,
      D => \^d\(22),
      Q => ex_pc(9),
      R => sync_reset
    );
\if_pc_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(31),
      Q => S152_in,
      S => sync_reset
    );
\if_pc_reg[10]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(21),
      Q => S102_in,
      S => sync_reset
    );
\if_pc_reg[11]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(20),
      Q => S97_in,
      S => sync_reset
    );
\if_pc_reg[12]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(19),
      Q => S92_in,
      S => sync_reset
    );
\if_pc_reg[13]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(18),
      Q => S87_in,
      S => sync_reset
    );
\if_pc_reg[14]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(17),
      Q => S82_in,
      S => sync_reset
    );
\if_pc_reg[15]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(16),
      Q => S77_in,
      S => sync_reset
    );
\if_pc_reg[16]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(15),
      Q => S72_in,
      S => sync_reset
    );
\if_pc_reg[17]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(14),
      Q => S67_in,
      S => sync_reset
    );
\if_pc_reg[18]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(13),
      Q => S62_in,
      S => sync_reset
    );
\if_pc_reg[19]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(12),
      Q => S57_in,
      S => sync_reset
    );
\if_pc_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(30),
      Q => S147_in,
      S => sync_reset
    );
\if_pc_reg[20]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(11),
      Q => S52_in,
      S => sync_reset
    );
\if_pc_reg[21]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(10),
      Q => S47_in,
      S => sync_reset
    );
\if_pc_reg[22]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(9),
      Q => S42_in,
      S => sync_reset
    );
\if_pc_reg[23]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(8),
      Q => S37_in,
      S => sync_reset
    );
\if_pc_reg[24]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(7),
      Q => S32_in,
      S => sync_reset
    );
\if_pc_reg[25]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(6),
      Q => S27_in,
      S => sync_reset
    );
\if_pc_reg[26]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(5),
      Q => S22_in,
      S => sync_reset
    );
\if_pc_reg[27]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(4),
      Q => S17_in,
      S => sync_reset
    );
\if_pc_reg[28]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(3),
      Q => S12_in,
      S => sync_reset
    );
\if_pc_reg[29]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(2),
      Q => S,
      S => sync_reset
    );
\if_pc_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(29),
      Q => S142_in,
      S => sync_reset
    );
\if_pc_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(1),
      Q => \^q\(1),
      R => sync_reset
    );
\if_pc_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(0),
      Q => \^q\(0),
      R => sync_reset
    );
\if_pc_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(28),
      Q => S137_in,
      S => sync_reset
    );
\if_pc_reg[4]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(27),
      Q => S132_in,
      S => sync_reset
    );
\if_pc_reg[5]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(26),
      Q => S127_in,
      S => sync_reset
    );
\if_pc_reg[6]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(25),
      Q => S122_in,
      S => sync_reset
    );
\if_pc_reg[7]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(24),
      Q => S117_in,
      S => sync_reset
    );
\if_pc_reg[8]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(23),
      Q => S112_in,
      S => sync_reset
    );
\if_pc_reg[9]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \if_pc_reg[0]_1\(0),
      D => \if_pc_reg[0]_2\(22),
      Q => S107_in,
      S => sync_reset
    );
\mem_pc_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(0),
      Q => \mem_pc_i_reg[0]_0\(31),
      R => sync_reset
    );
\mem_pc_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(10),
      Q => \mem_pc_i_reg[0]_0\(21),
      R => sync_reset
    );
\mem_pc_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(11),
      Q => \mem_pc_i_reg[0]_0\(20),
      R => sync_reset
    );
\mem_pc_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(12),
      Q => \mem_pc_i_reg[0]_0\(19),
      R => sync_reset
    );
\mem_pc_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(13),
      Q => \mem_pc_i_reg[0]_0\(18),
      R => sync_reset
    );
\mem_pc_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(14),
      Q => \mem_pc_i_reg[0]_0\(17),
      R => sync_reset
    );
\mem_pc_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(15),
      Q => \mem_pc_i_reg[0]_0\(16),
      R => sync_reset
    );
\mem_pc_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(16),
      Q => \mem_pc_i_reg[0]_0\(15),
      R => sync_reset
    );
\mem_pc_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(17),
      Q => \mem_pc_i_reg[0]_0\(14),
      R => sync_reset
    );
\mem_pc_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(18),
      Q => \mem_pc_i_reg[0]_0\(13),
      R => sync_reset
    );
\mem_pc_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(19),
      Q => \mem_pc_i_reg[0]_0\(12),
      R => sync_reset
    );
\mem_pc_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(1),
      Q => \mem_pc_i_reg[0]_0\(30),
      R => sync_reset
    );
\mem_pc_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(20),
      Q => \mem_pc_i_reg[0]_0\(11),
      R => sync_reset
    );
\mem_pc_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(21),
      Q => \mem_pc_i_reg[0]_0\(10),
      R => sync_reset
    );
\mem_pc_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(22),
      Q => \mem_pc_i_reg[0]_0\(9),
      R => sync_reset
    );
\mem_pc_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(23),
      Q => \mem_pc_i_reg[0]_0\(8),
      R => sync_reset
    );
\mem_pc_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(24),
      Q => \mem_pc_i_reg[0]_0\(7),
      R => sync_reset
    );
\mem_pc_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(25),
      Q => \mem_pc_i_reg[0]_0\(6),
      R => sync_reset
    );
\mem_pc_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(26),
      Q => \mem_pc_i_reg[0]_0\(5),
      R => sync_reset
    );
\mem_pc_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(27),
      Q => \mem_pc_i_reg[0]_0\(4),
      R => sync_reset
    );
\mem_pc_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(28),
      Q => \mem_pc_i_reg[0]_0\(3),
      R => sync_reset
    );
\mem_pc_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(29),
      Q => \mem_pc_i_reg[0]_0\(2),
      R => sync_reset
    );
\mem_pc_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(2),
      Q => \mem_pc_i_reg[0]_0\(29),
      R => sync_reset
    );
\mem_pc_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(30),
      Q => \mem_pc_i_reg[0]_0\(1),
      R => sync_reset
    );
\mem_pc_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(31),
      Q => \mem_pc_i_reg[0]_0\(0),
      R => sync_reset
    );
\mem_pc_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(3),
      Q => \mem_pc_i_reg[0]_0\(28),
      R => sync_reset
    );
\mem_pc_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(4),
      Q => \mem_pc_i_reg[0]_0\(27),
      R => sync_reset
    );
\mem_pc_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(5),
      Q => \mem_pc_i_reg[0]_0\(26),
      R => sync_reset
    );
\mem_pc_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(6),
      Q => \mem_pc_i_reg[0]_0\(25),
      R => sync_reset
    );
\mem_pc_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(7),
      Q => \mem_pc_i_reg[0]_0\(24),
      R => sync_reset
    );
\mem_pc_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(8),
      Q => \mem_pc_i_reg[0]_0\(23),
      R => sync_reset
    );
\mem_pc_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(9),
      Q => \mem_pc_i_reg[0]_0\(22),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_PreFetch_Buffer_gti is
  port (
    of_instr_raw : out STD_LOGIC_VECTOR ( 5 downto 0 );
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_predecode_raw : out STD_LOGIC_VECTOR ( 9 downto 0 );
    \Using_FPGA.Native_23\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    of_valid : out STD_LOGIC;
    of_branch_with_delayslot140_out : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    ex_gpr_write_reg : out STD_LOGIC;
    ex_is_div_instr_I_reg : out STD_LOGIC;
    ex_Instr_Excep_combo_reg : out STD_LOGIC;
    ex_Instr_Excep_combo1 : out STD_LOGIC;
    of_Illegal_Opcode : out STD_LOGIC;
    if_pre_buffer_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    \ex_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_Use_Carry120_out : out STD_LOGIC;
    EX_Unsigned_Op121_out : out STD_LOGIC;
    EX_CMP_Op122_out : out STD_LOGIC;
    Dbg_Clean_Stop0 : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_atomic_Instruction_Pair0 : out STD_LOGIC;
    of_pipe_ctrl_reg0 : out STD_LOGIC;
    if_fetch_in_progress_reg : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    ex_op1_cmp_eq_n5_out : out STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    ex_mbar_decode_cmb : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    ex_enable_sext_shift_i : out STD_LOGIC;
    ex_branch_instr0 : out STD_LOGIC;
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    \Using_FPGA.Native_32\ : out STD_LOGIC;
    \Using_FPGA.Native_33\ : out STD_LOGIC;
    \Using_FPGA.Native_34\ : out STD_LOGIC;
    \Using_FPGA.Native_35\ : out STD_LOGIC;
    ex_load_shift_carry0 : out STD_LOGIC;
    \Using_FPGA.Native_36\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_move_to_MSR_instr130_out : out STD_LOGIC;
    of_Sel_SPR_ESR : out STD_LOGIC;
    of_Sel_SPR_BTR : out STD_LOGIC;
    of_Sel_SPR_EDR : out STD_LOGIC;
    ex_is_multi_or_load_instr0 : out STD_LOGIC;
    ex_is_multi_instr20 : out STD_LOGIC;
    of_op1_sel_spr_pc : out STD_LOGIC;
    of_Sel_SPR_MSR100_out : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    force12_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    if_fetch_for_timing_optimization1 : out STD_LOGIC;
    \Using_FPGA.Native_37\ : out STD_LOGIC;
    \Using_FPGA.Native_38\ : out STD_LOGIC;
    EX_Bit_Extract0 : out STD_LOGIC;
    ex_is_multi_or_load_instr_reg : out STD_LOGIC;
    mem_is_multi_or_load_instr_reg : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]_0\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[1]_1\ : out STD_LOGIC;
    of_is_bsifi_s : out STD_LOGIC;
    \Using_FPGA.Native_39\ : out STD_LOGIC;
    D261_out : out STD_LOGIC;
    \mem_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[0]_0\ : out STD_LOGIC;
    \Using_FPGA.Native_40\ : out STD_LOGIC;
    D257_out : out STD_LOGIC;
    D259_out : out STD_LOGIC;
    p_2_in : out STD_LOGIC;
    ex_mbar_is_sleep_cmb : out STD_LOGIC;
    EX_Pattern_Cmp_Sel117_out : out STD_LOGIC;
    D265_out : out STD_LOGIC;
    if_fetch_in_progress_reg_0 : out STD_LOGIC;
    wb_exception_i_reg : out STD_LOGIC;
    \Using_FPGA.Native_41\ : out STD_LOGIC;
    \Using_FPGA.Native_42\ : out STD_LOGIC;
    \Using_FPGA.Native_43\ : out STD_LOGIC;
    of_Sel_SPR_EAR : out STD_LOGIC;
    \Using_FPGA.Native_44\ : out STD_LOGIC;
    \Using_FPGA.Native_45\ : out STD_LOGIC;
    \Using_FPGA.Native_46\ : out STD_LOGIC;
    \Using_FPGA.Native_47\ : out STD_LOGIC;
    \Using_FPGA.Native_48\ : out STD_LOGIC;
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 30 downto 0 );
    ex_sel_alu_i_reg_0 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    ex_sel_alu_i_reg_1 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.Native_49\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_50\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    I5 : in STD_LOGIC;
    ex_branch_with_delayslot_i_reg_0 : in STD_LOGIC;
    ex_MSR_set_decode : in STD_LOGIC;
    ex_gpr_write_reg_0 : in STD_LOGIC;
    ex_gpr_write_reg_1 : in STD_LOGIC;
    EX_Is_Div_Instr : in STD_LOGIC;
    ex_is_div_instr_I_reg_0 : in STD_LOGIC;
    ex_Instr_Excep_combo_reg_0 : in STD_LOGIC;
    ex_Instr_Excep_combo_reg_1 : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    of_Take_Exception : in STD_LOGIC;
    OF_Take_Exception_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wb_exception : in STD_LOGIC;
    Dbg_Clean_Stop_reg : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    MEM_Is_Div_Instr : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3]\ : in STD_LOGIC;
    if_fetch_in_progress : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 33 downto 0 );
    \Using_FPGA.Native_i_1__73\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__73_0\ : in STD_LOGIC;
    IReady : in STD_LOGIC;
    \Using_FPGA.Native_i_1__73_1\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part2 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part2 : in STD_LOGIC;
    ex_MSR_Clear_EIP : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_set_MSR_EE_instr : in STD_LOGIC;
    \Detect_IExt_Exceptions.ex_IExt_Exception_reg\ : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part2 : in STD_LOGIC;
    of_read_mem_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op3_conflict_part2 : in STD_LOGIC;
    \Using_FPGA.Native_i_8__5\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \Using_FPGA.Native_i_3__56\ : in STD_LOGIC;
    ex_mbar_is_sleep : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_i_4__5\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_i_9__5\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    I4 : in STD_LOGIC;
    \EX_Op3[31]_i_2\ : in STD_LOGIC;
    \Using_FPGA.Native_i_4__5_1\ : in STD_LOGIC;
    \EX_Op3[0]_i_5\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    if_fetch_in_progress_reg_1 : in STD_LOGIC;
    if_fetch_in_progress_reg_2 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \ex_gpr_write_dbg__0\ : in STD_LOGIC;
    \EX_Op3_reg[0]\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Op3_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \EX_Op2_reg[16]\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    interrupt_address_d1 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2[0]_i_2\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_read_imm_reg : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_PreFetch_Buffer_gti : entity is "PreFetch_Buffer_gti";
end mb_design_microblaze_0_1_PreFetch_Buffer_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_PreFetch_Buffer_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal I0101_out : STD_LOGIC;
  signal I0105_out : STD_LOGIC;
  signal I0109_out : STD_LOGIC;
  signal I0113_out : STD_LOGIC;
  signal I0117_out : STD_LOGIC;
  signal I0121_out : STD_LOGIC;
  signal I0125_out : STD_LOGIC;
  signal I0129_out : STD_LOGIC;
  signal I0133_out : STD_LOGIC;
  signal I0137_out : STD_LOGIC;
  signal I013_out : STD_LOGIC;
  signal I0141_out : STD_LOGIC;
  signal I0145_out : STD_LOGIC;
  signal I0149_out : STD_LOGIC;
  signal I0153_out : STD_LOGIC;
  signal I0157_out : STD_LOGIC;
  signal I0161_out : STD_LOGIC;
  signal I0165_out : STD_LOGIC;
  signal I0169_out : STD_LOGIC;
  signal I0173_out : STD_LOGIC;
  signal I017_out : STD_LOGIC;
  signal I021_out : STD_LOGIC;
  signal I025_out : STD_LOGIC;
  signal I029_out : STD_LOGIC;
  signal I033_out : STD_LOGIC;
  signal I037_out : STD_LOGIC;
  signal I045_out : STD_LOGIC;
  signal I049_out : STD_LOGIC;
  signal I053_out : STD_LOGIC;
  signal I057_out : STD_LOGIC;
  signal I05_out : STD_LOGIC;
  signal I061_out : STD_LOGIC;
  signal I065_out : STD_LOGIC;
  signal I069_out : STD_LOGIC;
  signal I073_out : STD_LOGIC;
  signal I077_out : STD_LOGIC;
  signal I081_out : STD_LOGIC;
  signal I085_out : STD_LOGIC;
  signal I089_out : STD_LOGIC;
  signal I093_out : STD_LOGIC;
  signal I097_out : STD_LOGIC;
  signal I09_out : STD_LOGIC;
  signal I0_0 : STD_LOGIC;
  signal I1 : STD_LOGIC;
  signal I1103_out : STD_LOGIC;
  signal I1107_out : STD_LOGIC;
  signal I1111_out : STD_LOGIC;
  signal I1115_out : STD_LOGIC;
  signal I1119_out : STD_LOGIC;
  signal I111_out : STD_LOGIC;
  signal I1123_out : STD_LOGIC;
  signal I1127_out : STD_LOGIC;
  signal I1131_out : STD_LOGIC;
  signal I1135_out : STD_LOGIC;
  signal I1139_out : STD_LOGIC;
  signal I1143_out : STD_LOGIC;
  signal I1147_out : STD_LOGIC;
  signal I1151_out : STD_LOGIC;
  signal I1155_out : STD_LOGIC;
  signal I1159_out : STD_LOGIC;
  signal I115_out : STD_LOGIC;
  signal I1163_out : STD_LOGIC;
  signal I1167_out : STD_LOGIC;
  signal I1171_out : STD_LOGIC;
  signal I119_out : STD_LOGIC;
  signal I123_out : STD_LOGIC;
  signal I127_out : STD_LOGIC;
  signal I131_out : STD_LOGIC;
  signal I135_out : STD_LOGIC;
  signal I13_out : STD_LOGIC;
  signal I143_out : STD_LOGIC;
  signal I147_out : STD_LOGIC;
  signal I151_out : STD_LOGIC;
  signal I155_out : STD_LOGIC;
  signal I159_out : STD_LOGIC;
  signal I163_out : STD_LOGIC;
  signal I167_out : STD_LOGIC;
  signal I171_out : STD_LOGIC;
  signal I175_out : STD_LOGIC;
  signal I179_out : STD_LOGIC;
  signal I17_out : STD_LOGIC;
  signal I183_out : STD_LOGIC;
  signal I187_out : STD_LOGIC;
  signal I191_out : STD_LOGIC;
  signal I195_out : STD_LOGIC;
  signal I199_out : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_5\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_10\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_11\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_12\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_13\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_14\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_15\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_16\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_17\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_18\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_19\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_5\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_6\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_7\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_8\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_9\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[35].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_7\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[40].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_11\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_18\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_6\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_8\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_6\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_8\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_9\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal S : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_10\ : STD_LOGIC;
  signal \^using_fpga.native_11\ : STD_LOGIC;
  signal \^using_fpga.native_12\ : STD_LOGIC;
  signal \^using_fpga.native_13\ : STD_LOGIC;
  signal \^using_fpga.native_14\ : STD_LOGIC;
  signal \^using_fpga.native_15\ : STD_LOGIC;
  signal \^using_fpga.native_16\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_17\ : STD_LOGIC;
  signal \^using_fpga.native_18\ : STD_LOGIC;
  signal \^using_fpga.native_19\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_20\ : STD_LOGIC;
  signal \^using_fpga.native_21\ : STD_LOGIC;
  signal \^using_fpga.native_23\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_24\ : STD_LOGIC;
  signal \^using_fpga.native_29\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_8\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal ex_branch_with_delayslot_i : STD_LOGIC;
  signal ex_gpr_write : STD_LOGIC;
  signal \ibuffer_reg[3][43]_srl4_n_0\ : STD_LOGIC;
  signal \^if_pre_buffer_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal if_sel_input : STD_LOGIC_VECTOR ( 1 to 4 );
  signal \^of_illegal_opcode\ : STD_LOGIC;
  signal of_Instr_Exception : STD_LOGIC;
  signal of_Valid_II : STD_LOGIC;
  signal of_instr_ii_0 : STD_LOGIC;
  signal of_instr_ii_1 : STD_LOGIC;
  signal of_instr_ii_10 : STD_LOGIC;
  signal of_instr_ii_11 : STD_LOGIC;
  signal of_instr_ii_12 : STD_LOGIC;
  signal of_instr_ii_13 : STD_LOGIC;
  signal of_instr_ii_14 : STD_LOGIC;
  signal of_instr_ii_15 : STD_LOGIC;
  signal of_instr_ii_16 : STD_LOGIC;
  signal of_instr_ii_17 : STD_LOGIC;
  signal of_instr_ii_18 : STD_LOGIC;
  signal of_instr_ii_19 : STD_LOGIC;
  signal of_instr_ii_2 : STD_LOGIC;
  signal of_instr_ii_20 : STD_LOGIC;
  signal of_instr_ii_21 : STD_LOGIC;
  signal of_instr_ii_22 : STD_LOGIC;
  signal of_instr_ii_23 : STD_LOGIC;
  signal of_instr_ii_24 : STD_LOGIC;
  signal of_instr_ii_25 : STD_LOGIC;
  signal of_instr_ii_26 : STD_LOGIC;
  signal of_instr_ii_27 : STD_LOGIC;
  signal of_instr_ii_28 : STD_LOGIC;
  signal of_instr_ii_29 : STD_LOGIC;
  signal of_instr_ii_3 : STD_LOGIC;
  signal of_instr_ii_30 : STD_LOGIC;
  signal of_instr_ii_31 : STD_LOGIC;
  signal of_instr_ii_32 : STD_LOGIC;
  signal of_instr_ii_33 : STD_LOGIC;
  signal of_instr_ii_34 : STD_LOGIC;
  signal of_instr_ii_35 : STD_LOGIC;
  signal of_instr_ii_36 : STD_LOGIC;
  signal of_instr_ii_37 : STD_LOGIC;
  signal of_instr_ii_38 : STD_LOGIC;
  signal of_instr_ii_39 : STD_LOGIC;
  signal of_instr_ii_4 : STD_LOGIC;
  signal of_instr_ii_40 : STD_LOGIC;
  signal of_instr_ii_41 : STD_LOGIC;
  signal of_instr_ii_42 : STD_LOGIC;
  signal of_instr_ii_43 : STD_LOGIC;
  signal of_instr_ii_5 : STD_LOGIC;
  signal of_instr_ii_6 : STD_LOGIC;
  signal of_instr_ii_7 : STD_LOGIC;
  signal of_instr_ii_8 : STD_LOGIC;
  signal of_instr_ii_9 : STD_LOGIC;
  signal \^of_instr_raw\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal of_op2_sel_imm : STD_LOGIC;
  signal \^of_predecode_raw\ : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal \^of_valid\ : STD_LOGIC;
  signal p_1_in100_in : STD_LOGIC;
  signal p_1_in105_in : STD_LOGIC;
  signal p_1_in10_in : STD_LOGIC;
  signal p_1_in110_in : STD_LOGIC;
  signal p_1_in115_in : STD_LOGIC;
  signal p_1_in120_in : STD_LOGIC;
  signal p_1_in125_in : STD_LOGIC;
  signal p_1_in130_in : STD_LOGIC;
  signal p_1_in135_in : STD_LOGIC;
  signal p_1_in140_in : STD_LOGIC;
  signal p_1_in145_in : STD_LOGIC;
  signal p_1_in150_in : STD_LOGIC;
  signal p_1_in155_in : STD_LOGIC;
  signal p_1_in15_in : STD_LOGIC;
  signal p_1_in160_in : STD_LOGIC;
  signal p_1_in165_in : STD_LOGIC;
  signal p_1_in170_in : STD_LOGIC;
  signal p_1_in175_in : STD_LOGIC;
  signal p_1_in180_in : STD_LOGIC;
  signal p_1_in185_in : STD_LOGIC;
  signal p_1_in190_in : STD_LOGIC;
  signal p_1_in195_in : STD_LOGIC;
  signal p_1_in200_in : STD_LOGIC;
  signal p_1_in205_in : STD_LOGIC;
  signal p_1_in20_in : STD_LOGIC;
  signal p_1_in210_in : STD_LOGIC;
  signal p_1_in215_in : STD_LOGIC;
  signal p_1_in25_in : STD_LOGIC;
  signal p_1_in30_in : STD_LOGIC;
  signal p_1_in35_in : STD_LOGIC;
  signal p_1_in40_in : STD_LOGIC;
  signal p_1_in45_in : STD_LOGIC;
  signal p_1_in55_in : STD_LOGIC;
  signal p_1_in5_in : STD_LOGIC;
  signal p_1_in60_in : STD_LOGIC;
  signal p_1_in65_in : STD_LOGIC;
  signal p_1_in70_in : STD_LOGIC;
  signal p_1_in75_in : STD_LOGIC;
  signal p_1_in80_in : STD_LOGIC;
  signal p_1_in85_in : STD_LOGIC;
  signal p_1_in90_in : STD_LOGIC;
  signal p_1_in95_in : STD_LOGIC;
  signal sel_input_delayslot : STD_LOGIC;
  signal sel_input_i_0 : STD_LOGIC;
  signal sel_input_i_1 : STD_LOGIC;
  signal sel_input_iii_0 : STD_LOGIC;
  signal sel_input_iii_1 : STD_LOGIC;
  signal sel_input_iii_2 : STD_LOGIC;
  signal sel_input_iii_3 : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \ibuffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \ibuffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][32]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][32]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][32]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][33]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][33]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][33]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][34]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][34]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][34]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][35]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][35]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][35]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][36]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][36]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][36]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][37]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][37]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][37]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][38]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][38]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][38]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][39]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][39]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][39]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][40]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][40]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][40]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][41]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][41]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][41]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][42]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][42]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][42]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][43]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][43]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][43]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][9]_srl4 ";
begin
  D(1 downto 0) <= \^d\(1 downto 0);
  E(0) <= \^e\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_10\ <= \^using_fpga.native_10\;
  \Using_FPGA.Native_11\ <= \^using_fpga.native_11\;
  \Using_FPGA.Native_12\ <= \^using_fpga.native_12\;
  \Using_FPGA.Native_13\ <= \^using_fpga.native_13\;
  \Using_FPGA.Native_14\ <= \^using_fpga.native_14\;
  \Using_FPGA.Native_15\ <= \^using_fpga.native_15\;
  \Using_FPGA.Native_16\(1 downto 0) <= \^using_fpga.native_16\(1 downto 0);
  \Using_FPGA.Native_17\ <= \^using_fpga.native_17\;
  \Using_FPGA.Native_18\ <= \^using_fpga.native_18\;
  \Using_FPGA.Native_19\ <= \^using_fpga.native_19\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_20\ <= \^using_fpga.native_20\;
  \Using_FPGA.Native_21\ <= \^using_fpga.native_21\;
  \Using_FPGA.Native_23\(0) <= \^using_fpga.native_23\(0);
  \Using_FPGA.Native_24\ <= \^using_fpga.native_24\;
  \Using_FPGA.Native_29\ <= \^using_fpga.native_29\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_8\ <= \^using_fpga.native_8\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
  if_pre_buffer_addr(0) <= \^if_pre_buffer_addr\(0);
  of_Illegal_Opcode <= \^of_illegal_opcode\;
  of_instr_raw(5 downto 0) <= \^of_instr_raw\(5 downto 0);
  of_predecode_raw(9 downto 0) <= \^of_predecode_raw\(9 downto 0);
  of_valid <= \^of_valid\;
\Gen_Mux_Select_LUT6[1].Gen_Sel_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_128
     port map (
      Clk => Clk,
      addr(0) => \^using_fpga.native_23\(0),
      ex_jump => ex_jump,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_fetch_in_progress => if_fetch_in_progress,
      if_fetch_in_progress_reg => if_fetch_in_progress_reg_0,
      if_fetch_in_progress_reg_0 => \LOCKSTEP_Out_reg[3]\,
      if_fetch_in_progress_reg_1 => if_fetch_in_progress_reg_1,
      if_fetch_in_progress_reg_2(0) => if_fetch_in_progress_reg_2(16),
      if_sel_input(0) => if_sel_input(1),
      \out\ => \out\,
      sel_input_iii_3 => sel_input_iii_3,
      sync_reset => sync_reset
    );
\Gen_Mux_Select_LUT6[1].Mux_Select_LUT6\: entity work.mb_design_microblaze_0_1_MB_LUT6
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      addr(0) => \^using_fpga.native_23\(0),
      if_sel_input(0) => if_sel_input(1),
      sel_input_iii_3 => sel_input_iii_3
    );
\Gen_Mux_Select_LUT6[2].Gen_Sel_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_129
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3]\ => \LOCKSTEP_Out_reg[3]\,
      \Serial_Dbg_Intf.status_reg_reg[25]\(0) => \^using_fpga.native_23\(0),
      addr(0) => \^if_pre_buffer_addr\(0),
      ex_jump => ex_jump,
      if_fetch_in_progress => if_fetch_in_progress,
      if_fetch_in_progress_reg(1 downto 0) => if_fetch_in_progress_reg(1 downto 0),
      if_sel_input(0) => if_sel_input(1),
      in0 => in0,
      \out\ => \out\,
      sel_input_iii_2 => sel_input_iii_2,
      sync_reset => sync_reset
    );
\Gen_Mux_Select_LUT6[2].Mux_Select_LUT6\: entity work.mb_design_microblaze_0_1_MB_LUT6_130
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      addr(0) => \^using_fpga.native_23\(0),
      if_sel_input(1) => if_sel_input(1),
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_2 => sel_input_iii_2
    );
\Gen_Mux_Select_LUT6[3].Gen_Sel_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_131
     port map (
      Clk => Clk,
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_1 => sel_input_iii_1,
      sync_reset => sync_reset
    );
\Gen_Mux_Select_LUT6[3].Mux_Select_LUT6\: entity work.mb_design_microblaze_0_1_MB_LUT6_132
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      if_sel_input(1) => if_sel_input(1),
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_1 => sel_input_iii_1
    );
\Gen_Mux_Select_LUT6[4].Gen_Sel_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_133
     port map (
      Clk => Clk,
      I1 => I1,
      I1103_out => I1103_out,
      I1107_out => I1107_out,
      I1111_out => I1111_out,
      I1115_out => I1115_out,
      I1119_out => I1119_out,
      I111_out => I111_out,
      I1123_out => I1123_out,
      I1127_out => I1127_out,
      I1131_out => I1131_out,
      I1135_out => I1135_out,
      I1139_out => I1139_out,
      I1143_out => I1143_out,
      I1147_out => I1147_out,
      I1151_out => I1151_out,
      I1155_out => I1155_out,
      I1159_out => I1159_out,
      I115_out => I115_out,
      I1163_out => I1163_out,
      I1167_out => I1167_out,
      I1171_out => I1171_out,
      I119_out => I119_out,
      I123_out => I123_out,
      I127_out => I127_out,
      I131_out => I131_out,
      I135_out => I135_out,
      I13_out => I13_out,
      I143_out => I143_out,
      I147_out => I147_out,
      I151_out => I151_out,
      I155_out => I155_out,
      I159_out => I159_out,
      I163_out => I163_out,
      I167_out => I167_out,
      I171_out => I171_out,
      I175_out => I175_out,
      I179_out => I179_out,
      I17_out => I17_out,
      I183_out => I183_out,
      I187_out => I187_out,
      I191_out => I191_out,
      I195_out => I195_out,
      I199_out => I199_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \in\(32 downto 10) => \in\(33 downto 11),
      \in\(9 downto 0) => \in\(9 downto 0),
      \out\(42) => p_1_in215_in,
      \out\(41) => p_1_in210_in,
      \out\(40) => p_1_in205_in,
      \out\(39) => p_1_in200_in,
      \out\(38) => p_1_in195_in,
      \out\(37) => p_1_in190_in,
      \out\(36) => p_1_in185_in,
      \out\(35) => p_1_in180_in,
      \out\(34) => p_1_in175_in,
      \out\(33) => p_1_in170_in,
      \out\(32) => p_1_in165_in,
      \out\(31) => p_1_in160_in,
      \out\(30) => p_1_in155_in,
      \out\(29) => p_1_in150_in,
      \out\(28) => p_1_in145_in,
      \out\(27) => p_1_in140_in,
      \out\(26) => p_1_in135_in,
      \out\(25) => p_1_in130_in,
      \out\(24) => p_1_in125_in,
      \out\(23) => p_1_in120_in,
      \out\(22) => p_1_in115_in,
      \out\(21) => p_1_in110_in,
      \out\(20) => p_1_in105_in,
      \out\(19) => p_1_in100_in,
      \out\(18) => p_1_in95_in,
      \out\(17) => p_1_in90_in,
      \out\(16) => p_1_in85_in,
      \out\(15) => p_1_in80_in,
      \out\(14) => p_1_in75_in,
      \out\(13) => p_1_in70_in,
      \out\(12) => p_1_in65_in,
      \out\(11) => p_1_in60_in,
      \out\(10) => p_1_in55_in,
      \out\(9) => p_1_in45_in,
      \out\(8) => p_1_in40_in,
      \out\(7) => p_1_in35_in,
      \out\(6) => p_1_in30_in,
      \out\(5) => p_1_in25_in,
      \out\(4) => p_1_in20_in,
      \out\(3) => p_1_in15_in,
      \out\(2) => p_1_in10_in,
      \out\(1) => p_1_in5_in,
      \out\(0) => \ibuffer_reg[3][43]_srl4_n_0\,
      sel_input_i_1 => sel_input_i_1,
      sync_reset => sync_reset
    );
\Gen_Mux_Select_LUT6[4].Mux_Select_LUT6\: entity work.mb_design_microblaze_0_1_MB_LUT6_134
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      if_sel_input(1) => if_sel_input(2),
      if_sel_input(0) => if_sel_input(4),
      sel_input_iii_0 => sel_input_iii_0
    );
\Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized2\
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      if_sel_input(1) => if_sel_input(2),
      if_sel_input(0) => if_sel_input(4),
      sel_input_delayslot => sel_input_delayslot
    );
\Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7
     port map (
      Q(3 downto 0) => Q(3 downto 0),
      S => S,
      ex_branch_with_delayslot_i => ex_branch_with_delayslot_i,
      sel_input_delayslot => sel_input_delayslot,
      sel_input_i_1 => sel_input_i_1,
      sel_input_iii_0 => sel_input_iii_0,
      wb_exception => wb_exception
    );
\Instruction_Prefetch_Mux[0].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_135
     port map (
      Clk => Clk,
      D259_out => D259_out,
      \Using_FPGA.Native_0\ => \^of_instr_raw\(5),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_10\ => \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_2\ => \^using_fpga.native_29\,
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_4\,
      \Using_FPGA.Native_4\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_6\ => \^of_instr_raw\(4),
      \Using_FPGA.Native_7\ => \^of_instr_raw\(1),
      \Using_FPGA.Native_8\ => \^of_instr_raw\(0),
      \Using_FPGA.Native_9\ => \^of_instr_raw\(2),
      ex_MSR_set_decode => ex_MSR_set_decode,
      ex_MSR_set_decode_reg => \^using_fpga.native_7\,
      ex_MSR_set_decode_reg_0 => \^using_fpga.native_6\,
      ex_MSR_set_decode_reg_1 => \Using_FPGA.Native_51\,
      ex_enable_sext_shift_i => ex_enable_sext_shift_i,
      ex_enable_sext_shift_i_reg => \^using_fpga.native_15\,
      ex_enable_sext_shift_i_reg_0 => \^using_fpga.native_16\(1),
      ex_enable_sext_shift_i_reg_1 => \^using_fpga.native_16\(0),
      ex_enable_sext_shift_i_reg_2 => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      ex_gpr_write_i_4 => \^using_fpga.native_8\,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      ex_op1_cmp_eq_n_reg => \^using_fpga.native\,
      ex_op1_cmp_eq_n_reg_0 => \^using_fpga.native_1\,
      ex_op1_cmp_eq_n_reg_1 => \^using_fpga.native_0\,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      force_Val2_N_reg => \^of_instr_raw\(3),
      of_instr_ii_43 => of_instr_ii_43,
      sync_reset => sync_reset,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out
    );
\Instruction_Prefetch_Mux[0].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_136
     port map (
      I0173_out => I0173_out,
      I1171_out => I1171_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_43 => of_instr_ii_43
    );
\Instruction_Prefetch_Mux[10].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_137
     port map (
      Clk => Clk,
      \EX_Op3[0]_i_5\(2) => \EX_Op3[0]_i_5\(4),
      \EX_Op3[0]_i_5\(1) => \EX_Op3[0]_i_5\(2),
      \EX_Op3[0]_i_5\(0) => \EX_Op3[0]_i_5\(0),
      \EX_Op3[0]_i_5_0\ => \^d\(1),
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\,
      ex_gpr_write_reg => \^using_fpga.native\,
      ex_gpr_write_reg_0 => \^using_fpga.native_0\,
      of_instr_ii_33 => of_instr_ii_33,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[10].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_138
     port map (
      I0133_out => I0133_out,
      I1131_out => I1131_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_33 => of_instr_ii_33
    );
\Instruction_Prefetch_Mux[11].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_139
     port map (
      Clk => Clk,
      \Performance_Debug_Control.ex_brki_hit_i_2\ => \^using_fpga.native_3\,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_1\,
      of_instr_ii_32 => of_instr_ii_32,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[11].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_140
     port map (
      I0129_out => I0129_out,
      I1127_out => I1127_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_32 => of_instr_ii_32
    );
\Instruction_Prefetch_Mux[12].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_141
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_3\,
      of_instr_ii_31 => of_instr_ii_31,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[12].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_142
     port map (
      I0125_out => I0125_out,
      I1123_out => I1123_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_31 => of_instr_ii_31
    );
\Instruction_Prefetch_Mux[13].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_143
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_4\,
      of_instr_ii_30 => of_instr_ii_30,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[13].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_144
     port map (
      I0121_out => I0121_out,
      I1119_out => I1119_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_30 => of_instr_ii_30
    );
\Instruction_Prefetch_Mux[14].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_145
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_5\,
      of_instr_ii_29 => of_instr_ii_29,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[14].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_146
     port map (
      I0117_out => I0117_out,
      I1115_out => I1115_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_29 => of_instr_ii_29
    );
\Instruction_Prefetch_Mux[15].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_147
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_6\,
      of_instr_ii_28 => of_instr_ii_28,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[15].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_148
     port map (
      I0113_out => I0113_out,
      I1111_out => I1111_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_28 => of_instr_ii_28
    );
\Instruction_Prefetch_Mux[16].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_149
     port map (
      Clk => Clk,
      EX_Bit_Insert_reg => \^of_instr_raw\(0),
      EX_Bit_Insert_reg_0 => \^of_instr_raw\(1),
      EX_Bit_Insert_reg_1 => \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_7\,
      EX_Bit_Insert_reg_2 => \^of_instr_raw\(3),
      \EX_Op2[0]_i_2_0\(15 downto 0) => \EX_Op2[0]_i_2\(15 downto 0),
      \EX_Op2_reg[0]\ => ex_branch_with_delayslot_reg,
      GPR_Op2(15) => GPR_Op2(0),
      GPR_Op2(14) => GPR_Op2(1),
      GPR_Op2(13) => GPR_Op2(2),
      GPR_Op2(12) => GPR_Op2(3),
      GPR_Op2(11) => GPR_Op2(4),
      GPR_Op2(10) => GPR_Op2(5),
      GPR_Op2(9) => GPR_Op2(6),
      GPR_Op2(8) => GPR_Op2(7),
      GPR_Op2(7) => GPR_Op2(8),
      GPR_Op2(6) => GPR_Op2(9),
      GPR_Op2(5) => GPR_Op2(10),
      GPR_Op2(4) => GPR_Op2(11),
      GPR_Op2(3) => GPR_Op2(12),
      GPR_Op2(2) => GPR_Op2(13),
      GPR_Op2(1) => GPR_Op2(14),
      GPR_Op2(0) => GPR_Op2(15),
      OF_Take_Exception_hold => OF_Take_Exception_hold,
      \Performance_Debug_Control.ex_brki_hit_i_2\ => \^using_fpga.native_8\,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\ => \^using_fpga.native_9\,
      \Performance_Debug_Control.ex_brki_hit_i_2_1\(0) => \Performance_Debug_Control.ex_brki_hit_i_2_0\(0),
      \Performance_Debug_Control.ex_brki_hit_i_2_2\ => \^using_fpga.native_17\,
      Q(0) => Q(3),
      \Using_FPGA.Native_0\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_44\,
      ex_MSR_clear_decode_reg => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_2\,
      ex_MSR_clear_decode_reg_0 => \^using_fpga.native_6\,
      interrupt_address_d1(15) => interrupt_address_d1(0),
      interrupt_address_d1(14) => interrupt_address_d1(1),
      interrupt_address_d1(13) => interrupt_address_d1(2),
      interrupt_address_d1(12) => interrupt_address_d1(3),
      interrupt_address_d1(11) => interrupt_address_d1(4),
      interrupt_address_d1(10) => interrupt_address_d1(5),
      interrupt_address_d1(9) => interrupt_address_d1(6),
      interrupt_address_d1(8) => interrupt_address_d1(7),
      interrupt_address_d1(7) => interrupt_address_d1(8),
      interrupt_address_d1(6) => interrupt_address_d1(9),
      interrupt_address_d1(5) => interrupt_address_d1(10),
      interrupt_address_d1(4) => interrupt_address_d1(11),
      interrupt_address_d1(3) => interrupt_address_d1(12),
      interrupt_address_d1(2) => interrupt_address_d1(13),
      interrupt_address_d1(1) => interrupt_address_d1(14),
      interrupt_address_d1(0) => interrupt_address_d1(15),
      of_Instr_Exception => of_Instr_Exception,
      of_instr_ii_27 => of_instr_ii_27,
      of_is_bsifi_s => of_is_bsifi_s,
      of_op2_imm_addr(15) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(0),
      of_op2_imm_addr(14) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(1),
      of_op2_imm_addr(13) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(2),
      of_op2_imm_addr(12) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(3),
      of_op2_imm_addr(11) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(4),
      of_op2_imm_addr(10) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(5),
      of_op2_imm_addr(9) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(6),
      of_op2_imm_addr(8) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(7),
      of_op2_imm_addr(7) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(8),
      of_op2_imm_addr(6) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(9),
      of_op2_imm_addr(5) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(10),
      of_op2_imm_addr(4) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(11),
      of_op2_imm_addr(3) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(12),
      of_op2_imm_addr(2) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(13),
      of_op2_imm_addr(1) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(14),
      of_op2_imm_addr(0) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(15),
      of_op2_sel_imm => of_op2_sel_imm,
      of_read_imm_reg => of_read_imm_reg,
      sync_reset => sync_reset,
      wb_exception => wb_exception
    );
\Instruction_Prefetch_Mux[16].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_150
     port map (
      I0109_out => I0109_out,
      I1107_out => I1107_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_27 => of_instr_ii_27
    );
\Instruction_Prefetch_Mux[17].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_151
     port map (
      Clk => Clk,
      EX_Bit_Extract0 => EX_Bit_Extract0,
      EX_Bit_Extract_reg => \^of_instr_raw\(0),
      EX_Bit_Extract_reg_0 => \^of_instr_raw\(1),
      EX_Bit_Extract_reg_1 => \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_7\,
      EX_Bit_Extract_reg_2 => \^of_instr_raw\(3),
      \Using_FPGA.Native_0\ => \^using_fpga.native_8\,
      of_instr_ii_26 => of_instr_ii_26,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[17].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_152
     port map (
      I0105_out => I0105_out,
      I1103_out => I1103_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_26 => of_instr_ii_26
    );
\Instruction_Prefetch_Mux[18].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_153
     port map (
      Clk => Clk,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_0\ => \^using_fpga.native_8\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_3_1\ => \^using_fpga.native_7\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ => \^using_fpga.native_5\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ => \^using_fpga.native_6\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ => \^using_fpga.native_17\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ => \^of_instr_raw\(5),
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1\,
      of_instr_ii_25 => of_instr_ii_25,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[18].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_154
     port map (
      I0101_out => I0101_out,
      I199_out => I199_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_25 => of_instr_ii_25
    );
\Instruction_Prefetch_Mux[19].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_155
     port map (
      Clk => Clk,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4\ => \^using_fpga.native_15\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\ => \^of_instr_raw\(4),
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\ => \^of_instr_raw\(3),
      \Using_FPGA.Native_0\ => \^using_fpga.native_10\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1\,
      of_instr_ii_24 => of_instr_ii_24,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[19].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_156
     port map (
      I097_out => I097_out,
      I195_out => I195_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_24 => of_instr_ii_24
    );
\Instruction_Prefetch_Mux[1].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_157
     port map (
      Clk => Clk,
      D261_out => D261_out,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ => \^of_instr_raw\(3),
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ => \Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_6\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ => \Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ => \^of_instr_raw\(1),
      \EX_ALU_Op_reg[1]\ => \^of_instr_raw\(0),
      \EX_ALU_Op_reg[1]_0\ => \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2\,
      \EX_ALU_Op_reg[1]_1\ => \^of_instr_raw\(2),
      \Using_FPGA.Native_0\ => \^of_instr_raw\(4),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_27\(0),
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_42\,
      \Using_FPGA.Native_5\ => \^of_instr_raw\(5),
      \Using_FPGA.Native_6\ => Dbg_Clean_Stop_reg,
      ex_MSR(0) => ex_MSR(0),
      ex_MSR_Clear_EIP => ex_MSR_Clear_EIP,
      ex_jump => ex_jump,
      ex_load_alu_carry_reg => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2\,
      of_Illegal_Opcode => \^of_illegal_opcode\,
      of_instr_ii_42 => of_instr_ii_42,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[1].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_158
     port map (
      I0169_out => I0169_out,
      I1167_out => I1167_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_42 => of_instr_ii_42
    );
\Instruction_Prefetch_Mux[20].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_159
     port map (
      Clk => Clk,
      \Performance_Debug_Control.ex_brki_hit_i_2\ => \^using_fpga.native_14\,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\ => \^using_fpga.native_19\,
      \Performance_Debug_Control.ex_brki_hit_i_2_1\ => \^using_fpga.native_18\,
      \Performance_Debug_Control.ex_brki_hit_i_2_2\ => \^using_fpga.native_15\,
      \Performance_Debug_Control.ex_brki_hit_i_2_3\ => \^using_fpga.native_10\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_11\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1\,
      of_instr_ii_23 => of_instr_ii_23,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[20].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_160
     port map (
      I093_out => I093_out,
      I191_out => I191_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_23 => of_instr_ii_23
    );
\Instruction_Prefetch_Mux[21].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_161
     port map (
      Clk => Clk,
      D257_out => D257_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native_12\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_3\ => \^of_instr_raw\(1),
      \Using_FPGA.Native_4\ => \^of_instr_raw\(0),
      \Using_FPGA.Native_5\ => \^of_instr_raw\(4),
      ex_sel_alu_i_reg => \^of_instr_raw\(5),
      ex_sel_alu_i_reg_0 => \^of_instr_raw\(2),
      ex_sel_alu_i_reg_1 => \^of_instr_raw\(3),
      of_instr_ii_22 => of_instr_ii_22,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[21].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_162
     port map (
      I089_out => I089_out,
      I187_out => I187_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_22 => of_instr_ii_22
    );
\Instruction_Prefetch_Mux[22].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_163
     port map (
      Clk => Clk,
      D265_out => D265_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native_13\,
      \Using_FPGA.Native_1\ => \^of_instr_raw\(3),
      of_instr_ii_21 => of_instr_ii_21,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[22].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_164
     port map (
      I085_out => I085_out,
      I183_out => I183_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_21 => of_instr_ii_21
    );
\Instruction_Prefetch_Mux[23].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_165
     port map (
      Clk => Clk,
      EX_SWAP_Instr_reg => \^using_fpga.native_15\,
      EX_SWAP_Instr_reg_0 => \^using_fpga.native_16\(1),
      EX_SWAP_Instr_reg_1 => \^using_fpga.native_16\(0),
      EX_SWAP_Instr_reg_2 => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_14\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_34\,
      of_instr_ii_20 => of_instr_ii_20,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[23].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_166
     port map (
      I081_out => I081_out,
      I179_out => I179_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_20 => of_instr_ii_20
    );
\Instruction_Prefetch_Mux[24].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_167
     port map (
      Clk => Clk,
      EX_CLZ_Instr_reg => \^using_fpga.native_16\(1),
      EX_CLZ_Instr_reg_0 => \^using_fpga.native_16\(0),
      EX_CLZ_Instr_reg_1 => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      EX_CLZ_Instr_reg_2 => \^using_fpga.native_14\,
      \EX_Sext_Op_reg[1]\ => \^using_fpga.native_21\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_15\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_36\(0),
      of_instr_ii_19 => of_instr_ii_19,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[24].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_168
     port map (
      I077_out => I077_out,
      I175_out => I175_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_19 => of_instr_ii_19
    );
\Instruction_Prefetch_Mux[25].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_169
     port map (
      Clk => Clk,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ => \^using_fpga.native_16\(0),
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ => \^using_fpga.native_21\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ => \^using_fpga.native_13\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ => \^using_fpga.native_20\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_3\ => \^using_fpga.native_12\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_16\(1),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1\,
      of_instr_ii_18 => of_instr_ii_18,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[25].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_170
     port map (
      I073_out => I073_out,
      I171_out => I171_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_18 => of_instr_ii_18
    );
\Instruction_Prefetch_Mux[26].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_171
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_16\(0),
      of_instr_ii_17 => of_instr_ii_17,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[26].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_172
     port map (
      I069_out => I069_out,
      I167_out => I167_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_17 => of_instr_ii_17
    );
\Instruction_Prefetch_Mux[27].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_173
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_17\,
      of_instr_ii_16 => of_instr_ii_16,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[27].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_174
     port map (
      I065_out => I065_out,
      I163_out => I163_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_16 => of_instr_ii_16
    );
\Instruction_Prefetch_Mux[28].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_175
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_18\,
      \Using_FPGA.Native_1\ => of_Sel_SPR_BTR,
      \Using_FPGA.Native_2\ => of_Sel_SPR_EAR,
      ex_Sel_SPR_EAR_reg => \^using_fpga.native_19\,
      ex_Sel_SPR_EAR_reg_0 => \^using_fpga.native_20\,
      ex_Sel_SPR_EAR_reg_1 => \^using_fpga.native_21\,
      ex_Sel_SPR_EAR_reg_2 => \^using_fpga.native_7\,
      ex_Sel_SPR_EAR_reg_3 => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_11\,
      ex_move_to_MSR_instr130_out => ex_move_to_MSR_instr130_out,
      ex_move_to_MSR_instr_reg => \^using_fpga.native_8\,
      ex_move_to_MSR_instr_reg_0 => \^of_instr_raw\(0),
      ex_move_to_MSR_instr_reg_1 => \^of_instr_raw\(1),
      ex_move_to_MSR_instr_reg_2 => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_2\,
      of_instr_ii_15 => of_instr_ii_15,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[28].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_176
     port map (
      I061_out => I061_out,
      I159_out => I159_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_15 => of_instr_ii_15
    );
\Instruction_Prefetch_Mux[29].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_177
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_19\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_4\,
      ex_gpr_write => ex_gpr_write,
      \ex_gpr_write_dbg__0\ => \ex_gpr_write_dbg__0\,
      ex_gpr_write_dbg_reg => \^using_fpga.native_18\,
      ex_gpr_write_dbg_reg_0 => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      ex_gpr_write_dbg_reg_1 => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_4\,
      ex_gpr_write_dbg_reg_2 => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_6\,
      ex_gpr_write_dbg_reg_3 => \^using_fpga.native_4\,
      ex_gpr_write_dbg_reg_4 => ex_is_div_instr_I_reg_0,
      ex_gpr_write_dbg_reg_5 => \Using_FPGA.Native_51\,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      of_instr_ii_14 => of_instr_ii_14,
      of_op2_sel_imm => of_op2_sel_imm,
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1,
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2,
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1,
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2,
      sync_reset => sync_reset,
      wb_exception => wb_exception,
      wb_exception_i_reg => wb_exception_i_reg
    );
\Instruction_Prefetch_Mux[29].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_178
     port map (
      I057_out => I057_out,
      I155_out => I155_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_14 => of_instr_ii_14
    );
\Instruction_Prefetch_Mux[2].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_179
     port map (
      Clk => Clk,
      EX_Pattern_Cmp_Sel117_out => EX_Pattern_Cmp_Sel117_out,
      EX_Pattern_Cmp_Sel_reg => \^using_fpga.native_12\,
      EX_Pattern_Cmp_Sel_reg_0 => \^of_instr_raw\(4),
      EX_Pattern_Cmp_Sel_reg_1 => \^of_instr_raw\(5),
      EX_Pattern_Cmp_Sel_reg_2 => \^of_instr_raw\(2),
      \Using_FPGA.Native_0\ => \^of_instr_raw\(3),
      of_instr_ii_41 => of_instr_ii_41,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[2].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_180
     port map (
      I0165_out => I0165_out,
      I1163_out => I1163_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_41 => of_instr_ii_41
    );
\Instruction_Prefetch_Mux[30].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_181
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_20\,
      of_instr_ii_13 => of_instr_ii_13,
      p_2_in => p_2_in,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[30].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_182
     port map (
      I053_out => I053_out,
      I151_out => I151_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_13 => of_instr_ii_13
    );
\Instruction_Prefetch_Mux[31].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_183
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_21\,
      of_instr_ii_12 => of_instr_ii_12,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[31].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_184
     port map (
      I049_out => I049_out,
      I147_out => I147_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_12 => of_instr_ii_12
    );
\Instruction_Prefetch_Mux[32].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_185
     port map (
      Clk => Clk,
      \Detect_IExt_Exceptions.ex_IExt_Exception_reg\ => \Detect_IExt_Exceptions.ex_IExt_Exception_reg\,
      ex_Instr_Excep_combo1 => ex_Instr_Excep_combo1,
      ex_Instr_Excep_combo_reg => ex_Instr_Excep_combo_reg,
      ex_Instr_Excep_combo_reg_0 => ex_Instr_Excep_combo_reg_0,
      ex_Instr_Excep_combo_reg_1 => \Using_FPGA.Native_51\,
      ex_Instr_Excep_combo_reg_2 => ex_Instr_Excep_combo_reg_1,
      ex_MSR(0) => ex_MSR(0),
      ex_set_MSR_EE_instr => ex_set_MSR_EE_instr,
      of_Illegal_Opcode => \^of_illegal_opcode\,
      of_Instr_Exception => of_Instr_Exception,
      of_instr_ii_11 => of_instr_ii_11,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[32].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_186
     port map (
      I045_out => I045_out,
      I143_out => I143_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_11 => of_instr_ii_11
    );
\Instruction_Prefetch_Mux[33].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_187
     port map (
      Clk => Clk,
      \EX_Op3[0]_i_2\ => \^of_instr_raw\(3),
      \EX_Op3[0]_i_2_0\ => \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_7\,
      \EX_Op3[0]_i_2_1\ => \^of_instr_raw\(1),
      \EX_Op3[0]_i_2_2\ => \^of_instr_raw\(0),
      \EX_Op3[0]_i_2_3\ => \^using_fpga.native_7\,
      \EX_Op3[30]_i_2_0\ => \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_2\,
      \EX_Op3_reg[15]\(15 downto 0) => \EX_Op3_reg[0]_0\(15 downto 0),
      \EX_Op3_reg[15]_0\(0) => if_fetch_in_progress_reg_2(0),
      \EX_Op3_reg[16]\(14 downto 0) => \EX_Op2_reg[16]\(14 downto 0),
      \EX_Op3_reg[30]\ => \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1\,
      \EX_Op3_reg[30]_0\ => \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_22\(0),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_10\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_12\,
      \Using_FPGA.Native_11\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_13\,
      \Using_FPGA.Native_12\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_14\,
      \Using_FPGA.Native_13\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_15\,
      \Using_FPGA.Native_14\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_16\,
      \Using_FPGA.Native_15\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_17\,
      \Using_FPGA.Native_16\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_18\,
      \Using_FPGA.Native_17\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_19\,
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_4\,
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_5\,
      \Using_FPGA.Native_4\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_6\,
      \Using_FPGA.Native_5\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_7\,
      \Using_FPGA.Native_6\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_8\,
      \Using_FPGA.Native_7\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_9\,
      \Using_FPGA.Native_8\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_10\,
      \Using_FPGA.Native_9\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_11\,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      ex_is_multi_or_load_instr_reg => ex_is_multi_or_load_instr_reg,
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      mem_is_multi_or_load_instr_reg => mem_is_multi_or_load_instr_reg,
      of_instr_ii_10 => of_instr_ii_10,
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2,
      of_read_mem_write_op3_conflict_part1 => of_read_mem_write_op3_conflict_part1,
      of_read_mem_write_op3_conflict_part2 => of_read_mem_write_op3_conflict_part2,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[33].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_188
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_10 => of_instr_ii_10
    );
\Instruction_Prefetch_Mux[34].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_189
     port map (
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[0]\ => \Instruction_Prefetch_Mux[35].Gen_Instr_DFF_n_1\,
      \EX_Branch_CMP_Op1_reg[0]_0\(16) => \EX_Op3_reg[0]\(30),
      \EX_Branch_CMP_Op1_reg[0]_0\(15 downto 0) => \EX_Op3_reg[0]\(15 downto 0),
      \EX_Branch_CMP_Op1_reg[0]_1\(16) => \EX_Op3_reg[0]_0\(30),
      \EX_Branch_CMP_Op1_reg[0]_1\(15 downto 0) => \EX_Op3_reg[0]_0\(15 downto 0),
      \EX_Branch_CMP_Op1_reg[0]_2\(1) => if_fetch_in_progress_reg_2(15),
      \EX_Branch_CMP_Op1_reg[0]_2\(0) => if_fetch_in_progress_reg_2(0),
      \EX_Branch_CMP_Op1_reg[16]\(14 downto 0) => \EX_Op2_reg[16]\(14 downto 0),
      GPR_Op1(16 downto 0) => GPR_Op1(16 downto 0),
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(9),
      \Using_FPGA.Native_i_4__5_0\ => \Using_FPGA.Native_i_4__5\,
      \Using_FPGA.Native_i_4__5_1\(1 downto 0) => \Using_FPGA.Native_i_4__5_0\(1 downto 0),
      \Using_FPGA.Native_i_4__5_2\ => \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_i_4__5_3\ => \^of_predecode_raw\(8),
      \Using_FPGA.Native_i_4__5_4\ => \Using_FPGA.Native_i_4__5_1\,
      \Using_FPGA.Native_i_4__5_5\(1 downto 0) => \EX_Op3[0]_i_5\(4 downto 3),
      \Using_FPGA.Native_i_4__5_6\ => \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2\,
      \ex_gpr_write_addr_reg[0]\ => \ex_gpr_write_addr_reg[0]_0\,
      ex_sel_alu_i_reg(16 downto 0) => ex_sel_alu_i_reg_1(16 downto 0),
      \mem_gpr_write_addr_reg[0]\ => \mem_gpr_write_addr_reg[0]\,
      of_instr_ii_9 => of_instr_ii_9,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[34].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_190
     port map (
      I037_out => I037_out,
      I135_out => I135_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_9 => of_instr_ii_9
    );
\Instruction_Prefetch_Mux[35].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_191
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(8),
      \Using_FPGA.Native_i_3__56\ => \^of_predecode_raw\(5),
      \Using_FPGA.Native_i_3__56_0\ => \^of_predecode_raw\(6),
      \Using_FPGA.Native_i_3__56_1\ => \Using_FPGA.Native_i_3__56\,
      \Using_FPGA.Native_i_8__5_0\(4 downto 0) => \Using_FPGA.Native_i_8__5\(4 downto 0),
      of_instr_ii_8 => of_instr_ii_8,
      of_predecode_raw(1) => \^of_predecode_raw\(9),
      of_predecode_raw(0) => \^of_predecode_raw\(7),
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[35].Gen_Instr_DFF_n_1\
    );
\Instruction_Prefetch_Mux[35].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_192
     port map (
      I033_out => I033_out,
      I131_out => I131_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_8 => of_instr_ii_8
    );
\Instruction_Prefetch_Mux[36].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_193
     port map (
      Clk => Clk,
      of_instr_ii_7 => of_instr_ii_7,
      of_predecode_raw(0) => \^of_predecode_raw\(7),
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[36].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_194
     port map (
      I029_out => I029_out,
      I127_out => I127_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_7 => of_instr_ii_7
    );
\Instruction_Prefetch_Mux[37].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_195
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(6),
      of_instr_ii_6 => of_instr_ii_6,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[37].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_196
     port map (
      I025_out => I025_out,
      I123_out => I123_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_6 => of_instr_ii_6
    );
\Instruction_Prefetch_Mux[38].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_197
     port map (
      Clk => Clk,
      I0 => I0,
      I4 => I4,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(5),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_i_7__4\(2 downto 0) => \EX_Op3[0]_i_5\(2 downto 0),
      \Using_FPGA.Native_i_9__5\ => \Using_FPGA.Native_i_9__5\,
      \Using_FPGA.Native_i_9__5_0\ => \^of_predecode_raw\(6),
      \mem_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2\,
      of_instr_ii_5 => of_instr_ii_5,
      of_predecode_raw(0) => \^of_predecode_raw\(7),
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[38].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_198
     port map (
      I021_out => I021_out,
      I119_out => I119_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_5 => of_instr_ii_5
    );
\Instruction_Prefetch_Mux[39].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_199
     port map (
      Clk => Clk,
      \EX_Op2[15]_i_6_0\ => \Using_FPGA.Native_i_4__5\,
      \EX_Op2[15]_i_6_1\(1 downto 0) => \Using_FPGA.Native_i_4__5_0\(1 downto 0),
      \EX_Op2[15]_i_6_2\ => \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_1\,
      \EX_Op2[15]_i_6_3\ => \^of_predecode_raw\(3),
      \EX_Op2[15]_i_6_4\ => \Using_FPGA.Native_i_4__5_1\,
      \EX_Op2[15]_i_6_5\(1 downto 0) => \EX_Op3[0]_i_5\(4 downto 3),
      \EX_Op2[15]_i_6_6\ => \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_2\,
      \EX_Op2_reg[0]\(30 downto 0) => \EX_Op3_reg[0]\(30 downto 0),
      \EX_Op2_reg[0]_0\(15 downto 0) => if_fetch_in_progress_reg_2(15 downto 0),
      \EX_Op2_reg[0]_1\(30 downto 0) => \EX_Op3_reg[0]_0\(30 downto 0),
      \EX_Op2_reg[14]\ => \Instruction_Prefetch_Mux[40].Gen_Instr_DFF_n_1\,
      \EX_Op2_reg[14]_0\ => ex_branch_with_delayslot_reg,
      \EX_Op2_reg[14]_1\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_8\,
      \EX_Op2_reg[16]\(14 downto 0) => \EX_Op2_reg[16]\(14 downto 0),
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(4),
      \ex_gpr_write_addr_reg[0]\ => \ex_gpr_write_addr_reg[0]\,
      ex_sel_alu_i_reg(30 downto 0) => ex_sel_alu_i_reg(30 downto 0),
      of_Take_Exception => of_Take_Exception,
      of_instr_ii_4 => of_instr_ii_4,
      of_op2_imm_addr(30) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(0),
      of_op2_imm_addr(29) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(1),
      of_op2_imm_addr(28) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(2),
      of_op2_imm_addr(27) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(3),
      of_op2_imm_addr(26) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(4),
      of_op2_imm_addr(25) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(5),
      of_op2_imm_addr(24) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(6),
      of_op2_imm_addr(23) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(7),
      of_op2_imm_addr(22) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(8),
      of_op2_imm_addr(21) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(9),
      of_op2_imm_addr(20) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(10),
      of_op2_imm_addr(19) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(11),
      of_op2_imm_addr(18) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(12),
      of_op2_imm_addr(17) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(13),
      of_op2_imm_addr(16) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(14),
      of_op2_imm_addr(15) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(15),
      of_op2_imm_addr(14) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(16),
      of_op2_imm_addr(13) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(17),
      of_op2_imm_addr(12) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(18),
      of_op2_imm_addr(11) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(19),
      of_op2_imm_addr(10) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(20),
      of_op2_imm_addr(9) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(21),
      of_op2_imm_addr(8) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(22),
      of_op2_imm_addr(7) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(23),
      of_op2_imm_addr(6) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(24),
      of_op2_imm_addr(5) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(25),
      of_op2_imm_addr(4) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(26),
      of_op2_imm_addr(3) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(28),
      of_op2_imm_addr(2) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(29),
      of_op2_imm_addr(1) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(30),
      of_op2_imm_addr(0) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(31),
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[1]\ => \wb_gpr_write_addr_reg[1]\
    );
\Instruction_Prefetch_Mux[39].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_200
     port map (
      I017_out => I017_out,
      I115_out => I115_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_4 => of_instr_ii_4
    );
\Instruction_Prefetch_Mux[3].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_201
     port map (
      Clk => Clk,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\ => \Performance_Debug_Control.ex_brki_hit_i_2\,
      \Performance_Debug_Control.ex_brki_hit_reg\ => \Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1\,
      \Performance_Debug_Control.ex_brki_hit_reg_0\ => \Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1\,
      \Performance_Debug_Control.ex_brki_hit_reg_1\ => \Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_1\,
      \Performance_Debug_Control.ex_brki_hit_reg_2\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_0\ => \^of_instr_raw\(2),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_40\,
      \Using_FPGA.Native_5\ => \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_7\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_47\,
      \Using_FPGA.Native_7\ => \^of_instr_raw\(5),
      \Using_FPGA.Native_8\ => \^of_instr_raw\(4),
      ex_enable_alu_i_reg => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2\,
      ex_enable_alu_i_reg_0 => \^of_instr_raw\(3),
      ex_enable_alu_i_reg_1 => \^using_fpga.native_12\,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_decode_reg => ex_mbar_decode_cmb,
      ex_mbar_decode_reg_0 => ex_is_div_instr_I_reg_0,
      ex_mbar_decode_reg_1 => \Using_FPGA.Native_51\,
      ex_mbar_decode_reg_2 => \^using_fpga.native_5\,
      ex_start_div_i_reg => \^of_instr_raw\(0),
      ex_start_div_i_reg_0 => \^of_instr_raw\(1),
      of_instr_ii_40 => of_instr_ii_40,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[3].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_202
     port map (
      I0161_out => I0161_out,
      I1159_out => I1159_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_40 => of_instr_ii_40
    );
\Instruction_Prefetch_Mux[40].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_203
     port map (
      Clk => Clk,
      \EX_Op2[0]_i_3\(1 downto 0) => \Using_FPGA.Native_i_8__5\(4 downto 3),
      \EX_Op2[0]_i_3_0\ => \Using_FPGA.Native_i_3__56\,
      \EX_Op2[0]_i_3_1\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(3),
      of_instr_ii_3 => of_instr_ii_3,
      of_predecode_raw(0) => \^of_predecode_raw\(4),
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[1]\ => \Instruction_Prefetch_Mux[40].Gen_Instr_DFF_n_1\
    );
\Instruction_Prefetch_Mux[40].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_204
     port map (
      I013_out => I013_out,
      I111_out => I111_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_3 => of_instr_ii_3
    );
\Instruction_Prefetch_Mux[41].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_205
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(2),
      of_instr_ii_2 => of_instr_ii_2,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[41].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_206
     port map (
      I09_out => I09_out,
      I17_out => I17_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_2 => of_instr_ii_2
    );
\Instruction_Prefetch_Mux[42].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_207
     port map (
      Clk => Clk,
      \EX_Op2[0]_i_6\(2 downto 0) => \Using_FPGA.Native_i_8__5\(2 downto 0),
      \EX_Op2[0]_i_6_0\ => \^of_predecode_raw\(0),
      \EX_Op2[0]_i_6_1\ => \^of_predecode_raw\(2),
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(1),
      of_instr_ii_1 => of_instr_ii_1,
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[3]\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\
    );
\Instruction_Prefetch_Mux[42].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_208
     port map (
      I05_out => I05_out,
      I13_out => I13_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_1 => of_instr_ii_1
    );
\Instruction_Prefetch_Mux[43].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_209
     port map (
      Clk => Clk,
      \EX_Op2[0]_i_7\(2 downto 0) => \EX_Op3[0]_i_5\(2 downto 0),
      \EX_Op2[0]_i_8\ => \Using_FPGA.Native_i_9__5\,
      \EX_Op2[0]_i_8_0\ => \^of_predecode_raw\(1),
      \EX_Op2[0]_i_8_1\ => \^of_predecode_raw\(2),
      I0 => I0,
      I4 => I4,
      \Using_FPGA.Native_0\ => \^of_predecode_raw\(0),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_1\,
      \mem_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[43].Gen_Instr_DFF_n_2\,
      of_instr_ii_0 => of_instr_ii_0,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[43].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_210
     port map (
      I0_0 => I0_0,
      I1 => I1,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_0 => of_instr_ii_0
    );
\Instruction_Prefetch_Mux[4].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_211
     port map (
      Clk => Clk,
      \EX_ALU_Op_reg[0]\ => \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2\,
      \EX_ALU_Op_reg[0]_0\ => ex_branch_with_delayslot_reg,
      EX_CMP_Op122_out => EX_CMP_Op122_out,
      EX_CMP_Op_reg => \^of_instr_raw\(3),
      EX_CMP_Op_reg_0 => \^using_fpga.native_21\,
      \EX_Op2[15]_i_5\ => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      \EX_Op2_reg[17]\ => \^using_fpga.native_8\,
      \EX_Op2_reg[18]\ => \^using_fpga.native_9\,
      \EX_Op2_reg[19]\ => \^using_fpga.native_10\,
      \EX_Op2_reg[20]\ => \^using_fpga.native_11\,
      \EX_Op2_reg[21]\ => \^using_fpga.native_12\,
      \EX_Op2_reg[22]\ => \^using_fpga.native_13\,
      \EX_Op2_reg[23]\ => \^using_fpga.native_14\,
      \EX_Op2_reg[24]\ => \^using_fpga.native_15\,
      \EX_Op2_reg[25]\ => \^using_fpga.native_16\(1),
      \EX_Op2_reg[26]\ => \^using_fpga.native_16\(0),
      \EX_Op2_reg[27]\ => \^using_fpga.native_17\,
      EX_Unsigned_Op121_out => EX_Unsigned_Op121_out,
      EX_Unsigned_Op_reg => \^using_fpga.native_20\,
      EX_Use_Carry120_out => EX_Use_Carry120_out,
      GPR_Op2(15) => GPR_Op2(16),
      GPR_Op2(14) => GPR_Op2(17),
      GPR_Op2(13) => GPR_Op2(18),
      GPR_Op2(12) => GPR_Op2(19),
      GPR_Op2(11) => GPR_Op2(20),
      GPR_Op2(10) => GPR_Op2(21),
      GPR_Op2(9) => GPR_Op2(22),
      GPR_Op2(8) => GPR_Op2(23),
      GPR_Op2(7) => GPR_Op2(24),
      GPR_Op2(6) => GPR_Op2(25),
      GPR_Op2(5) => GPR_Op2(26),
      GPR_Op2(4) => GPR_Op2(27),
      GPR_Op2(3) => GPR_Op2(28),
      GPR_Op2(2) => GPR_Op2(29),
      GPR_Op2(1) => GPR_Op2(30),
      GPR_Op2(0) => GPR_Op2(31),
      OF_Take_Exception_hold => OF_Take_Exception_hold,
      OF_Take_Exception_hold_reg => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2\,
      Q(0) => Q(3),
      \Using_FPGA.Native_0\ => \^of_instr_raw\(1),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_27\(1),
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_6\,
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_8\,
      \Using_FPGA.Native_4\ => of_Sel_SPR_ESR,
      \Using_FPGA.Native_5\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_11\,
      \Using_FPGA.Native_6\ => of_Sel_SPR_EDR,
      \Using_FPGA.Native_7\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_18\,
      \Using_FPGA.Native_8\(0) => \Using_FPGA.Native_49\(0),
      \Using_FPGA.Native_i_2\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_5\,
      ex_Sel_SPR_ESR_reg => \^using_fpga.native_19\,
      ex_Sel_SPR_ESR_reg_0 => \^using_fpga.native_7\,
      ex_Sel_SPR_ESR_reg_1 => \^using_fpga.native_18\,
      ex_Sel_SPR_ESR_reg_2 => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_2\,
      ex_is_multi_instr20 => ex_is_multi_instr20,
      ex_is_multi_instr2_reg => \^of_instr_raw\(2),
      ex_is_multi_instr2_reg_0 => \^of_instr_raw\(5),
      ex_is_multi_instr2_reg_1 => \^of_instr_raw\(4),
      ex_is_multi_instr2_reg_2 => \^of_instr_raw\(0),
      ex_is_multi_or_load_instr0 => ex_is_multi_or_load_instr0,
      ex_set_bip => ex_set_bip,
      ex_set_bip_reg => \^using_fpga.native_3\,
      ex_set_bip_reg_0 => \^using_fpga.native_4\,
      ex_set_bip_reg_1 => \^using_fpga.native_2\,
      interrupt_address_d1(15) => interrupt_address_d1(16),
      interrupt_address_d1(14) => interrupt_address_d1(17),
      interrupt_address_d1(13) => interrupt_address_d1(18),
      interrupt_address_d1(12) => interrupt_address_d1(19),
      interrupt_address_d1(11) => interrupt_address_d1(20),
      interrupt_address_d1(10) => interrupt_address_d1(21),
      interrupt_address_d1(9) => interrupt_address_d1(22),
      interrupt_address_d1(8) => interrupt_address_d1(23),
      interrupt_address_d1(7) => interrupt_address_d1(24),
      interrupt_address_d1(6) => interrupt_address_d1(25),
      interrupt_address_d1(5) => interrupt_address_d1(26),
      interrupt_address_d1(4) => interrupt_address_d1(27),
      interrupt_address_d1(3) => interrupt_address_d1(28),
      interrupt_address_d1(2) => interrupt_address_d1(29),
      interrupt_address_d1(1) => interrupt_address_d1(30),
      interrupt_address_d1(0) => interrupt_address_d1(31),
      of_Sel_SPR_MSR100_out => of_Sel_SPR_MSR100_out,
      of_Take_Exception => of_Take_Exception,
      of_instr_ii_39 => of_instr_ii_39,
      of_op1_sel_spr => of_op1_sel_spr,
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      of_op2_imm_addr(14) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(16),
      of_op2_imm_addr(13) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(17),
      of_op2_imm_addr(12) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(18),
      of_op2_imm_addr(11) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(19),
      of_op2_imm_addr(10) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(20),
      of_op2_imm_addr(9) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(21),
      of_op2_imm_addr(8) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(22),
      of_op2_imm_addr(7) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(23),
      of_op2_imm_addr(6) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(24),
      of_op2_imm_addr(5) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(25),
      of_op2_imm_addr(4) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(26),
      of_op2_imm_addr(3) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(28),
      of_op2_imm_addr(2) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(29),
      of_op2_imm_addr(1) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(30),
      of_op2_imm_addr(0) => \Data_Flow_I/Operand_Select_I/of_op2_imm_addr\(31),
      of_op2_sel_imm => of_op2_sel_imm,
      sync_reset => sync_reset,
      wb_exception => wb_exception
    );
\Instruction_Prefetch_Mux[4].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_212
     port map (
      I0157_out => I0157_out,
      I1155_out => I1155_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_39 => of_instr_ii_39
    );
\Instruction_Prefetch_Mux[5].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_213
     port map (
      Clk => Clk,
      EX_Is_Div_Instr => EX_Is_Div_Instr,
      \EX_Sext_Op_reg[0]\ => \^using_fpga.native_15\,
      MEM_Is_Div_Instr => MEM_Is_Div_Instr,
      \Using_FPGA.Native_0\ => \^of_instr_raw\(0),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_5\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_36\(1),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_46\,
      \Using_FPGA.Native_8\ => ex_branch_with_delayslot_i_reg_0,
      \Using_FPGA.Native_9\ => \^of_instr_raw\(1),
      ex_branch_instr0 => ex_branch_instr0,
      ex_branch_instr_reg => \^of_instr_raw\(3),
      ex_is_bs_instr_I_reg => \^of_instr_raw\(5),
      ex_is_bs_instr_I_reg_0 => \^of_instr_raw\(2),
      ex_is_bs_instr_I_reg_1 => \^of_instr_raw\(4),
      ex_is_div_instr_I_reg => ex_is_div_instr_I_reg,
      ex_is_div_instr_I_reg_0 => ex_is_div_instr_I_reg_0,
      ex_is_div_instr_I_reg_1 => \Using_FPGA.Native_51\,
      ex_load_shift_carry0 => ex_load_shift_carry0,
      ex_load_shift_carry_reg => \^using_fpga.native_16\(1),
      ex_load_shift_carry_reg_0 => \^using_fpga.native_16\(0),
      of_instr_ii_38 => of_instr_ii_38,
      of_pipe_ctrl_reg0 => of_pipe_ctrl_reg0,
      of_valid => \^of_valid\,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[5].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_214
     port map (
      I0153_out => I0153_out,
      I1151_out => I1151_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_38 => of_instr_ii_38
    );
\Instruction_Prefetch_Mux[6].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_215
     port map (
      Clk => Clk,
      Dbg_Clean_Stop0 => Dbg_Clean_Stop0,
      Dbg_Clean_Stop_reg => Dbg_Clean_Stop_reg,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_0\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_18\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_1\ => \^using_fpga.native_14\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_2\ => \^using_fpga.native_11\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_i_4_3\ => \Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_4\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\ => \Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_0\ => \^using_fpga.native_4\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_1\ => \^using_fpga.native_2\,
      \Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg_2\ => \^using_fpga.native_3\,
      E(0) => \^e\(0),
      \EX_Op3[0]_i_4\(2) => \Using_FPGA.Native_i_8__5\(4),
      \EX_Op3[0]_i_4\(1) => \Using_FPGA.Native_i_8__5\(2),
      \EX_Op3[0]_i_4\(0) => \Using_FPGA.Native_i_8__5\(0),
      \EX_Op3[0]_i_4_0\ => \^using_fpga.native\,
      \EX_Op3[0]_i_4_1\ => \^using_fpga.native_1\,
      \EX_Op3[0]_i_6\(0) => \Using_FPGA.Native_i_4__5_0\(1),
      \EX_Op3[0]_i_6_0\ => \^using_fpga.native_0\,
      I0 => I0,
      \Using_FPGA.Native_0\ => \^d\(1),
      \Using_FPGA.Native_1\ => of_branch_with_delayslot140_out,
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_6\,
      \Using_FPGA.Native_3\ => ex_mbar_is_sleep_cmb,
      ex_atomic_Instruction_Pair0 => ex_atomic_Instruction_Pair0,
      ex_branch_with_delayslot_i => ex_branch_with_delayslot_i,
      ex_branch_with_delayslot_i_reg => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1\,
      ex_branch_with_delayslot_i_reg_0 => \Using_FPGA.Native_51\,
      ex_branch_with_delayslot_i_reg_1 => ex_branch_with_delayslot_i_reg_0,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_branch_with_delayslot_reg_0 => \^of_instr_raw\(4),
      ex_branch_with_delayslot_reg_1 => \^of_instr_raw\(2),
      ex_branch_with_delayslot_reg_2 => \^of_instr_raw\(5),
      ex_branch_with_delayslot_reg_3 => \^of_instr_raw\(3),
      ex_branch_with_delayslot_reg_4 => \^of_instr_raw\(0),
      ex_branch_with_delayslot_reg_5 => \^of_instr_raw\(1),
      ex_gpr_write => ex_gpr_write,
      \ex_gpr_write_addr_reg[0]\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_8\,
      ex_gpr_write_reg => ex_gpr_write_reg,
      ex_gpr_write_reg_0 => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1\,
      ex_gpr_write_reg_1 => ex_gpr_write_reg_0,
      ex_gpr_write_reg_2 => ex_gpr_write_reg_1,
      ex_jump => ex_jump,
      ex_mbar_is_sleep => ex_mbar_is_sleep,
      ex_mbar_is_sleep_reg => \^d\(0),
      of_Take_Exception => of_Take_Exception,
      of_instr_ii_37 => of_instr_ii_37,
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[0]\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_9\
    );
\Instruction_Prefetch_Mux[6].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_216
     port map (
      I0149_out => I0149_out,
      I1147_out => I1147_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_37 => of_instr_ii_37
    );
\Instruction_Prefetch_Mux[7].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_217
     port map (
      Clk => Clk,
      \EX_Op3[0]_i_6\(0) => \Using_FPGA.Native_i_4__5_0\(0),
      \EX_Op3[0]_i_6_0\ => \^using_fpga.native_1\,
      \EX_Op3[0]_i_6_1\ => \Using_FPGA.Native_i_9__5\,
      \EX_Op3[15]_i_3\(1) => \Using_FPGA.Native_i_8__5\(3),
      \EX_Op3[15]_i_3\(0) => \Using_FPGA.Native_i_8__5\(1),
      \EX_Op3[15]_i_3_0\ => \^using_fpga.native_0\,
      \EX_Op3[15]_i_3_1\ => \Using_FPGA.Native_i_3__56\,
      \EX_Op3[15]_i_3_2\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_9\,
      \EX_Op3_reg[0]\ => \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2\,
      \EX_Op3_reg[0]_0\ => \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1\,
      \EX_Op3_reg[0]_1\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_2\,
      \EX_Op3_reg[0]_2\(16) => \EX_Op3_reg[0]\(30),
      \EX_Op3_reg[0]_2\(15 downto 0) => \EX_Op3_reg[0]\(15 downto 0),
      \EX_Op3_reg[0]_3\(0) => if_fetch_in_progress_reg_2(15),
      \EX_Op3_reg[0]_4\(0) => \EX_Op3_reg[0]_0\(30),
      \EX_Op3_reg[15]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_18\,
      \EX_Op3_reg[16]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_17\,
      \EX_Op3_reg[17]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_16\,
      \EX_Op3_reg[18]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_15\,
      \EX_Op3_reg[19]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_14\,
      \EX_Op3_reg[20]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_13\,
      \EX_Op3_reg[21]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_12\,
      \EX_Op3_reg[22]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_11\,
      \EX_Op3_reg[23]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_10\,
      \EX_Op3_reg[24]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_9\,
      \EX_Op3_reg[25]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_8\,
      \EX_Op3_reg[26]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_7\,
      \EX_Op3_reg[28]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_6\,
      \EX_Op3_reg[29]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_5\,
      \EX_Op3_reg[30]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_4\,
      \EX_Op3_reg[31]\ => \Instruction_Prefetch_Mux[33].Gen_Instr_DFF_n_19\,
      GPR_Op3(16 downto 0) => GPR_Op3(16 downto 0),
      \Using_FPGA.Native_0\ => \^d\(0),
      \ex_gpr_write_addr_reg[1]\ => \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_4\,
      ex_sel_alu_i_reg(16 downto 0) => ex_sel_alu_i_reg_0(16 downto 0),
      of_instr_ii_36 => of_instr_ii_36,
      sync_reset => sync_reset,
      \wb_gpr_write_addr_reg[1]\ => \wb_gpr_write_addr_reg[1]_0\,
      \wb_gpr_write_addr_reg[1]_0\ => \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_2\,
      \wb_gpr_write_addr_reg[1]_1\ => \wb_gpr_write_addr_reg[1]_1\
    );
\Instruction_Prefetch_Mux[7].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_218
     port map (
      I0145_out => I0145_out,
      I1143_out => I1143_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_36 => of_instr_ii_36
    );
\Instruction_Prefetch_Mux[8].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_219
     port map (
      Clk => Clk,
      \EX_Op3[31]_i_2\ => \EX_Op3[31]_i_2\,
      \EX_Op3[31]_i_2_0\ => ex_gpr_write_reg_1,
      \EX_Op3[31]_i_2_1\ => \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_4\,
      \EX_Op3[31]_i_2_2\ => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_8\,
      I4 => I4,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_gpr_write_addr_reg[2]\ => \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1\,
      of_instr_ii_35 => of_instr_ii_35,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[8].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_220
     port map (
      I0141_out => I0141_out,
      I1139_out => I1139_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_35 => of_instr_ii_35
    );
\Instruction_Prefetch_Mux[9].Gen_Instr_DFF\: entity work.mb_design_microblaze_0_1_MB_FDR_221
     port map (
      Clk => Clk,
      \EX_Op3[31]_i_2\(1) => \EX_Op3[0]_i_5\(3),
      \EX_Op3[31]_i_2\(0) => \EX_Op3[0]_i_5\(1),
      \EX_Op3[31]_i_2_0\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\,
      \EX_Op3[31]_i_2_1\ => \Using_FPGA.Native_i_4__5_1\,
      \EX_Op3[31]_i_2_2\ => \^d\(0),
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq_reg => \^using_fpga.native_1\,
      ex_op1_cmp_eq_reg_0 => \^using_fpga.native\,
      ex_op1_cmp_eq_reg_1 => \^using_fpga.native_29\,
      \mem_gpr_write_addr_reg[3]\ => \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2\,
      of_instr_ii_34 => of_instr_ii_34,
      sync_reset => sync_reset
    );
\Instruction_Prefetch_Mux[9].Instr_Mux_MUXF7\: entity work.mb_design_microblaze_0_1_MB_MUXF7_222
     port map (
      I0137_out => I0137_out,
      I1135_out => I1135_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_51\,
      of_instr_ii_34 => of_instr_ii_34
    );
Last_Sel_DFF: entity work.mb_design_microblaze_0_1_MB_FDS
     port map (
      Clk => Clk,
      D(1 downto 0) => \^d\(1 downto 0),
      I0101_out => I0101_out,
      I0105_out => I0105_out,
      I0109_out => I0109_out,
      I0113_out => I0113_out,
      I0117_out => I0117_out,
      I0121_out => I0121_out,
      I0125_out => I0125_out,
      I0129_out => I0129_out,
      I0133_out => I0133_out,
      I0137_out => I0137_out,
      I013_out => I013_out,
      I0141_out => I0141_out,
      I0145_out => I0145_out,
      I0149_out => I0149_out,
      I0153_out => I0153_out,
      I0157_out => I0157_out,
      I0161_out => I0161_out,
      I0165_out => I0165_out,
      I0169_out => I0169_out,
      I0173_out => I0173_out,
      I017_out => I017_out,
      I021_out => I021_out,
      I025_out => I025_out,
      I029_out => I029_out,
      I033_out => I033_out,
      I037_out => I037_out,
      I045_out => I045_out,
      I049_out => I049_out,
      I053_out => I053_out,
      I057_out => I057_out,
      I05_out => I05_out,
      I061_out => I061_out,
      I065_out => I065_out,
      I069_out => I069_out,
      I073_out => I073_out,
      I077_out => I077_out,
      I081_out => I081_out,
      I085_out => I085_out,
      I089_out => I089_out,
      I093_out => I093_out,
      I097_out => I097_out,
      I09_out => I09_out,
      I0_0 => I0_0,
      IReady => IReady,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_1\ => \^of_instr_raw\(5),
      \Using_FPGA.Native_10\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_11\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_12\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_13\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_14\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_15\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_16\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_17\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_18\ => \^using_fpga.native_10\,
      \Using_FPGA.Native_19\ => \^using_fpga.native_11\,
      \Using_FPGA.Native_2\ => \^of_instr_raw\(4),
      \Using_FPGA.Native_20\ => \^using_fpga.native_12\,
      \Using_FPGA.Native_21\ => \^using_fpga.native_13\,
      \Using_FPGA.Native_22\ => \^using_fpga.native_14\,
      \Using_FPGA.Native_23\ => \^using_fpga.native_15\,
      \Using_FPGA.Native_24\ => \^using_fpga.native_16\(1),
      \Using_FPGA.Native_25\ => \^using_fpga.native_16\(0),
      \Using_FPGA.Native_26\ => \^using_fpga.native_17\,
      \Using_FPGA.Native_27\ => \^using_fpga.native_18\,
      \Using_FPGA.Native_28\ => \^using_fpga.native_19\,
      \Using_FPGA.Native_29\ => \^using_fpga.native_20\,
      \Using_FPGA.Native_3\ => \^of_instr_raw\(3),
      \Using_FPGA.Native_30\ => \^using_fpga.native_21\,
      \Using_FPGA.Native_4\ => \^of_instr_raw\(2),
      \Using_FPGA.Native_5\ => \^of_instr_raw\(1),
      \Using_FPGA.Native_6\ => \^of_instr_raw\(0),
      \Using_FPGA.Native_7\ => \^using_fpga.native\,
      \Using_FPGA.Native_8\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_9\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_i_1__73\ => \Using_FPGA.Native_i_1__73\,
      \Using_FPGA.Native_i_1__73_0\ => \Using_FPGA.Native_i_1__73_0\,
      \Using_FPGA.Native_i_1__73_1\ => ex_branch_with_delayslot_i_reg_0,
      \Using_FPGA.Native_i_1__73_2\ => \Using_FPGA.Native_i_1__73_1\,
      if_sel_input(0) => if_sel_input(4),
      \in\(32 downto 10) => \in\(33 downto 11),
      \in\(9 downto 0) => \in\(9 downto 0),
      of_Instr_Exception => of_Instr_Exception,
      of_predecode_raw(9 downto 0) => \^of_predecode_raw\(9 downto 0),
      sel_input_i_0 => sel_input_i_0,
      sync_reset => sync_reset
    );
Mux_Select_Empty_LUT6: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized4\
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      S => S,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      if_sel_input(0) => if_sel_input(4),
      sel_input_i_0 => sel_input_i_0
    );
Mux_Select_OF_Valid_LUT6: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized6\
     port map (
      I5 => I5,
      IReady_0 => IReady_0,
      S => S,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_51\,
      if_sel_input(0) => if_sel_input(4),
      of_Valid_II => of_Valid_II
    );
OF_Valid_DFF: entity work.mb_design_microblaze_0_1_MB_FDR_223
     port map (
      Clk => Clk,
      E(0) => \^e\(0),
      \imm_reg_reg[15]\ => \^of_instr_raw\(3),
      \imm_reg_reg[15]_0\ => \^of_instr_raw\(5),
      \imm_reg_reg[15]_1\ => \^of_instr_raw\(2),
      \imm_reg_reg[15]_2\ => \^of_instr_raw\(4),
      \imm_reg_reg[15]_3\ => \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_18\,
      of_Valid_II => of_Valid_II,
      of_valid => \^of_valid\,
      sync_reset => sync_reset
    );
ex_branch_with_delayslot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1\,
      Q => ex_branch_with_delayslot_i,
      R => '0'
    );
\ibuffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(33),
      Q => p_1_in215_in
    );
\ibuffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(23),
      Q => p_1_in165_in
    );
\ibuffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(9),
      Q => p_1_in160_in
    );
\ibuffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(8),
      Q => p_1_in155_in
    );
\ibuffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(7),
      Q => p_1_in150_in
    );
\ibuffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(6),
      Q => p_1_in145_in
    );
\ibuffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(5),
      Q => p_1_in140_in
    );
\ibuffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(4),
      Q => p_1_in135_in
    );
\ibuffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(3),
      Q => p_1_in130_in
    );
\ibuffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(2),
      Q => p_1_in125_in
    );
\ibuffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(1),
      Q => p_1_in120_in
    );
\ibuffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(32),
      Q => p_1_in210_in
    );
\ibuffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(0),
      Q => p_1_in115_in
    );
\ibuffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(22),
      Q => p_1_in110_in
    );
\ibuffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(21),
      Q => p_1_in105_in
    );
\ibuffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(20),
      Q => p_1_in100_in
    );
\ibuffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(19),
      Q => p_1_in95_in
    );
\ibuffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(18),
      Q => p_1_in90_in
    );
\ibuffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(17),
      Q => p_1_in85_in
    );
\ibuffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(16),
      Q => p_1_in80_in
    );
\ibuffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(15),
      Q => p_1_in75_in
    );
\ibuffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(14),
      Q => p_1_in70_in
    );
\ibuffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(31),
      Q => p_1_in205_in
    );
\ibuffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(13),
      Q => p_1_in65_in
    );
\ibuffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(12),
      Q => p_1_in60_in
    );
\ibuffer_reg[3][32]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(11),
      Q => p_1_in55_in
    );
\ibuffer_reg[3][33]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(10),
      Q => \Using_FPGA.Native_50\(0)
    );
\ibuffer_reg[3][34]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(9),
      Q => p_1_in45_in
    );
\ibuffer_reg[3][35]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(8),
      Q => p_1_in40_in
    );
\ibuffer_reg[3][36]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(7),
      Q => p_1_in35_in
    );
\ibuffer_reg[3][37]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(6),
      Q => p_1_in30_in
    );
\ibuffer_reg[3][38]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(5),
      Q => p_1_in25_in
    );
\ibuffer_reg[3][39]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(4),
      Q => p_1_in20_in
    );
\ibuffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(30),
      Q => p_1_in200_in
    );
\ibuffer_reg[3][40]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(3),
      Q => p_1_in15_in
    );
\ibuffer_reg[3][41]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(2),
      Q => p_1_in10_in
    );
\ibuffer_reg[3][42]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(1),
      Q => p_1_in5_in
    );
\ibuffer_reg[3][43]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(0),
      Q => \ibuffer_reg[3][43]_srl4_n_0\
    );
\ibuffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(29),
      Q => p_1_in195_in
    );
\ibuffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(28),
      Q => p_1_in190_in
    );
\ibuffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(27),
      Q => p_1_in185_in
    );
\ibuffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(26),
      Q => p_1_in180_in
    );
\ibuffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(25),
      Q => p_1_in175_in
    );
\ibuffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^using_fpga.native_23\(0),
      A2 => '0',
      A3 => '0',
      CE => IReady_0,
      CLK => Clk,
      D => \in\(24),
      Q => p_1_in170_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Register_File_gti is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[18]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Register_File_gti : entity is "Register_File_gti";
end mb_design_microblaze_0_1_Register_File_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Register_File_gti is
begin
\Using_LUT6.All_RAM32M[0].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[0]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(0),
      GPR_Op1(0) => GPR_Op1(1),
      GPR_Op2(1) => GPR_Op2(0),
      GPR_Op2(0) => GPR_Op2(1),
      GPR_Op3(1) => GPR_Op3(0),
      GPR_Op3(0) => GPR_Op3(1),
      WB_Fwd(1) => WB_Fwd(0),
      WB_Fwd(0) => WB_Fwd(1),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[10].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_549
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[20]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(20),
      GPR_Op1(0) => GPR_Op1(21),
      GPR_Op2(1) => GPR_Op2(20),
      GPR_Op2(0) => GPR_Op2(21),
      GPR_Op3(1) => GPR_Op3(20),
      GPR_Op3(0) => GPR_Op3(21),
      WB_Fwd(1) => WB_Fwd(20),
      WB_Fwd(0) => WB_Fwd(21),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[11].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_550
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[22]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(22),
      GPR_Op1(0) => GPR_Op1(23),
      GPR_Op2(1) => GPR_Op2(22),
      GPR_Op2(0) => GPR_Op2(23),
      GPR_Op3(1) => GPR_Op3(22),
      GPR_Op3(0) => GPR_Op3(23),
      WB_Fwd(1) => WB_Fwd(22),
      WB_Fwd(0) => WB_Fwd(23),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[12].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_551
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[24]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(24),
      GPR_Op1(0) => GPR_Op1(25),
      GPR_Op2(1) => GPR_Op2(24),
      GPR_Op2(0) => GPR_Op2(25),
      GPR_Op3(1) => GPR_Op3(24),
      GPR_Op3(0) => GPR_Op3(25),
      WB_Fwd(1) => WB_Fwd(24),
      WB_Fwd(0) => WB_Fwd(25),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[13].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_552
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[26]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(26),
      GPR_Op1(0) => GPR_Op1(27),
      GPR_Op2(1) => GPR_Op2(26),
      GPR_Op2(0) => GPR_Op2(27),
      GPR_Op3(1) => GPR_Op3(26),
      GPR_Op3(0) => GPR_Op3(27),
      WB_Fwd(1) => WB_Fwd(26),
      WB_Fwd(0) => WB_Fwd(27),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[14].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_553
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[28]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(28),
      GPR_Op1(0) => GPR_Op1(29),
      GPR_Op2(1) => GPR_Op2(28),
      GPR_Op2(0) => GPR_Op2(29),
      GPR_Op3(1) => GPR_Op3(28),
      GPR_Op3(0) => GPR_Op3(29),
      WB_Fwd(1) => WB_Fwd(28),
      WB_Fwd(0) => WB_Fwd(29),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[15].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_554
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[30]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(30),
      GPR_Op1(0) => GPR_Op1(31),
      GPR_Op2(1) => GPR_Op2(30),
      GPR_Op2(0) => GPR_Op2(31),
      GPR_Op3(1) => GPR_Op3(30),
      GPR_Op3(0) => GPR_Op3(31),
      WB_Fwd(1) => WB_Fwd(30),
      WB_Fwd(0) => WB_Fwd(31),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[1].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_555
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[2]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(2),
      GPR_Op1(0) => GPR_Op1(3),
      GPR_Op2(1) => GPR_Op2(2),
      GPR_Op2(0) => GPR_Op2(3),
      GPR_Op3(1) => GPR_Op3(2),
      GPR_Op3(0) => GPR_Op3(3),
      WB_Fwd(1) => WB_Fwd(2),
      WB_Fwd(0) => WB_Fwd(3),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[2].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_556
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[4]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(4),
      GPR_Op1(0) => GPR_Op1(5),
      GPR_Op2(1) => GPR_Op2(4),
      GPR_Op2(0) => GPR_Op2(5),
      GPR_Op3(1) => GPR_Op3(4),
      GPR_Op3(0) => GPR_Op3(5),
      WB_Fwd(1) => WB_Fwd(4),
      WB_Fwd(0) => WB_Fwd(5),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[3].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_557
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[6]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(6),
      GPR_Op1(0) => GPR_Op1(7),
      GPR_Op2(1) => GPR_Op2(6),
      GPR_Op2(0) => GPR_Op2(7),
      GPR_Op3(1) => GPR_Op3(6),
      GPR_Op3(0) => GPR_Op3(7),
      WB_Fwd(1) => WB_Fwd(6),
      WB_Fwd(0) => WB_Fwd(7),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[4].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_558
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[8]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(8),
      GPR_Op1(0) => GPR_Op1(9),
      GPR_Op2(1) => GPR_Op2(8),
      GPR_Op2(0) => GPR_Op2(9),
      GPR_Op3(1) => GPR_Op3(8),
      GPR_Op3(0) => GPR_Op3(9),
      WB_Fwd(1) => WB_Fwd(8),
      WB_Fwd(0) => WB_Fwd(9),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[5].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_559
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[10]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(10),
      GPR_Op1(0) => GPR_Op1(11),
      GPR_Op2(1) => GPR_Op2(10),
      GPR_Op2(0) => GPR_Op2(11),
      GPR_Op3(1) => GPR_Op3(10),
      GPR_Op3(0) => GPR_Op3(11),
      WB_Fwd(1) => WB_Fwd(10),
      WB_Fwd(0) => WB_Fwd(11),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[6].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_560
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[12]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(12),
      GPR_Op1(0) => GPR_Op1(13),
      GPR_Op2(1) => GPR_Op2(12),
      GPR_Op2(0) => GPR_Op2(13),
      GPR_Op3(1) => GPR_Op3(12),
      GPR_Op3(0) => GPR_Op3(13),
      WB_Fwd(1) => WB_Fwd(12),
      WB_Fwd(0) => WB_Fwd(13),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[7].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_561
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[14]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(14),
      GPR_Op1(0) => GPR_Op1(15),
      GPR_Op2(1) => GPR_Op2(14),
      GPR_Op2(0) => GPR_Op2(15),
      GPR_Op3(1) => GPR_Op3(14),
      GPR_Op3(0) => GPR_Op3(15),
      WB_Fwd(1) => WB_Fwd(14),
      WB_Fwd(0) => WB_Fwd(15),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[8].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_562
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[16]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(16),
      GPR_Op1(0) => GPR_Op1(17),
      GPR_Op2(1) => GPR_Op2(16),
      GPR_Op2(0) => GPR_Op2(17),
      GPR_Op3(1) => GPR_Op3(16),
      GPR_Op3(0) => GPR_Op3(17),
      WB_Fwd(1) => WB_Fwd(16),
      WB_Fwd(0) => WB_Fwd(17),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[9].ram32m_i\: entity work.mb_design_microblaze_0_1_MB_RAM32M_563
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[18]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(1) => GPR_Op1(18),
      GPR_Op1(0) => GPR_Op1(19),
      GPR_Op2(1) => GPR_Op2(18),
      GPR_Op2(0) => GPR_Op2(19),
      GPR_Op3(1) => GPR_Op3(18),
      GPR_Op3(0) => GPR_Op3(19),
      WB_Fwd(1) => WB_Fwd(18),
      WB_Fwd(0) => WB_Fwd(19),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Zero_Detect_gti is
  port (
    ex_op1_cmp_eq_n_reg : out STD_LOGIC;
    ex_hold_div_by_zero_reg : out STD_LOGIC;
    div_busy : out STD_LOGIC;
    ex_op1_cmp_eq_n_reg_0 : out STD_LOGIC;
    EX_Op1_CMP_Equal : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    \FPGA_Shift.cnt_shifts_reg[31]\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    ex_start_div : in STD_LOGIC;
    MEM_Div_By_Zero_reg : in STD_LOGIC;
    div_busy_reg : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Zero_Detect_gti : entity is "Zero_Detect_gti";
end mb_design_microblaze_0_1_Zero_Detect_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Zero_Detect_gti is
  signal S : STD_LOGIC;
  signal \S0_inferred__0/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__1/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__2/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__3/i__n_0\ : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal zero_CI_1 : STD_LOGIC;
  signal zero_CI_2 : STD_LOGIC;
  signal zero_CI_3 : STD_LOGIC;
  signal zero_CI_4 : STD_LOGIC;
  signal zero_CI_5 : STD_LOGIC;
  signal zero_CI_6 : STD_LOGIC;
begin
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
Part_Of_Zero_Carry_Start: entity work.mb_design_microblaze_0_1_MB_MUXCY_447
     port map (
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      lopt => \^lopt\,
      lopt_1 => ex_op1_cmp_equal_n,
      lopt_2 => S,
      lopt_3 => \^lopt_1\,
      lopt_4 => \S0_inferred__3/i__n_0\,
      lopt_5 => \^lopt_2\,
      lopt_6 => \S0_inferred__2/i__n_0\,
      zero_CI_6 => zero_CI_6
    );
\S0_inferred__0/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(0),
      I1 => \Using_FPGA.Native\(5),
      I2 => \Using_FPGA.Native\(3),
      I3 => \Using_FPGA.Native\(4),
      I4 => \Using_FPGA.Native\(1),
      I5 => \Using_FPGA.Native\(2),
      O => \S0_inferred__0/i__n_0\
    );
\S0_inferred__1/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(6),
      I1 => \Using_FPGA.Native\(11),
      I2 => \Using_FPGA.Native\(9),
      I3 => \Using_FPGA.Native\(10),
      I4 => \Using_FPGA.Native\(7),
      I5 => \Using_FPGA.Native\(8),
      O => \S0_inferred__1/i__n_0\
    );
\S0_inferred__2/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(12),
      I1 => \Using_FPGA.Native\(17),
      I2 => \Using_FPGA.Native\(15),
      I3 => \Using_FPGA.Native\(16),
      I4 => \Using_FPGA.Native\(13),
      I5 => \Using_FPGA.Native\(14),
      O => \S0_inferred__2/i__n_0\
    );
\S0_inferred__3/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(18),
      I1 => \Using_FPGA.Native\(23),
      I2 => \Using_FPGA.Native\(21),
      I3 => \Using_FPGA.Native\(22),
      I4 => \Using_FPGA.Native\(19),
      I5 => \Using_FPGA.Native\(20),
      O => \S0_inferred__3/i__n_0\
    );
\S0_inferred__4/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(24),
      I1 => \Using_FPGA.Native\(29),
      I2 => \Using_FPGA.Native\(27),
      I3 => \Using_FPGA.Native\(28),
      I4 => \Using_FPGA.Native\(25),
      I5 => \Using_FPGA.Native\(26),
      O => S
    );
\Zero_Detecting[1].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_448
     port map (
      \FPGA_Shift.cnt_shifts_reg[31]\ => \FPGA_Shift.cnt_shifts_reg[31]\,
      MEM_Div_By_Zero_reg => MEM_Div_By_Zero_reg,
      div_busy => div_busy,
      div_busy_reg => div_busy_reg,
      ex_hold_div_by_zero_reg => ex_hold_div_by_zero_reg,
      ex_op1_cmp_eq_n_reg => ex_op1_cmp_eq_n_reg,
      ex_op1_cmp_eq_n_reg_0 => ex_op1_cmp_eq_n_reg_0,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_start_div => ex_start_div,
      lopt => lopt_4,
      zero_CI_1 => zero_CI_1
    );
\Zero_Detecting[2].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_449
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__0/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => lopt_3,
      zero_CI_1 => zero_CI_1,
      zero_CI_2 => zero_CI_2
    );
\Zero_Detecting[3].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_450
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__1/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => lopt_3,
      lopt_1 => \S0_inferred__0/i__n_0\,
      lopt_2 => lopt_4,
      lopt_3 => \FPGA_Shift.cnt_shifts_reg[31]\,
      lopt_4 => lopt_5,
      lopt_5 => lopt_6,
      lopt_6 => lopt_7,
      zero_CI_2 => zero_CI_2,
      zero_CI_3 => zero_CI_3
    );
\Zero_Detecting[4].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_451
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__2/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt_2\,
      zero_CI_3 => zero_CI_3,
      zero_CI_4 => zero_CI_4
    );
\Zero_Detecting[5].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_452
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__3/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt_1\,
      zero_CI_4 => zero_CI_4,
      zero_CI_5 => zero_CI_5
    );
\Zero_Detecting[6].I_Part_Of_Zero_Detect\: entity work.mb_design_microblaze_0_1_MB_MUXCY_453
     port map (
      S => S,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt\,
      zero_CI_5 => zero_CI_5,
      zero_CI_6 => zero_CI_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_address_hit is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Hit : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    \Performance_Debug_Control.ex_pc_brk_reg\ : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_address_hit : entity is "address_hit";
end mb_design_microblaze_0_1_address_hit;

architecture STRUCTURE of mb_design_microblaze_0_1_address_hit is
  signal SRL16_MC15_1 : STD_LOGIC;
  signal SRL16_MC15_2 : STD_LOGIC;
  signal SRL16_MC15_3 : STD_LOGIC;
  signal SRL16_MC15_4 : STD_LOGIC;
  signal SRL16_MC15_5 : STD_LOGIC;
  signal SRL16_MC15_6 : STD_LOGIC;
  signal SRL16_MC15_7 : STD_LOGIC;
  signal SRL16_Sel_0 : STD_LOGIC;
  signal SRL16_Sel_1 : STD_LOGIC;
  signal SRL16_Sel_2 : STD_LOGIC;
  signal SRL16_Sel_3 : STD_LOGIC;
  signal SRL16_Sel_4 : STD_LOGIC;
  signal SRL16_Sel_5 : STD_LOGIC;
  signal SRL16_Sel_6 : STD_LOGIC;
  signal SRL16_Sel_7 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal which_pc : STD_LOGIC_VECTOR ( 0 to 0 );
begin
\Compare[0].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_43
     port map (
      Q(0) => Q(0),
      SRL16_Sel_7 => SRL16_Sel_7,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => SRL16_Sel_6,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => SRL16_Sel_5,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => SRL16_Sel_4
    );
\Compare[0].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_44
     port map (
      Address(3) => Address(28),
      Address(2) => Address(29),
      Address(1) => Address(30),
      Address(0) => Address(31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_7 => SRL16_Sel_7,
      which_pc(0) => which_pc(0)
    );
\Compare[1].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_45
     port map (
      SRL16_Sel_6 => SRL16_Sel_6,
      carry_6 => carry_6,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Compare[1].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_46
     port map (
      Address(3) => Address(24),
      Address(2) => Address(25),
      Address(1) => Address(26),
      Address(0) => Address(27),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_6 => SRL16_Sel_6,
      which_pc(0) => which_pc(0)
    );
\Compare[2].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_47
     port map (
      SRL16_Sel_5 => SRL16_Sel_5,
      carry_5 => carry_5,
      carry_6 => carry_6,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Compare[2].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_48
     port map (
      Address(3) => Address(20),
      Address(2) => Address(21),
      Address(1) => Address(22),
      Address(0) => Address(23),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_Sel_5 => SRL16_Sel_5,
      which_pc(0) => which_pc(0)
    );
\Compare[3].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_49
     port map (
      SRL16_Sel_4 => SRL16_Sel_4,
      carry_4 => carry_4,
      carry_5 => carry_5,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Compare[3].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_50
     port map (
      Address(3) => Address(16),
      Address(2) => Address(17),
      Address(1) => Address(18),
      Address(0) => Address(19),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_Sel_4 => SRL16_Sel_4,
      which_pc(0) => which_pc(0)
    );
\Compare[4].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_51
     port map (
      SRL16_Sel_3 => SRL16_Sel_3,
      carry_3 => carry_3,
      carry_4 => carry_4,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => SRL16_Sel_2,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => SRL16_Sel_1,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => SRL16_Sel_0
    );
\Compare[4].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_52
     port map (
      Address(3) => Address(12),
      Address(2) => Address(13),
      Address(1) => Address(14),
      Address(0) => Address(15),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_Sel_3 => SRL16_Sel_3,
      which_pc(0) => which_pc(0)
    );
\Compare[5].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_53
     port map (
      SRL16_Sel_2 => SRL16_Sel_2,
      carry_2 => carry_2,
      carry_3 => carry_3,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\Compare[5].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_54
     port map (
      Address(3) => Address(8),
      Address(2) => Address(9),
      Address(1) => Address(10),
      Address(0) => Address(11),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_Sel_2 => SRL16_Sel_2,
      which_pc(0) => which_pc(0)
    );
\Compare[6].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_55
     port map (
      SRL16_Sel_1 => SRL16_Sel_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt_8,
      lopt_1 => lopt_9
    );
\Compare[6].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_56
     port map (
      Address(3) => Address(4),
      Address(2) => Address(5),
      Address(1) => Address(6),
      Address(0) => Address(7),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_Sel_1 => SRL16_Sel_1,
      which_pc(0) => which_pc(0)
    );
\Compare[7].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_57
     port map (
      SRL16_Sel_0 => SRL16_Sel_0,
      carry_0 => carry_0,
      carry_1 => carry_1,
      lopt => lopt_10,
      lopt_1 => lopt_11
    );
\Compare[7].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_58
     port map (
      Address(3) => Address(0),
      Address(2) => Address(1),
      Address(1) => Address(2),
      Address(0) => Address(3),
      Dbg_Clk => Dbg_Clk,
      Dbg_TDI => Dbg_TDI,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_Sel_0 => SRL16_Sel_0,
      which_pc(0) => which_pc(0)
    );
\The_First_BreakPoints.MUXCY_Post\: entity work.mb_design_microblaze_0_1_MB_MUXCY_59
     port map (
      Hit => Hit,
      \Performance_Debug_Control.ex_pc_brk_reg\ => \Performance_Debug_Control.ex_pc_brk_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_0 => carry_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_address_hit__parameterized1\ is
  port (
    Hit : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_address_hit__parameterized1\ : entity is "address_hit";
end \mb_design_microblaze_0_1_address_hit__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_address_hit__parameterized1\ is
  signal SRL16_MC15_1 : STD_LOGIC;
  signal SRL16_MC15_2 : STD_LOGIC;
  signal SRL16_MC15_3 : STD_LOGIC;
  signal SRL16_MC15_4 : STD_LOGIC;
  signal SRL16_MC15_5 : STD_LOGIC;
  signal SRL16_MC15_6 : STD_LOGIC;
  signal SRL16_MC15_7 : STD_LOGIC;
  signal SRL16_Sel_0 : STD_LOGIC;
  signal SRL16_Sel_1 : STD_LOGIC;
  signal SRL16_Sel_2 : STD_LOGIC;
  signal SRL16_Sel_3 : STD_LOGIC;
  signal SRL16_Sel_4 : STD_LOGIC;
  signal SRL16_Sel_5 : STD_LOGIC;
  signal SRL16_Sel_6 : STD_LOGIC;
  signal SRL16_Sel_7 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal which_pc : STD_LOGIC_VECTOR ( 1 to 1 );
begin
\Compare[0].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY
     port map (
      Q(0) => Q(0),
      SRL16_Sel_7 => SRL16_Sel_7,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => SRL16_Sel_6,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => SRL16_Sel_5,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => SRL16_Sel_4
    );
\Compare[0].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E
     port map (
      Address(3) => Address(28),
      Address(2) => Address(29),
      Address(1) => Address(30),
      Address(0) => Address(31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_7 => SRL16_Sel_7,
      which_pc(0) => which_pc(1)
    );
\Compare[1].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_29
     port map (
      SRL16_Sel_6 => SRL16_Sel_6,
      carry_6 => carry_6,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Compare[1].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_30
     port map (
      Address(3) => Address(24),
      Address(2) => Address(25),
      Address(1) => Address(26),
      Address(0) => Address(27),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_6 => SRL16_Sel_6,
      which_pc(0) => which_pc(1)
    );
\Compare[2].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_31
     port map (
      SRL16_Sel_5 => SRL16_Sel_5,
      carry_5 => carry_5,
      carry_6 => carry_6,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Compare[2].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_32
     port map (
      Address(3) => Address(20),
      Address(2) => Address(21),
      Address(1) => Address(22),
      Address(0) => Address(23),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_Sel_5 => SRL16_Sel_5,
      which_pc(0) => which_pc(1)
    );
\Compare[3].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_33
     port map (
      SRL16_Sel_4 => SRL16_Sel_4,
      carry_4 => carry_4,
      carry_5 => carry_5,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Compare[3].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_34
     port map (
      Address(3) => Address(16),
      Address(2) => Address(17),
      Address(1) => Address(18),
      Address(0) => Address(19),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_Sel_4 => SRL16_Sel_4,
      which_pc(0) => which_pc(1)
    );
\Compare[4].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_35
     port map (
      SRL16_Sel_3 => SRL16_Sel_3,
      carry_3 => carry_3,
      carry_4 => carry_4,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => SRL16_Sel_2,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => SRL16_Sel_1,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => SRL16_Sel_0
    );
\Compare[4].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_36
     port map (
      Address(3) => Address(12),
      Address(2) => Address(13),
      Address(1) => Address(14),
      Address(0) => Address(15),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_Sel_3 => SRL16_Sel_3,
      which_pc(0) => which_pc(1)
    );
\Compare[5].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_37
     port map (
      SRL16_Sel_2 => SRL16_Sel_2,
      carry_2 => carry_2,
      carry_3 => carry_3,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\Compare[5].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_38
     port map (
      Address(3) => Address(8),
      Address(2) => Address(9),
      Address(1) => Address(10),
      Address(0) => Address(11),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_Sel_2 => SRL16_Sel_2,
      which_pc(0) => which_pc(1)
    );
\Compare[6].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_39
     port map (
      SRL16_Sel_1 => SRL16_Sel_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt_8,
      lopt_1 => lopt_9
    );
\Compare[6].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_40
     port map (
      Address(3) => Address(4),
      Address(2) => Address(5),
      Address(1) => Address(6),
      Address(0) => Address(7),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_Sel_1 => SRL16_Sel_1,
      which_pc(0) => which_pc(1)
    );
\Compare[7].MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_41
     port map (
      D(0) => D(0),
      Hit => Hit,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\,
      SRL16_Sel_0 => SRL16_Sel_0,
      carry_1 => carry_1,
      lopt => lopt_10,
      lopt_1 => lopt_11,
      mem_Exception_Taken => mem_Exception_Taken,
      single_Step_N => single_Step_N,
      single_Step_N_reg => single_Step_N_reg
    );
\Compare[7].SRLC16E_I\: entity work.mb_design_microblaze_0_1_MB_SRLC16E_42
     port map (
      Address(3) => Address(0),
      Address(2) => Address(1),
      Address(1) => Address(2),
      Address(0) => Address(3),
      Dbg_Clk => Dbg_Clk,
      Dbg_TDI => Dbg_TDI,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_Sel_0 => SRL16_Sel_0,
      which_pc(0) => which_pc(1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and is
  port (
    of_PipeRun_carry_1 : out STD_LOGIC;
    use_Reg_Neg_S_reg : in STD_LOGIC;
    of_PipeRun_carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_127
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_1 => of_PipeRun_carry_1,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      use_Reg_Neg_S_reg => use_Reg_Neg_S_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_102 is
  port (
    if_pc_incr_carry1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    if_pc_incr_carry0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_102 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_102;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_102 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_116
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_103 is
  port (
    if_pc_incr_carry0 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_103 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_103;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_103 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_115
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_104 is
  port (
    CI : out STD_LOGIC;
    if_fetch_for_timing_optimization1 : in STD_LOGIC;
    if_pc_incr_carry1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_104 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_104;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_104 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_114
     port map (
      CI => CI,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_105 is
  port (
    mem_div_stall_i_reg : out STD_LOGIC;
    wb_PipeRun_i_reg : out STD_LOGIC;
    wb_gpr_write_dbg0 : out STD_LOGIC;
    wb_gpr_write_i0 : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_1\ : out STD_LOGIC;
    Trace_WB_Jump_Taken_reg : in STD_LOGIC;
    mem_wait_on_ready_N : in STD_LOGIC;
    wb_valid_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_valid_instr : in STD_LOGIC;
    wb_valid_reg_0 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    wb_MSR_Clear_IE : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_105 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_105;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_105 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_107
     port map (
      Q(0) => Q(0),
      Trace_WB_Jump_Taken_reg => Trace_WB_Jump_Taken_reg,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_8\,
      ex_MSR(0) => ex_MSR(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      mem_MSR(1 downto 0) => mem_MSR(1 downto 0),
      mem_div_stall_i_reg => mem_div_stall_i_reg,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N,
      sync_reset => sync_reset,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_PipeRun_i_reg => wb_PipeRun_i_reg,
      wb_exception => wb_exception,
      \wb_exception_kind_i_reg[28]\ => \wb_exception_kind_i_reg[28]\,
      \wb_exception_kind_i_reg[28]_0\ => \wb_exception_kind_i_reg[28]_0\,
      \wb_exception_kind_i_reg[28]_1\ => \wb_exception_kind_i_reg[28]_1\,
      wb_gpr_write_dbg0 => wb_gpr_write_dbg0,
      wb_gpr_write_i0 => wb_gpr_write_i0,
      wb_valid_reg(0) => wb_valid_reg(0),
      wb_valid_reg_0 => wb_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_72 is
  port (
    of_PipeRun_for_ce : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    ex_valid_keep_reg : out STD_LOGIC;
    of_Take_Interrupt_hold_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    OF_Take_Exception_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_PipeRun_carry_1 : in STD_LOGIC;
    ex_jump_nodelay_reg_0 : in STD_LOGIC;
    of_Take_Interrupt_hold_reg_0 : in STD_LOGIC;
    of_branch_with_delayslot140_out : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_jump_nodelay_reg_1 : in STD_LOGIC;
    of_pause : in STD_LOGIC;
    ex_valid_keep : in STD_LOGIC;
    of_next_ex_valid : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    of_Take_Interrupt_hold : in STD_LOGIC;
    OF_Take_Exception_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_MSR_Clear_IE : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_72 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_72;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_72 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_126
     port map (
      OF_Take_Exception_hold => OF_Take_Exception_hold,
      OF_Take_Exception_hold_reg => OF_Take_Exception_hold_reg,
      Q(0) => Q(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      ex_jump => ex_jump,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_jump_nodelay_reg_0 => ex_jump_nodelay_reg_0,
      ex_jump_nodelay_reg_1 => ex_jump_nodelay_reg_1,
      ex_valid_keep => ex_valid_keep,
      ex_valid_keep_reg => ex_valid_keep_reg,
      mem_MSR(0) => mem_MSR(0),
      of_MSR(1 downto 0) => of_MSR(1 downto 0),
      of_PipeRun_carry_1 => of_PipeRun_carry_1,
      of_Take_Interrupt_hold => of_Take_Interrupt_hold,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_Take_Interrupt_hold_reg_0 => of_Take_Interrupt_hold_reg_0,
      of_branch_with_delayslot140_out => of_branch_with_delayslot140_out,
      of_next_ex_valid => of_next_ex_valid,
      of_pause => of_pause,
      of_pause_reg => of_PipeRun_for_ce,
      p_2_out(1 downto 0) => p_2_out(1 downto 0),
      sync_reset => sync_reset,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_exception => wb_exception
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_73 is
  port (
    of_PipeRun_carry_10 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_73 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_73;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_73 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_125
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_PipeRun_carry_10 => of_PipeRun_carry_10
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_74 is
  port (
    of_PipeRun_carry_9 : out STD_LOGIC;
    ex_jump_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_PipeRun_carry_10 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_74 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_74;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_74 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_124
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => ex_jump_hold_reg,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_10 => of_PipeRun_carry_10,
      of_PipeRun_carry_9 => of_PipeRun_carry_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_75 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    mem_valid_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_clear_MSR_BIP_hold_cmb108_out : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    ex_Write_DCache_decode_cmb : out STD_LOGIC;
    mem_gpr_write_dbg_reg : out STD_LOGIC;
    mem_gpr_write_reg : out STD_LOGIC;
    \ex_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_PipeRun_carry_9 : in STD_LOGIC;
    mem_valid_reg_0 : in STD_LOGIC;
    mem_valid_reg_1 : in STD_LOGIC;
    mem_valid_reg_2 : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_valid_reg_3 : in STD_LOGIC;
    \mem_pc_i_reg[0]\ : in STD_LOGIC;
    \mem_pc_i_reg[0]_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg : in STD_LOGIC;
    of_clear_MSR_BIP_hold_s : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    of_set_MSR_EE_hold_reg : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    ex_Write_ICache_i : in STD_LOGIC;
    ex_write_dcache_instr : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    \ex_gpr_write_dbg__0\ : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_gpr_write_reg_0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_0 : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_move_to_MSR_instr : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_MSR_Clear_IE : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    p_2_out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_75 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_75;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_75 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_123
     port map (
      E(0) => E(0),
      I0 => I0,
      I4 => I4,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_8\(0) => \Using_FPGA.Native_7\(0),
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_8\,
      ex_MSR(0) => ex_MSR(0),
      ex_Write_DCache_decode_reg => ex_Write_DCache_decode_cmb,
      ex_Write_ICache_i => ex_Write_ICache_i,
      \ex_gpr_write_addr_reg[2]\ => \ex_gpr_write_addr_reg[2]\,
      \ex_gpr_write_addr_reg[4]\ => \ex_gpr_write_addr_reg[4]\,
      \ex_gpr_write_dbg__0\ => \ex_gpr_write_dbg__0\,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_write_dcache_instr => ex_write_dcache_instr,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      mem_MSR(1 downto 0) => mem_MSR(1 downto 0),
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_gpr_write_dbg_reg => mem_gpr_write_dbg_reg,
      mem_gpr_write_reg => mem_gpr_write_reg,
      mem_gpr_write_reg_0 => mem_gpr_write_reg_0,
      \mem_pc_i_reg[0]\ => \mem_pc_i_reg[0]\,
      \mem_pc_i_reg[0]_0\ => \mem_pc_i_reg[0]_0\,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => mem_valid_reg,
      mem_valid_reg_0 => mem_valid_reg_0,
      mem_valid_reg_1 => mem_valid_reg_1,
      mem_valid_reg_2 => mem_valid_reg_2,
      mem_valid_reg_3 => mem_valid_reg_3,
      of_PipeRun_carry_9 => of_PipeRun_carry_9,
      of_clear_MSR_BIP_hold_cmb108_out => of_clear_MSR_BIP_hold_cmb108_out,
      of_clear_MSR_BIP_hold_s => of_clear_MSR_BIP_hold_s,
      of_set_MSR_EE_hold_reg => of_set_MSR_EE_hold_reg,
      of_set_MSR_IE_hold_reg => of_set_MSR_IE_hold_reg,
      of_set_MSR_IE_hold_reg_0 => of_set_MSR_IE_hold_reg_0,
      of_set_MSR_IE_hold_reg_1 => of_set_MSR_IE_hold_reg_1,
      p_2_out(2 downto 0) => p_2_out(2 downto 0),
      sync_reset => sync_reset,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_exception => wb_exception
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_76 is
  port (
    of_PipeRun_carry_7 : out STD_LOGIC;
    of_pipe_ctrl_reg0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_76 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_76;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_76 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_122
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_7 => of_PipeRun_carry_7,
      of_pipe_ctrl_reg0 => of_pipe_ctrl_reg0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_77 is
  port (
    of_PipeRun_carry_6 : out STD_LOGIC;
    A : in STD_LOGIC;
    of_PipeRun_carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_77 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_77;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_77 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_121
     port map (
      A => A,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_PipeRun_carry_7 => of_PipeRun_carry_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_78 is
  port (
    of_PipeRun_carry_5 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_PipeRun_carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_78 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_78;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_78 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_120
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_PipeRun_carry_6 => of_PipeRun_carry_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_79 is
  port (
    of_PipeRun_carry_4 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_PipeRun_carry_5 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_79 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_79;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_79 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_119
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_PipeRun_carry_5 => of_PipeRun_carry_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_80 is
  port (
    of_PipeRun_carry_3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_PipeRun_carry_4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_80 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_80;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_80 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_118
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_PipeRun_carry_4 => of_PipeRun_carry_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_and_81 is
  port (
    of_PipeRun_carry_2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_PipeRun_carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_and_81 : entity is "carry_and";
end mb_design_microblaze_0_1_carry_and_81;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_and_81 is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_117
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_PipeRun_carry_3 => of_PipeRun_carry_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_carry_or is
  port (
    mem_wait_on_ready_N : out STD_LOGIC;
    MEM_DataBus_Ready : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_Write_DCache : in STD_LOGIC;
    mem_load_store_access : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_carry_or : entity is "carry_or";
end mb_design_microblaze_0_1_carry_or;

architecture STRUCTURE of mb_design_microblaze_0_1_carry_or is
begin
MUXCY_I: entity work.mb_design_microblaze_0_1_MB_MUXCY_106
     port map (
      MEM_DataBus_Ready => MEM_DataBus_Ready,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      mem_Write_DCache => mem_Write_DCache,
      mem_load_store_access => mem_load_store_access,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_dsp_module is
  port (
    D : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_dsp_module : entity is "dsp_module";
end mb_design_microblaze_0_1_dsp_module;

architecture STRUCTURE of mb_design_microblaze_0_1_dsp_module is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.mb_design_microblaze_0_1_MB_DSP48E1
     port map (
      Clk => Clk,
      D(16 downto 0) => D(16 downto 0),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1_0\(47 downto 0) => \Using_FPGA.DSP48E1_I1\(47 downto 0),
      \Using_FPGA.DSP48E1_I1_1\ => \Using_FPGA.DSP48E1_I1_0\,
      \Using_FPGA.DSP48E1_I1_2\(16 downto 0) => \Using_FPGA.DSP48E1_I1_1\(16 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_dsp_module__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_dsp_module__parameterized1\ : entity is "dsp_module";
end \mb_design_microblaze_0_1_dsp_module__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_dsp_module__parameterized1\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\mb_design_microblaze_0_1_MB_DSP48E1__parameterized1\
     port map (
      Clk => Clk,
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      Q(16 downto 0) => Q(16 downto 0),
      SR(0) => SR(0),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\(14 downto 0) => \Using_FPGA.DSP48E1_I1_0\(14 downto 0),
      \Using_FPGA.DSP48E1_I1_2\(47 downto 0) => \Using_FPGA.DSP48E1_I1_1\(47 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_dsp_module__parameterized3\ is
  port (
    wb_mul_result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_dsp_module__parameterized3\ : entity is "dsp_module";
end \mb_design_microblaze_0_1_dsp_module__parameterized3\;

architecture STRUCTURE of \mb_design_microblaze_0_1_dsp_module__parameterized3\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\mb_design_microblaze_0_1_MB_DSP48E1__parameterized3\
     port map (
      Clk => Clk,
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      Q(14 downto 0) => Q(14 downto 0),
      SR(0) => SR(0),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\ => \Using_FPGA.DSP48E1_I1_0\,
      \Using_FPGA.DSP48E1_I1_2\(16 downto 0) => \Using_FPGA.DSP48E1_I1_1\(16 downto 0),
      wb_mul_result(14 downto 0) => wb_mul_result(14 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_jump_logic is
  port (
    ex_jump : out STD_LOGIC;
    EX_Op1_CMP_Equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : out STD_LOGIC;
    I5 : out STD_LOGIC;
    if_fetch_in_progress_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    \if_pc_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_delayslot_Instr0 : out STD_LOGIC;
    if_missed_fetch_reg : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_jump_hold_reg : out STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    use_Reg_Neg_S_reg_0 : in STD_LOGIC;
    ex_op1_cmp_eq : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_op1_cmp_eq_n5_out : in STD_LOGIC;
    force_Val2_N_reg_0 : in STD_LOGIC;
    force2_reg_0 : in STD_LOGIC;
    use_Reg_Neg_DI1_out : in STD_LOGIC;
    force_Val10_out : in STD_LOGIC;
    use_Reg_Neg_S3_out : in STD_LOGIC;
    force12_out : in STD_LOGIC;
    of_Take_Exception : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wb_exception : in STD_LOGIC;
    if_missed_fetch_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC;
    keep_jump_taken_with_ds : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    \if_pc_reg[0]_0\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \if_pc_reg[0]_1\ : in STD_LOGIC;
    \if_pc_reg[1]\ : in STD_LOGIC;
    \if_pc_reg[2]\ : in STD_LOGIC;
    \if_pc_reg[3]\ : in STD_LOGIC;
    \if_pc_reg[4]\ : in STD_LOGIC;
    \if_pc_reg[5]\ : in STD_LOGIC;
    \if_pc_reg[6]\ : in STD_LOGIC;
    \if_pc_reg[7]\ : in STD_LOGIC;
    \if_pc_reg[8]\ : in STD_LOGIC;
    \if_pc_reg[9]\ : in STD_LOGIC;
    \if_pc_reg[10]\ : in STD_LOGIC;
    \if_pc_reg[11]\ : in STD_LOGIC;
    \if_pc_reg[12]\ : in STD_LOGIC;
    \if_pc_reg[13]\ : in STD_LOGIC;
    \if_pc_reg[14]\ : in STD_LOGIC;
    \if_pc_reg[15]\ : in STD_LOGIC;
    \if_pc_reg[16]\ : in STD_LOGIC;
    \if_pc_reg[17]\ : in STD_LOGIC;
    \if_pc_reg[18]\ : in STD_LOGIC;
    \if_pc_reg[19]\ : in STD_LOGIC;
    \if_pc_reg[20]\ : in STD_LOGIC;
    \if_pc_reg[21]\ : in STD_LOGIC;
    \if_pc_reg[22]\ : in STD_LOGIC;
    \if_pc_reg[23]\ : in STD_LOGIC;
    \if_pc_reg[24]\ : in STD_LOGIC;
    \if_pc_reg[25]\ : in STD_LOGIC;
    \if_pc_reg[26]\ : in STD_LOGIC;
    \if_pc_reg[27]\ : in STD_LOGIC;
    \if_pc_reg[28]\ : in STD_LOGIC;
    O : in STD_LOGIC;
    \if_pc_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \if_pc_reg[30]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    if_missed_fetch_reg_1 : in STD_LOGIC;
    if_missed_fetch_reg_2 : in STD_LOGIC;
    if_missed_fetch_reg_3 : in STD_LOGIC;
    of_read_imm_reg_ii_reg : in STD_LOGIC;
    of_read_imm_reg_ii_reg_0 : in STD_LOGIC;
    of_read_imm_reg_ii_reg_1 : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    ex_jump_hold_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_jump_logic : entity is "jump_logic";
end mb_design_microblaze_0_1_jump_logic;

architecture STRUCTURE of mb_design_microblaze_0_1_jump_logic is
  signal DI : STD_LOGIC;
  signal MUXCY_JUMP_CARRY6_n_42 : STD_LOGIC;
  signal S : STD_LOGIC;
  signal ex_jump_q : STD_LOGIC;
  signal ex_jump_wanted : STD_LOGIC;
  signal force1_reg_n_0 : STD_LOGIC;
  signal force2 : STD_LOGIC;
  signal force_Val1_reg_n_0 : STD_LOGIC;
  signal force_Val2_N : STD_LOGIC;
  signal jump_carry1 : STD_LOGIC;
  signal jump_carry2 : STD_LOGIC;
  signal jump_carry4 : STD_LOGIC;
  signal jump_carry5 : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal use_Reg_Neg_DI_reg_n_0 : STD_LOGIC;
  signal use_Reg_Neg_S_reg_n_0 : STD_LOGIC;
begin
  lopt_1 <= DI;
  lopt_2 <= S;
  of_PipeRun_for_ce <= use_Reg_Neg_S_reg_0;
  reset_bool_for_rst <= sync_reset;
MUXCY_JUMP_CARRY: entity work.mb_design_microblaze_0_1_MB_MUXCY_108
     port map (
      DI => DI,
      EX_Op1_Zero => EX_Op1_Zero,
      S => S,
      jump_carry1 => jump_carry1,
      lopt => lopt
    );
MUXCY_JUMP_CARRY2: entity work.mb_design_microblaze_0_1_MB_MUXCY_109
     port map (
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      force2 => force2,
      force_Val2_N => force_Val2_N,
      jump_carry1 => jump_carry1,
      jump_carry2 => jump_carry2,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\,
      lopt_2 => lopt_3,
      lopt_3 => lopt_4,
      lopt_4 => lopt_5,
      lopt_5 => lopt_6,
      lopt_6 => lopt_7,
      lopt_7 => lopt_8,
      lopt_8 => lopt_9,
      \out\ => \out\
    );
MUXCY_JUMP_CARRY3: entity work.mb_design_microblaze_0_1_MB_MUXCY_110
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry2 => jump_carry2,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\,
      lopt_2 => lopt_3,
      of_valid => of_valid
    );
MUXCY_JUMP_CARRY4: entity work.mb_design_microblaze_0_1_MB_MUXCY_111
     port map (
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_jump_q => ex_jump_q,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry4 => jump_carry4,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      lopt_2 => lopt_6,
      of_valid => of_valid
    );
MUXCY_JUMP_CARRY5: entity work.mb_design_microblaze_0_1_MB_MUXCY_112
     port map (
      jump_carry4 => jump_carry4,
      jump_carry5 => jump_carry5,
      lopt => lopt_7,
      lopt_1 => lopt_8,
      lopt_2 => lopt_9
    );
MUXCY_JUMP_CARRY6: entity work.mb_design_microblaze_0_1_MB_MUXCY_113
     port map (
      I5 => I5,
      O => O,
      Q(3 downto 0) => Q(3 downto 0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_Take_Intr_or_Exc_reg => ex_Take_Intr_or_Exc_reg,
      ex_Take_Intr_or_Exc_reg_0 => ex_Take_Intr_or_Exc_reg_0,
      ex_Take_Intr_or_Exc_reg_1 => of_PipeRun_for_ce,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => ex_jump,
      ex_jump_hold_reg_0 => ex_jump_hold_reg,
      ex_jump_hold_reg_1 => ex_jump_hold_reg_0,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_jump_q => ex_jump_q,
      ex_jump_q_reg => MUXCY_JUMP_CARRY6_n_42,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      if_fetch_in_progress_reg(0) => if_fetch_in_progress_reg(0),
      if_missed_fetch_reg => if_missed_fetch_reg,
      if_missed_fetch_reg_0(0) => if_missed_fetch_reg_0(0),
      if_missed_fetch_reg_1 => if_missed_fetch_reg_1,
      if_missed_fetch_reg_2 => if_missed_fetch_reg_2,
      if_missed_fetch_reg_3 => if_missed_fetch_reg_3,
      \if_pc_reg[0]\(31 downto 0) => \if_pc_reg[0]\(31 downto 0),
      \if_pc_reg[0]_0\(29 downto 0) => \if_pc_reg[0]_0\(29 downto 0),
      \if_pc_reg[0]_1\ => \if_pc_reg[0]_1\,
      \if_pc_reg[10]\ => \if_pc_reg[10]\,
      \if_pc_reg[11]\ => \if_pc_reg[11]\,
      \if_pc_reg[12]\ => \if_pc_reg[12]\,
      \if_pc_reg[13]\ => \if_pc_reg[13]\,
      \if_pc_reg[14]\ => \if_pc_reg[14]\,
      \if_pc_reg[15]\ => \if_pc_reg[15]\,
      \if_pc_reg[16]\ => \if_pc_reg[16]\,
      \if_pc_reg[17]\ => \if_pc_reg[17]\,
      \if_pc_reg[18]\ => \if_pc_reg[18]\,
      \if_pc_reg[19]\ => \if_pc_reg[19]\,
      \if_pc_reg[1]\ => \if_pc_reg[1]\,
      \if_pc_reg[20]\ => \if_pc_reg[20]\,
      \if_pc_reg[21]\ => \if_pc_reg[21]\,
      \if_pc_reg[22]\ => \if_pc_reg[22]\,
      \if_pc_reg[23]\ => \if_pc_reg[23]\,
      \if_pc_reg[24]\ => \if_pc_reg[24]\,
      \if_pc_reg[25]\ => \if_pc_reg[25]\,
      \if_pc_reg[26]\ => \if_pc_reg[26]\,
      \if_pc_reg[27]\ => \if_pc_reg[27]\,
      \if_pc_reg[28]\ => \if_pc_reg[28]\,
      \if_pc_reg[2]\ => \if_pc_reg[2]\,
      \if_pc_reg[30]\(1 downto 0) => \if_pc_reg[30]\(1 downto 0),
      \if_pc_reg[30]_0\(1 downto 0) => \if_pc_reg[30]_0\(1 downto 0),
      \if_pc_reg[3]\ => \if_pc_reg[3]\,
      \if_pc_reg[4]\ => \if_pc_reg[4]\,
      \if_pc_reg[5]\ => \if_pc_reg[5]\,
      \if_pc_reg[6]\ => \if_pc_reg[6]\,
      \if_pc_reg[7]\ => \if_pc_reg[7]\,
      \if_pc_reg[8]\ => \if_pc_reg[8]\,
      \if_pc_reg[9]\ => \if_pc_reg[9]\,
      jump_carry5 => jump_carry5,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => keep_jump_taken_with_ds_reg,
      of_Take_Exception => of_Take_Exception,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => of_read_imm_reg_ii_reg,
      of_read_imm_reg_ii_reg_0 => of_read_imm_reg_ii_reg_0,
      of_read_imm_reg_ii_reg_1 => of_read_imm_reg_ii_reg_1,
      sync_reset => reset_bool_for_rst,
      wb_exception => wb_exception
    );
ex_jump_q_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MUXCY_JUMP_CARRY6_n_42,
      Q => ex_jump_q,
      R => '0'
    );
ex_op1_cmp_eq_n_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq_n5_out,
      Q => ex_op1_cmp_equal_n,
      R => reset_bool_for_rst
    );
ex_op1_cmp_eq_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq,
      Q => EX_Op1_CMP_Equal,
      S => reset_bool_for_rst
    );
force1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force12_out,
      Q => force1_reg_n_0,
      R => reset_bool_for_rst
    );
force2_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force2_reg_0,
      Q => force2,
      R => reset_bool_for_rst
    );
force_DI1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A6"
    )
        port map (
      I0 => force_Val1_reg_n_0,
      I1 => use_Reg_Neg_DI_reg_n_0,
      I2 => \Using_FPGA.Native_4\(0),
      O => DI
    );
force_Val1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force_Val10_out,
      Q => force_Val1_reg_n_0,
      R => reset_bool_for_rst
    );
force_Val2_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force_Val2_N_reg_0,
      Q => force_Val2_N,
      S => reset_bool_for_rst
    );
force_jump1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A6"
    )
        port map (
      I0 => force1_reg_n_0,
      I1 => use_Reg_Neg_S_reg_n_0,
      I2 => \Using_FPGA.Native_4\(0),
      O => S
    );
use_Reg_Neg_DI_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_DI1_out,
      Q => use_Reg_Neg_DI_reg_n_0,
      R => reset_bool_for_rst
    );
use_Reg_Neg_S_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_S3_out,
      Q => use_Reg_Neg_S_reg_n_0,
      R => reset_bool_for_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mb_sync_vec is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AR : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mb_sync_vec : entity is "mb_sync_vec";
end mb_design_microblaze_0_1_mb_sync_vec;

architecture STRUCTURE of mb_design_microblaze_0_1_mb_sync_vec is
  signal \^ar\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  AR(0) <= \^ar\(0);
\sync_bits[0].sync_bit\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_70\
     port map (
      AR(0) => \^ar\(0),
      D(0) => D(1),
      Dbg_Clk => Dbg_Clk,
      Q(0) => Q(1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[1].sync_bit\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_71\
     port map (
      AR(0) => \^ar\(0),
      D(0) => D(0),
      Dbg_Clk => Dbg_Clk,
      Q(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \mb_design_microblaze_0_1_mb_sync_vec__parameterized1\ is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 9 );
    continue_from_brk0 : out STD_LOGIC;
    \Serial_Dbg_Intf.sample_synced_1_reg[7]\ : out STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]\ : out STD_LOGIC;
    start_single_cmd0 : out STD_LOGIC;
    force_stop_cmd_i0 : out STD_LOGIC;
    if_debug_ready_i0 : out STD_LOGIC;
    read_register_MSR0 : out STD_LOGIC;
    read_register_PC0 : out STD_LOGIC;
    normal_stop_cmd_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 8 downto 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_4\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \mb_design_microblaze_0_1_mb_sync_vec__parameterized1\ : entity is "mb_sync_vec";
end \mb_design_microblaze_0_1_mb_sync_vec__parameterized1\;

architecture STRUCTURE of \mb_design_microblaze_0_1_mb_sync_vec__parameterized1\ is
  signal \^sample_synced\ : STD_LOGIC_VECTOR ( 0 to 9 );
  signal \sync_bits[2].sync_bit_n_1\ : STD_LOGIC;
begin
  sample_synced(0 to 9) <= \^sample_synced\(0 to 9);
\sync_bits[0].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_60
     port map (
      Clk => Clk,
      D(0) => D(0),
      Q(0) => Q(8),
      normal_stop_cmd_i0 => normal_stop_cmd_i0,
      sample_synced(0) => \^sample_synced\(0),
      sync_reset => sync_reset
    );
\sync_bits[1].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_61
     port map (
      Clk => Clk,
      Q(0) => Q(7),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]\(0),
      force_stop_cmd_i0 => force_stop_cmd_i0,
      sample_synced(0) => \^sample_synced\(1),
      sync_reset => sync_reset
    );
\sync_bits[2].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_62
     port map (
      Clk => Clk,
      Dbg_Trig_In(0) => Dbg_Trig_In(0),
      Q(1) => Q(6),
      Q(0) => Q(3),
      \Serial_Dbg_Intf.trig_in_1_reg\(0) => \^sample_synced\(5),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      \Use_Async_Reset.sync_reset_reg\ => \sync_bits[2].sync_bit_n_1\,
      sample_synced(0) => \^sample_synced\(2),
      start_single_cmd0 => start_single_cmd0,
      sync_reset => sync_reset
    );
\sync_bits[3].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_63
     port map (
      Clk => Clk,
      Q(0) => Q(5),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(1),
      read_register_MSR0 => read_register_MSR0,
      sample_synced(0) => \^sample_synced\(3),
      sync_reset => sync_reset
    );
\sync_bits[4].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_64
     port map (
      Clk => Clk,
      Q(0) => Q(4),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(0),
      read_register_PC0 => read_register_PC0,
      sample_synced(0) => \^sample_synced\(4),
      sync_reset => sync_reset
    );
\sync_bits[5].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_65
     port map (
      Clk => Clk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_2\(0),
      sample_synced(0) => \^sample_synced\(5),
      sync_reset => sync_reset
    );
\sync_bits[6].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_66
     port map (
      Clk => Clk,
      Q(0) => Q(2),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_3\(0),
      if_debug_ready_i0 => if_debug_ready_i0,
      sample_synced(0) => \^sample_synced\(6),
      sync_reset => sync_reset
    );
\sync_bits[7].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_67
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_Out(0) => Dbg_Trig_Ack_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(1) => Q(3),
      Q(0) => Q(1),
      \Serial_Dbg_Intf.continue_from_brk_reg\(0) => \^sample_synced\(5),
      \Serial_Dbg_Intf.sample_synced_1_reg[7]\ => \Serial_Dbg_Intf.sample_synced_1_reg[7]\,
      continue_from_brk0 => continue_from_brk0,
      sample_synced(0) => \^sample_synced\(7),
      sync_reset => sync_reset
    );
\sync_bits[8].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_68
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Q(0) => Q(0),
      \Serial_Dbg_Intf.trig_in_1_reg\ => \sync_bits[2].sync_bit_n_1\,
      \Synchronize.use_sync_reset.sync_reg[2]_0\ => \Synchronize.use_sync_reset.sync_reg[2]\,
      sample_synced(0) => \^sample_synced\(8),
      sync_reset => sync_reset
    );
\sync_bits[9].sync_bit\: entity work.mb_design_microblaze_0_1_mb_sync_bit_69
     port map (
      Clk => Clk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_4\(0),
      sample_synced(0) => \^sample_synced\(9),
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_msr_reg_gti is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    mem_MSR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    wb_ie_rising0 : out STD_LOGIC;
    \wb_MSR_i_reg[22]_0\ : out STD_LOGIC_VECTOR ( 5 downto 0 );
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC_VECTOR ( 6 downto 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    MEM_Barrel_Result : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \WB_MEM_Result_reg[0]\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \WB_MEM_Result_reg[0]_0\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \wb_MSR_i_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_MSR_i_reg[22]_1\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_msr_reg_gti : entity is "msr_reg_gti";
end mb_design_microblaze_0_1_msr_reg_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_msr_reg_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^of_msr\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^wb_msr_i_reg[22]_0\ : STD_LOGIC_VECTOR ( 5 downto 0 );
begin
  D(2 downto 0) <= \^d\(2 downto 0);
  of_MSR(2 downto 0) <= \^of_msr\(2 downto 0);
  \wb_MSR_i_reg[22]_0\(5 downto 0) <= \^wb_msr_i_reg[22]_0\(5 downto 0);
\MEM_MSR_Bits[22].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_319
     port map (
      Clk => Clk,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_6\(5),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_7\,
      \WB_MEM_Result_reg[22]\(0) => \WB_MEM_Result_reg[0]\(5),
      \WB_MEM_Result_reg[22]_0\(0) => \WB_MEM_Result_reg[0]_0\(5),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
\MEM_MSR_Bits[23].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_320
     port map (
      Clk => Clk,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(4),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_6\(4),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_8\,
      \WB_MEM_Result_reg[23]\(0) => \WB_MEM_Result_reg[0]\(4),
      \WB_MEM_Result_reg[23]_0\(0) => \WB_MEM_Result_reg[0]_0\(4),
      mem_MSR(0) => mem_MSR(1),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
\MEM_MSR_Bits[25].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_321
     port map (
      Clk => Clk,
      D(0) => \^d\(2),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(3),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_6\(3),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      \WB_MEM_Result_reg[25]\(0) => \WB_MEM_Result_reg[0]\(3),
      \WB_MEM_Result_reg[25]_0\(0) => \WB_MEM_Result_reg[0]_0\(3),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
\MEM_MSR_Bits[28].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_322
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(2),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_6\(2),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      \WB_MEM_Result_reg[28]\(0) => \WB_MEM_Result_reg[0]\(2),
      \WB_MEM_Result_reg[28]_0\(0) => \WB_MEM_Result_reg[0]_0\(2),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
\MEM_MSR_Bits[29].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_323
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      MEM_Barrel_Result(1) => MEM_Barrel_Result(6),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(1),
      \Using_FPGA.Native_0\(1) => \Using_FPGA.Native_6\(6),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_6\(1),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_11\,
      \WB_MEM_Result_reg[0]\(1) => \WB_MEM_Result_reg[0]\(6),
      \WB_MEM_Result_reg[0]\(0) => \WB_MEM_Result_reg[0]\(1),
      \WB_MEM_Result_reg[0]_0\(1) => \WB_MEM_Result_reg[0]_0\(6),
      \WB_MEM_Result_reg[0]_0\(0) => \WB_MEM_Result_reg[0]_0\(1),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
\MEM_MSR_Bits[30].Using_FDR.MSR_I\: entity work.mb_design_microblaze_0_1_MB_FDR_324
     port map (
      Clk => Clk,
      MEM_Barrel_Result(0) => MEM_Barrel_Result(0),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_6\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_12\,
      \Using_Fast_Interrupt.wb_ie_rising_reg\(0) => \^wb_msr_i_reg[22]_0\(0),
      \WB_MEM_Result_reg[30]\(0) => \WB_MEM_Result_reg[0]\(0),
      \WB_MEM_Result_reg[30]_0\(0) => \WB_MEM_Result_reg[0]_0\(0),
      mem_MSR(0) => mem_MSR(0),
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset,
      wb_ie_rising0 => wb_ie_rising0
    );
\OF_EX_MSR_Bits[22].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_325
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_13\,
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[22].Using_FDR.MSR_of_I\: entity work.mb_design_microblaze_0_1_MB_FDR_326
     port map (
      Clk => Clk,
      Interrupt => Interrupt,
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_14\,
      ex_Interrupt_Brk_combo_reg(1 downto 0) => \^of_msr\(1 downto 0),
      of_MSR(0) => \^of_msr\(2),
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[23].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_327
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      ex_MSR(0) => ex_MSR(0),
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[25].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_328
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_16\,
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_329
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_17\,
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[28].Using_FDR.MSR_of_I\: entity work.mb_design_microblaze_0_1_MB_FDR_330
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_18\,
      of_MSR(0) => \^of_msr\(1),
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_331
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_19\,
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I\: entity work.mb_design_microblaze_0_1_MB_FDR_332
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_20\,
      sync_reset => sync_reset
    );
\OF_EX_MSR_Bits[30].Using_FDR.MSR_of_I\: entity work.mb_design_microblaze_0_1_MB_FDR_333
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_21\,
      of_MSR(0) => \^of_msr\(0),
      sync_reset => sync_reset
    );
\wb_MSR_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \wb_MSR_i_reg[22]_1\(2),
      Q => \^wb_msr_i_reg[22]_0\(5),
      R => sync_reset
    );
\wb_MSR_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \wb_MSR_i_reg[22]_1\(1),
      Q => \^wb_msr_i_reg[22]_0\(4),
      R => sync_reset
    );
\wb_MSR_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \^d\(2),
      Q => \^wb_msr_i_reg[22]_0\(3),
      R => sync_reset
    );
\wb_MSR_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \^d\(1),
      Q => \^wb_msr_i_reg[22]_0\(2),
      R => sync_reset
    );
\wb_MSR_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \^d\(0),
      Q => \^wb_msr_i_reg[22]_0\(1),
      R => sync_reset
    );
\wb_MSR_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_MSR_i_reg[30]_0\(0),
      D => \wb_MSR_i_reg[22]_1\(0),
      Q => \^wb_msr_i_reg[22]_0\(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mux_bus is
  port (
    I041_out : out STD_LOGIC;
    Y : out STD_LOGIC_VECTOR ( 0 to 31 );
    I139_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 32 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mux_bus : entity is "mux_bus";
end mb_design_microblaze_0_1_mux_bus;

architecture STRUCTURE of mb_design_microblaze_0_1_mux_bus is
  signal \^y\ : STD_LOGIC_VECTOR ( 0 to 31 );
begin
  Y(0 to 31) <= \^y\(0 to 31);
\Mux_Loop[0].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3\
     port map (
      Instr(1) => Instr(0),
      Instr(0) => Instr(16),
      LOCKSTEP_Master_Out(2 downto 1) => LOCKSTEP_Master_Out(32 downto 31),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(15),
      Y(1) => \^y\(0),
      Y(0) => \^y\(16)
    );
\Mux_Loop[10].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_2\
     port map (
      Instr(1) => Instr(10),
      Instr(0) => Instr(26),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(21),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(5),
      Y(1) => \^y\(10),
      Y(0) => \^y\(26)
    );
\Mux_Loop[11].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_3\
     port map (
      Instr(1) => Instr(11),
      Instr(0) => Instr(27),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(20),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(4),
      Y(1) => \^y\(11),
      Y(0) => \^y\(27)
    );
\Mux_Loop[12].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_4\
     port map (
      Instr(1) => Instr(12),
      Instr(0) => Instr(28),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(19),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(3),
      Y(1) => \^y\(12),
      Y(0) => \^y\(28)
    );
\Mux_Loop[13].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_5\
     port map (
      Instr(1) => Instr(13),
      Instr(0) => Instr(29),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(18),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(2),
      Y(1) => \^y\(13),
      Y(0) => \^y\(29)
    );
\Mux_Loop[14].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_6\
     port map (
      Instr(1) => Instr(14),
      Instr(0) => Instr(30),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(17),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(1),
      Y(1) => \^y\(14),
      Y(0) => \^y\(30)
    );
\Mux_Loop[15].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_7\
     port map (
      Instr(1) => Instr(15),
      Instr(0) => Instr(31),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(16),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      Y(1) => \^y\(15),
      Y(0) => \^y\(31)
    );
\Mux_Loop[1].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_8\
     port map (
      Instr(1) => Instr(1),
      Instr(0) => Instr(17),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(30),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(14),
      Y(1) => \^y\(1),
      Y(0) => \^y\(17)
    );
\Mux_Loop[2].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_9\
     port map (
      Instr(1) => Instr(2),
      Instr(0) => Instr(18),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(29),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(13),
      Y(1) => \^y\(2),
      Y(0) => \^y\(18)
    );
\Mux_Loop[3].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_10\
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      Instr(1) => Instr(3),
      Instr(0) => Instr(19),
      \Instr[3]\ => \^y\(3),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(28),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(12),
      \Using_FPGA.Native_0\(0) => \^y\(1),
      \Using_FPGA.Native_1\(0) => \^y\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_5\(0) => \Using_FPGA.Native_2\(0),
      Y(0) => \^y\(19),
      \in\(0) => \in\(0)
    );
\Mux_Loop[4].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_11\
     port map (
      Instr(1) => Instr(4),
      Instr(0) => Instr(20),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(27),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(11),
      Y(1) => \^y\(4),
      Y(0) => \^y\(20)
    );
\Mux_Loop[5].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_12\
     port map (
      Instr(1) => Instr(5),
      Instr(0) => Instr(21),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(26),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(10),
      Y(1) => \^y\(5),
      Y(0) => \^y\(21)
    );
\Mux_Loop[6].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_13\
     port map (
      Instr(1) => Instr(6),
      Instr(0) => Instr(22),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(25),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(9),
      Y(1) => \^y\(6),
      Y(0) => \^y\(22)
    );
\Mux_Loop[7].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_14\
     port map (
      Instr(1) => Instr(7),
      Instr(0) => Instr(23),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(24),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(8),
      Y(1) => \^y\(7),
      Y(0) => \^y\(23)
    );
\Mux_Loop[8].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_15\
     port map (
      Instr(1) => Instr(8),
      Instr(0) => Instr(24),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(23),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(7),
      Y(1) => \^y\(8),
      Y(0) => \^y\(24)
    );
\Mux_Loop[9].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_16\
     port map (
      Instr(1) => Instr(9),
      Instr(0) => Instr(25),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(22),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(6),
      Y(1) => \^y\(9),
      Y(0) => \^y\(25)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mux_bus_335 is
  port (
    Y : out STD_LOGIC_VECTOR ( 0 to 31 );
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    A1 : in STD_LOGIC_VECTOR ( 0 to 31 );
    ex_load_btr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mux_bus_335 : entity is "mux_bus";
end mb_design_microblaze_0_1_mux_bus_335;

architecture STRUCTURE of mb_design_microblaze_0_1_mux_bus_335 is
begin
\Mux_Loop[0].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_431\
     port map (
      A1(1) => A1(0),
      A1(0) => A1(16),
      Q(1) => Q(31),
      Q(0) => Q(15),
      Y(1) => Y(0),
      Y(0) => Y(16),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[10].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_432\
     port map (
      A1(1) => A1(10),
      A1(0) => A1(26),
      Q(1) => Q(21),
      Q(0) => Q(5),
      Y(1) => Y(10),
      Y(0) => Y(26),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[11].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_433\
     port map (
      A1(1) => A1(11),
      A1(0) => A1(27),
      Q(1) => Q(20),
      Q(0) => Q(4),
      Y(1) => Y(11),
      Y(0) => Y(27),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[12].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_434\
     port map (
      A1(1) => A1(12),
      A1(0) => A1(28),
      Q(1) => Q(19),
      Q(0) => Q(3),
      Y(1) => Y(12),
      Y(0) => Y(28),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[13].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_435\
     port map (
      A1(1) => A1(13),
      A1(0) => A1(29),
      Q(1) => Q(18),
      Q(0) => Q(2),
      Y(1) => Y(13),
      Y(0) => Y(29),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[14].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_436\
     port map (
      A1(1) => A1(14),
      A1(0) => A1(30),
      Q(1) => Q(17),
      Q(0) => Q(1),
      Y(1) => Y(14),
      Y(0) => Y(30),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[15].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_437\
     port map (
      A1(1) => A1(15),
      A1(0) => A1(31),
      Q(1) => Q(16),
      Q(0) => Q(0),
      Y(1) => Y(15),
      Y(0) => Y(31),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[1].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_438\
     port map (
      A1(1) => A1(1),
      A1(0) => A1(17),
      Q(1) => Q(30),
      Q(0) => Q(14),
      Y(1) => Y(1),
      Y(0) => Y(17),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[2].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_439\
     port map (
      A1(1) => A1(2),
      A1(0) => A1(18),
      Q(1) => Q(29),
      Q(0) => Q(13),
      Y(1) => Y(2),
      Y(0) => Y(18),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[3].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_440\
     port map (
      A1(1) => A1(3),
      A1(0) => A1(19),
      Q(1) => Q(28),
      Q(0) => Q(12),
      Y(1) => Y(3),
      Y(0) => Y(19),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[4].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_441\
     port map (
      A1(1) => A1(4),
      A1(0) => A1(20),
      Q(1) => Q(27),
      Q(0) => Q(11),
      Y(1) => Y(4),
      Y(0) => Y(20),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[5].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_442\
     port map (
      A1(1) => A1(5),
      A1(0) => A1(21),
      Q(1) => Q(26),
      Q(0) => Q(10),
      Y(1) => Y(5),
      Y(0) => Y(21),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[6].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_443\
     port map (
      A1(1) => A1(6),
      A1(0) => A1(22),
      Q(1) => Q(25),
      Q(0) => Q(9),
      Y(1) => Y(6),
      Y(0) => Y(22),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[7].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_444\
     port map (
      A1(1) => A1(7),
      A1(0) => A1(23),
      Q(1) => Q(24),
      Q(0) => Q(8),
      Y(1) => Y(7),
      Y(0) => Y(23),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[8].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_445\
     port map (
      A1(1) => A1(8),
      A1(0) => A1(24),
      Q(1) => Q(23),
      Q(0) => Q(7),
      Y(1) => Y(8),
      Y(0) => Y(24),
      ex_load_btr => ex_load_btr
    );
\Mux_Loop[9].I_MUX_LUT6\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized3_446\
     port map (
      A1(1) => A1(9),
      A1(0) => A1(25),
      Q(1) => Q(22),
      Q(0) => Q(6),
      Y(1) => Y(9),
      Y(0) => Y(25),
      ex_load_btr => ex_load_btr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_ALU is
  port (
    D : out STD_LOGIC_VECTOR ( 13 downto 0 );
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 13 downto 0 );
    LO : out STD_LOGIC;
    A1 : out STD_LOGIC_VECTOR ( 0 to 31 );
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_alu_carryin : in STD_LOGIC;
    S : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \MEM_DataBus_Addr_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    I2 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[1]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 13 downto 0 );
    WB_Fwd : in STD_LOGIC_VECTOR ( 13 downto 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[1]_0\ : in STD_LOGIC_VECTOR ( 13 downto 0 );
    \EX_Branch_CMP_Op1_reg[2]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[3]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[4]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[5]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[6]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[7]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[8]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[9]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[10]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[11]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[12]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[13]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[14]\ : in STD_LOGIC;
    GPR_Op1 : in STD_LOGIC_VECTOR ( 13 downto 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_ALU : entity is "ALU";
end mb_design_microblaze_0_1_ALU;

architecture STRUCTURE of mb_design_microblaze_0_1_ALU is
  signal alu_carry_1 : STD_LOGIC;
  signal alu_carry_10 : STD_LOGIC;
  signal alu_carry_11 : STD_LOGIC;
  signal alu_carry_12 : STD_LOGIC;
  signal alu_carry_13 : STD_LOGIC;
  signal alu_carry_14 : STD_LOGIC;
  signal alu_carry_15 : STD_LOGIC;
  signal alu_carry_16 : STD_LOGIC;
  signal alu_carry_17 : STD_LOGIC;
  signal alu_carry_18 : STD_LOGIC;
  signal alu_carry_19 : STD_LOGIC;
  signal alu_carry_2 : STD_LOGIC;
  signal alu_carry_20 : STD_LOGIC;
  signal alu_carry_21 : STD_LOGIC;
  signal alu_carry_22 : STD_LOGIC;
  signal alu_carry_23 : STD_LOGIC;
  signal alu_carry_24 : STD_LOGIC;
  signal alu_carry_25 : STD_LOGIC;
  signal alu_carry_26 : STD_LOGIC;
  signal alu_carry_27 : STD_LOGIC;
  signal alu_carry_28 : STD_LOGIC;
  signal alu_carry_29 : STD_LOGIC;
  signal alu_carry_3 : STD_LOGIC;
  signal alu_carry_30 : STD_LOGIC;
  signal alu_carry_31 : STD_LOGIC;
  signal alu_carry_4 : STD_LOGIC;
  signal alu_carry_5 : STD_LOGIC;
  signal alu_carry_6 : STD_LOGIC;
  signal alu_carry_7 : STD_LOGIC;
  signal alu_carry_8 : STD_LOGIC;
  signal alu_carry_9 : STD_LOGIC;
  signal alu_carry_in : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
begin
\Use_Carry_Decoding.CarryIn_MUXCY\: entity work.mb_design_microblaze_0_1_MB_MUXCY_659
     port map (
      CI => alu_carry_in,
      DI_0 => DI_0,
      ex_alu_carryin => ex_alu_carryin,
      ex_use_carry => ex_use_carry,
      lopt => lopt
    );
\Using_FPGA.ALL_Bits[0].ALU_Bit_I1\: entity work.\mb_design_microblaze_0_1_ALU_Bit__parameterized2\
     port map (
      A1(0) => A1(0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op2_reg[0]\ => LO,
      I0 => I0,
      I2 => I2,
      LO => alu_carry_31,
      \MEM_DataBus_Addr_reg[0]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      Q(0) => Q(31),
      S => S,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(31),
      ex_unsigned_op => ex_unsigned_op,
      lopt => lopt_92,
      lopt_1 => lopt_93,
      lopt_2 => lopt_94,
      lopt_3 => lopt_95,
      lopt_4 => lopt_97
    );
\Using_FPGA.ALL_Bits[10].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit
     port map (
      A1(0) => A1(10),
      D(0) => D(4),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[10]\ => \EX_Branch_CMP_Op1_reg[10]\,
      \EX_Branch_CMP_Op1_reg[10]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(4),
      EX_CarryOut => alu_carry_22,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(4),
      GPR_Op3(0) => GPR_Op3(4),
      LO => alu_carry_21,
      \MEM_DataBus_Addr_reg[10]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[10]_0\(0) => \Using_FPGA.Native\(21),
      Q(0) => Q(21),
      WB_Fwd(0) => WB_Fwd(4),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(4),
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_10 => lopt_75,
      lopt_11 => lopt_76,
      lopt_2 => lopt_67,
      lopt_3 => lopt_68,
      lopt_4 => lopt_69,
      lopt_5 => lopt_70,
      lopt_6 => lopt_71,
      lopt_7 => lopt_72,
      lopt_8 => lopt_73,
      lopt_9 => lopt_74,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[11].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_660
     port map (
      A1(0) => A1(11),
      D(0) => D(3),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[11]\ => \EX_Branch_CMP_Op1_reg[11]\,
      \EX_Branch_CMP_Op1_reg[11]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(3),
      EX_CarryOut => alu_carry_21,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(3),
      GPR_Op3(0) => GPR_Op3(3),
      LO => alu_carry_20,
      \MEM_DataBus_Addr_reg[11]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[11]_0\(0) => \Using_FPGA.Native\(20),
      Q(0) => Q(20),
      WB_Fwd(0) => WB_Fwd(3),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(3),
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_61,
      lopt_3 => lopt_64,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[12].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_661
     port map (
      A1(0) => A1(12),
      D(0) => D(2),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[12]\ => \EX_Branch_CMP_Op1_reg[12]\,
      \EX_Branch_CMP_Op1_reg[12]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(2),
      EX_CarryOut => alu_carry_20,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(2),
      GPR_Op3(0) => GPR_Op3(2),
      LO => alu_carry_19,
      \MEM_DataBus_Addr_reg[12]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[12]_0\(0) => \Using_FPGA.Native\(19),
      Q(0) => Q(19),
      WB_Fwd(0) => WB_Fwd(2),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(2),
      lopt => lopt_56,
      lopt_1 => lopt_57,
      lopt_2 => lopt_58,
      lopt_3 => lopt_63,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[13].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_662
     port map (
      A1(0) => A1(13),
      D(0) => D(1),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[13]\ => \EX_Branch_CMP_Op1_reg[13]\,
      \EX_Branch_CMP_Op1_reg[13]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(1),
      EX_CarryOut => alu_carry_19,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(1),
      GPR_Op3(0) => GPR_Op3(1),
      LO => alu_carry_18,
      \MEM_DataBus_Addr_reg[13]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[13]_0\(0) => \Using_FPGA.Native\(18),
      Q(0) => Q(18),
      WB_Fwd(0) => WB_Fwd(1),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(1),
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_2 => lopt_55,
      lopt_3 => lopt_62,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[14].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_663
     port map (
      A1(0) => A1(14),
      D(0) => D(0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[14]\ => \EX_Branch_CMP_Op1_reg[14]\,
      \EX_Branch_CMP_Op1_reg[14]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(0),
      EX_CarryOut => alu_carry_18,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => alu_carry_17,
      \MEM_DataBus_Addr_reg[14]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[14]_0\(0) => \Using_FPGA.Native\(17),
      Q(0) => Q(17),
      WB_Fwd(0) => WB_Fwd(0),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(0),
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_10 => lopt_63,
      lopt_11 => lopt_64,
      lopt_2 => lopt_55,
      lopt_3 => lopt_56,
      lopt_4 => lopt_57,
      lopt_5 => lopt_58,
      lopt_6 => lopt_59,
      lopt_7 => lopt_60,
      lopt_8 => lopt_61,
      lopt_9 => lopt_62,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[15].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_664
     port map (
      A1(0) => A1(15),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_17,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_16,
      \MEM_DataBus_Addr_reg[15]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[15]_0\(0) => \Using_FPGA.Native\(16),
      Q(0) => Q(16),
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_49,
      lopt_3 => lopt_52
    );
\Using_FPGA.ALL_Bits[16].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_665
     port map (
      A1(0) => A1(16),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_16,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_15,
      \MEM_DataBus_Addr_reg[16]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[16]_0\(0) => \Using_FPGA.Native\(15),
      Q(0) => Q(15),
      lopt => lopt_44,
      lopt_1 => lopt_45,
      lopt_2 => lopt_46,
      lopt_3 => lopt_51
    );
\Using_FPGA.ALL_Bits[17].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_666
     port map (
      A1(0) => A1(17),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_15,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_14,
      \MEM_DataBus_Addr_reg[17]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[17]_0\(0) => \Using_FPGA.Native\(14),
      Q(0) => Q(14),
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_43,
      lopt_3 => lopt_50
    );
\Using_FPGA.ALL_Bits[18].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_667
     port map (
      A1(0) => A1(18),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_14,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_13,
      \MEM_DataBus_Addr_reg[18]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[18]_0\(0) => \Using_FPGA.Native\(13),
      Q(0) => Q(13),
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_10 => lopt_51,
      lopt_11 => lopt_52,
      lopt_2 => lopt_43,
      lopt_3 => lopt_44,
      lopt_4 => lopt_45,
      lopt_5 => lopt_46,
      lopt_6 => lopt_47,
      lopt_7 => lopt_48,
      lopt_8 => lopt_49,
      lopt_9 => lopt_50
    );
\Using_FPGA.ALL_Bits[19].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_668
     port map (
      A1(0) => A1(19),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_13,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_12,
      \MEM_DataBus_Addr_reg[19]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[19]_0\(0) => \Using_FPGA.Native\(12),
      Q(0) => Q(12),
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_37,
      lopt_3 => lopt_40
    );
\Using_FPGA.ALL_Bits[1].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_669
     port map (
      A1(0) => A1(1),
      D(0) => D(13),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[1]\ => \EX_Branch_CMP_Op1_reg[1]\,
      \EX_Branch_CMP_Op1_reg[1]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(13),
      EX_CarryOut => alu_carry_31,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(13),
      GPR_Op3(0) => GPR_Op3(13),
      LO => alu_carry_30,
      \MEM_DataBus_Addr_reg[1]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[1]_0\(0) => \Using_FPGA.Native\(30),
      Q(0) => Q(30),
      WB_Fwd(0) => WB_Fwd(13),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(13),
      lopt => lopt_89,
      lopt_1 => lopt_90,
      lopt_2 => lopt_91,
      lopt_3 => lopt_96,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[20].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_670
     port map (
      A1(0) => A1(20),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_12,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_11,
      \MEM_DataBus_Addr_reg[20]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[20]_0\(0) => \Using_FPGA.Native\(11),
      Q(0) => Q(11),
      lopt => lopt_32,
      lopt_1 => lopt_33,
      lopt_2 => lopt_34,
      lopt_3 => lopt_39
    );
\Using_FPGA.ALL_Bits[21].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_671
     port map (
      A1(0) => A1(21),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_11,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_10,
      \MEM_DataBus_Addr_reg[21]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[21]_0\(0) => \Using_FPGA.Native\(10),
      Q(0) => Q(10),
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31,
      lopt_3 => lopt_38
    );
\Using_FPGA.ALL_Bits[22].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_672
     port map (
      A1(0) => A1(22),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_10,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_9,
      \MEM_DataBus_Addr_reg[22]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[22]_0\(0) => \Using_FPGA.Native\(9),
      Q(0) => Q(9),
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_10 => lopt_39,
      lopt_11 => lopt_40,
      lopt_2 => lopt_31,
      lopt_3 => lopt_32,
      lopt_4 => lopt_33,
      lopt_5 => lopt_34,
      lopt_6 => lopt_35,
      lopt_7 => lopt_36,
      lopt_8 => lopt_37,
      lopt_9 => lopt_38
    );
\Using_FPGA.ALL_Bits[23].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_673
     port map (
      A1(0) => A1(23),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_9,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_8,
      \MEM_DataBus_Addr_reg[23]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[23]_0\(0) => \Using_FPGA.Native\(8),
      Q(0) => Q(8),
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_2 => lopt_25,
      lopt_3 => lopt_28
    );
\Using_FPGA.ALL_Bits[24].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_674
     port map (
      A1(0) => A1(24),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_8,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_7,
      \MEM_DataBus_Addr_reg[24]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[24]_0\(0) => \Using_FPGA.Native\(7),
      Q(0) => Q(7),
      lopt => lopt_20,
      lopt_1 => lopt_21,
      lopt_2 => lopt_22,
      lopt_3 => lopt_27
    );
\Using_FPGA.ALL_Bits[25].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_675
     port map (
      A1(0) => A1(25),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_7,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_6,
      \MEM_DataBus_Addr_reg[25]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[25]_0\(0) => \Using_FPGA.Native\(6),
      Q(0) => Q(6),
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_2 => lopt_19,
      lopt_3 => lopt_26
    );
\Using_FPGA.ALL_Bits[26].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_676
     port map (
      A1(0) => A1(26),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_6,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_5,
      \MEM_DataBus_Addr_reg[26]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[26]_0\(0) => \Using_FPGA.Native\(5),
      Q(0) => Q(5),
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_10 => lopt_27,
      lopt_11 => lopt_28,
      lopt_2 => lopt_19,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => lopt_22,
      lopt_6 => lopt_23,
      lopt_7 => lopt_24,
      lopt_8 => lopt_25,
      lopt_9 => lopt_26
    );
\Using_FPGA.ALL_Bits[27].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_677
     port map (
      A1(0) => A1(27),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_5,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_4,
      \MEM_DataBus_Addr_reg[27]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[27]_0\(0) => \Using_FPGA.Native\(4),
      Q(0) => Q(4),
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_13,
      lopt_3 => lopt_16
    );
\Using_FPGA.ALL_Bits[28].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_678
     port map (
      A1(0) => A1(28),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_4,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_3,
      \MEM_DataBus_Addr_reg[28]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[28]_0\(0) => \Using_FPGA.Native\(3),
      Q(0) => Q(3),
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => lopt_10,
      lopt_3 => lopt_15
    );
\Using_FPGA.ALL_Bits[29].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_679
     port map (
      A1(0) => A1(29),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_3,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_2,
      \MEM_DataBus_Addr_reg[29]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[29]_0\(0) => \Using_FPGA.Native\(2),
      Q(0) => Q(2),
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_2 => lopt_7,
      lopt_3 => lopt_14
    );
\Using_FPGA.ALL_Bits[2].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_680
     port map (
      A1(0) => A1(2),
      D(0) => D(12),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[2]\ => \EX_Branch_CMP_Op1_reg[2]\,
      \EX_Branch_CMP_Op1_reg[2]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(12),
      EX_CarryOut => alu_carry_30,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(12),
      GPR_Op3(0) => GPR_Op3(12),
      LO => alu_carry_29,
      \MEM_DataBus_Addr_reg[2]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[2]_0\(0) => \Using_FPGA.Native\(29),
      Q(0) => Q(29),
      WB_Fwd(0) => WB_Fwd(12),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(12),
      lopt => lopt_89,
      lopt_1 => lopt_90,
      lopt_10 => lopt_97,
      lopt_2 => lopt_91,
      lopt_3 => lopt_92,
      lopt_4 => ex_unsigned_op,
      lopt_5 => S,
      lopt_6 => lopt_93,
      lopt_7 => lopt_94,
      lopt_8 => lopt_95,
      lopt_9 => lopt_96,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[30].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_681
     port map (
      A1(0) => A1(30),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_2,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_1,
      Q(0) => Q(1),
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_10 => lopt_15,
      lopt_11 => lopt_16,
      lopt_2 => lopt_7,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => lopt_10,
      lopt_6 => lopt_11,
      lopt_7 => lopt_12,
      lopt_8 => lopt_13,
      lopt_9 => lopt_14,
      \mem_EAR_reg[30]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \mem_EAR_reg[30]_0\(0) => \Using_FPGA.Native\(1)
    );
\Using_FPGA.ALL_Bits[31].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_682
     port map (
      A1(0) => A1(31),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryIn => alu_carry_in,
      EX_CarryOut => alu_carry_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      lopt => lopt_1,
      lopt_1 => lopt_2,
      lopt_2 => lopt_3,
      lopt_3 => lopt_4,
      \mem_EAR_reg[31]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \mem_EAR_reg[31]_0\(0) => \Using_FPGA.Native\(0)
    );
\Using_FPGA.ALL_Bits[3].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_683
     port map (
      A1(0) => A1(3),
      D(0) => D(11),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[3]\ => \EX_Branch_CMP_Op1_reg[3]\,
      \EX_Branch_CMP_Op1_reg[3]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(11),
      EX_CarryOut => alu_carry_29,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(11),
      GPR_Op3(0) => GPR_Op3(11),
      LO => alu_carry_28,
      \MEM_DataBus_Addr_reg[3]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[3]_0\(0) => \Using_FPGA.Native\(28),
      Q(0) => Q(28),
      WB_Fwd(0) => WB_Fwd(11),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(11),
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_85,
      lopt_3 => lopt_88,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[4].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_684
     port map (
      A1(0) => A1(4),
      D(0) => D(10),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[4]\ => \EX_Branch_CMP_Op1_reg[4]\,
      \EX_Branch_CMP_Op1_reg[4]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(10),
      EX_CarryOut => alu_carry_28,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(10),
      GPR_Op3(0) => GPR_Op3(10),
      LO => alu_carry_27,
      \MEM_DataBus_Addr_reg[4]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[4]_0\(0) => \Using_FPGA.Native\(27),
      Q(0) => Q(27),
      WB_Fwd(0) => WB_Fwd(10),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(10),
      lopt => lopt_80,
      lopt_1 => lopt_81,
      lopt_2 => lopt_82,
      lopt_3 => lopt_87,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[5].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_685
     port map (
      A1(0) => A1(5),
      D(0) => D(9),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[5]\ => \EX_Branch_CMP_Op1_reg[5]\,
      \EX_Branch_CMP_Op1_reg[5]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(9),
      EX_CarryOut => alu_carry_27,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(9),
      GPR_Op3(0) => GPR_Op3(9),
      LO => alu_carry_26,
      \MEM_DataBus_Addr_reg[5]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[5]_0\(0) => \Using_FPGA.Native\(26),
      Q(0) => Q(26),
      WB_Fwd(0) => WB_Fwd(9),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(9),
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_2 => lopt_79,
      lopt_3 => lopt_86,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[6].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_686
     port map (
      A1(0) => A1(6),
      D(0) => D(8),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[6]\ => \EX_Branch_CMP_Op1_reg[6]\,
      \EX_Branch_CMP_Op1_reg[6]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(8),
      EX_CarryOut => alu_carry_26,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(8),
      GPR_Op3(0) => GPR_Op3(8),
      LO => alu_carry_25,
      \MEM_DataBus_Addr_reg[6]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[6]_0\(0) => \Using_FPGA.Native\(25),
      Q(0) => Q(25),
      WB_Fwd(0) => WB_Fwd(8),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(8),
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_10 => lopt_87,
      lopt_11 => lopt_88,
      lopt_2 => lopt_79,
      lopt_3 => lopt_80,
      lopt_4 => lopt_81,
      lopt_5 => lopt_82,
      lopt_6 => lopt_83,
      lopt_7 => lopt_84,
      lopt_8 => lopt_85,
      lopt_9 => lopt_86,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[7].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_687
     port map (
      A1(0) => A1(7),
      D(0) => D(7),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[7]\ => \EX_Branch_CMP_Op1_reg[7]\,
      \EX_Branch_CMP_Op1_reg[7]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(7),
      EX_CarryOut => alu_carry_25,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(7),
      GPR_Op3(0) => GPR_Op3(7),
      LO => alu_carry_24,
      \MEM_DataBus_Addr_reg[7]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[7]_0\(0) => \Using_FPGA.Native\(24),
      Q(0) => Q(24),
      WB_Fwd(0) => WB_Fwd(7),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(7),
      lopt => lopt_71,
      lopt_1 => lopt_72,
      lopt_2 => lopt_73,
      lopt_3 => lopt_76,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[8].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_688
     port map (
      A1(0) => A1(8),
      D(0) => D(6),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[8]\ => \EX_Branch_CMP_Op1_reg[8]\,
      \EX_Branch_CMP_Op1_reg[8]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(6),
      EX_CarryOut => alu_carry_24,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(6),
      GPR_Op3(0) => GPR_Op3(6),
      LO => alu_carry_23,
      \MEM_DataBus_Addr_reg[8]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[8]_0\(0) => \Using_FPGA.Native\(23),
      Q(0) => Q(23),
      WB_Fwd(0) => WB_Fwd(6),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(6),
      lopt => lopt_68,
      lopt_1 => lopt_69,
      lopt_2 => lopt_70,
      lopt_3 => lopt_75,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
\Using_FPGA.ALL_Bits[9].ALU_Bit_I1\: entity work.mb_design_microblaze_0_1_ALU_Bit_689
     port map (
      A1(0) => A1(9),
      D(0) => D(5),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[9]\ => \EX_Branch_CMP_Op1_reg[9]\,
      \EX_Branch_CMP_Op1_reg[9]_0\(0) => \EX_Branch_CMP_Op1_reg[1]_0\(5),
      EX_CarryIn => alu_carry_22,
      EX_CarryOut => alu_carry_23,
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(0) => GPR_Op1(5),
      GPR_Op3(0) => GPR_Op3(5),
      \MEM_DataBus_Addr_reg[9]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      \MEM_DataBus_Addr_reg[9]_0\(0) => \Using_FPGA.Native\(22),
      Q(0) => Q(22),
      WB_Fwd(0) => WB_Fwd(5),
      ex_sel_alu_i_reg(0) => ex_sel_alu_i_reg(5),
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_2 => lopt_67,
      lopt_3 => lopt_74,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Debug is
  port (
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 39 downto 0 );
    \Serial_Dbg_Intf.force_stop_cmd_i_reg_0\ : out STD_LOGIC;
    read_register_MSR_1_reg_0 : out STD_LOGIC;
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ : out STD_LOGIC;
    Sleep_Out : out STD_LOGIC;
    dbg_halt_reset_mode_reg_0 : out STD_LOGIC;
    \Performance_Debug_Control.dbg_state_nohalt_reg_0\ : out STD_LOGIC;
    \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    IReady_0 : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg_0\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0\ : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : out STD_LOGIC;
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1\ : out STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    \Dbg_Reg_En[1]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Performance_Debug_Control.wb_brki_hit_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.m0_dbg_hit_reg[1]_0\ : in STD_LOGIC;
    single_Step_N_reg_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Sleep : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg_0\ : in STD_LOGIC;
    wb_Halted : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_read_imm_reg_1 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 4 downto 0 );
    wb_read_imm_reg : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    executing_reg_0 : in STD_LOGIC;
    IReady : in STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    mem_databus_access : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    wb_pc_valid : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC;
    sleep_reset_mode_reg_0 : in STD_LOGIC;
    \Performance_Debug_Control.dbg_freeze_nohalt_reg_1\ : in STD_LOGIC;
    of_pause : in STD_LOGIC;
    Sleep_Decode : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    \data_rd_reg_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dbg_stop_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Debug : entity is "Debug";
end mb_design_microblaze_0_1_Debug;

architecture STRUCTURE of mb_design_microblaze_0_1_Debug is
  signal A1 : STD_LOGIC;
  signal A2 : STD_LOGIC;
  signal A3 : STD_LOGIC;
  signal Command_Reg_En : STD_LOGIC;
  signal Control_Reg_En : STD_LOGIC;
  signal \^dbg_reg_en[1]_0\ : STD_LOGIC;
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_10_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_11_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_12_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_13_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_14_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_15_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_16_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_22_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_23_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_24_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_25_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_26_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_27_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_28_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_29_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_2_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_30_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_31_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_32_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_33_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_34_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_35_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_36_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_3_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_5_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_6_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal Full_32_bit : STD_LOGIC;
  signal Full_32_bit_1 : STD_LOGIC;
  signal Instr_Insert_Reg_En : STD_LOGIC;
  signal Instr_Insert_Reg_En_1 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal New_Dbg_Instr_TCK : STD_LOGIC;
  signal New_Dbg_Instr_TCK0 : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_freeze_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_freeze_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_hit_reg_n_0_[0]\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_hit_reg_n_0_[1]\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_state_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_state_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_i_reg_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.force_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit[1]_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[1]\ : STD_LOGIC;
  signal \Performance_Debug_Control.normal_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.step_continue_hold_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.step_continue_hold_reg_n_0\ : STD_LOGIC;
  signal Q_0 : STD_LOGIC;
  signal \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.continue_from_brk_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \^serial_dbg_intf.force_stop_cmd_i_reg_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_dbg_hit_n_1\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_11\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_12\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_stop_CPU_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.unchanged_i_1_n_0\ : STD_LOGIC;
  signal \^sleep_out\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_1\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_2\ : STD_LOGIC;
  signal capture_1 : STD_LOGIC;
  signal command_reg_clear : STD_LOGIC;
  signal command_reg_clear_i_1_n_0 : STD_LOGIC;
  signal command_reg_rst : STD_LOGIC;
  signal config_with_scan_reset : STD_LOGIC;
  signal continue_from_brk0 : STD_LOGIC;
  signal continue_from_brk_rst : STD_LOGIC;
  signal \data_rd_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[30]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[31]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[32]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal data_read_reg : STD_LOGIC_VECTOR ( 0 to 32 );
  signal dbg_brki_hit : STD_LOGIC;
  signal dbg_brki_hit_synced : STD_LOGIC;
  signal dbg_halt_reset_mode_i_1_n_0 : STD_LOGIC;
  signal dbg_halt_reset_mode_i_2_n_0 : STD_LOGIC;
  signal \^dbg_halt_reset_mode_reg_0\ : STD_LOGIC;
  signal dbg_hit_i_0 : STD_LOGIC;
  signal dbg_hit_i_1 : STD_LOGIC;
  signal dbg_stop_1 : STD_LOGIC;
  signal delay_slot_instr : STD_LOGIC;
  signal ex_brki_hit : STD_LOGIC;
  signal ex_dbg_hit : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_pc_brk : STD_LOGIC;
  signal ex_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of ex_piperun_for_ce : signal is std.standard.true;
  signal ex_step_continue_hold : STD_LOGIC;
  signal exception_i_1_n_0 : STD_LOGIC;
  signal exception_i_2_n_0 : STD_LOGIC;
  signal executing_i_1_n_0 : STD_LOGIC;
  signal force_stop_cmd_1 : STD_LOGIC;
  signal force_stop_cmd_i0 : STD_LOGIC;
  signal force_stop_cmd_rst : STD_LOGIC;
  signal force_stop_i : STD_LOGIC;
  signal force_stop_i1 : STD_LOGIC;
  signal force_stop_overrun : STD_LOGIC;
  signal if_debug_ready_i0 : STD_LOGIC;
  signal instr_rd_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal instr_read_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal m0_brki_hit : STD_LOGIC;
  signal m3_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m3_piperun_for_ce : signal is std.standard.true;
  signal mb_halted_1 : STD_LOGIC;
  signal no_sleeping : STD_LOGIC;
  signal normal_stop_cmd_1 : STD_LOGIC;
  signal normal_stop_cmd_i0 : STD_LOGIC;
  signal normal_stop_cmd_rst : STD_LOGIC;
  signal normal_stop_i : STD_LOGIC;
  signal of_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of of_piperun_for_ce : signal is std.standard.true;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_0_in_1 : STD_LOGIC;
  signal p_1_out : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__0\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__1\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__2\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__3\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__4\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \p_1_out__5\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal pause_synced : STD_LOGIC;
  signal read_register_MSR : STD_LOGIC;
  signal read_register_MSR0 : STD_LOGIC;
  signal \^read_register_msr_1_reg_0\ : STD_LOGIC;
  signal read_register_PC : STD_LOGIC;
  signal read_register_PC0 : STD_LOGIC;
  signal read_register_PC_1_reg_n_0 : STD_LOGIC;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal running_clock : STD_LOGIC;
  signal running_clock_rst : STD_LOGIC;
  signal running_clock_synced : STD_LOGIC;
  signal sample_synced : STD_LOGIC_VECTOR ( 0 to 9 );
  signal saved_reset_mode_dbg_halt : STD_LOGIC;
  signal saved_reset_mode_dbg_halt_i_1_n_0 : STD_LOGIC;
  signal saved_reset_mode_sleep : STD_LOGIC;
  signal saved_reset_mode_sleep_i_1_n_0 : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \sel0__0\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal single_Step_N : STD_LOGIC;
  signal single_Step_N_i_1_n_0 : STD_LOGIC;
  signal single_step_count : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \single_step_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \single_step_count[1]_i_1_n_0\ : STD_LOGIC;
  signal sleep_reset_mode_i_1_n_0 : STD_LOGIC;
  signal sleep_synced : STD_LOGIC;
  signal start_dbg_exec_reg_n_0 : STD_LOGIC;
  signal start_single_cmd : STD_LOGIC;
  signal start_single_cmd0 : STD_LOGIC;
  signal start_single_step_i_1_n_0 : STD_LOGIC;
  signal start_single_step_reg_n_0 : STD_LOGIC;
  signal start_single_step_rst : STD_LOGIC;
  signal sync : STD_LOGIC;
  signal sync_trig_ack_in_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_2 : STD_LOGIC;
  signal tdo_config_word1_0 : STD_LOGIC;
  signal tdo_config_word1_10 : STD_LOGIC;
  signal tdo_config_word1_11 : STD_LOGIC;
  signal tdo_config_word1_13 : STD_LOGIC;
  signal tdo_config_word1_14 : STD_LOGIC;
  signal tdo_config_word1_5 : STD_LOGIC;
  signal tdo_config_word1_6 : STD_LOGIC;
  signal tdo_config_word1_7 : STD_LOGIC;
  signal tdo_config_word1_9 : STD_LOGIC;
  signal trig_ack_in_0_synced : STD_LOGIC;
  signal trig_ack_in_0_synced_1 : STD_LOGIC;
  signal trig_out_0_synced : STD_LOGIC;
  signal trig_out_0_synced_1 : STD_LOGIC;
  signal unchanged : STD_LOGIC;
  signal wb_brki_hit : STD_LOGIC;
  signal wb_dbg_hit : STD_LOGIC_VECTOR ( 0 to 1 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_12 : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_16 : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_6 : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_9 : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of I_AS_INST_0_i_1 : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[1]_INST_0\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[5]_INST_0\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \PC_Buffer_reg[3][31]_srl4_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.force_stop_overrun_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.step_continue_hold_i_1\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.dbg_wakeup_i_i_3\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[0]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[1]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[2]_i_1\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[3]_i_1\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[6]_i_1\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[7]_i_1\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[7]_i_2\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of dbg_halt_reset_mode_i_2 : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of if_missed_fetch_i_2 : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of saved_reset_mode_dbg_halt_i_1 : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of saved_reset_mode_sleep_i_1 : label is "soft_lutpair119";
begin
  \Dbg_Reg_En[1]_0\ <= \^dbg_reg_en[1]_0\;
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
  Dbg_Trig_Ack_Out(1 downto 0) <= \^dbg_trig_ack_out\(1 downto 0);
  Dbg_Trig_In(1 downto 0) <= \^dbg_trig_in\(1 downto 0);
  LOCKSTEP_Master_Out(39 downto 0) <= \^lockstep_master_out\(39 downto 0);
  \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ <= \^performance_debug_control.dbg_freeze_nohalt_reg_0\;
  \Performance_Debug_Control.dbg_state_nohalt_reg_0\ <= \^performance_debug_control.dbg_state_nohalt_reg_0\;
  \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ <= \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\;
  \Serial_Dbg_Intf.force_stop_cmd_i_reg_0\ <= \^serial_dbg_intf.force_stop_cmd_i_reg_0\;
  Sleep_Out <= \^sleep_out\;
  dbg_halt_reset_mode_reg_0 <= \^dbg_halt_reset_mode_reg_0\;
  ex_piperun_for_ce <= \Performance_Debug_Control.m0_dbg_hit_reg[1]_0\;
  m3_piperun_for_ce <= \Performance_Debug_Control.wb_brki_hit_reg_0\;
  of_piperun_for_ce <= single_Step_N_reg_0;
  read_register_MSR_1_reg_0 <= \^read_register_msr_1_reg_0\;
  reset_bool_for_rst <= sync_reset;
Dbg_TDO_INST_0_i_10: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_23_n_0,
      I1 => Dbg_TDO_INST_0_i_24_n_0,
      O => Dbg_TDO_INST_0_i_10_n_0,
      S => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_11: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_25_n_0,
      I1 => Dbg_TDO_INST_0_i_26_n_0,
      O => Dbg_TDO_INST_0_i_11_n_0,
      S => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_12: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => A2,
      I2 => A1,
      O => Dbg_TDO_INST_0_i_12_n_0
    );
Dbg_TDO_INST_0_i_13: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFAAA955560000"
    )
        port map (
      I0 => A3,
      I1 => A1,
      I2 => A2,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => Dbg_TDO_INST_0_i_27_n_0,
      I5 => Dbg_TDO_INST_0_i_28_n_0,
      O => Dbg_TDO_INST_0_i_13_n_0
    );
Dbg_TDO_INST_0_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BEEE8EE2B22E8222"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_29_n_0,
      I1 => A3,
      I2 => A2,
      I3 => A1,
      I4 => Dbg_TDO_INST_0_i_30_n_0,
      I5 => Dbg_TDO_INST_0_i_31_n_0,
      O => Dbg_TDO_INST_0_i_14_n_0
    );
Dbg_TDO_INST_0_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8000000000000B8"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[1]\,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\,
      I3 => A3,
      I4 => A2,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_15_n_0
    );
Dbg_TDO_INST_0_i_16: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => A3,
      O => Dbg_TDO_INST_0_i_16_n_0
    );
Dbg_TDO_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAFCFCAF0A0C0CA0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_10_n_0,
      I1 => Dbg_TDO_INST_0_i_11_n_0,
      I2 => sel0(0),
      I3 => Dbg_TDO_INST_0_i_12_n_0,
      I4 => A3,
      I5 => Dbg_TDO_INST_0_i_13_n_0,
      O => Dbg_TDO_INST_0_i_2_n_0
    );
Dbg_TDO_INST_0_i_22: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A9"
    )
        port map (
      I0 => A2,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A1,
      O => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_23: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(9),
      I1 => data_read_reg(10),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(11),
      I5 => data_read_reg(12),
      O => Dbg_TDO_INST_0_i_23_n_0
    );
Dbg_TDO_INST_0_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(13),
      I1 => data_read_reg(14),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(15),
      I5 => data_read_reg(16),
      O => Dbg_TDO_INST_0_i_24_n_0
    );
Dbg_TDO_INST_0_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(1),
      I1 => data_read_reg(2),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(3),
      I5 => data_read_reg(4),
      O => Dbg_TDO_INST_0_i_25_n_0
    );
Dbg_TDO_INST_0_i_26: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(5),
      I1 => data_read_reg(6),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(7),
      I5 => data_read_reg(8),
      O => Dbg_TDO_INST_0_i_26_n_0
    );
Dbg_TDO_INST_0_i_27: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_32_n_0,
      I1 => Dbg_TDO_INST_0_i_33_n_0,
      O => Dbg_TDO_INST_0_i_27_n_0,
      S => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_28: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_34_n_0,
      I1 => Dbg_TDO_INST_0_i_35_n_0,
      O => Dbg_TDO_INST_0_i_28_n_0,
      S => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_29: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FFFFE2000000E2"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\,
      I3 => A2,
      I4 => A1,
      I5 => Dbg_TDO_INST_0_i_36_n_0,
      O => Dbg_TDO_INST_0_i_29_n_0
    );
Dbg_TDO_INST_0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555556"
    )
        port map (
      I0 => \sel0__0\(1),
      I1 => sel0(0),
      I2 => A3,
      I3 => A1,
      I4 => A2,
      I5 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => Dbg_TDO_INST_0_i_3_n_0
    );
Dbg_TDO_INST_0_i_30: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\,
      I2 => A1,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I5 => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\,
      O => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_31: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B833B800"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\,
      O => Dbg_TDO_INST_0_i_31_n_0
    );
Dbg_TDO_INST_0_i_32: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(17),
      I1 => data_read_reg(18),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(19),
      I5 => data_read_reg(20),
      O => Dbg_TDO_INST_0_i_32_n_0
    );
Dbg_TDO_INST_0_i_33: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(21),
      I1 => data_read_reg(22),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(23),
      I5 => data_read_reg(24),
      O => Dbg_TDO_INST_0_i_33_n_0
    );
Dbg_TDO_INST_0_i_34: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(25),
      I1 => data_read_reg(26),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(27),
      I5 => data_read_reg(28),
      O => Dbg_TDO_INST_0_i_34_n_0
    );
Dbg_TDO_INST_0_i_35: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACF0ACFFAC00AC0"
    )
        port map (
      I0 => data_read_reg(29),
      I1 => data_read_reg(30),
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => data_read_reg(31),
      I5 => data_read_reg(32),
      O => Dbg_TDO_INST_0_i_35_n_0
    );
Dbg_TDO_INST_0_i_36: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\,
      I2 => A1,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => Dbg_TDO_INST_0_i_36_n_0
    );
Dbg_TDO_INST_0_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ACCA0000"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_14_n_0,
      I1 => Dbg_TDO_INST_0_i_15_n_0,
      I2 => Dbg_TDO_INST_0_i_16_n_0,
      I3 => sel0(0),
      I4 => Status_Reg_En,
      O => Dbg_TDO_INST_0_i_5_n_0
    );
Dbg_TDO_INST_0_i_6: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => instr_read_reg(1),
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => instr_read_reg(0),
      O => Dbg_TDO_INST_0_i_6_n_0
    );
Dbg_TDO_INST_0_i_9: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(5),
      I3 => Dbg_Reg_En(4),
      O => Dbg_Reg_En_1_sn_1
    );
Full_32_bit_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_read_imm_reg_1,
      Q => Full_32_bit_1,
      R => reset_bool_for_rst
    );
Full_32_bit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_read_imm_reg,
      Q => Full_32_bit,
      R => reset_bool_for_rst
    );
I_AS_INST_0_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5455"
    )
        port map (
      I0 => \^lockstep_master_out\(37),
      I1 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      I2 => wb_Halted,
      I3 => IReady,
      O => \Serial_Dbg_Intf.if_debug_ready_i_reg_0\
    );
\LOCKSTEP_Master_Out[1]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      I1 => mem_databus_access,
      O => \^lockstep_master_out\(39)
    );
\LOCKSTEP_Master_Out[5]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I1 => wb_Halted,
      I2 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      O => \^lockstep_master_out\(36)
    );
\PC_Buffer_reg[3][31]_srl4_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000ABAA"
    )
        port map (
      I0 => \^lockstep_master_out\(37),
      I1 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      I2 => wb_Halted,
      I3 => IReady,
      I4 => if_missed_fetch,
      O => IReady_0
    );
\Performance_Debug_Control.dbg_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_brki_hit,
      Q => dbg_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0A0A0A0B0A0A0A08"
    )
        port map (
      I0 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\,
      I1 => \Performance_Debug_Control.dbg_freeze_nohalt_i_2_n_0\,
      I2 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I3 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      I4 => \Performance_Debug_Control.dbg_freeze_nohalt_reg_1\,
      I5 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      O => \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAA8AAAA"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I1 => reset_bool_for_rst,
      I2 => start_single_step_reg_n_0,
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I4 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      O => \Performance_Debug_Control.dbg_freeze_nohalt_i_2_n_0\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_dbg_hit(0),
      Q => \Performance_Debug_Control.dbg_hit_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_hit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_dbg_hit(1),
      Q => \Performance_Debug_Control.dbg_hit_reg_n_0_[1]\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_state_nohalt_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2320"
    )
        port map (
      I0 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\,
      I1 => \Performance_Debug_Control.dbg_state_nohalt_i_2_n_0\,
      I2 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\,
      I3 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      O => \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_state_nohalt_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ABBB"
    )
        port map (
      I0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I1 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      I2 => \^dbg_halt_reset_mode_reg_0\,
      I3 => saved_reset_mode_dbg_halt,
      O => \Performance_Debug_Control.dbg_state_nohalt_i_2_n_0\
    );
\Performance_Debug_Control.dbg_state_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.dbg_stop_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Dbg_Stop,
      Q => dbg_stop_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_2,
      Q => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      R => '0'
    );
\Performance_Debug_Control.dbg_stop_if_delay_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000FE"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I1 => wb_Halted,
      I2 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I3 => reset_bool_for_rst,
      I4 => \^dbg_halt_reset_mode_reg_0\,
      I5 => saved_reset_mode_sleep,
      O => \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\
    );
\Performance_Debug_Control.dbg_stop_if_delay_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\,
      Q => \^lockstep_master_out\(32),
      R => '0'
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FEFEFE02"
    )
        port map (
      I0 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I1 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\,
      I2 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\,
      I3 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\,
      I4 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5_n_0\,
      I5 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^sleep_out\,
      I1 => saved_reset_mode_sleep,
      I2 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFFFEFE"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => \^dbg_halt_reset_mode_reg_0\,
      I2 => wb_Halted,
      I3 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      I4 => \Performance_Debug_Control.dbg_freeze_nohalt_i_2_n_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00F0EEEE"
    )
        port map (
      I0 => \^dbg_halt_reset_mode_reg_0\,
      I1 => wb_Halted,
      I2 => Reset_Mode(0),
      I3 => Reset_Mode(1),
      I4 => reset_bool_for_rst,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => reset_bool_for_rst,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.ex_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => \Performance_Debug_Control.ex_brki_hit_reg_0\,
      Q => ex_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => dbg_hit_i_1,
      Q => ex_dbg_hit(0),
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_hit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => dbg_hit_i_0,
      Q => ex_dbg_hit(1),
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF8FF"
    )
        port map (
      I0 => dbg_clean_stop,
      I1 => normal_stop_i,
      I2 => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      I3 => single_Step_N,
      I4 => force_stop_i,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_1\,
      Q => \^lockstep_master_out\(35),
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_2\,
      Q => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_pc_brk_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\,
      Q => ex_pc_brk,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => \Performance_Debug_Control.step_continue_hold_reg_n_0\,
      Q => ex_step_continue_hold,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.force_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      Q => force_stop_cmd_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.force_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000AABA"
    )
        port map (
      I0 => force_stop_i,
      I1 => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      I2 => force_stop_cmd_1,
      I3 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I4 => wb_Halted,
      I5 => reset_bool_for_rst,
      O => \Performance_Debug_Control.force_stop_i_i_1_n_0\
    );
\Performance_Debug_Control.force_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.force_stop_i_i_1_n_0\,
      Q => force_stop_i,
      R => '0'
    );
\Performance_Debug_Control.force_stop_overrun_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => force_stop_cmd_1,
      I1 => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      O => force_stop_i1
    );
\Performance_Debug_Control.force_stop_overrun_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => force_stop_i1,
      Q => force_stop_overrun,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.m0_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_piperun_for_ce,
      D => ex_brki_hit,
      Q => m0_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.m0_dbg_hit[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8B88"
    )
        port map (
      I0 => ex_dbg_hit(0),
      I1 => ex_pc_brk,
      I2 => ex_step_continue_hold,
      I3 => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      O => \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\
    );
\Performance_Debug_Control.m0_dbg_hit[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8B88"
    )
        port map (
      I0 => ex_dbg_hit(1),
      I1 => ex_pc_brk,
      I2 => ex_step_continue_hold,
      I3 => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[1]\,
      O => \Performance_Debug_Control.m0_dbg_hit[1]_i_1_n_0\
    );
\Performance_Debug_Control.m0_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\,
      Q => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.m0_dbg_hit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit[1]_i_1_n_0\,
      Q => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[1]\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.normal_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      Q => normal_stop_cmd_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.normal_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000AABA"
    )
        port map (
      I0 => normal_stop_i,
      I1 => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      I2 => normal_stop_cmd_1,
      I3 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I4 => wb_Halted,
      I5 => reset_bool_for_rst,
      O => \Performance_Debug_Control.normal_stop_i_i_1_n_0\
    );
\Performance_Debug_Control.normal_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.normal_stop_i_i_1_n_0\,
      Q => normal_stop_i,
      R => '0'
    );
\Performance_Debug_Control.step_continue_hold_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5554"
    )
        port map (
      I0 => of_piperun_for_ce,
      I1 => start_single_step_reg_n_0,
      I2 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I3 => \Performance_Debug_Control.step_continue_hold_reg_n_0\,
      O => \Performance_Debug_Control.step_continue_hold_i_1_n_0\
    );
\Performance_Debug_Control.step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.step_continue_hold_i_1_n_0\,
      Q => \Performance_Debug_Control.step_continue_hold_reg_n_0\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.trig_ack_out_0_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_1,
      Q => \^dbg_trig_ack_out\(1),
      R => '0'
    );
\Performance_Debug_Control.trig_out_0_synced_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_out_0_synced,
      Q => trig_out_0_synced_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.wb_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun_for_ce,
      D => m0_brki_hit,
      Q => wb_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.wb_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      Q => wb_dbg_hit(0),
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.wb_dbg_hit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[1]\,
      Q => wb_dbg_hit(1),
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => Dbg_Reg_En(0),
      I1 => Dbg_Reg_En(2),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(7),
      I4 => Dbg_Reg_En_1_sn_1,
      O => Instr_Insert_Reg_En
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Instr_Insert_Reg_En,
      Q => Instr_Insert_Reg_En_1
    );
\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => New_Dbg_Instr_TCK,
      Q => \p_1_out__5\(1)
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => sel0(0),
      I1 => Dbg_TDO_INST_0_i_16_n_0,
      I2 => instr_read_reg(1),
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => instr_read_reg(0),
      I5 => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\,
      O => New_Dbg_Instr_TCK0
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => Dbg_Reg_En_1_sn_1,
      I1 => Dbg_Reg_En(7),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(2),
      I4 => Dbg_Reg_En(0),
      O => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => New_Dbg_Instr_TCK0,
      Q => New_Dbg_Instr_TCK
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\,
      Q => \^lockstep_master_out\(31)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \^lockstep_master_out\(21)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \^lockstep_master_out\(20)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \^lockstep_master_out\(19)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \^lockstep_master_out\(18)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \^lockstep_master_out\(17)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \^lockstep_master_out\(16)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \^lockstep_master_out\(15)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \^lockstep_master_out\(14)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \^lockstep_master_out\(13)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \^lockstep_master_out\(12)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \^lockstep_master_out\(30)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \^lockstep_master_out\(11)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \^lockstep_master_out\(10)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \^lockstep_master_out\(9)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \^lockstep_master_out\(8)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \^lockstep_master_out\(7)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \^lockstep_master_out\(6)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \^lockstep_master_out\(5)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \^lockstep_master_out\(4)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \^lockstep_master_out\(3)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \^lockstep_master_out\(2)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \^lockstep_master_out\(29)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(1)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \^lockstep_master_out\(0)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \^lockstep_master_out\(28)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \^lockstep_master_out\(27)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \^lockstep_master_out\(26)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \^lockstep_master_out\(25)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \^lockstep_master_out\(24)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \^lockstep_master_out\(23)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \^lockstep_master_out\(22)
    );
\Serial_Dbg_Intf.SRL16E_1\: entity work.mb_design_microblaze_0_1_MB_SRL16E
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q_0 => Q_0
    );
\Serial_Dbg_Intf.SRL16E_2\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized1\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_14 => tdo_config_word1_14
    );
\Serial_Dbg_Intf.SRL16E_3\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized11\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_5 => tdo_config_word1_5
    );
\Serial_Dbg_Intf.SRL16E_4\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized13\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(1) => Dbg_Reg_En(6),
      Dbg_Reg_En(0) => Dbg_Reg_En(7),
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_INST_0_i_2_n_0,
      Dbg_TDO_1 => Dbg_TDO_INST_0_i_3_n_0,
      Dbg_TDO_2(0) => data_read_reg(0),
      Dbg_TDO_3 => Dbg_TDO_0,
      Dbg_TDO_4 => Dbg_TDO_INST_0_i_5_n_0,
      Dbg_TDO_5 => Dbg_TDO_INST_0_i_6_n_0,
      Dbg_TDO_6 => Dbg_TDO_1,
      Dbg_TDO_7 => Dbg_Reg_En_1_sn_1,
      Dbg_TDO_INST_0_i_1_0 => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\,
      Dbg_TDO_INST_0_i_1_1 => \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0\,
      Dbg_TDO_INST_0_i_1_2 => \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\,
      Q(7 downto 5) => \sel0__0\(3 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_5 => tdo_config_word1_5,
      tdo_config_word1_6 => tdo_config_word1_6,
      tdo_config_word1_7 => tdo_config_word1_7
    );
\Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized7\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(6 downto 5) => \sel0__0\(2 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      \Serial_Dbg_Intf.shift_count_reg[4]\ => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized7_17\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized3\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_13 => tdo_config_word1_13
    );
\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized5\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(5) => \sel0__0\(1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q_0 => Q_0,
      \Serial_Dbg_Intf.shift_count_reg[5]\ => \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0\,
      tdo_config_word1_13 => tdo_config_word1_13,
      tdo_config_word1_14 => tdo_config_word1_14
    );
\Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized7_18\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_11 => tdo_config_word1_11
    );
\Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized9\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_10 => tdo_config_word1_10
    );
\Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized3_19\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_9 => tdo_config_word1_9
    );
\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized5_20\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(5) => \sel0__0\(1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      \Serial_Dbg_Intf.shift_count_reg[5]\ => \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0\,
      tdo_config_word1_10 => tdo_config_word1_10,
      tdo_config_word1_11 => tdo_config_word1_11,
      tdo_config_word1_9 => tdo_config_word1_9
    );
\Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized7_21\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_7 => tdo_config_word1_7
    );
\Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I\: entity work.\mb_design_microblaze_0_1_MB_SRL16E__parameterized9_22\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_6 => tdo_config_word1_6
    );
\Serial_Dbg_Intf.capture_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_Capture,
      Q => capture_1
    );
\Serial_Dbg_Intf.command_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000200"
    )
        port map (
      I0 => \^dbg_reg_en[1]_0\,
      I1 => Dbg_Reg_En(0),
      I2 => Dbg_Reg_En(2),
      I3 => Dbg_Reg_En(6),
      I4 => Dbg_Reg_En(7),
      O => Command_Reg_En
    );
\Serial_Dbg_Intf.command_reg[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => command_reg_clear,
      O => command_reg_rst
    );
\Serial_Dbg_Intf.command_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \p_1_out__2\(1)
    );
\Serial_Dbg_Intf.command_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \p_1_out__3\(1)
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      O => continue_from_brk_rst
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => continue_from_brk_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \p_1_out__4\(1)
    );
\Serial_Dbg_Intf.continue_from_brk_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => continue_from_brk0,
      Q => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.control_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.control_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.control_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.control_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.control_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => Q(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[0]\,
      Q => data_read_reg(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[10]\,
      Q => data_read_reg(10)
    );
\Serial_Dbg_Intf.data_read_reg_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[11]\,
      Q => data_read_reg(11)
    );
\Serial_Dbg_Intf.data_read_reg_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[12]\,
      Q => data_read_reg(12)
    );
\Serial_Dbg_Intf.data_read_reg_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[13]\,
      Q => data_read_reg(13)
    );
\Serial_Dbg_Intf.data_read_reg_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[14]\,
      Q => data_read_reg(14)
    );
\Serial_Dbg_Intf.data_read_reg_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[15]\,
      Q => data_read_reg(15)
    );
\Serial_Dbg_Intf.data_read_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[16]\,
      Q => data_read_reg(16)
    );
\Serial_Dbg_Intf.data_read_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[17]\,
      Q => data_read_reg(17)
    );
\Serial_Dbg_Intf.data_read_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[18]\,
      Q => data_read_reg(18)
    );
\Serial_Dbg_Intf.data_read_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[19]\,
      Q => data_read_reg(19)
    );
\Serial_Dbg_Intf.data_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[1]\,
      Q => data_read_reg(1)
    );
\Serial_Dbg_Intf.data_read_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[20]\,
      Q => data_read_reg(20)
    );
\Serial_Dbg_Intf.data_read_reg_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[21]\,
      Q => data_read_reg(21)
    );
\Serial_Dbg_Intf.data_read_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[22]\,
      Q => data_read_reg(22)
    );
\Serial_Dbg_Intf.data_read_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[23]\,
      Q => data_read_reg(23)
    );
\Serial_Dbg_Intf.data_read_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[24]\,
      Q => data_read_reg(24)
    );
\Serial_Dbg_Intf.data_read_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[25]\,
      Q => data_read_reg(25)
    );
\Serial_Dbg_Intf.data_read_reg_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[26]\,
      Q => data_read_reg(26)
    );
\Serial_Dbg_Intf.data_read_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[27]\,
      Q => data_read_reg(27)
    );
\Serial_Dbg_Intf.data_read_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[28]\,
      Q => data_read_reg(28)
    );
\Serial_Dbg_Intf.data_read_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[29]\,
      Q => data_read_reg(29)
    );
\Serial_Dbg_Intf.data_read_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[2]\,
      Q => data_read_reg(2)
    );
\Serial_Dbg_Intf.data_read_reg_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[30]\,
      Q => data_read_reg(30)
    );
\Serial_Dbg_Intf.data_read_reg_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[31]\,
      Q => data_read_reg(31)
    );
\Serial_Dbg_Intf.data_read_reg_reg[32]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[32]\,
      Q => data_read_reg(32)
    );
\Serial_Dbg_Intf.data_read_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[3]\,
      Q => data_read_reg(3)
    );
\Serial_Dbg_Intf.data_read_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[4]\,
      Q => data_read_reg(4)
    );
\Serial_Dbg_Intf.data_read_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[5]\,
      Q => data_read_reg(5)
    );
\Serial_Dbg_Intf.data_read_reg_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[6]\,
      Q => data_read_reg(6)
    );
\Serial_Dbg_Intf.data_read_reg_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[7]\,
      Q => data_read_reg(7)
    );
\Serial_Dbg_Intf.data_read_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[8]\,
      Q => data_read_reg(8)
    );
\Serial_Dbg_Intf.data_read_reg_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \data_rd_reg_reg_n_0_[9]\,
      Q => data_read_reg(9)
    );
\Serial_Dbg_Intf.dbg_disable_interrupt_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(9),
      Q => \^lockstep_master_out\(38),
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000020"
    )
        port map (
      I0 => \^dbg_reg_en[1]_0\,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(2),
      I4 => Dbg_Reg_En(0),
      O => Control_Reg_En
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0808080D"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => \^sleep_out\,
      I4 => Sleep_Decode,
      O => no_sleeping
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(4),
      I3 => Dbg_Reg_En(5),
      O => \^dbg_reg_en[1]_0\
    );
\Serial_Dbg_Intf.dbg_wakeup_i_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => no_sleeping,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(34)
    );
\Serial_Dbg_Intf.force_stop_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      O => force_stop_cmd_rst
    );
\Serial_Dbg_Intf.force_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => force_stop_cmd_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \p_1_out__0\(1)
    );
\Serial_Dbg_Intf.force_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => force_stop_cmd_i0,
      Q => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.if_debug_ready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => if_debug_ready_i0,
      Q => \^lockstep_master_out\(37),
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.instr_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => instr_rd_reg(0),
      Q => instr_read_reg(0)
    );
\Serial_Dbg_Intf.instr_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => instr_rd_reg(1),
      Q => instr_read_reg(1)
    );
\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Instr_Insert_Reg_En_1,
      Q => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.normal_stop_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      O => normal_stop_cmd_rst
    );
\Serial_Dbg_Intf.normal_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => normal_stop_cmd_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => p_1_out(1)
    );
\Serial_Dbg_Intf.normal_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => normal_stop_cmd_i0,
      Q => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.read_register_MSR_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR0,
      Q => read_register_MSR,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.read_register_PC_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC0,
      Q => read_register_PC,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(0),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(1),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(2),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(3),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(4),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(5),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(6),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(7),
      Q => p_0_in_1,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(8),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.shift_count[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => p_0_in(0)
    );
\Serial_Dbg_Intf.shift_count[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A1,
      O => p_0_in(1)
    );
\Serial_Dbg_Intf.shift_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2A80"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A2,
      O => p_0_in(2)
    );
\Serial_Dbg_Intf.shift_count[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2AAA8000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => A2,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => A3,
      O => p_0_in(3)
    );
\Serial_Dbg_Intf.shift_count[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2AAAAAAA80000000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A3,
      I3 => A1,
      I4 => A2,
      I5 => sel0(0),
      O => p_0_in(4)
    );
\Serial_Dbg_Intf.shift_count[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I2 => \sel0__0\(1),
      O => p_0_in(5)
    );
\Serial_Dbg_Intf.shift_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2A80"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \sel0__0\(1),
      I2 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I3 => \sel0__0\(2),
      O => p_0_in(6)
    );
\Serial_Dbg_Intf.shift_count[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"2AAA8000"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I2 => \sel0__0\(2),
      I3 => \sel0__0\(1),
      I4 => \sel0__0\(3),
      O => p_0_in(7)
    );
\Serial_Dbg_Intf.shift_count[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => A3,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => sel0(0),
      O => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\
    );
\Serial_Dbg_Intf.shift_count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(0),
      Q => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.shift_count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(1),
      Q => A1
    );
\Serial_Dbg_Intf.shift_count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(2),
      Q => A2
    );
\Serial_Dbg_Intf.shift_count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(3),
      Q => A3
    );
\Serial_Dbg_Intf.shift_count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(4),
      Q => sel0(0)
    );
\Serial_Dbg_Intf.shift_count_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(5),
      Q => \sel0__0\(1)
    );
\Serial_Dbg_Intf.shift_count_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(6),
      Q => \sel0__0\(2)
    );
\Serial_Dbg_Intf.shift_count_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(7),
      Q => \sel0__0\(3)
    );
\Serial_Dbg_Intf.shift_datain_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\
    );
\Serial_Dbg_Intf.shift_datain_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\
    );
\Serial_Dbg_Intf.shift_datain_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\
    );
\Serial_Dbg_Intf.shift_datain_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\
    );
\Serial_Dbg_Intf.shift_datain_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\
    );
\Serial_Dbg_Intf.shift_datain_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\
    );
\Serial_Dbg_Intf.shift_datain_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.shift_datain_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.shift_datain_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.shift_datain_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.shift_datain_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\
    );
\Serial_Dbg_Intf.shift_datain_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.shift_datain_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\
    );
\Serial_Dbg_Intf.shift_datain_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\
    );
\Serial_Dbg_Intf.shift_datain_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.shift_datain_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.shift_datain_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\
    );
\Serial_Dbg_Intf.shift_datain_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\
    );
\Serial_Dbg_Intf.shift_datain_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.shift_datain_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.shift_datain_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.shift_datain_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\
    );
\Serial_Dbg_Intf.shift_datain_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\
    );
\Serial_Dbg_Intf.shift_datain_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\
    );
\Serial_Dbg_Intf.shift_datain_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.shift_datain_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.shift_datain_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.shift_datain_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\
    );
\Serial_Dbg_Intf.shift_datain_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\
    );
\Serial_Dbg_Intf.shift_datain_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\
    );
\Serial_Dbg_Intf.shift_datain_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\
    );
\Serial_Dbg_Intf.single_Step_TClk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => start_single_step_reg_n_0,
      O => start_single_step_rst
    );
\Serial_Dbg_Intf.single_Step_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => start_single_step_rst,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \p_1_out__1\(1)
    );
\Serial_Dbg_Intf.start_single_cmd_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => start_single_cmd0,
      Q => start_single_cmd,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.status_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sync,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.status_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.status_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => reset_bool_for_rst,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.status_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.status_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => delay_slot_instr,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.status_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.sync_dbg_hit_n_1\,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[1]\
    );
\Serial_Dbg_Intf.status_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit_1,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.status_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => mem_databus_access,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[22]\
    );
\Serial_Dbg_Intf.status_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => dbg_brki_hit_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.status_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => running_clock_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.status_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => D(3),
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[25]\
    );
\Serial_Dbg_Intf.status_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sleep_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.status_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => pause_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.status_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => unchanged,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.sync_dbg_brk_hit\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2\
     port map (
      AR(0) => config_with_scan_reset,
      D(0) => dbg_brki_hit_synced,
      Dbg_Clk => Dbg_Clk,
      dbg_brki_hit => dbg_brki_hit
    );
\Serial_Dbg_Intf.sync_dbg_hit\: entity work.mb_design_microblaze_0_1_mb_sync_vec
     port map (
      AR(0) => config_with_scan_reset,
      D(1) => sync,
      D(0) => \Serial_Dbg_Intf.sync_dbg_hit_n_1\,
      Dbg_Clk => Dbg_Clk,
      Q(1) => \Performance_Debug_Control.dbg_hit_reg_n_0_[0]\,
      Q(0) => \Performance_Debug_Control.dbg_hit_reg_n_0_[1]\,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\Serial_Dbg_Intf.sync_dbg_wakeup\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized4\
     port map (
      Clk => Clk,
      LOCKSTEP_Master_Out(2) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(1 downto 0) => \^lockstep_master_out\(34 downto 33),
      \Serial_Dbg_Intf.continue_from_brk_reg\ => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      dbg_continue_i_reg => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      dbg_continue_i_reg_0 => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      dbg_continue_i_reg_1 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      dbg_continue_i_reg_2 => \^serial_dbg_intf.force_stop_cmd_i_reg_0\,
      of_pause => of_pause,
      start_single_cmd => start_single_cmd,
      sync_reset => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sync_pause\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_23\
     port map (
      AR(0) => config_with_scan_reset,
      D(0) => pause_synced,
      Dbg_Clk => Dbg_Clk,
      Pause => Pause
    );
\Serial_Dbg_Intf.sync_running_clock\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_24\
     port map (
      AR(0) => config_with_scan_reset,
      D(0) => running_clock_synced,
      Dbg_Clk => Dbg_Clk,
      running_clock => running_clock
    );
\Serial_Dbg_Intf.sync_sample\: entity work.\mb_design_microblaze_0_1_mb_sync_vec__parameterized1\
     port map (
      Clk => Clk,
      D(0) => p_1_out(1),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(8) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      Q(7) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      Q(6) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\,
      Q(5) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      Q(4) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      Q(3) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\,
      Q(2) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      Q(1) => p_0_in_1,
      Q(0) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      \Serial_Dbg_Intf.sample_synced_1_reg[7]\ => \Serial_Dbg_Intf.sync_sample_n_11\,
      \Synchronize.use_sync_reset.sync_reg[1]\(0) => \p_1_out__0\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \p_1_out__1\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_1\(1) => \p_1_out__2\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_1\(0) => \p_1_out__3\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_2\(0) => \p_1_out__4\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_3\(0) => \p_1_out__5\(1),
      \Synchronize.use_sync_reset.sync_reg[1]_4\(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\,
      \Synchronize.use_sync_reset.sync_reg[2]\ => \Serial_Dbg_Intf.sync_sample_n_12\,
      continue_from_brk0 => continue_from_brk0,
      force_stop_cmd_i0 => force_stop_cmd_i0,
      if_debug_ready_i0 => if_debug_ready_i0,
      normal_stop_cmd_i0 => normal_stop_cmd_i0,
      read_register_MSR0 => read_register_MSR0,
      read_register_PC0 => read_register_PC0,
      sample_synced(0 to 9) => sample_synced(0 to 9),
      start_single_cmd0 => start_single_cmd0,
      sync_reset => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sync_sleep\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_25\
     port map (
      AR(0) => config_with_scan_reset,
      D(0) => sleep_synced,
      Dbg_Clk => Dbg_Clk,
      Sleep => Sleep
    );
\Serial_Dbg_Intf.sync_stop_CPU\: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized2_26\
     port map (
      AR(0) => config_with_scan_reset,
      D(0) => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Dbg_Clk => Dbg_Clk,
      \Single_Synchronize.use_async_reset.sync_reg_0\ => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\
    );
\Serial_Dbg_Intf.trig_ack_out_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_11\,
      Q => \^dbg_trig_ack_out\(0),
      R => '0'
    );
\Serial_Dbg_Intf.trig_in_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_12\,
      Q => \^dbg_trig_in\(0),
      R => '0'
    );
\Serial_Dbg_Intf.unchanged_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF02000000"
    )
        port map (
      I0 => Dbg_Reg_En(6),
      I1 => Dbg_Reg_En(2),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(7),
      I4 => \^dbg_reg_en[1]_0\,
      I5 => unchanged,
      O => \Serial_Dbg_Intf.unchanged_i_1_n_0\
    );
\Serial_Dbg_Intf.unchanged_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.unchanged_i_1_n_0\,
      Q => unchanged
    );
\Using_FPGA.Native_i_1__130\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F444"
    )
        port map (
      I0 => \^lockstep_master_out\(32),
      I1 => \^lockstep_master_out\(35),
      I2 => ex_Interrupt_i,
      I3 => ex_valid,
      O => \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0\
    );
\Using_FPGA.Native_i_1__140\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^lockstep_master_out\(32),
      O => \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1\
    );
\Using_FPGA.Native_i_2__43\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^lockstep_master_out\(35),
      I1 => \^lockstep_master_out\(32),
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\
    );
\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I\: entity work.mb_design_microblaze_0_1_address_hit
     port map (
      Address(0 to 31) => Address(0 to 31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_TDI => Dbg_TDI,
      Hit => dbg_hit_i_1,
      \Performance_Debug_Control.ex_pc_brk_reg\ => dbg_hit_i_0,
      Q(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      \Using_FPGA.Native\ => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0\
    );
\Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I\: entity work.\mb_design_microblaze_0_1_address_hit__parameterized1\
     port map (
      Address(0 to 31) => Address(0 to 31),
      D(0) => dbg_hit_i_1,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_TDI => Dbg_TDI,
      Hit => dbg_hit_i_0,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => ex_piperun_for_ce,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => \^lockstep_master_out\(35),
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => of_piperun_for_ce,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0\,
      Q(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      mem_Exception_Taken => mem_Exception_Taken,
      single_Step_N => single_Step_N,
      single_Step_N_reg => \Using_PC_Breakpoints.All_PC_Brks[1].Serial_Interface_1.address_hit_I_n_2\
    );
command_reg_clear_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => read_register_PC_1_reg_n_0,
      I1 => \^read_register_msr_1_reg_0\,
      O => command_reg_clear_i_1_n_0
    );
command_reg_clear_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => command_reg_clear_i_1_n_0,
      Q => command_reg_clear,
      R => reset_bool_for_rst
    );
\data_rd_reg[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => \^read_register_msr_1_reg_0\,
      I1 => read_register_PC_1_reg_n_0,
      I2 => wb_gpr_wr_dbg,
      I3 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      O => \data_rd_reg[0]_i_1_n_0\
    );
\data_rd_reg[32]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABBBA888"
    )
        port map (
      I0 => \data_rd_reg[32]_i_2_n_0\,
      I1 => \data_rd_reg[0]_i_1_n_0\,
      I2 => \^lockstep_master_out\(37),
      I3 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I4 => \data_rd_reg_reg_n_0_[32]\,
      O => \data_rd_reg[32]_i_1_n_0\
    );
\data_rd_reg[32]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBFBFBFBFBFBF88"
    )
        port map (
      I0 => wb_gpr_wr_dbg,
      I1 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I2 => \^lockstep_master_out\(37),
      I3 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      I4 => \^read_register_msr_1_reg_0\,
      I5 => wb_pc_valid,
      O => \data_rd_reg[32]_i_2_n_0\
    );
\data_rd_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(31),
      Q => \data_rd_reg_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(21),
      Q => \data_rd_reg_reg_n_0_[10]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(20),
      Q => \data_rd_reg_reg_n_0_[11]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(19),
      Q => \data_rd_reg_reg_n_0_[12]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(18),
      Q => \data_rd_reg_reg_n_0_[13]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(17),
      Q => \data_rd_reg_reg_n_0_[14]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(16),
      Q => \data_rd_reg_reg_n_0_[15]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(15),
      Q => \data_rd_reg_reg_n_0_[16]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(14),
      Q => \data_rd_reg_reg_n_0_[17]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(13),
      Q => \data_rd_reg_reg_n_0_[18]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(12),
      Q => \data_rd_reg_reg_n_0_[19]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(30),
      Q => \data_rd_reg_reg_n_0_[1]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(11),
      Q => \data_rd_reg_reg_n_0_[20]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(10),
      Q => \data_rd_reg_reg_n_0_[21]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(9),
      Q => \data_rd_reg_reg_n_0_[22]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(8),
      Q => \data_rd_reg_reg_n_0_[23]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(7),
      Q => \data_rd_reg_reg_n_0_[24]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(6),
      Q => \data_rd_reg_reg_n_0_[25]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(5),
      Q => \data_rd_reg_reg_n_0_[26]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(4),
      Q => \data_rd_reg_reg_n_0_[27]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(3),
      Q => \data_rd_reg_reg_n_0_[28]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(2),
      Q => \data_rd_reg_reg_n_0_[29]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(29),
      Q => \data_rd_reg_reg_n_0_[2]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(1),
      Q => \data_rd_reg_reg_n_0_[30]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(0),
      Q => \data_rd_reg_reg_n_0_[31]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \data_rd_reg[32]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[32]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(28),
      Q => \data_rd_reg_reg_n_0_[3]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(27),
      Q => \data_rd_reg_reg_n_0_[4]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(26),
      Q => \data_rd_reg_reg_n_0_[5]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(25),
      Q => \data_rd_reg_reg_n_0_[6]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(24),
      Q => \data_rd_reg_reg_n_0_[7]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(23),
      Q => \data_rd_reg_reg_n_0_[8]\,
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(22),
      Q => \data_rd_reg_reg_n_0_[9]\,
      R => reset_bool_for_rst
    );
dbg_continue_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      Q => \^lockstep_master_out\(33),
      R => reset_bool_for_rst
    );
dbg_halt_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"444444440F000000"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      I3 => \^dbg_halt_reset_mode_reg_0\,
      I4 => dbg_halt_reset_mode_i_2_n_0,
      I5 => reset_bool_for_rst,
      O => dbg_halt_reset_mode_i_1_n_0
    );
dbg_halt_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I1 => start_single_step_reg_n_0,
      O => dbg_halt_reset_mode_i_2_n_0
    );
dbg_halt_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => dbg_halt_reset_mode_i_1_n_0,
      Q => \^dbg_halt_reset_mode_reg_0\,
      R => '0'
    );
delay_slot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => D(0),
      Q => delay_slot_instr,
      R => reset_bool_for_rst
    );
exception_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000080AA8000"
    )
        port map (
      I0 => exception_i_2_n_0,
      I1 => D(1),
      I2 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I3 => D(2),
      I4 => instr_rd_reg(1),
      I5 => start_dbg_exec_reg_n_0,
      O => exception_i_1_n_0
    );
exception_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => force_stop_overrun,
      O => exception_i_2_n_0
    );
exception_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => exception_i_1_n_0,
      Q => instr_rd_reg(1),
      R => '0'
    );
executing_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000FFA2"
    )
        port map (
      I0 => instr_rd_reg(0),
      I1 => executing_reg_0,
      I2 => wb_Halted,
      I3 => start_dbg_exec_reg_n_0,
      I4 => force_stop_overrun,
      I5 => reset_bool_for_rst,
      O => executing_i_1_n_0
    );
executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => executing_i_1_n_0,
      Q => instr_rd_reg(0),
      R => '0'
    );
if_missed_fetch_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I2 => wb_Halted,
      I3 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      O => \Use_Async_Reset.sync_reset_reg\
    );
mb_halted_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(4),
      Q => mb_halted_1,
      R => reset_bool_for_rst
    );
read_register_MSR_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR,
      Q => \^read_register_msr_1_reg_0\,
      R => reset_bool_for_rst
    );
read_register_PC_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC,
      Q => read_register_PC_1_reg_n_0,
      R => reset_bool_for_rst
    );
running_clock_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0D08"
    )
        port map (
      I0 => Scan_Reset_Sel,
      I1 => Scan_Reset,
      I2 => Scan_En,
      I3 => capture_1,
      O => running_clock_rst
    );
running_clock_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      CLR => running_clock_rst,
      D => '1',
      Q => running_clock
    );
saved_reset_mode_dbg_halt_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => reset_bool_for_rst,
      I3 => saved_reset_mode_dbg_halt,
      O => saved_reset_mode_dbg_halt_i_1_n_0
    );
saved_reset_mode_dbg_halt_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_dbg_halt_i_1_n_0,
      Q => saved_reset_mode_dbg_halt,
      R => '0'
    );
saved_reset_mode_sleep_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => reset_bool_for_rst,
      I3 => \^sleep_out\,
      O => saved_reset_mode_sleep_i_1_n_0
    );
saved_reset_mode_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_sleep_i_1_n_0,
      Q => saved_reset_mode_sleep,
      R => '0'
    );
single_Step_N_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FD"
    )
        port map (
      I0 => start_single_step_reg_n_0,
      I1 => single_step_count(1),
      I2 => single_step_count(0),
      O => single_Step_N_i_1_n_0
    );
single_Step_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => single_Step_N_i_1_n_0,
      Q => single_Step_N,
      S => reset_bool_for_rst
    );
\single_step_count[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ACAF5C50"
    )
        port map (
      I0 => single_step_count(1),
      I1 => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\,
      I2 => of_piperun_for_ce,
      I3 => start_single_cmd,
      I4 => single_step_count(0),
      O => \single_step_count[0]_i_1_n_0\
    );
\single_step_count[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"23EC"
    )
        port map (
      I0 => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\,
      I1 => of_piperun_for_ce,
      I2 => start_single_cmd,
      I3 => single_step_count(1),
      O => \single_step_count[1]_i_1_n_0\
    );
\single_step_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[0]_i_1_n_0\,
      Q => single_step_count(0),
      R => reset_bool_for_rst
    );
\single_step_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[1]_i_1_n_0\,
      Q => single_step_count(1),
      R => reset_bool_for_rst
    );
sleep_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4F404F4F40404040"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => reset_bool_for_rst,
      I3 => sleep_reset_mode_reg_0,
      I4 => saved_reset_mode_sleep,
      I5 => \^sleep_out\,
      O => sleep_reset_mode_i_1_n_0
    );
sleep_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_reset_mode_i_1_n_0,
      Q => \^sleep_out\,
      R => '0'
    );
start_dbg_exec_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^lockstep_master_out\(37),
      Q => start_dbg_exec_reg_n_0,
      R => reset_bool_for_rst
    );
start_single_step_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FDFDFF00"
    )
        port map (
      I0 => of_piperun_for_ce,
      I1 => single_step_count(1),
      I2 => single_step_count(0),
      I3 => start_single_cmd,
      I4 => start_single_step_reg_n_0,
      I5 => reset_bool_for_rst,
      O => start_single_step_i_1_n_0
    );
start_single_step_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => start_single_step_i_1_n_0,
      Q => start_single_step_reg_n_0,
      R => '0'
    );
sync_trig_ack_in_0: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized4_27\
     port map (
      Clk => Clk,
      D(0) => D(4),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      \Single_Synchronize.use_sync_reset.sync_reg_0\ => sync_trig_ack_in_0_n_1,
      mb_halted_1 => mb_halted_1,
      sync_reset => reset_bool_for_rst,
      trig_ack_in_0_synced => trig_ack_in_0_synced,
      trig_ack_in_0_synced_1 => trig_ack_in_0_synced_1
    );
sync_trig_out_0: entity work.\mb_design_microblaze_0_1_mb_sync_bit__parameterized4_28\
     port map (
      Clk => Clk,
      D(0) => D(4),
      Dbg_Stop => Dbg_Stop,
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      \Performance_Debug_Control.dbg_stop_i_reg\ => sync_trig_out_0_n_2,
      \Performance_Debug_Control.dbg_stop_i_reg_0\ => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      \Performance_Debug_Control.trig_out_0_synced_1_reg\ => sync_trig_out_0_n_1,
      dbg_stop_1 => dbg_stop_1,
      dbg_stop_i => dbg_stop_i,
      sync_reset => reset_bool_for_rst,
      trig_out_0_synced => trig_out_0_synced,
      trig_out_0_synced_1 => trig_out_0_synced_1
    );
trig_ack_in_0_synced_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_ack_in_0_synced,
      Q => trig_ack_in_0_synced_1,
      R => reset_bool_for_rst
    );
trig_in_0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_ack_in_0_n_1,
      Q => \^dbg_trig_in\(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Decode_gti is
  port (
    of_pause_reg_0 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    of_gpr_op3_rd_addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    of_gpr_op1_rd_addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : out STD_LOGIC_VECTOR ( 0 to 15 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_div_stall_i_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    ex_valid : out STD_LOGIC;
    ex_byte_access : out STD_LOGIC;
    ex_doublet_access : out STD_LOGIC;
    ex_reverse_mem_access : out STD_LOGIC;
    EX_Op1_CMP_Equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    mem_Exception_Taken : out STD_LOGIC;
    ex_Interrupt_i : out STD_LOGIC;
    mem_exception_from_ex : out STD_LOGIC;
    wb_PipeRun_i_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    Pause_Ack : out STD_LOGIC;
    mem_databus_read : out STD_LOGIC;
    \Performance_Debug_Control.dbg_state_nohalt_reg\ : out STD_LOGIC_VECTOR ( 154 downto 0 );
    mem_databus_write : out STD_LOGIC;
    mem_byte_access : out STD_LOGIC;
    mem_doublet_access : out STD_LOGIC;
    wb_byte_access : out STD_LOGIC;
    ex_cmp_op : out STD_LOGIC;
    ex_unsigned_op : out STD_LOGIC;
    ex_use_carry : out STD_LOGIC;
    EX_Enable_ALU : out STD_LOGIC;
    EX_ALU_Sel_Logic : out STD_LOGIC;
    ex_pattern_cmp_sel : out STD_LOGIC;
    ex_clz_instr : out STD_LOGIC;
    ex_swap_instr : out STD_LOGIC;
    ex_swap_byte_instr : out STD_LOGIC;
    ex_Enable_Sext_Shift : out STD_LOGIC;
    ex_not_mul_op : out STD_LOGIC;
    ex_bit_insert : out STD_LOGIC;
    ex_bit_extract : out STD_LOGIC;
    ex_div_unsigned : out STD_LOGIC;
    ex_sel_alu : out STD_LOGIC;
    mem_sel_msr : out STD_LOGIC;
    MEM_Sel_SPR_ESR : out STD_LOGIC;
    MEM_Sel_SPR_EAR : out STD_LOGIC;
    wb_gpr_wr_dbg : out STD_LOGIC;
    wb_read_imm_reg : out STD_LOGIC;
    wb_read_imm_reg_1 : out STD_LOGIC;
    wb_pc_valid : out STD_LOGIC;
    dbg_clean_stop : out STD_LOGIC;
    \wb_exception_kind_i_reg[30]_0\ : out STD_LOGIC_VECTOR ( 6 downto 0 );
    of_pause : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Sleep_Decode : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    if_missed_fetch : out STD_LOGIC;
    wb_valid_reg_0 : out STD_LOGIC;
    mem_databus_access : out STD_LOGIC;
    wb_Halted : out STD_LOGIC;
    ex_Interrupt_Brk_combo_reg_0 : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    SRI : out STD_LOGIC;
    ex_valid_reg_0 : out STD_LOGIC;
    of_op2_sel : out STD_LOGIC_VECTOR ( 0 to 1 );
    wb_load_esr : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    MEM_WB_Sel_Mem_PC : out STD_LOGIC;
    dbg_stop_i : out STD_LOGIC;
    dbg_halt_reset_mode_reg : out STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_i_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_op1_sel_spr_pc : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    ex_load_btr : out STD_LOGIC;
    ex_start_div : out STD_LOGIC;
    ex_MSRSET : out STD_LOGIC;
    ex_MSRCLR : out STD_LOGIC;
    ex_MTS_MSR : out STD_LOGIC;
    of_op3_sel : out STD_LOGIC_VECTOR ( 0 to 1 );
    of_op1_sel : out STD_LOGIC_VECTOR ( 0 to 1 );
    M_AXI_DP_WREADY_0 : out STD_LOGIC;
    M_AXI_DP_AWREADY_0 : out STD_LOGIC;
    M_AXI_DP_ARREADY_0 : out STD_LOGIC;
    active_access_reg : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    EX_CLZ_Instr_reg_1 : out STD_LOGIC;
    EX_CLZ_Instr_reg_2 : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    ex_sel_alu_i_reg_0 : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_FPGA.Native_29\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_sel_alu_i_reg_1 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    ex_sel_alu_i_reg_2 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Sext_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_0 : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_1 : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_2 : out STD_LOGIC;
    \EX_Op1_reg[25]\ : out STD_LOGIC;
    EX_SWAP_Instr_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[14]\ : out STD_LOGIC;
    \EX_Op1_reg[13]\ : out STD_LOGIC;
    \EX_Op1_reg[12]\ : out STD_LOGIC;
    \EX_Op1_reg[11]\ : out STD_LOGIC;
    \EX_Op1_reg[10]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    \EX_Op1_reg[7]\ : out STD_LOGIC;
    \EX_Op1_reg[6]\ : out STD_LOGIC;
    \EX_Op1_reg[5]\ : out STD_LOGIC;
    \EX_Op1_reg[4]\ : out STD_LOGIC;
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[2]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[0]\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    ex_is_bs_instr_I_reg_0 : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[29]\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \EX_Op1_reg[1]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_void_bit : out STD_LOGIC;
    ex_left_shift_i : out STD_LOGIC;
    \EX_Op2_reg[30]\ : out STD_LOGIC;
    mem_byte_access_i_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    restore_wb_msr_to_ex : out STD_LOGIC;
    \Using_FPGA.Native_32\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : out STD_LOGIC;
    \Using_FPGA.Native_33\ : out STD_LOGIC;
    \Using_FPGA.Native_34\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_1\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_2\ : out STD_LOGIC;
    \Using_FPGA.Native_35\ : out STD_LOGIC;
    \Using_FPGA.Native_36\ : out STD_LOGIC;
    \Using_FPGA.Native_37\ : out STD_LOGIC;
    \Using_FPGA.Native_38\ : out STD_LOGIC;
    \Using_FPGA.Native_39\ : out STD_LOGIC;
    \Using_FPGA.Native_40\ : out STD_LOGIC;
    \Using_FPGA.Native_41\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]_3\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    div_busy_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \FPGA_Impl1.D_Handle[0].D_Sel_reg\ : out STD_LOGIC;
    DI : out STD_LOGIC;
    \EX_ALU_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_42\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Logic_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    R : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_Async_Reset.sync_reset_reg_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception_i_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    I1 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC;
    IReady_0 : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    MEM_DataBus_Ready : in STD_LOGIC;
    Trace_WB_Jump_Taken_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    wb_ie_rising0 : in STD_LOGIC;
    mem_div_overflow : in STD_LOGIC;
    Pause : in STD_LOGIC;
    \MEM_DataBus_Addr_reg[0]_0\ : in STD_LOGIC_VECTOR ( 65 downto 0 );
    if_fetch_in_progress_reg_0 : in STD_LOGIC;
    \data_rd_reg_reg[15]\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    ex_addr_low_bits : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_HW_BS.mem_mux3_reg[29]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 6 downto 0 );
    ex_Interrupt_Brk_combo_reg_1 : in STD_LOGIC;
    IReady : in STD_LOGIC;
    \mem_pc_i_reg[0]_0\ : in STD_LOGIC;
    ex_jump_nodelay_reg_0 : in STD_LOGIC;
    if_missed_fetch_reg_0 : in STD_LOGIC;
    Y : in STD_LOGIC_VECTOR ( 0 to 31 );
    \in\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mb_halted_1_reg : in STD_LOGIC;
    \Performance_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    MEM_DAXI_Exception : in STD_LOGIC;
    DUE : in STD_LOGIC;
    \wb_exception_kind_i_reg[31]_0\ : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_47\ : in STD_LOGIC;
    \Using_FPGA.Native_48\ : in STD_LOGIC;
    \if_pc_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performance_Debug_Control.ex_brki_hit_i_2_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    active_access : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    DReady : in STD_LOGIC;
    active_access_d1 : in STD_LOGIC;
    DWait : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep_Out : in STD_LOGIC;
    if_missed_fetch_reg_1 : in STD_LOGIC;
    active_access_reg_0 : in STD_LOGIC;
    \EX_Op3_reg[0]\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Op3_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    interrupt_address_d1 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2[0]_i_2\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_i_3\ : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \Using_FPGA.Native_49\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3007]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \LOCKSTEP_Out_reg[3022]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3022]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3021]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3021]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3020]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3020]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3019]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3019]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3018]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3018]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3017]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3017]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3016]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3016]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3015]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3015]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3014]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3014]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3013]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3013]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3012]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3012]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3011]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3011]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3010]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3010]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3009]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3009]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3008]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3008]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3007]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3007]_1\ : in STD_LOGIC;
    \MEM_DataBus_Write_Data_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_reverse_byteorder : in STD_LOGIC;
    \Using_FPGA.Native_50\ : in STD_LOGIC;
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    \Using_FPGA.Native_52\ : in STD_LOGIC;
    \Using_FPGA.Native_53\ : in STD_LOGIC;
    \Using_FPGA.Native_54\ : in STD_LOGIC;
    \Using_FPGA.Native_55\ : in STD_LOGIC;
    \Using_FPGA.Native_56\ : in STD_LOGIC;
    \Using_FPGA.Native_57\ : in STD_LOGIC;
    \Using_FPGA.Native_58\ : in STD_LOGIC;
    of_MSR : in STD_LOGIC_VECTOR ( 2 downto 0 );
    LO : in STD_LOGIC;
    \Q_reg[32]\ : in STD_LOGIC;
    \R_reg[32]\ : in STD_LOGIC;
    \Using_FPGA.Native_59\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Decode_gti : entity is "Decode_gti";
end mb_design_microblaze_0_1_Decode_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Decode_gti is
  signal A : STD_LOGIC;
  signal D257_out : STD_LOGIC;
  signal D259_out : STD_LOGIC;
  signal D261_out : STD_LOGIC;
  signal D265_out : STD_LOGIC;
  signal D35_out : STD_LOGIC;
  signal \Data_Flow_I/Barrel_Shifter_I/ex_mux1\ : STD_LOGIC_VECTOR ( 2 to 30 );
  signal \Data_Flow_I/msr_reg_i/p_2_out\ : STD_LOGIC_VECTOR ( 9 downto 1 );
  signal Dbg_Clean_Stop0 : STD_LOGIC;
  signal \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\ : STD_LOGIC;
  signal \^ex_alu_op_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^ex_alu_sel_logic\ : STD_LOGIC;
  signal EX_Bit_Extract0 : STD_LOGIC;
  signal EX_CMP_Op122_out : STD_LOGIC;
  signal EX_Is_BS_Instr : STD_LOGIC;
  signal EX_Is_Div_Instr : STD_LOGIC;
  signal \^ex_op1_reg[1]_0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \^ex_op2_reg[30]\ : STD_LOGIC;
  signal EX_Pattern_Cmp_Sel117_out : STD_LOGIC;
  signal \^ex_sext_op_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal EX_Unsigned_Op121_out : STD_LOGIC;
  signal EX_Use_Carry120_out : STD_LOGIC;
  signal \^hibernate\ : STD_LOGIC;
  signal I0 : STD_LOGIC;
  signal I2 : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal I5 : STD_LOGIC;
  signal IF_PC_Write : STD_LOGIC;
  signal IFetch_INST_0_i_2_n_0 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal MEM_Is_Div_Instr : STD_LOGIC;
  signal MEM_Sel_SPR_BTR : STD_LOGIC;
  signal O : STD_LOGIC;
  signal OF_Take_Exception_hold : STD_LOGIC;
  signal O_0 : STD_LOGIC;
  signal PC_Module_I_n_0 : STD_LOGIC;
  signal PC_Module_I_n_34 : STD_LOGIC;
  signal PC_Module_I_n_61 : STD_LOGIC;
  signal PC_Module_I_n_62 : STD_LOGIC;
  signal PC_Module_I_n_63 : STD_LOGIC;
  signal PC_Module_I_n_64 : STD_LOGIC;
  signal PC_Module_I_n_65 : STD_LOGIC;
  signal PC_Module_I_n_66 : STD_LOGIC;
  signal PC_Module_I_n_67 : STD_LOGIC;
  signal PC_Module_I_n_68 : STD_LOGIC;
  signal PC_Module_I_n_69 : STD_LOGIC;
  signal PC_Module_I_n_70 : STD_LOGIC;
  signal PC_Module_I_n_71 : STD_LOGIC;
  signal PC_Module_I_n_72 : STD_LOGIC;
  signal PC_Module_I_n_73 : STD_LOGIC;
  signal PC_Module_I_n_74 : STD_LOGIC;
  signal PC_Module_I_n_75 : STD_LOGIC;
  signal PC_Module_I_n_76 : STD_LOGIC;
  signal PC_Module_I_n_77 : STD_LOGIC;
  signal PC_Module_I_n_78 : STD_LOGIC;
  signal PC_Module_I_n_79 : STD_LOGIC;
  signal PC_Module_I_n_80 : STD_LOGIC;
  signal PC_Module_I_n_81 : STD_LOGIC;
  signal PC_Module_I_n_82 : STD_LOGIC;
  signal PC_Module_I_n_83 : STD_LOGIC;
  signal PC_Module_I_n_84 : STD_LOGIC;
  signal PC_Module_I_n_85 : STD_LOGIC;
  signal PC_Module_I_n_86 : STD_LOGIC;
  signal PC_Module_I_n_87 : STD_LOGIC;
  signal PC_Module_I_n_88 : STD_LOGIC;
  signal Pause_Ack_i_1_n_0 : STD_LOGIC;
  signal \^performance_debug_control.dbg_state_nohalt_reg\ : STD_LOGIC_VECTOR ( 154 downto 0 );
  signal PreFetch_Buffer_I1_n_100 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_101 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_103 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_104 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_108 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_112 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_119 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_120 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_121 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_122 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_123 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_125 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_126 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_127 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_128 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_129 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_47 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_48 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_49 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_50 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_56 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_57 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_58 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_70 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_78 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_79 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_80 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_81 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_82 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_84 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_85 : STD_LOGIC;
  signal Read_Strobe_INST_0_i_2_n_0 : STD_LOGIC;
  signal Read_Strobe_INST_0_i_6_n_0 : STD_LOGIC;
  signal \^sleep_decode\ : STD_LOGIC;
  signal \^suspend\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[10]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[11]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[12]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[13]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[14]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[15]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[16]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[17]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[18]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[19]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[20]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[21]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[22]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[23]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[24]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[25]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[26]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[2]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[2]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[3]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[3]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[4]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[5]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[6]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[7]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[8]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[9]_i_2_n_0\ : STD_LOGIC;
  signal \Use_MuxCy[11].OF_Piperun_Stage_n_1\ : STD_LOGIC;
  signal \Use_MuxCy[11].OF_Piperun_Stage_n_2\ : STD_LOGIC;
  signal \Use_MuxCy[11].OF_Piperun_Stage_n_3\ : STD_LOGIC;
  signal \Use_MuxCy[11].OF_Piperun_Stage_n_4\ : STD_LOGIC;
  signal \Use_MuxCy[11].OF_Piperun_Stage_n_5\ : STD_LOGIC;
  signal \Use_MuxCy[2].OF_Piperun_Stage_n_1\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_1\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_2\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_4\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_7\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_8\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_9\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_10__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_13__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_14__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_16_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__6_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__7_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__8_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__9_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4__0_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_4_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6__2_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_6_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_7_n_0\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_doublet_access_i_Inst_n_1\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_load_instr_Inst_n_3\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_lwx_instr_Inst_n_7\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_lwx_instr_Inst_n_8\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_load_store_instr_Inst_n_1\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_load_store_instr_Inst_n_2\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_load_store_instr_Inst_n_3\ : STD_LOGIC;
  signal \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\ : STD_LOGIC;
  signal \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\ : STD_LOGIC;
  signal active_access_i_2_n_0 : STD_LOGIC;
  signal active_wakeup : STD_LOGIC;
  signal active_wakeup0 : STD_LOGIC;
  signal \^ex_enable_sext_shift\ : STD_LOGIC;
  signal ex_Exception_Taken : STD_LOGIC;
  signal ex_IExt_Exception : STD_LOGIC;
  signal ex_Illegal_Opcode : STD_LOGIC;
  signal ex_Instr_Excep_combo1 : STD_LOGIC;
  signal ex_Instr_Excep_combo_i_2_n_0 : STD_LOGIC;
  signal ex_Instr_Excep_combo_reg_n_0 : STD_LOGIC;
  signal ex_Interrupt_Brk_combo_i_2_n_0 : STD_LOGIC;
  signal ex_Interrupt_Brk_combo_i_4_n_0 : STD_LOGIC;
  signal \^ex_interrupt_i\ : STD_LOGIC;
  signal ex_MSR_Clear_EIP : STD_LOGIC;
  signal ex_MSR_Load_ALU_C : STD_LOGIC;
  signal ex_MSR_Load_Shift_C : STD_LOGIC;
  signal ex_MSR_Set_SW_BIP : STD_LOGIC;
  signal ex_MSR_clear_decode : STD_LOGIC;
  signal ex_MSR_set_decode : STD_LOGIC;
  signal ex_Sel_SPR_BTR : STD_LOGIC;
  signal ex_Sel_SPR_EAR : STD_LOGIC;
  signal ex_Sel_SPR_EDR : STD_LOGIC;
  signal ex_Sel_SPR_ESR : STD_LOGIC;
  signal ex_Sel_SPR_FSR : STD_LOGIC;
  signal ex_Sel_SPR_PVR : STD_LOGIC;
  signal ex_Sel_SPR_SHR : STD_LOGIC;
  signal ex_Sel_SPR_SLR : STD_LOGIC;
  signal ex_Take_Intr_or_Exc : STD_LOGIC;
  signal ex_Write_DCache_decode_cmb : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of ex_Write_DCache_decode_cmb : signal is "true";
  signal ex_Write_ICache_i : STD_LOGIC;
  signal ex_Write_ICache_i_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_Write_ICache_i_cmb : signal is "true";
  signal ex_arith_shift : STD_LOGIC;
  signal ex_atomic_Instruction_Pair : STD_LOGIC;
  signal ex_atomic_Instruction_Pair0 : STD_LOGIC;
  signal \^ex_bit_extract\ : STD_LOGIC;
  signal \^ex_bit_insert\ : STD_LOGIC;
  signal ex_branch_instr : STD_LOGIC;
  signal ex_branch_instr0 : STD_LOGIC;
  signal ex_branch_with_delayslot : STD_LOGIC;
  signal \^ex_byte_access\ : STD_LOGIC;
  signal \^ex_clz_instr\ : STD_LOGIC;
  signal ex_delayslot_Instr : STD_LOGIC;
  signal ex_delayslot_Instr0 : STD_LOGIC;
  signal \^ex_div_unsigned\ : STD_LOGIC;
  signal \^ex_doublet_access\ : STD_LOGIC;
  signal ex_enable_sext_shift_i : STD_LOGIC;
  signal ex_first_cycle : STD_LOGIC;
  signal ex_fpu_double : STD_LOGIC;
  signal \ex_gpr_write_addr_reg_n_0_[0]\ : STD_LOGIC;
  signal \ex_gpr_write_addr_reg_n_0_[4]\ : STD_LOGIC;
  signal \ex_gpr_write_dbg__0\ : STD_LOGIC;
  signal ex_gpr_write_reg_n_0 : STD_LOGIC;
  signal ex_hibernate_i_i_1_n_0 : STD_LOGIC;
  signal \ex_instr_reg_n_0_[0]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[10]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[11]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[12]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[13]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[14]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[15]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[16]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[17]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[18]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[19]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[1]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[20]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[21]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[22]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[23]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[24]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[25]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[26]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[27]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[28]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[29]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[2]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[30]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[31]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[3]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[4]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[5]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[8]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[9]\ : STD_LOGIC;
  signal ex_is_load_instr_s : STD_LOGIC;
  signal ex_is_lwx_instr_s : STD_LOGIC;
  signal ex_is_mul_instr : STD_LOGIC;
  signal ex_is_multi_instr2 : STD_LOGIC;
  signal ex_is_multi_instr20 : STD_LOGIC;
  signal ex_is_multi_or_load_instr : STD_LOGIC;
  signal ex_is_multi_or_load_instr0 : STD_LOGIC;
  signal ex_is_swx_instr_s : STD_LOGIC;
  signal ex_jump : STD_LOGIC;
  signal ex_jump_hold : STD_LOGIC;
  signal ex_jump_nodelay_i_2_n_0 : STD_LOGIC;
  signal ex_jump_nodelay_reg_n_0 : STD_LOGIC;
  signal \^ex_left_shift_i\ : STD_LOGIC;
  signal ex_load_alu_carry_reg_n_0 : STD_LOGIC;
  signal ex_load_shift_carry : STD_LOGIC;
  signal ex_load_shift_carry0 : STD_LOGIC;
  signal ex_load_store_instr_s : STD_LOGIC;
  signal ex_mbar_decode : STD_LOGIC;
  signal ex_mbar_decode_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_mbar_decode_cmb : signal is "true";
  signal ex_mbar_is_sleep : STD_LOGIC;
  signal ex_mbar_is_sleep_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_mbar_is_sleep_cmb : signal is "true";
  signal ex_mbar_sleep : STD_LOGIC;
  signal ex_mbar_sleep_i_1_n_0 : STD_LOGIC;
  signal ex_mbar_sleep_i_2_n_0 : STD_LOGIC;
  signal ex_mbar_stall_no_sleep_1 : STD_LOGIC;
  signal ex_mbar_stall_no_sleep_10 : STD_LOGIC;
  signal ex_mfsmsr_i : STD_LOGIC;
  signal ex_move_to_MSR_instr : STD_LOGIC;
  signal ex_move_to_MSR_instr130_out : STD_LOGIC;
  signal ex_op1_cmp_eq : STD_LOGIC;
  signal ex_op1_cmp_eq_n5_out : STD_LOGIC;
  signal ex_opcode : STD_LOGIC_VECTOR ( 0 to 5 );
  signal \^ex_pattern_cmp_sel\ : STD_LOGIC;
  signal ex_read_imm_reg : STD_LOGIC;
  signal ex_read_imm_reg_1 : STD_LOGIC;
  signal ex_reservation : STD_LOGIC;
  signal \^ex_reverse_mem_access\ : STD_LOGIC;
  signal ex_set_MSR_EE_instr : STD_LOGIC;
  signal ex_set_MSR_IE_instr : STD_LOGIC;
  signal ex_set_bip : STD_LOGIC;
  signal ex_set_bip_reg_n_0 : STD_LOGIC;
  signal ex_shift_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_sleep_i0 : STD_LOGIC;
  signal ex_sleep_i_i_1_n_0 : STD_LOGIC;
  signal \^ex_start_div\ : STD_LOGIC;
  signal ex_start_div_i : STD_LOGIC;
  signal ex_suspend_i_i_1_n_0 : STD_LOGIC;
  signal \^ex_swap_byte_instr\ : STD_LOGIC;
  signal \^ex_swap_instr\ : STD_LOGIC;
  signal \^ex_use_carry\ : STD_LOGIC;
  signal \^ex_valid\ : STD_LOGIC;
  signal ex_valid_jump : STD_LOGIC;
  attribute RTL_KEEP of ex_valid_jump : signal is "true";
  signal ex_valid_keep : STD_LOGIC;
  signal \^ex_valid_reg_0\ : STD_LOGIC;
  signal \^ex_void_bit\ : STD_LOGIC;
  signal ex_write_dcache_instr : STD_LOGIC;
  signal force12_out : STD_LOGIC;
  signal force_Val10_out : STD_LOGIC;
  signal if_fetch_for_timing_optimization1 : STD_LOGIC;
  signal if_fetch_in_progress : STD_LOGIC;
  signal if_fetch_without_full_or_jump : STD_LOGIC;
  attribute RTL_KEEP of if_fetch_without_full_or_jump : signal is "true";
  signal \^if_missed_fetch\ : STD_LOGIC;
  signal if_pc_incr_carry0 : STD_LOGIC;
  signal if_pc_incr_carry1 : STD_LOGIC;
  signal if_pc_incr_carry3 : STD_LOGIC;
  signal if_pre_buffer_addr : STD_LOGIC_VECTOR ( 1 to 1 );
  signal if_sel_input : STD_LOGIC_VECTOR ( 0 to 0 );
  signal jump_logic_I1_n_3 : STD_LOGIC;
  signal jump_logic_I1_n_41 : STD_LOGIC;
  signal jump_logic_I1_n_42 : STD_LOGIC;
  signal jump_logic_I1_n_43 : STD_LOGIC;
  signal jump_logic_I1_n_44 : STD_LOGIC;
  signal jump_logic_I1_n_6 : STD_LOGIC;
  signal jump_logic_I1_n_7 : STD_LOGIC;
  signal keep_jump_taken_with_ds : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \^mem_exception_taken\ : STD_LOGIC;
  signal mem_PipeRun_carry_and_n_1 : STD_LOGIC;
  signal mem_Sel_MEM_Res : STD_LOGIC;
  signal mem_Write_DCache : STD_LOGIC;
  signal mem_Write_DCache_i_1_n_0 : STD_LOGIC;
  signal \^mem_byte_access\ : STD_LOGIC;
  signal mem_clr_ESR : STD_LOGIC;
  signal \^mem_databus_access\ : STD_LOGIC;
  signal \^mem_databus_write\ : STD_LOGIC;
  signal mem_delayslot_instr : STD_LOGIC;
  signal \^mem_div_stall_i_reg\ : STD_LOGIC;
  signal \^mem_doublet_access\ : STD_LOGIC;
  signal \^mem_exception_from_ex\ : STD_LOGIC;
  signal mem_exception_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal mem_gpr_write : STD_LOGIC;
  signal mem_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal mem_gpr_write_dbg : STD_LOGIC;
  signal mem_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_is_msr_instr0 : STD_LOGIC;
  signal mem_is_multi_or_load_instr : STD_LOGIC;
  signal mem_is_multi_or_load_instr0 : STD_LOGIC;
  signal mem_is_store_instr : STD_LOGIC;
  signal mem_jump_taken : STD_LOGIC;
  signal mem_load_store_access : STD_LOGIC;
  signal mem_load_store_access0 : STD_LOGIC;
  signal mem_read_imm_reg : STD_LOGIC;
  signal mem_read_imm_reg_1 : STD_LOGIC;
  signal mem_rtid_instr : STD_LOGIC;
  signal mem_valid_i_2_n_0 : STD_LOGIC;
  signal mem_valid_instr : STD_LOGIC;
  signal mem_wait_on_ready_N : STD_LOGIC;
  signal mem_word_access : STD_LOGIC;
  signal mem_word_access0 : STD_LOGIC;
  signal of_Illegal_Opcode : STD_LOGIC;
  signal of_Interrupt : STD_LOGIC;
  signal of_PVR_Select : STD_LOGIC_VECTOR ( 0 to 3 );
  attribute RTL_KEEP of of_PVR_Select : signal is "true";
  signal of_PipeRun_carry_1 : STD_LOGIC;
  signal of_PipeRun_carry_10 : STD_LOGIC;
  signal of_PipeRun_carry_2 : STD_LOGIC;
  signal of_PipeRun_carry_3 : STD_LOGIC;
  signal of_PipeRun_carry_4 : STD_LOGIC;
  signal of_PipeRun_carry_5 : STD_LOGIC;
  signal of_PipeRun_carry_6 : STD_LOGIC;
  signal of_PipeRun_carry_7 : STD_LOGIC;
  signal of_PipeRun_carry_9 : STD_LOGIC;
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal of_Sel_SPR_BTR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_BTR : signal is "true";
  signal of_Sel_SPR_EAR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_EAR : signal is "true";
  signal of_Sel_SPR_EDR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_EDR : signal is "true";
  signal of_Sel_SPR_ESR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_ESR : signal is "true";
  signal of_Sel_SPR_FSR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_FSR : signal is "true";
  signal of_Sel_SPR_MSR100_out : STD_LOGIC;
  signal of_Sel_SPR_PVR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_PVR : signal is "true";
  signal of_Sel_SPR_SHR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_SHR : signal is "true";
  signal of_Sel_SPR_SLR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_SLR : signal is "true";
  signal of_Take_Exception : STD_LOGIC;
  signal of_Take_Interrupt_hold : STD_LOGIC;
  signal of_branch_with_delayslot140_out : STD_LOGIC;
  signal of_clear_MSR_BIP_hold_cmb108_out : STD_LOGIC;
  signal of_clear_MSR_BIP_hold_s : STD_LOGIC;
  signal \^of_gpr_op1_rd_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^of_gpr_op3_rd_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^of_imm_data\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal of_instr_raw : STD_LOGIC_VECTOR ( 0 to 5 );
  signal of_is_bsifi_s : STD_LOGIC;
  signal of_next_ex_valid : STD_LOGIC;
  signal \^of_op1_sel_spr_pc\ : STD_LOGIC;
  signal \^of_pause\ : STD_LOGIC;
  signal of_pipe_ctrl_reg0 : STD_LOGIC;
  signal of_predecode_raw : STD_LOGIC_VECTOR ( 1 to 10 );
  signal of_read_ex_write_op2_conflict_part1 : STD_LOGIC;
  signal of_read_ex_write_op2_conflict_part2 : STD_LOGIC;
  signal of_read_ex_write_op3_conflict_part1 : STD_LOGIC;
  signal of_read_ex_write_op3_conflict_part2 : STD_LOGIC;
  signal of_read_imm_reg : STD_LOGIC;
  signal of_read_imm_reg_ii : STD_LOGIC;
  signal of_read_mem_write_op1_conflict_part1 : STD_LOGIC;
  signal of_read_mem_write_op2_conflict_part1 : STD_LOGIC;
  signal of_read_mem_write_op2_conflict_part2 : STD_LOGIC;
  signal of_read_mem_write_op3_conflict_part1 : STD_LOGIC;
  signal of_read_mem_write_op3_conflict_part2 : STD_LOGIC;
  signal of_set_MSR_EE_hold0 : STD_LOGIC;
  signal of_set_MSR_EE_hold_reg_n_0 : STD_LOGIC;
  signal of_set_MSR_IE : STD_LOGIC;
  signal of_set_MSR_IE_hold0 : STD_LOGIC;
  signal of_set_MSR_IE_hold_reg_n_0 : STD_LOGIC;
  signal of_valid : STD_LOGIC;
  signal p_0_in146_in : STD_LOGIC;
  signal p_1_in147_in : STD_LOGIC;
  signal p_1_in3_in : STD_LOGIC;
  signal p_255_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal \^restore_wb_msr_to_ex\ : STD_LOGIC;
  signal use_Reg_Neg_DI1_out : STD_LOGIC;
  signal use_Reg_Neg_S3_out : STD_LOGIC;
  signal \^wb_halted\ : STD_LOGIC;
  signal wb_MSR_Clear_IE : STD_LOGIC;
  signal \^wb_piperun_i_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^wb_byte_access\ : STD_LOGIC;
  signal wb_clr_ESR_l : STD_LOGIC;
  signal wb_clr_ESR_l0 : STD_LOGIC;
  signal wb_div_overflow : STD_LOGIC;
  signal wb_doublet_access : STD_LOGIC;
  signal wb_exception : STD_LOGIC;
  signal \^wb_exception_kind_i_reg[30]_0\ : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal \^wb_gpr_wr_dbg\ : STD_LOGIC;
  signal wb_gpr_write_dbg0 : STD_LOGIC;
  signal wb_gpr_write_i : STD_LOGIC;
  signal wb_gpr_write_i0 : STD_LOGIC;
  signal wb_ie_rising : STD_LOGIC;
  signal \^wb_load_esr\ : STD_LOGIC;
  signal wb_reset : STD_LOGIC;
  signal wb_rtid_instr : STD_LOGIC;
  signal \^wb_valid_reg_0\ : STD_LOGIC;
  signal wb_word_access : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Pause_Ack_i_1 : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_freeze_nohalt_i_3\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0_i_2 : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of Trace_Exception_Taken_INST_0 : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of Trace_Reg_Write_INST_0_i_1 : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_left_shift_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_10\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_5\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_6\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_7\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_8\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_9\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[10]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[10]_i_3\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[11]_i_1\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[11]_i_3\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[12]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[12]_i_3\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[13]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[13]_i_3\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[14]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[14]_i_3\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[15]_i_1\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[15]_i_3\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[16]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[16]_i_3\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[17]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[17]_i_3\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[18]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[18]_i_3\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[19]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[19]_i_3\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_1\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_4\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_5\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[20]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[20]_i_3\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[21]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[21]_i_3\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[22]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[22]_i_3\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[23]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[24]_i_1\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[25]_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[26]_i_1\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[2]_i_1\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[2]_i_4\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[30]_i_2\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[3]_i_1\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[3]_i_4\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[4]_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[4]_i_3\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[5]_i_1\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[5]_i_3\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[6]_i_1\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[6]_i_3\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[7]_i_1\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[7]_i_3\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[8]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[8]_i_3\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[9]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[9]_i_3\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_void_bit_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_void_bit_i_2\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_10__4\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_10__5\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_11__2\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__34\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__32\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__35\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__39\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__40\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__0\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__9\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5__4\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_7\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_7__3\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_9__4\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \WB_ESR_i[19]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \WB_MEM_Result[0]_i_1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of active_access_i_2 : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of ex_Instr_Excep_combo_i_2 : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of ex_branch_with_delayslot_i_2 : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of ex_hibernate_i_i_1 : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of ex_mbar_sleep_i_2 : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of ex_mbar_stall_no_sleep_1_i_1 : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of ex_read_imm_reg_i_1 : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of ex_set_MSR_EE_instr_i_1 : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of ex_set_MSR_IE_instr_i_1 : label is "soft_lutpair101";
  attribute KEEP : string;
  attribute KEEP of ex_valid_jump_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of ex_valid_jump_reg : label is "no";
  attribute SOFT_HLUTNM of mask_reset_inferred_i_1 : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of mem_Write_DCache_i_1 : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of mem_clr_ESR_i_1 : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of mem_is_msr_instr_i_1 : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of mem_valid_i_2 : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \wb_EAR_ii[0]_i_1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \wb_MSR_i[22]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \wb_MSR_i[23]_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of wb_clr_ESR_l_i_1 : label is "soft_lutpair108";
begin
  \EX_ALU_Op_reg[0]_0\(1 downto 0) <= \^ex_alu_op_reg[0]_0\(1 downto 0);
  EX_ALU_Sel_Logic <= \^ex_alu_sel_logic\;
  \EX_Op1_reg[1]_0\(2 downto 0) <= \^ex_op1_reg[1]_0\(2 downto 0);
  \EX_Op2_reg[30]\ <= \^ex_op2_reg[30]\;
  \EX_Sext_Op_reg[0]_0\(1 downto 0) <= \^ex_sext_op_reg[0]_0\(1 downto 0);
  Hibernate <= \^hibernate\;
  LOCKSTEP_Master_Out(0) <= \^lockstep_master_out\(0);
  \Performance_Debug_Control.dbg_state_nohalt_reg\(154 downto 0) <= \^performance_debug_control.dbg_state_nohalt_reg\(154 downto 0);
  Sleep_Decode <= \^sleep_decode\;
  Suspend <= \^suspend\;
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  ex_Enable_Sext_Shift <= \^ex_enable_sext_shift\;
  ex_Interrupt_i <= \^ex_interrupt_i\;
  ex_bit_extract <= \^ex_bit_extract\;
  ex_bit_insert <= \^ex_bit_insert\;
  ex_byte_access <= \^ex_byte_access\;
  ex_clz_instr <= \^ex_clz_instr\;
  ex_div_unsigned <= \^ex_div_unsigned\;
  ex_doublet_access <= \^ex_doublet_access\;
  ex_left_shift_i <= \^ex_left_shift_i\;
  ex_pattern_cmp_sel <= \^ex_pattern_cmp_sel\;
  ex_reverse_mem_access <= \^ex_reverse_mem_access\;
  ex_start_div <= \^ex_start_div\;
  ex_swap_byte_instr <= \^ex_swap_byte_instr\;
  ex_swap_instr <= \^ex_swap_instr\;
  ex_use_carry <= \^ex_use_carry\;
  ex_valid <= \^ex_valid\;
  ex_valid_reg_0 <= \^ex_valid_reg_0\;
  ex_void_bit <= \^ex_void_bit\;
  if_missed_fetch <= \^if_missed_fetch\;
  mem_Exception_Taken <= \^mem_exception_taken\;
  mem_byte_access <= \^mem_byte_access\;
  mem_databus_access <= \^mem_databus_access\;
  mem_databus_write <= \^mem_databus_write\;
  mem_div_stall_i_reg <= \^mem_div_stall_i_reg\;
  mem_doublet_access <= \^mem_doublet_access\;
  mem_exception_from_ex <= \^mem_exception_from_ex\;
  of_gpr_op1_rd_addr(0 to 4) <= \^of_gpr_op1_rd_addr\(0 to 4);
  of_gpr_op3_rd_addr(0 to 4) <= \^of_gpr_op3_rd_addr\(0 to 4);
  of_imm_data(0 to 15) <= \^of_imm_data\(0 to 15);
  of_op1_sel_spr_pc <= \^of_op1_sel_spr_pc\;
  of_pause <= \^of_pause\;
  of_pause_reg_0 <= of_PipeRun_for_ce;
  reset_bool_for_rst <= sync_reset;
  restore_wb_msr_to_ex <= \^restore_wb_msr_to_ex\;
  wb_Halted <= \^wb_halted\;
  wb_PipeRun_i_reg_0(0) <= \^wb_piperun_i_reg_0\(0);
  wb_byte_access <= \^wb_byte_access\;
  \wb_exception_kind_i_reg[30]_0\(6 downto 0) <= \^wb_exception_kind_i_reg[30]_0\(6 downto 0);
  wb_gpr_wr_dbg <= \^wb_gpr_wr_dbg\;
  wb_load_esr <= \^wb_load_esr\;
  wb_valid_reg_0 <= \^wb_valid_reg_0\;
\ALU_I/ex_subtract_op\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0020"
    )
        port map (
      I0 => \^ex_alu_op_reg[0]_0\(0),
      I1 => \^ex_alu_sel_logic\,
      I2 => \^ex_alu_op_reg[0]_0\(1),
      I3 => \^ex_use_carry\,
      O => DI
    );
\Data_Flow_Logic_I/R0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => EX_Is_BS_Instr,
      I2 => EX_Is_Div_Instr,
      O => R
    );
Dbg_Clean_Stop_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => Dbg_Clean_Stop0,
      Q => dbg_clean_stop,
      R => reset_bool_for_rst
    );
\Detect_IExt_Exceptions.ex_IExt_Exception_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFD"
    )
        port map (
      I0 => \^ex_valid\,
      I1 => ex_Take_Intr_or_Exc,
      I2 => ex_IExt_Exception,
      I3 => ex_Illegal_Opcode,
      I4 => \Using_FPGA.Native_45\,
      I5 => \^ex_interrupt_i\,
      O => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\
    );
\Detect_IExt_Exceptions.ex_IExt_Exception_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_Instr_Excep_combo1,
      Q => ex_IExt_Exception,
      R => reset_bool_for_rst
    );
\Detect_Illegal_Major_Opcodes.ex_Illegal_Opcode_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Illegal_Opcode,
      Q => ex_Illegal_Opcode,
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_57,
      Q => \^ex_alu_op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_58,
      Q => \^ex_alu_op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
EX_Arith_Shift_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(6),
      Q => ex_arith_shift,
      R => reset_bool_for_rst
    );
EX_Bit_Extract_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Bit_Extract0,
      Q => \^ex_bit_extract\,
      R => reset_bool_for_rst
    );
EX_Bit_Insert_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_is_bsifi_s,
      Q => \^ex_bit_insert\,
      R => reset_bool_for_rst
    );
EX_CLZ_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_82,
      Q => \^ex_clz_instr\,
      R => reset_bool_for_rst
    );
EX_CMP_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_CMP_Op122_out,
      Q => ex_cmp_op,
      R => reset_bool_for_rst
    );
EX_Div_Unsigned_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(14),
      Q => \^ex_div_unsigned\,
      R => reset_bool_for_rst
    );
EX_Left_Shift_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(5),
      Q => ex_fpu_double,
      R => reset_bool_for_rst
    );
\EX_Logic_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(4),
      Q => \EX_Logic_Op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\EX_Logic_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(5),
      Q => \EX_Logic_Op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
EX_Pattern_Cmp_Sel_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Pattern_Cmp_Sel117_out,
      Q => \^ex_pattern_cmp_sel\,
      R => reset_bool_for_rst
    );
EX_SWAP_BYTE_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => p_2_in,
      Q => \^ex_swap_byte_instr\,
      R => reset_bool_for_rst
    );
EX_SWAP_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_81,
      Q => \^ex_swap_instr\,
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_84,
      Q => \^ex_sext_op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_85,
      Q => \^ex_sext_op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(9),
      Q => ex_shift_op(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(10),
      Q => ex_shift_op(1),
      R => reset_bool_for_rst
    );
EX_Unsigned_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Unsigned_Op121_out,
      Q => ex_unsigned_op,
      R => reset_bool_for_rst
    );
EX_Use_Carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Use_Carry120_out,
      Q => \^ex_use_carry\,
      R => reset_bool_for_rst
    );
IFetch_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => if_fetch_in_progress_reg_0,
      I1 => \^wb_halted\,
      I2 => mb_halted_1_reg,
      I3 => reset_bool_for_rst,
      I4 => IFetch_INST_0_i_2_n_0,
      I5 => ex_mbar_sleep,
      O => if_fetch_without_full_or_jump
    );
IFetch_INST_0_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004440"
    )
        port map (
      I0 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I1 => ex_mbar_decode,
      I2 => ex_first_cycle,
      I3 => ex_mbar_stall_no_sleep_1,
      I4 => ex_jump_hold,
      O => IFetch_INST_0_i_2_n_0
    );
\LOCKSTEP_Master_Out[5]_INST_0_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00200000"
    )
        port map (
      I0 => wb_exception,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      O => \^wb_halted\
    );
\LOCKSTEP_Master_Out[7]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAEAAAAAAAAAA"
    )
        port map (
      I0 => \mem_pc_i_reg[0]_0\,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => \^lockstep_master_out\(0)
    );
MEM_DataBus_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_load_store_instr_Inst_n_1\,
      Q => \^mem_databus_access\,
      R => '0'
    );
\MEM_DataBus_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(65),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(93),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(55),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(83),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(54),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(82),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(53),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(81),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(52),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(80),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(51),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(79),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(50),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(78),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(49),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(77),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(48),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(76),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(47),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(75),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(46),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(74),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(64),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(92),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(45),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(73),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(44),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(72),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(43),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(71),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(42),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(70),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(41),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(69),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(40),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(68),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(39),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(67),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(38),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(66),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(37),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(65),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(36),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(64),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(63),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(91),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(35),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(63),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(34),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(62),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(62),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(90),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(61),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(89),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(60),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(88),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(59),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(87),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(58),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(86),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(57),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(85),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \MEM_DataBus_Addr_reg[0]_0\(56),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(84),
      R => reset_bool_for_rst
    );
MEM_DataBus_Read_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^performance_debug_control.dbg_state_nohalt_reg\(95),
      Q => mem_databus_read,
      R => reset_bool_for_rst
    );
MEM_DataBus_Write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^performance_debug_control.dbg_state_nohalt_reg\(94),
      Q => \^mem_databus_write\,
      R => reset_bool_for_rst
    );
MEM_Sel_MEM_Res_I_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \Using_FPGA_2.ex_is_load_instr_Inst_n_3\,
      Q => mem_Sel_MEM_Res,
      S => reset_bool_for_rst
    );
M_AXI_DP_ARVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00005530"
    )
        port map (
      I0 => M_AXI_DP_ARREADY,
      I1 => \^mem_databus_write\,
      I2 => \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(31),
      I4 => reset_bool_for_rst,
      O => M_AXI_DP_ARREADY_0
    );
M_AXI_DP_AWVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000055C0"
    )
        port map (
      I0 => M_AXI_DP_AWREADY,
      I1 => \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\,
      I2 => \^mem_databus_write\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(33),
      I4 => reset_bool_for_rst,
      O => M_AXI_DP_AWREADY_0
    );
M_AXI_DP_AWVALID_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => DReady,
      I1 => \^mem_databus_access\,
      I2 => active_access_d1,
      I3 => DWait,
      O => \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\
    );
M_AXI_DP_WVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000055C0"
    )
        port map (
      I0 => M_AXI_DP_WREADY,
      I1 => \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\,
      I2 => \^mem_databus_write\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(32),
      I4 => reset_bool_for_rst,
      O => M_AXI_DP_WREADY_0
    );
\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"C8CD"
    )
        port map (
      I0 => \^mem_byte_access\,
      I1 => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\(0),
      I2 => \^mem_doublet_access\,
      I3 => mem_reverse_byteorder,
      O => mem_byte_access_i_reg_0(0)
    );
OF_Take_Exception_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[11].OF_Piperun_Stage_n_5\,
      Q => OF_Take_Exception_hold,
      R => '0'
    );
PC_Module_I: entity work.mb_design_microblaze_0_1_PC_Module_gti
     port map (
      CI => if_pc_incr_carry3,
      Clk => Clk,
      D(31 downto 0) => D(31 downto 0),
      E(0) => \Use_MuxCy[3].OF_Piperun_Stage_n_2\,
      \EX_Op1_reg[9]\ => \^of_op1_sel_spr_pc\,
      IReady_0 => IReady_0,
      O => O_0,
      Q(1) => p_1_in3_in,
      Q(0) => PC_Module_I_n_34,
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_24\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_25\ => \^using_fpga.native_0\(0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_14\,
      \ex_pc_i_reg[31]_0\ => of_PipeRun_for_ce,
      \if_pc_reg[0]_0\ => PC_Module_I_n_0,
      \if_pc_reg[0]_1\(0) => IF_PC_Write,
      \if_pc_reg[0]_2\(31 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(151 downto 120),
      \if_pc_reg[10]_0\ => PC_Module_I_n_79,
      \if_pc_reg[11]_0\ => PC_Module_I_n_78,
      \if_pc_reg[12]_0\ => PC_Module_I_n_77,
      \if_pc_reg[13]_0\ => PC_Module_I_n_76,
      \if_pc_reg[14]_0\ => PC_Module_I_n_75,
      \if_pc_reg[15]_0\ => PC_Module_I_n_74,
      \if_pc_reg[16]_0\ => PC_Module_I_n_73,
      \if_pc_reg[17]_0\ => PC_Module_I_n_72,
      \if_pc_reg[18]_0\ => PC_Module_I_n_71,
      \if_pc_reg[19]_0\ => PC_Module_I_n_70,
      \if_pc_reg[1]_0\ => PC_Module_I_n_88,
      \if_pc_reg[20]_0\ => PC_Module_I_n_69,
      \if_pc_reg[21]_0\ => PC_Module_I_n_68,
      \if_pc_reg[22]_0\ => PC_Module_I_n_67,
      \if_pc_reg[23]_0\ => PC_Module_I_n_66,
      \if_pc_reg[24]_0\ => PC_Module_I_n_65,
      \if_pc_reg[25]_0\ => PC_Module_I_n_64,
      \if_pc_reg[26]_0\ => PC_Module_I_n_63,
      \if_pc_reg[27]_0\ => PC_Module_I_n_62,
      \if_pc_reg[28]_0\ => PC_Module_I_n_61,
      \if_pc_reg[2]_0\ => PC_Module_I_n_87,
      \if_pc_reg[3]_0\ => PC_Module_I_n_86,
      \if_pc_reg[4]_0\ => PC_Module_I_n_85,
      \if_pc_reg[5]_0\ => PC_Module_I_n_84,
      \if_pc_reg[6]_0\ => PC_Module_I_n_83,
      \if_pc_reg[7]_0\ => PC_Module_I_n_82,
      \if_pc_reg[8]_0\ => PC_Module_I_n_81,
      \if_pc_reg[9]_0\ => PC_Module_I_n_80,
      if_pre_buffer_addr(0) => if_pre_buffer_addr(1),
      if_sel_input(0) => if_sel_input(0),
      lopt => lopt_7,
      lopt_1 => lopt_8,
      lopt_2 => lopt_9,
      lopt_3 => lopt_10,
      \mem_pc_i_reg[0]_0\(31 downto 0) => \mem_pc_i_reg[0]\(31 downto 0),
      sync_reset => reset_bool_for_rst
    );
Pause_Ack_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => if_fetch_in_progress,
      I1 => \^of_pause\,
      I2 => mem_valid_instr,
      O => Pause_Ack_i_1_n_0
    );
Pause_Ack_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause_Ack_i_1_n_0,
      Q => Pause_Ack,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => \Performance_Debug_Control.dbg_freeze_nohalt_reg\,
      I2 => reset_bool_for_rst,
      O => dbg_halt_reset_mode_reg
    );
\Performance_Debug_Control.dbg_stop_i_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAEAAAAAAAAAA"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => dbg_stop_i
    );
PreFetch_Buffer_I1: entity work.mb_design_microblaze_0_1_PreFetch_Buffer_gti
     port map (
      Clk => Clk,
      D(1) => \^of_gpr_op3_rd_addr\(0),
      D(0) => \^of_gpr_op3_rd_addr\(1),
      D257_out => D257_out,
      D259_out => D259_out,
      D261_out => D261_out,
      D265_out => D265_out,
      Dbg_Clean_Stop0 => Dbg_Clean_Stop0,
      Dbg_Clean_Stop_reg => ex_jump_nodelay_reg_n_0,
      \Detect_IExt_Exceptions.ex_IExt_Exception_reg\ => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      E(0) => E(0),
      EX_Bit_Extract0 => EX_Bit_Extract0,
      EX_CMP_Op122_out => EX_CMP_Op122_out,
      EX_Is_Div_Instr => EX_Is_Div_Instr,
      \EX_Op2[0]_i_2\(15 downto 0) => \EX_Op2[0]_i_2\(15 downto 0),
      \EX_Op2_reg[16]\(14 downto 0) => \MEM_DataBus_Addr_reg[0]_0\(14 downto 0),
      \EX_Op3[0]_i_5\(4) => mem_gpr_write_addr(0),
      \EX_Op3[0]_i_5\(3) => mem_gpr_write_addr(1),
      \EX_Op3[0]_i_5\(2) => mem_gpr_write_addr(2),
      \EX_Op3[0]_i_5\(1) => mem_gpr_write_addr(3),
      \EX_Op3[0]_i_5\(0) => mem_gpr_write_addr(4),
      \EX_Op3[31]_i_2\ => \^ex_valid\,
      \EX_Op3_reg[0]\(30 downto 0) => \EX_Op3_reg[0]\(30 downto 0),
      \EX_Op3_reg[0]_0\(30 downto 0) => \EX_Op3_reg[0]_0\(30 downto 0),
      EX_Pattern_Cmp_Sel117_out => EX_Pattern_Cmp_Sel117_out,
      EX_Unsigned_Op121_out => EX_Unsigned_Op121_out,
      EX_Use_Carry120_out => EX_Use_Carry120_out,
      GPR_Op1(16 downto 0) => GPR_Op1(16 downto 0),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(16 downto 0) => GPR_Op3(16 downto 0),
      I0 => I0,
      I041_out => I041_out,
      I139_out => I139_out,
      I4 => I4,
      I5 => I5,
      IReady => IReady,
      IReady_0 => IReady_0,
      \LOCKSTEP_Out_reg[3]\ => if_missed_fetch_reg_0,
      MEM_Is_Div_Instr => MEM_Is_Div_Instr,
      OF_Take_Exception_hold => OF_Take_Exception_hold,
      \Performance_Debug_Control.ex_brki_hit_i_2\ => \Performance_Debug_Control.ex_brki_hit_i_2\,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\(0) => \Performance_Debug_Control.ex_brki_hit_i_2_0\(0),
      Q(3 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(5 downto 2),
      \Using_FPGA.Native\ => \^of_gpr_op3_rd_addr\(2),
      \Using_FPGA.Native_0\ => \^of_gpr_op3_rd_addr\(3),
      \Using_FPGA.Native_1\ => \^of_gpr_op3_rd_addr\(4),
      \Using_FPGA.Native_10\ => \^of_imm_data\(3),
      \Using_FPGA.Native_11\ => \^of_imm_data\(4),
      \Using_FPGA.Native_12\ => \^of_imm_data\(5),
      \Using_FPGA.Native_13\ => \^of_imm_data\(6),
      \Using_FPGA.Native_14\ => \^of_imm_data\(7),
      \Using_FPGA.Native_15\ => \^of_imm_data\(8),
      \Using_FPGA.Native_16\(1) => \^of_imm_data\(9),
      \Using_FPGA.Native_16\(0) => \^of_imm_data\(10),
      \Using_FPGA.Native_17\ => \^of_imm_data\(11),
      \Using_FPGA.Native_18\ => \^of_imm_data\(12),
      \Using_FPGA.Native_19\ => \^of_imm_data\(13),
      \Using_FPGA.Native_2\ => \^of_gpr_op1_rd_addr\(0),
      \Using_FPGA.Native_20\ => \^of_imm_data\(14),
      \Using_FPGA.Native_21\ => \^of_imm_data\(15),
      \Using_FPGA.Native_22\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_23\(0) => if_sel_input(0),
      \Using_FPGA.Native_24\ => \^using_fpga.native_0\(0),
      \Using_FPGA.Native_25\ => PreFetch_Buffer_I1_n_47,
      \Using_FPGA.Native_26\ => PreFetch_Buffer_I1_n_56,
      \Using_FPGA.Native_27\(1) => PreFetch_Buffer_I1_n_57,
      \Using_FPGA.Native_27\(0) => PreFetch_Buffer_I1_n_58,
      \Using_FPGA.Native_28\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_29\ => PreFetch_Buffer_I1_n_70,
      \Using_FPGA.Native_3\ => \^of_gpr_op1_rd_addr\(1),
      \Using_FPGA.Native_30\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_31\ => PreFetch_Buffer_I1_n_78,
      \Using_FPGA.Native_32\ => PreFetch_Buffer_I1_n_79,
      \Using_FPGA.Native_33\ => PreFetch_Buffer_I1_n_80,
      \Using_FPGA.Native_34\ => PreFetch_Buffer_I1_n_81,
      \Using_FPGA.Native_35\ => PreFetch_Buffer_I1_n_82,
      \Using_FPGA.Native_36\(1) => PreFetch_Buffer_I1_n_84,
      \Using_FPGA.Native_36\(0) => PreFetch_Buffer_I1_n_85,
      \Using_FPGA.Native_37\ => PreFetch_Buffer_I1_n_100,
      \Using_FPGA.Native_38\ => PreFetch_Buffer_I1_n_101,
      \Using_FPGA.Native_39\ => PreFetch_Buffer_I1_n_108,
      \Using_FPGA.Native_4\ => \^of_gpr_op1_rd_addr\(2),
      \Using_FPGA.Native_40\ => PreFetch_Buffer_I1_n_112,
      \Using_FPGA.Native_41\ => PreFetch_Buffer_I1_n_121,
      \Using_FPGA.Native_42\ => PreFetch_Buffer_I1_n_122,
      \Using_FPGA.Native_43\ => PreFetch_Buffer_I1_n_123,
      \Using_FPGA.Native_44\ => PreFetch_Buffer_I1_n_125,
      \Using_FPGA.Native_45\ => PreFetch_Buffer_I1_n_126,
      \Using_FPGA.Native_46\ => PreFetch_Buffer_I1_n_127,
      \Using_FPGA.Native_47\ => PreFetch_Buffer_I1_n_128,
      \Using_FPGA.Native_48\ => PreFetch_Buffer_I1_n_129,
      \Using_FPGA.Native_49\(0) => \Using_FPGA.Native_29\(0),
      \Using_FPGA.Native_5\ => \^of_gpr_op1_rd_addr\(3),
      \Using_FPGA.Native_50\(0) => \Using_FPGA.Native_42\(0),
      \Using_FPGA.Native_51\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_6\ => \^of_gpr_op1_rd_addr\(4),
      \Using_FPGA.Native_7\ => \^of_imm_data\(0),
      \Using_FPGA.Native_8\ => \^of_imm_data\(1),
      \Using_FPGA.Native_9\ => \^of_imm_data\(2),
      \Using_FPGA.Native_i_1__73\ => ex_jump_nodelay_reg_0,
      \Using_FPGA.Native_i_1__73_0\ => \mem_pc_i_reg[0]_0\,
      \Using_FPGA.Native_i_1__73_1\ => \^if_missed_fetch\,
      \Using_FPGA.Native_i_3__56\ => \Using_FPGA.Native_i_13__1_n_0\,
      \Using_FPGA.Native_i_4__5\ => \Using_FPGA.Native_i_14__1_n_0\,
      \Using_FPGA.Native_i_4__5_0\(1) => \ex_gpr_write_addr_reg_n_0_[0]\,
      \Using_FPGA.Native_i_4__5_0\(0) => I2,
      \Using_FPGA.Native_i_4__5_1\ => \Using_FPGA.Native_i_10__5_n_0\,
      \Using_FPGA.Native_i_8__5\(4 downto 0) => \^wb_exception_kind_i_reg[30]_0\(4 downto 0),
      \Using_FPGA.Native_i_9__5\ => \ex_gpr_write_addr_reg_n_0_[4]\,
      ex_Instr_Excep_combo1 => ex_Instr_Excep_combo1,
      ex_Instr_Excep_combo_reg => PreFetch_Buffer_I1_n_50,
      ex_Instr_Excep_combo_reg_0 => ex_Instr_Excep_combo_i_2_n_0,
      ex_Instr_Excep_combo_reg_1 => ex_Instr_Excep_combo_reg_n_0,
      ex_MSR(0) => ex_MSR(0),
      ex_MSR_Clear_EIP => ex_MSR_Clear_EIP,
      ex_MSR_set_decode => ex_MSR_set_decode,
      ex_atomic_Instruction_Pair0 => ex_atomic_Instruction_Pair0,
      ex_branch_instr0 => ex_branch_instr0,
      ex_branch_with_delayslot_i_reg_0 => \^wb_halted\,
      ex_branch_with_delayslot_reg => ex_Interrupt_Brk_combo_i_4_n_0,
      ex_enable_sext_shift_i => ex_enable_sext_shift_i,
      \ex_gpr_write_addr_reg[0]\ => of_op2_sel(1),
      \ex_gpr_write_addr_reg[0]_0\ => of_op1_sel(1),
      \ex_gpr_write_dbg__0\ => \ex_gpr_write_dbg__0\,
      ex_gpr_write_reg => PreFetch_Buffer_I1_n_48,
      ex_gpr_write_reg_0 => mem_valid_i_2_n_0,
      ex_gpr_write_reg_1 => ex_gpr_write_reg_n_0,
      ex_is_div_instr_I_reg => PreFetch_Buffer_I1_n_49,
      ex_is_div_instr_I_reg_0 => \^using_fpga.native_1\,
      ex_is_multi_instr20 => ex_is_multi_instr20,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      ex_is_multi_or_load_instr0 => ex_is_multi_or_load_instr0,
      ex_is_multi_or_load_instr_reg => PreFetch_Buffer_I1_n_103,
      ex_jump => ex_jump,
      ex_load_shift_carry0 => ex_load_shift_carry0,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_decode_cmb => ex_mbar_decode_cmb,
      ex_mbar_is_sleep => ex_mbar_is_sleep,
      ex_mbar_is_sleep_cmb => ex_mbar_is_sleep_cmb,
      ex_move_to_MSR_instr130_out => ex_move_to_MSR_instr130_out,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      ex_sel_alu_i_reg(30 downto 0) => ex_sel_alu_i_reg_0(30 downto 0),
      ex_sel_alu_i_reg_0(16 downto 0) => ex_sel_alu_i_reg_1(16 downto 0),
      ex_sel_alu_i_reg_1(16 downto 0) => ex_sel_alu_i_reg_2(16 downto 0),
      ex_set_MSR_EE_instr => ex_set_MSR_EE_instr,
      ex_set_bip => ex_set_bip,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_fetch_in_progress => if_fetch_in_progress,
      if_fetch_in_progress_reg(1 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(153 downto 152),
      if_fetch_in_progress_reg_0 => PreFetch_Buffer_I1_n_119,
      if_fetch_in_progress_reg_1 => if_fetch_in_progress_reg_0,
      if_fetch_in_progress_reg_2(16) => \^performance_debug_control.dbg_state_nohalt_reg\(154),
      if_fetch_in_progress_reg_2(15 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(22 downto 7),
      if_pre_buffer_addr(0) => if_pre_buffer_addr(1),
      \in\(33) => Y(0),
      \in\(32) => Y(1),
      \in\(31) => Y(2),
      \in\(30) => Y(3),
      \in\(29) => Y(4),
      \in\(28) => Y(5),
      \in\(27) => Y(6),
      \in\(26) => Y(7),
      \in\(25) => Y(8),
      \in\(24) => Y(9),
      \in\(23) => Y(10),
      \in\(22) => Y(21),
      \in\(21) => Y(22),
      \in\(20) => Y(23),
      \in\(19) => Y(24),
      \in\(18) => Y(25),
      \in\(17) => Y(26),
      \in\(16) => Y(27),
      \in\(15) => Y(28),
      \in\(14) => Y(29),
      \in\(13) => Y(30),
      \in\(12) => Y(31),
      \in\(11 downto 10) => \in\(1 downto 0),
      \in\(9) => Y(11),
      \in\(8) => Y(12),
      \in\(7) => Y(13),
      \in\(6) => Y(14),
      \in\(5) => Y(15),
      \in\(4) => Y(16),
      \in\(3) => Y(17),
      \in\(2) => Y(18),
      \in\(1) => Y(19),
      \in\(0) => Y(20),
      in0 => if_fetch_without_full_or_jump,
      interrupt_address_d1(0 to 31) => interrupt_address_d1(0 to 31),
      \mem_gpr_write_addr_reg[0]\ => of_op1_sel(0),
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      mem_is_multi_or_load_instr_reg => PreFetch_Buffer_I1_n_104,
      of_Illegal_Opcode => of_Illegal_Opcode,
      of_Sel_SPR_BTR => of_Sel_SPR_BTR,
      of_Sel_SPR_EAR => of_Sel_SPR_EAR,
      of_Sel_SPR_EDR => of_Sel_SPR_EDR,
      of_Sel_SPR_ESR => of_Sel_SPR_ESR,
      of_Sel_SPR_MSR100_out => of_Sel_SPR_MSR100_out,
      of_Take_Exception => of_Take_Exception,
      of_branch_with_delayslot140_out => of_branch_with_delayslot140_out,
      of_instr_raw(5) => of_instr_raw(0),
      of_instr_raw(4) => of_instr_raw(1),
      of_instr_raw(3) => of_instr_raw(2),
      of_instr_raw(2) => of_instr_raw(3),
      of_instr_raw(1) => of_instr_raw(4),
      of_instr_raw(0) => of_instr_raw(5),
      of_is_bsifi_s => of_is_bsifi_s,
      of_op1_sel_spr => of_op1_sel_spr,
      of_op1_sel_spr_pc => \^of_op1_sel_spr_pc\,
      of_pipe_ctrl_reg0 => of_pipe_ctrl_reg0,
      of_predecode_raw(9) => of_predecode_raw(1),
      of_predecode_raw(8) => of_predecode_raw(2),
      of_predecode_raw(7) => of_predecode_raw(3),
      of_predecode_raw(6) => of_predecode_raw(4),
      of_predecode_raw(5) => of_predecode_raw(5),
      of_predecode_raw(4) => of_predecode_raw(6),
      of_predecode_raw(3) => of_predecode_raw(7),
      of_predecode_raw(2) => of_predecode_raw(8),
      of_predecode_raw(1) => of_predecode_raw(9),
      of_predecode_raw(0) => of_predecode_raw(10),
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1,
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2,
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2,
      of_read_imm_reg => of_read_imm_reg,
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1,
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2,
      of_read_mem_write_op3_conflict_part1 => of_read_mem_write_op3_conflict_part1,
      of_read_mem_write_op3_conflict_part2 => of_read_mem_write_op3_conflict_part2,
      of_valid => of_valid,
      \out\ => if_fetch_without_full_or_jump,
      p_2_in => p_2_in,
      sync_reset => reset_bool_for_rst,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      wb_exception => wb_exception,
      wb_exception_i_reg => PreFetch_Buffer_I1_n_120,
      \wb_gpr_write_addr_reg[1]\ => of_op2_sel(0),
      \wb_gpr_write_addr_reg[1]_0\ => of_op3_sel(1),
      \wb_gpr_write_addr_reg[1]_1\ => of_op3_sel(0)
    );
\Q[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => MEM_Is_Div_Instr,
      I2 => \Q_reg[32]\,
      I3 => EX_Op1_Zero,
      I4 => \^ex_start_div\,
      O => \Use_Async_Reset.sync_reset_reg\(0)
    );
\R[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_start_div\,
      I1 => \R_reg[32]\,
      O => div_busy_reg(0)
    );
Read_Strobe_INST_0_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => \^ex_valid\,
      O => Read_Strobe_INST_0_i_2_n_0
    );
Read_Strobe_INST_0_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFAE"
    )
        port map (
      I0 => \^ex_interrupt_i\,
      I1 => \Using_FPGA.Native_47\,
      I2 => \Using_FPGA.Native_48\,
      I3 => ex_Illegal_Opcode,
      I4 => ex_IExt_Exception,
      O => Read_Strobe_INST_0_i_6_n_0
    );
Sleep_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => Sleep_Out,
      O => Sleep
    );
Trace_Exception_Taken_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FBFF0000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I4 => wb_exception,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(6)
    );
Trace_MB_Halted_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAEAAAAAAAAAA"
    )
        port map (
      I0 => mb_halted_1_reg,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(154)
    );
\Trace_New_Reg_Value[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(15),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3007]_0\,
      I5 => \LOCKSTEP_Out_reg[3007]_1\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(22)
    );
\Trace_New_Reg_Value[10]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(5),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3017]\,
      I5 => \LOCKSTEP_Out_reg[3017]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(12)
    );
\Trace_New_Reg_Value[11]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3018]\,
      I5 => \LOCKSTEP_Out_reg[3018]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(11)
    );
\Trace_New_Reg_Value[12]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(3),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3019]\,
      I5 => \LOCKSTEP_Out_reg[3019]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(10)
    );
\Trace_New_Reg_Value[13]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(2),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3020]\,
      I5 => \LOCKSTEP_Out_reg[3020]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(9)
    );
\Trace_New_Reg_Value[14]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(1),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3021]\,
      I5 => \LOCKSTEP_Out_reg[3021]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(8)
    );
\Trace_New_Reg_Value[15]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(0),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3022]\,
      I5 => \LOCKSTEP_Out_reg[3022]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(7)
    );
\Trace_New_Reg_Value[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(14),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3008]\,
      I5 => \LOCKSTEP_Out_reg[3008]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(21)
    );
\Trace_New_Reg_Value[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(13),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3009]\,
      I5 => \LOCKSTEP_Out_reg[3009]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(20)
    );
\Trace_New_Reg_Value[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(12),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3010]\,
      I5 => \LOCKSTEP_Out_reg[3010]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(19)
    );
\Trace_New_Reg_Value[4]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(11),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3011]\,
      I5 => \LOCKSTEP_Out_reg[3011]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(18)
    );
\Trace_New_Reg_Value[5]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(10),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3012]\,
      I5 => \LOCKSTEP_Out_reg[3012]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(17)
    );
\Trace_New_Reg_Value[6]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(9),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3013]\,
      I5 => \LOCKSTEP_Out_reg[3013]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(16)
    );
\Trace_New_Reg_Value[7]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(8),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3014]\,
      I5 => \LOCKSTEP_Out_reg[3014]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(15)
    );
\Trace_New_Reg_Value[8]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(7),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3015]\,
      I5 => \LOCKSTEP_Out_reg[3015]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(14)
    );
\Trace_New_Reg_Value[9]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[3007]\(6),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \LOCKSTEP_Out_reg[3016]\,
      I5 => \LOCKSTEP_Out_reg[3016]_0\,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(13)
    );
\Trace_Reg_Addr[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF0000FF00"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => wb_exception,
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \^wb_exception_kind_i_reg[30]_0\(4),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(27)
    );
\Trace_Reg_Addr[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF00FF10000000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => wb_exception,
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \^wb_exception_kind_i_reg[30]_0\(3),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(26)
    );
\Trace_Reg_Addr[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF00FF10000000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => wb_exception,
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \^wb_exception_kind_i_reg[30]_0\(2),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(25)
    );
\Trace_Reg_Addr[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF00FF10000000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => wb_exception,
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \^wb_exception_kind_i_reg[30]_0\(1),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(24)
    );
\Trace_Reg_Addr[4]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF0000FF00"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => wb_exception,
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \^wb_exception_kind_i_reg[30]_0\(0),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(23)
    );
Trace_Reg_Write_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEFEEEFFFFFEEE"
    )
        port map (
      I0 => wb_MSR_Clear_IE,
      I1 => wb_reset,
      I2 => \^wb_valid_reg_0\,
      I3 => wb_gpr_write_i,
      I4 => wb_exception,
      I5 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      O => \^performance_debug_control.dbg_state_nohalt_reg\(28)
    );
Trace_Reg_Write_INST_0_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000800"
    )
        port map (
      I0 => wb_exception,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      O => wb_MSR_Clear_IE
    );
Trace_Valid_Instr_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAA2AAAAAAAAAA"
    )
        port map (
      I0 => \^wb_valid_reg_0\,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => \^performance_debug_control.dbg_state_nohalt_reg\(29)
    );
Trace_WB_Jump_Taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_jump_taken,
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(1),
      R => reset_bool_for_rst
    );
\Use_HW_BS.mem_left_shift_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"32"
    )
        port map (
      I0 => ex_fpu_double,
      I1 => \^ex_bit_extract\,
      I2 => \^ex_bit_insert\,
      O => \^ex_left_shift_i\
    );
\Use_HW_BS.mem_mux3[0]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(28),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(3),
      O => \^ex_op1_reg[1]_0\(1)
    );
\Use_HW_BS.mem_mux3[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(6),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(7),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(4),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(5),
      O => \^ex_op2_reg[30]\
    );
\Use_HW_BS.mem_mux3[0]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(25),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(6),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(6)
    );
\Use_HW_BS.mem_mux3[0]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(24),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(7),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(7)
    );
\Use_HW_BS.mem_mux3[0]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(27),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(4),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(4)
    );
\Use_HW_BS.mem_mux3[0]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(26),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(5),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(5)
    );
\Use_HW_BS.mem_mux3[0]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(30),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(1),
      O => \^ex_op1_reg[1]_0\(2)
    );
\Use_HW_BS.mem_mux3[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[10]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[6]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(20)
    );
\Use_HW_BS.mem_mux3[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(16),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(17),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(14),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(15),
      O => \Use_HW_BS.mem_mux3[10]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[10]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(14),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(17),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(17)
    );
\Use_HW_BS.mem_mux3[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[11]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[7]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(19)
    );
\Use_HW_BS.mem_mux3[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(17),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(18),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(15),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(16),
      O => \Use_HW_BS.mem_mux3[11]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[11]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(13),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(18),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(18)
    );
\Use_HW_BS.mem_mux3[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[12]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[8]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(18)
    );
\Use_HW_BS.mem_mux3[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(18),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(19),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(16),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(17),
      O => \Use_HW_BS.mem_mux3[12]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[12]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(12),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(19),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(19)
    );
\Use_HW_BS.mem_mux3[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[13]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[9]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(17)
    );
\Use_HW_BS.mem_mux3[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(19),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(20),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(17),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(18),
      O => \Use_HW_BS.mem_mux3[13]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[13]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(11),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(20),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(20)
    );
\Use_HW_BS.mem_mux3[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[14]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[10]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(16)
    );
\Use_HW_BS.mem_mux3[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(20),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(21),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(18),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(19),
      O => \Use_HW_BS.mem_mux3[14]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[14]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(10),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(21),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(21)
    );
\Use_HW_BS.mem_mux3[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[15]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[11]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(15)
    );
\Use_HW_BS.mem_mux3[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(21),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(22),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(19),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(20),
      O => \Use_HW_BS.mem_mux3[15]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[15]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(9),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(22),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(22)
    );
\Use_HW_BS.mem_mux3[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[16]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[12]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(14)
    );
\Use_HW_BS.mem_mux3[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(22),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(23),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(20),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(21),
      O => \Use_HW_BS.mem_mux3[16]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[16]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(8),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(23),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(23)
    );
\Use_HW_BS.mem_mux3[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[17]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[13]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(13)
    );
\Use_HW_BS.mem_mux3[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(23),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(24),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(21),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(22),
      O => \Use_HW_BS.mem_mux3[17]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[17]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(7),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(24),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(24)
    );
\Use_HW_BS.mem_mux3[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[18]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[14]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(12)
    );
\Use_HW_BS.mem_mux3[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(24),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(25),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(22),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(23),
      O => \Use_HW_BS.mem_mux3[18]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[18]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(6),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(25),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(25)
    );
\Use_HW_BS.mem_mux3[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[19]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[15]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(11)
    );
\Use_HW_BS.mem_mux3[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(25),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(26),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(23),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(24),
      O => \Use_HW_BS.mem_mux3[19]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[19]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(5),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(26),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(26)
    );
\Use_HW_BS.mem_mux3[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[1]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[1]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(29)
    );
\Use_HW_BS.mem_mux3[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(7),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(8),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(5),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(6),
      O => \Use_HW_BS.mem_mux3[1]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \^ex_op1_reg[1]_0\(1),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(4),
      I2 => \^ex_op1_reg[1]_0\(2),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(2),
      O => \Use_HW_BS.mem_mux3[1]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(23),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(8),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(8)
    );
\Use_HW_BS.mem_mux3[1]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(29),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(2),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(2)
    );
\Use_HW_BS.mem_mux3[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[20]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[16]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(10)
    );
\Use_HW_BS.mem_mux3[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(26),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(27),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(24),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(25),
      O => \Use_HW_BS.mem_mux3[20]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[20]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(4),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(27),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(27)
    );
\Use_HW_BS.mem_mux3[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[21]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[17]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(9)
    );
\Use_HW_BS.mem_mux3[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(27),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(28),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(25),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(26),
      O => \Use_HW_BS.mem_mux3[21]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[21]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(3),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(28),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(28)
    );
\Use_HW_BS.mem_mux3[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[22]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[18]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(8)
    );
\Use_HW_BS.mem_mux3[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(28),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(29),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(26),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(27),
      O => \Use_HW_BS.mem_mux3[22]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[22]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(2),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(29),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(29)
    );
\Use_HW_BS.mem_mux3[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[23]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[19]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(7)
    );
\Use_HW_BS.mem_mux3[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(29),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(27),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(28),
      O => \Use_HW_BS.mem_mux3[23]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[24]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[20]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(6)
    );
\Use_HW_BS.mem_mux3[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30),
      I1 => \^ex_op1_reg[1]_0\(0),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(28),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(29),
      O => \Use_HW_BS.mem_mux3[24]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[25]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[21]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(5)
    );
\Use_HW_BS.mem_mux3[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \^ex_op1_reg[1]_0\(0),
      I1 => \^ex_void_bit\,
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(29),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30),
      O => \Use_HW_BS.mem_mux3[25]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[26]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[22]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(4)
    );
\Use_HW_BS.mem_mux3[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAFCAA0C"
    )
        port map (
      I0 => \^ex_void_bit\,
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30),
      I2 => Q(0),
      I3 => Q(1),
      I4 => \^ex_op1_reg[1]_0\(0),
      O => \Use_HW_BS.mem_mux3[26]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FE02FFFFFE020000"
    )
        port map (
      I0 => \^ex_op1_reg[1]_0\(0),
      I1 => Q(0),
      I2 => Q(1),
      I3 => \^ex_void_bit\,
      I4 => Q(2),
      I5 => \Use_HW_BS.mem_mux3[23]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(3)
    );
\Use_HW_BS.mem_mux3[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(0),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      O => \^ex_op1_reg[1]_0\(0)
    );
\Use_HW_BS.mem_mux3[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00C0AAAA"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[24]_i_2_n_0\,
      I1 => ex_arith_shift,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      I3 => \^ex_left_shift_i\,
      I4 => Q(2),
      O => \EX_Op2_reg[29]\(2)
    );
\Use_HW_BS.mem_mux3[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00C0AAAA"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[25]_i_2_n_0\,
      I1 => ex_arith_shift,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      I3 => \^ex_left_shift_i\,
      I4 => Q(2),
      O => \EX_Op2_reg[29]\(1)
    );
\Use_HW_BS.mem_mux3[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[2]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[2]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(28)
    );
\Use_HW_BS.mem_mux3[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(8),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(9),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(6),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(7),
      O => \Use_HW_BS.mem_mux3[2]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(4),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(5),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(2),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \^ex_op1_reg[1]_0\(1),
      O => \Use_HW_BS.mem_mux3[2]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[2]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(22),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(9),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(9)
    );
\Use_HW_BS.mem_mux3[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000FEF20E02"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30),
      I1 => Q(0),
      I2 => Q(1),
      I3 => \^ex_op1_reg[1]_0\(0),
      I4 => \^ex_void_bit\,
      I5 => Q(2),
      O => \EX_Op2_reg[29]\(0)
    );
\Use_HW_BS.mem_mux3[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(1),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(30),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(30)
    );
\Use_HW_BS.mem_mux3[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[3]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[3]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(27)
    );
\Use_HW_BS.mem_mux3[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(9),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(10),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(7),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(8),
      O => \Use_HW_BS.mem_mux3[3]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(5),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(6),
      I2 => \^ex_op1_reg[1]_0\(1),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(4),
      O => \Use_HW_BS.mem_mux3[3]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[3]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(21),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(10),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(10)
    );
\Use_HW_BS.mem_mux3[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[4]_i_2_n_0\,
      I1 => Q(2),
      I2 => \^ex_op2_reg[30]\,
      O => \EX_Op2_reg[29]\(26)
    );
\Use_HW_BS.mem_mux3[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(10),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(11),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(8),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(9),
      O => \Use_HW_BS.mem_mux3[4]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(20),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(11),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(11)
    );
\Use_HW_BS.mem_mux3[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[5]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[1]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(25)
    );
\Use_HW_BS.mem_mux3[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(11),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(12),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(9),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(10),
      O => \Use_HW_BS.mem_mux3[5]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[5]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(19),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(12),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(12)
    );
\Use_HW_BS.mem_mux3[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[6]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[2]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(24)
    );
\Use_HW_BS.mem_mux3[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(12),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(13),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(10),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(11),
      O => \Use_HW_BS.mem_mux3[6]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[6]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(18),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(13),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(13)
    );
\Use_HW_BS.mem_mux3[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[7]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[3]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(23)
    );
\Use_HW_BS.mem_mux3[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(13),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(14),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(11),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(12),
      O => \Use_HW_BS.mem_mux3[7]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[7]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(17),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(14),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(14)
    );
\Use_HW_BS.mem_mux3[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[8]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[4]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(22)
    );
\Use_HW_BS.mem_mux3[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(14),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(15),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(12),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(13),
      O => \Use_HW_BS.mem_mux3[8]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[8]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(16),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(15),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(15)
    );
\Use_HW_BS.mem_mux3[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[9]_i_2_n_0\,
      I1 => Q(2),
      I2 => \Use_HW_BS.mem_mux3[5]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(21)
    );
\Use_HW_BS.mem_mux3[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFAAF0CC00AAF0"
    )
        port map (
      I0 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(15),
      I1 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(16),
      I2 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(13),
      I3 => Q(1),
      I4 => Q(0),
      I5 => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(14),
      O => \Use_HW_BS.mem_mux3[9]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[9]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FAFB0A08"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(15),
      I1 => ex_fpu_double,
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(16),
      O => \Data_Flow_I/Barrel_Shifter_I/ex_mux1\(16)
    );
\Use_HW_BS.mem_void_bit_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => EX_Is_BS_Instr,
      O => SR(0)
    );
\Use_HW_BS.mem_void_bit_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"88008808"
    )
        port map (
      I0 => ex_arith_shift,
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      I2 => \^ex_bit_insert\,
      I3 => \^ex_bit_extract\,
      I4 => ex_fpu_double,
      O => \^ex_void_bit\
    );
\Use_MuxCy[10].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and
     port map (
      lopt => lopt_28,
      lopt_1 => lopt_29,
      of_PipeRun_carry_1 => of_PipeRun_carry_1,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      use_Reg_Neg_S_reg => PreFetch_Buffer_I1_n_104
    );
\Use_MuxCy[11].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_72
     port map (
      OF_Take_Exception_hold => OF_Take_Exception_hold,
      OF_Take_Exception_hold_reg => \Use_MuxCy[11].OF_Piperun_Stage_n_5\,
      Q(0) => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      \Use_Async_Reset.sync_reset_reg\ => \Use_MuxCy[11].OF_Piperun_Stage_n_4\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_1\ => \^wb_load_esr\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_58\,
      \Using_FPGA.Native_3\ => \^restore_wb_msr_to_ex\,
      ex_jump => ex_jump,
      ex_jump_nodelay_reg => \Use_MuxCy[11].OF_Piperun_Stage_n_1\,
      ex_jump_nodelay_reg_0 => ex_jump_nodelay_reg_n_0,
      ex_jump_nodelay_reg_1 => ex_jump_nodelay_i_2_n_0,
      ex_valid_keep => ex_valid_keep,
      ex_valid_keep_reg => \Use_MuxCy[11].OF_Piperun_Stage_n_2\,
      mem_MSR(0) => mem_MSR(0),
      of_MSR(1) => of_MSR(2),
      of_MSR(0) => of_MSR(0),
      of_PipeRun_carry_1 => of_PipeRun_carry_1,
      of_PipeRun_for_ce => of_PipeRun_for_ce,
      of_Take_Interrupt_hold => of_Take_Interrupt_hold,
      of_Take_Interrupt_hold_reg => \Use_MuxCy[11].OF_Piperun_Stage_n_3\,
      of_Take_Interrupt_hold_reg_0 => ex_Interrupt_Brk_combo_i_4_n_0,
      of_branch_with_delayslot140_out => of_branch_with_delayslot140_out,
      of_next_ex_valid => of_next_ex_valid,
      of_pause => \^of_pause\,
      p_2_out(1) => \Data_Flow_I/msr_reg_i/p_2_out\(9),
      p_2_out(0) => \Data_Flow_I/msr_reg_i/p_2_out\(1),
      sync_reset => reset_bool_for_rst,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_exception => wb_exception
    );
\Use_MuxCy[1].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_73
     port map (
      \Using_FPGA.Native\ => \^mem_div_stall_i_reg\,
      lopt => lopt_13,
      lopt_1 => lopt_14,
      lopt_2 => lopt_15,
      of_PipeRun_carry_10 => of_PipeRun_carry_10
    );
\Use_MuxCy[2].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_74
     port map (
      \Using_FPGA.Native\ => jump_logic_I1_n_7,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => \Use_MuxCy[2].OF_Piperun_Stage_n_1\,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      of_PipeRun_carry_10 => of_PipeRun_carry_10,
      of_PipeRun_carry_9 => of_PipeRun_carry_9
    );
\Use_MuxCy[3].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_75
     port map (
      E(0) => \Use_MuxCy[3].OF_Piperun_Stage_n_2\,
      I0 => I0,
      I4 => I4,
      \Using_FPGA.Native\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_53\,
      \Using_FPGA.Native_11\ => \^wb_load_esr\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_54\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_58\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_57\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_4\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_52\,
      \Using_FPGA.Native_6\ => \^restore_wb_msr_to_ex\,
      \Using_FPGA.Native_7\(0) => \Use_HW_BS.mem_mux3_reg[29]\(6),
      \Using_FPGA.Native_8\ => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_i_3__4_n_0\,
      ex_MSR(0) => ex_MSR(0),
      ex_Write_DCache_decode_cmb => ex_Write_DCache_decode_cmb,
      ex_Write_ICache_i => ex_Write_ICache_i,
      \ex_gpr_write_addr_reg[2]\ => \Use_MuxCy[3].OF_Piperun_Stage_n_4\,
      \ex_gpr_write_addr_reg[4]\ => \Use_MuxCy[3].OF_Piperun_Stage_n_9\,
      \ex_gpr_write_dbg__0\ => \ex_gpr_write_dbg__0\,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_write_dcache_instr => ex_write_dcache_instr,
      in0 => ex_Write_ICache_i_cmb,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => of_pipe_ctrl_reg0,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => A,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0\,
      mem_MSR(1 downto 0) => mem_MSR(1 downto 0),
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_gpr_write_dbg_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_7\,
      mem_gpr_write_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_8\,
      mem_gpr_write_reg_0 => ex_gpr_write_reg_n_0,
      \mem_pc_i_reg[0]\ => \^wb_halted\,
      \mem_pc_i_reg[0]_0\ => \mem_pc_i_reg[0]_0\,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_1\,
      mem_valid_reg_0 => mem_valid_i_2_n_0,
      mem_valid_reg_1 => \^mem_exception_taken\,
      mem_valid_reg_2 => Read_Strobe_INST_0_i_2_n_0,
      mem_valid_reg_3 => \^mem_div_stall_i_reg\,
      of_PipeRun_carry_9 => of_PipeRun_carry_9,
      of_clear_MSR_BIP_hold_cmb108_out => of_clear_MSR_BIP_hold_cmb108_out,
      of_clear_MSR_BIP_hold_s => of_clear_MSR_BIP_hold_s,
      of_set_MSR_EE_hold_reg => of_set_MSR_EE_hold_reg_n_0,
      of_set_MSR_IE_hold_reg => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      of_set_MSR_IE_hold_reg_0 => \ex_gpr_write_addr_reg_n_0_[4]\,
      of_set_MSR_IE_hold_reg_1 => of_set_MSR_IE_hold_reg_n_0,
      p_2_out(2 downto 1) => \Data_Flow_I/msr_reg_i/p_2_out\(9 downto 8),
      p_2_out(0) => \Data_Flow_I/msr_reg_i/p_2_out\(1),
      sync_reset => reset_bool_for_rst,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_exception => wb_exception
    );
\Use_MuxCy[4].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_76
     port map (
      \Using_FPGA.Native\ => \^using_fpga.native_1\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      of_PipeRun_carry_7 => of_PipeRun_carry_7,
      of_pipe_ctrl_reg0 => of_pipe_ctrl_reg0
    );
\Use_MuxCy[5].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_77
     port map (
      A => A,
      lopt => lopt_20,
      lopt_1 => lopt_21,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_PipeRun_carry_7 => of_PipeRun_carry_7
    );
\Use_MuxCy[6].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_78
     port map (
      \Using_FPGA.Native\ => \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_PipeRun_carry_6 => of_PipeRun_carry_6
    );
\Use_MuxCy[7].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_79
     port map (
      \Using_FPGA.Native\ => PreFetch_Buffer_I1_n_79,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => PreFetch_Buffer_I1_n_80,
      lopt_3 => lopt_26,
      lopt_4 => lopt_27,
      lopt_5 => PreFetch_Buffer_I1_n_103,
      lopt_6 => lopt_28,
      lopt_7 => lopt_29,
      lopt_8 => PreFetch_Buffer_I1_n_104,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_PipeRun_carry_5 => of_PipeRun_carry_5
    );
\Use_MuxCy[8].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_80
     port map (
      \Using_FPGA.Native\ => PreFetch_Buffer_I1_n_80,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_PipeRun_carry_4 => of_PipeRun_carry_4
    );
\Use_MuxCy[9].OF_Piperun_Stage\: entity work.mb_design_microblaze_0_1_carry_and_81
     port map (
      \Using_FPGA.Native\ => PreFetch_Buffer_I1_n_103,
      lopt => lopt_26,
      lopt_1 => lopt_27,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_PipeRun_carry_3 => of_PipeRun_carry_3
    );
\Using_FPGA.Gen_Bits[28].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(28),
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_44\,
      sync_reset => reset_bool_for_rst,
      \wb_exception_kind_i_reg[28]\ => \^mem_exception_from_ex\
    );
\Using_FPGA.Gen_Bits[30].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_82
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(30),
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \^ex_valid\,
      \Using_FPGA.Native_2\ => \^ex_interrupt_i\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_47\,
      ex_IExt_Exception => ex_IExt_Exception,
      ex_Illegal_Opcode => ex_Illegal_Opcode,
      sync_reset => reset_bool_for_rst,
      \wb_exception_kind_i_reg[30]\ => \^mem_exception_from_ex\
    );
\Using_FPGA.Gen_Bits[31].MEM_EX_Result_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_83
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(31),
      DUE => DUE,
      MEM_DAXI_Exception => MEM_DAXI_Exception,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_2\ => \^ex_valid\,
      \Using_FPGA.Native_3\ => \^ex_interrupt_i\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_46\,
      ex_IExt_Exception => ex_IExt_Exception,
      ex_Illegal_Opcode => ex_Illegal_Opcode,
      mem_MSR(0) => mem_MSR(1),
      sync_reset => reset_bool_for_rst,
      \wb_exception_kind_i_reg[31]\ => \^mem_exception_from_ex\,
      \wb_exception_kind_i_reg[31]_0\ => \wb_exception_kind_i_reg[31]_0\
    );
\Using_FPGA.Native_I2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_div_unsigned\,
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      O => \FPGA_Impl1.D_Handle[0].D_Sel_reg\
    );
\Using_FPGA.Native_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFB"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \Using_FPGA.Native_i_16_n_0\,
      I2 => \Using_FPGA.Native_i_3\,
      I3 => \^ex_clz_instr\,
      O => EX_Pattern_Cmp_Sel_reg_0
    );
\Using_FPGA.Native_i_10__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => Read_Strobe_INST_0_i_6_n_0,
      I2 => ex_Take_Intr_or_Exc,
      I3 => \^ex_valid\,
      O => ex_MSRSET
    );
\Using_FPGA.Native_i_10__5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => mem_gpr_write,
      I1 => mem_valid_instr,
      O => \Using_FPGA.Native_i_10__5_n_0\
    );
\Using_FPGA.Native_i_11__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => ex_MSR_clear_decode,
      I1 => Read_Strobe_INST_0_i_6_n_0,
      I2 => ex_Take_Intr_or_Exc,
      I3 => \^ex_valid\,
      O => ex_MSRCLR
    );
\Using_FPGA.Native_i_13__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5515"
    )
        port map (
      I0 => wb_reset,
      I1 => \^wb_valid_reg_0\,
      I2 => wb_gpr_write_i,
      I3 => wb_exception,
      O => \Using_FPGA.Native_i_13__1_n_0\
    );
\Using_FPGA.Native_i_14__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_valid\,
      I1 => ex_gpr_write_reg_n_0,
      O => \Using_FPGA.Native_i_14__1_n_0\
    );
\Using_FPGA.Native_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF15D5FFFFFFFF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(0),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(1),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \Using_FPGA.Native_i_16_n_0\
    );
\Using_FPGA.Native_i_1__116\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFDFFFFF"
    )
        port map (
      I0 => wb_exception,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I5 => \mem_pc_i_reg[0]_0\,
      O => MEM_WB_Sel_Mem_PC
    );
\Using_FPGA.Native_i_1__120\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000010000000"
    )
        port map (
      I0 => \^mem_exception_taken\,
      I1 => wb_exception,
      I2 => ex_branch_with_delayslot,
      I3 => ex_branch_instr,
      I4 => ex_MSR(0),
      I5 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_load_btr
    );
\Using_FPGA.Native_i_1__34\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      O => I1
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000ACCC00000000"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(8),
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(7),
      I2 => \^ex_sext_op_reg[0]_0\(1),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \EX_Op1_reg[23]\
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBBBFBFBBBBBFBF"
    )
        port map (
      I0 => \^ex_swap_instr\,
      I1 => \^ex_enable_sext_shift\,
      I2 => \out\,
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \^ex_sext_op_reg[0]_0\(1),
      I5 => ex_shift_op(0),
      O => EX_SWAP_Instr_reg_0
    );
\Using_FPGA.Native_i_2__124\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5404000055555555"
    )
        port map (
      I0 => \^ex_clz_instr\,
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(20),
      I2 => \^ex_swap_byte_instr\,
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(28),
      I4 => \^ex_swap_instr\,
      I5 => \Using_FPGA.Native_i_6_n_0\,
      O => EX_CLZ_Instr_reg_1
    );
\Using_FPGA.Native_i_2__125\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5404000055555555"
    )
        port map (
      I0 => \^ex_clz_instr\,
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(21),
      I2 => \^ex_swap_byte_instr\,
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(29),
      I4 => \^ex_swap_instr\,
      I5 => \Using_FPGA.Native_i_5_n_0\,
      O => EX_CLZ_Instr_reg_2
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(17),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(16),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[14]\
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(18),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(17),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[13]\
    );
\Using_FPGA.Native_i_2__15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(19),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(18),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[12]\
    );
\Using_FPGA.Native_i_2__16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(20),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(19),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[11]\
    );
\Using_FPGA.Native_i_2__17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(21),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(20),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[10]\
    );
\Using_FPGA.Native_i_2__18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(22),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(21),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[9]\
    );
\Using_FPGA.Native_i_2__19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(23),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(22),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[8]\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBABBBAABBABBBBB"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \Using_FPGA.Native_i_6__2_n_0\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(2),
      I3 => \Using_FPGA.Native_i_4__0_n_0\,
      I4 => \Using_FPGA.Native_i_7_n_0\,
      I5 => \Use_HW_BS.mem_mux3_reg[29]\(1),
      O => EX_Pattern_Cmp_Sel_reg_1
    );
\Using_FPGA.Native_i_2__20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(24),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(23),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[7]\
    );
\Using_FPGA.Native_i_2__21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(25),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(24),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[6]\
    );
\Using_FPGA.Native_i_2__22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(26),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(25),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[5]\
    );
\Using_FPGA.Native_i_2__23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(27),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(26),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[4]\
    );
\Using_FPGA.Native_i_2__24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(28),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(27),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[3]\
    );
\Using_FPGA.Native_i_2__25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(29),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(28),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[2]\
    );
\Using_FPGA.Native_i_2__26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(30),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(29),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[1]\
    );
\Using_FPGA.Native_i_2__27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5055500044444444"
    )
        port map (
      I0 => \Using_FPGA.Native_i_4__0_n_0\,
      I1 => \out\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(30),
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op1_reg[0]\
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBABBBAABBABBBBB"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \Using_FPGA.Native_i_6__1_n_0\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(3),
      I3 => \Using_FPGA.Native_i_4__0_n_0\,
      I4 => \Using_FPGA.Native_i_7_n_0\,
      I5 => \Use_HW_BS.mem_mux3_reg[29]\(2),
      O => EX_Pattern_Cmp_Sel_reg_2
    );
\Using_FPGA.Native_i_2__32\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10FF0000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I4 => wb_exception,
      O => \^restore_wb_msr_to_ex\
    );
\Using_FPGA.Native_i_2__33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFCECACE"
    )
        port map (
      I0 => ex_set_MSR_IE_instr,
      I1 => \Using_FPGA.Native_i_3__5_n_0\,
      I2 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I3 => ex_move_to_MSR_instr,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(1),
      O => \Data_Flow_I/msr_reg_i/p_2_out\(1)
    );
\Using_FPGA.Native_i_2__35\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFCECACE"
    )
        port map (
      I0 => ex_set_MSR_EE_instr,
      I1 => \Using_FPGA.Native_i_3__7_n_0\,
      I2 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I3 => ex_move_to_MSR_instr,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(8),
      O => \Data_Flow_I/msr_reg_i/p_2_out\(8)
    );
\Using_FPGA.Native_i_2__36\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AA00AAE2"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__8_n_0\,
      I1 => ex_move_to_MSR_instr,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(9),
      I3 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I4 => ex_set_MSR_EE_instr,
      O => \Data_Flow_I/msr_reg_i/p_2_out\(9)
    );
\Using_FPGA.Native_i_2__39\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_start_div_i,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => \^ex_start_div\
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000EA2A00000000"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(6),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(7),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \EX_Op1_reg[25]\
    );
\Using_FPGA.Native_i_2__40\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_set_bip_reg_n_0,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_MSR_Set_SW_BIP
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BF80FFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_49\,
      I1 => ex_shift_op(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(31),
      I4 => \^ex_sext_op_reg[0]_0\(1),
      O => \Using_FPGA.Native_30\
    );
\Using_FPGA.Native_i_3__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5404000055555555"
    )
        port map (
      I0 => \^ex_clz_instr\,
      I1 => \Use_HW_BS.mem_mux3_reg[29]\(19),
      I2 => \^ex_swap_byte_instr\,
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(27),
      I4 => \^ex_swap_instr\,
      I5 => \Using_FPGA.Native_i_4_n_0\,
      O => EX_CLZ_Instr_reg_0
    );
\Using_FPGA.Native_i_3__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFEFFFECFD2020"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => Q(4),
      I3 => ex_MSR_clear_decode,
      I4 => \wb_exception_kind_i_reg[31]_0\,
      I5 => \Using_FPGA.Native_53\,
      O => \Using_FPGA.Native_i_3__4_n_0\
    );
\Using_FPGA.Native_i_3__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EFFF2020"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => Q(1),
      I3 => ex_MSR_clear_decode,
      I4 => \Using_FPGA.Native_54\,
      O => \Using_FPGA.Native_i_3__5_n_0\
    );
\Using_FPGA.Native_i_3__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EFFF2020"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => Q(3),
      I3 => ex_MSR_clear_decode,
      I4 => \Using_FPGA.Native_55\,
      O => \Using_FPGA.Native_i_3__6_n_0\
    );
\Using_FPGA.Native_i_3__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EFFF2020"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => Q(5),
      I3 => ex_MSR_clear_decode,
      I4 => ex_MSR(0),
      O => \Using_FPGA.Native_i_3__7_n_0\
    );
\Using_FPGA.Native_i_3__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EFFF2020"
    )
        port map (
      I0 => ex_MSR_set_decode,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => Q(6),
      I3 => ex_MSR_clear_decode,
      I4 => \Using_FPGA.Native_57\,
      O => \Using_FPGA.Native_i_3__8_n_0\
    );
\Using_FPGA.Native_i_3__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => LO,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => ex_load_alu_carry_reg_n_0,
      O => \Using_FPGA.Native_i_3__9_n_0\
    );
\Using_FPGA.Native_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF15D5FFFFFFFF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(3),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(4),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \Using_FPGA.Native_i_4_n_0\
    );
\Using_FPGA.Native_i_4__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_swap_instr\,
      I1 => \^ex_enable_sext_shift\,
      O => \Using_FPGA.Native_i_4__0_n_0\
    );
\Using_FPGA.Native_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF15D5FFFFFFFF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(5),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(6),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \Using_FPGA.Native_i_5_n_0\
    );
\Using_FPGA.Native_i_5__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_load_alu_carry_reg_n_0,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_MSR_Load_ALU_C
    );
\Using_FPGA.Native_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF15D5FFFFFFFF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(4),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[29]\(5),
      I4 => \^ex_swap_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \Using_FPGA.Native_i_6_n_0\
    );
\Using_FPGA.Native_i_6__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAEEEAAA"
    )
        port map (
      I0 => \^ex_clz_instr\,
      I1 => \^ex_swap_instr\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(26),
      I3 => \^ex_swap_byte_instr\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(18),
      O => \Using_FPGA.Native_i_6__1_n_0\
    );
\Using_FPGA.Native_i_6__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EAEEEAAA"
    )
        port map (
      I0 => \^ex_clz_instr\,
      I1 => \^ex_swap_instr\,
      I2 => \Use_HW_BS.mem_mux3_reg[29]\(25),
      I3 => \^ex_swap_byte_instr\,
      I4 => \Use_HW_BS.mem_mux3_reg[29]\(17),
      O => \Using_FPGA.Native_i_6__2_n_0\
    );
\Using_FPGA.Native_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(0),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      O => \Using_FPGA.Native_i_7_n_0\
    );
\Using_FPGA.Native_i_7__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_load_shift_carry,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_MSR_Load_Shift_C
    );
\Using_FPGA.Native_i_9__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0200"
    )
        port map (
      I0 => ex_move_to_MSR_instr,
      I1 => Read_Strobe_INST_0_i_6_n_0,
      I2 => ex_Take_Intr_or_Exc,
      I3 => \^ex_valid\,
      O => ex_MTS_MSR
    );
\Using_FPGA_2.ex_byte_access_i_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_84
     port map (
      Clk => Clk,
      \MEM_DataBus_Write_Data_reg[0]\(31 downto 0) => \MEM_DataBus_Write_Data_reg[0]\(31 downto 0),
      \MEM_DataBus_Write_Data_reg[0]_0\ => \^ex_reverse_mem_access\,
      \MEM_DataBus_Write_Data_reg[0]_1\ => \^ex_doublet_access\,
      \Using_FPGA.Native_0\ => \^ex_byte_access\,
      \Using_FPGA.Native_1\(23 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(119 downto 96),
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_3\ => PreFetch_Buffer_I1_n_101,
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_2.ex_doublet_access_i_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_85
     port map (
      Clk => Clk,
      MEM_DataBus_Write_reg => Read_Strobe_INST_0_i_2_n_0,
      MEM_DataBus_Write_reg_0 => \^ex_valid_reg_0\,
      MEM_DataBus_Write_reg_1 => Read_Strobe_INST_0_i_6_n_0,
      \Using_FPGA.Native_0\ => \^ex_doublet_access\,
      \Using_FPGA.Native_1\ => \Using_FPGA_2.ex_doublet_access_i_Inst_n_1\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_3\ => PreFetch_Buffer_I1_n_108,
      ex_addr_low_bits(1 downto 0) => ex_addr_low_bits(1 downto 0),
      ex_load_store_instr_s => ex_load_store_instr_s,
      mem_word_access0 => mem_word_access0,
      mem_word_access_reg => \^ex_byte_access\,
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_2.ex_is_load_instr_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_86
     port map (
      Clk => Clk,
      MEM_DataBus_Read_reg => \Using_FPGA_2.ex_doublet_access_i_Inst_n_1\,
      \Using_FPGA.Native_0\(0) => \^performance_debug_control.dbg_state_nohalt_reg\(95),
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I1_n_128,
      ex_Sel_SPR_BTR => ex_Sel_SPR_BTR,
      ex_Sel_SPR_EAR => ex_Sel_SPR_EAR,
      ex_Sel_SPR_EDR => ex_Sel_SPR_EDR,
      ex_Sel_SPR_ESR => ex_Sel_SPR_ESR,
      ex_Sel_SPR_FSR => ex_Sel_SPR_FSR,
      ex_Sel_SPR_PVR => ex_Sel_SPR_PVR,
      ex_Sel_SPR_PVR_reg => \Using_FPGA_2.ex_is_load_instr_Inst_n_3\,
      ex_Sel_SPR_SHR => ex_Sel_SPR_SHR,
      ex_Sel_SPR_SLR => ex_Sel_SPR_SLR,
      ex_is_load_instr_s => ex_is_load_instr_s,
      ex_is_mul_instr => ex_is_mul_instr,
      ex_is_multi_instr2 => ex_is_multi_instr2,
      mem_is_multi_or_load_instr0 => mem_is_multi_or_load_instr0,
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_2.ex_is_lwx_instr_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_87
     port map (
      Clk => Clk,
      D259_out => D259_out,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ => Read_Strobe_INST_0_i_6_n_0,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1\(0) => \Use_HW_BS.mem_mux3_reg[29]\(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2\ => \^ex_doublet_access\,
      Q(0) => Q(0),
      \Use_Async_Reset.sync_reset_reg\ => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_i_3__10\ => \^ex_byte_access\,
      ex_Exception_Taken => ex_Exception_Taken,
      ex_Interrupt_Brk_combo_reg => ex_Interrupt_Brk_combo_reg_0,
      ex_MSR(0) => ex_MSR(0),
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_addr_low_bits(0) => ex_addr_low_bits(1),
      ex_is_lwx_instr_s => ex_is_lwx_instr_s,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_jump => ex_jump,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      ex_valid_jump_reg => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_8\,
      ex_valid_jump_reg_0 => \^using_fpga.native_1\,
      ex_valid_reg => \^ex_valid_reg_0\,
      ex_valid_reg_0 => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_7\,
      ex_valid_reg_1 => ex_jump_nodelay_reg_n_0,
      ex_valid_reg_2 => \^ex_valid\,
      mem_exception_from_ex_reg => \^ex_interrupt_i\,
      mem_load_store_access0 => mem_load_store_access0,
      of_next_ex_valid => of_next_ex_valid,
      of_read_imm_reg_ii_reg => jump_logic_I1_n_42,
      of_read_imm_reg_ii_reg_0 => \^mem_exception_taken\,
      of_valid => of_valid,
      \out\ => ex_valid_jump,
      sync_reset => reset_bool_for_rst,
      wb_exception => wb_exception
    );
\Using_FPGA_2.ex_is_swx_instr_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_88
     port map (
      Clk => Clk,
      D257_out => D257_out,
      D_AS => \Using_FPGA_2.ex_load_store_instr_Inst_n_3\,
      MEM_DataBus_Write_reg => \Using_FPGA_2.ex_doublet_access_i_Inst_n_1\,
      SRI => SRI,
      \Using_FPGA.Native_0\(0) => \^performance_debug_control.dbg_state_nohalt_reg\(94),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_50\,
      \Using_FPGA.Native_4\ => \^restore_wb_msr_to_ex\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_i_3__9_n_0\,
      \Using_FPGA.Native_6\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_49\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_51\,
      \Using_FPGA.Native_9\(0) => \Use_HW_BS.mem_mux3_reg[29]\(0),
      \Using_FPGA.Native_i_2__30_0\ => \^mem_exception_taken\,
      ex_MSR_Load_ALU_C => ex_MSR_Load_ALU_C,
      ex_MSR_Load_Shift_C => ex_MSR_Load_Shift_C,
      ex_is_load_instr_s => ex_is_load_instr_s,
      ex_is_lwx_instr_s => ex_is_lwx_instr_s,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      sync_reset => reset_bool_for_rst,
      wb_exception => wb_exception
    );
\Using_FPGA_2.ex_load_store_instr_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_89
     port map (
      Clk => Clk,
      D261_out => D261_out,
      MEM_DataBus_Access_reg => \^mem_databus_access\,
      MEM_DataBus_Access_reg_0 => \^mem_div_stall_i_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Using_FPGA_2.ex_load_store_instr_Inst_n_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA_2.ex_load_store_instr_Inst_n_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA_2.ex_load_store_instr_Inst_n_3\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      \Using_LWX_SWX_instr.ex_reservation_reg\ => \^using_fpga.native_1\,
      \Using_LWX_SWX_instr.ex_reservation_reg_0\ => ex_set_bip_reg_n_0,
      \Using_LWX_SWX_instr.ex_reservation_reg_1\ => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      \Using_LWX_SWX_instr.ex_reservation_reg_2\ => \^performance_debug_control.dbg_state_nohalt_reg\(6),
      \Using_LWX_SWX_instr.ex_reservation_reg_3\ => \Using_FPGA_2.ex_doublet_access_i_Inst_n_1\,
      \Using_LWX_SWX_instr.ex_reservation_reg_4\ => \^mem_exception_taken\,
      ex_is_load_instr_s => ex_is_load_instr_s,
      ex_is_lwx_instr_s => ex_is_lwx_instr_s,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      p_255_in => p_255_in,
      sync_reset => reset_bool_for_rst,
      wb_exception => wb_exception
    );
\Using_FPGA_2.ex_reverse_mem_access_inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_90
     port map (
      Clk => Clk,
      D265_out => D265_out,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      ex_reverse_mem_access => \^ex_reverse_mem_access\,
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst\: entity work.mb_design_microblaze_0_1_MB_FDRE_91
     port map (
      Clk => Clk,
      D35_out => D35_out,
      Q(5) => ex_opcode(0),
      Q(4) => ex_opcode(1),
      Q(3) => ex_opcode(2),
      Q(2) => ex_opcode(3),
      Q(1) => ex_opcode(4),
      Q(0) => ex_opcode(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_40\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_i_3__6_n_0\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_3\ => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_56\,
      \Using_FPGA.Native_5\ => \^restore_wb_msr_to_ex\,
      \Using_FPGA.Native_6\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_55\,
      \Using_FPGA.Native_8\ => ex_set_bip_reg_n_0,
      \Using_FPGA.Native_9\(0) => \Use_HW_BS.mem_mux3_reg[29]\(3),
      ex_MSR_Set_SW_BIP => ex_MSR_Set_SW_BIP,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_valid_reg => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      of_MSR(0) => of_MSR(1),
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst\: entity work.mb_design_microblaze_0_1_MB_FDR
     port map (
      Clk => Clk,
      D35_out => D35_out,
      I0 => I0,
      \Using_FPGA.Native_0\ => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      of_clear_MSR_BIP_hold_cmb108_out => of_clear_MSR_BIP_hold_cmb108_out,
      of_clear_MSR_BIP_hold_s => of_clear_MSR_BIP_hold_s,
      sync_reset => reset_bool_for_rst
    );
\Using_FPGA_4.of_read_ex_write_op1_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8\
     port map (
      D(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      D(1) => I2,
      D(0) => I4,
      O => O,
      of_predecode_raw(2) => of_predecode_raw(1),
      of_predecode_raw(1) => of_predecode_raw(2),
      of_predecode_raw(0) => of_predecode_raw(3)
    );
\Using_FPGA_4.of_read_ex_write_op1_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10\
     port map (
      A => A,
      I0 => I0,
      O => O,
      \Using_FPGA.Native_i_1__142_0\ => \ex_gpr_write_addr_reg_n_0_[4]\,
      \Using_FPGA.Native_i_1__142_1\ => ex_gpr_write_reg_n_0,
      \Using_FPGA.Native_i_1__142_2\ => \^ex_valid\,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      of_predecode_raw(1) => of_predecode_raw(4),
      of_predecode_raw(0) => of_predecode_raw(5)
    );
\Using_FPGA_4.of_read_ex_write_op2_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8_92\
     port map (
      D(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      D(1) => I2,
      D(0) => I4,
      of_predecode_raw(2) => of_predecode_raw(6),
      of_predecode_raw(1) => of_predecode_raw(7),
      of_predecode_raw(0) => of_predecode_raw(8),
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1
    );
\Using_FPGA_4.of_read_ex_write_op2_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10_93\
     port map (
      I0 => I0,
      \Using_FPGA.Native_i_1__117\ => \ex_gpr_write_addr_reg_n_0_[4]\,
      \Using_FPGA.Native_i_1__117_0\ => ex_gpr_write_reg_n_0,
      \Using_FPGA.Native_i_1__117_1\ => \^ex_valid\,
      of_predecode_raw(1) => of_predecode_raw(9),
      of_predecode_raw(0) => of_predecode_raw(10),
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2
    );
\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8_94\
     port map (
      D(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      D(1) => I2,
      D(0) => I4,
      \Using_FPGA.Native_i_1__125\(1) => \^of_gpr_op3_rd_addr\(0),
      \Using_FPGA.Native_i_1__125\(0) => \^of_gpr_op3_rd_addr\(1),
      \Using_FPGA.Native_i_1__125_0\ => \^of_gpr_op3_rd_addr\(2),
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1
    );
\Using_FPGA_4.of_read_ex_write_op3_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10_95\
     port map (
      I0 => I0,
      \Using_FPGA.Native_i_1__125\ => \^of_gpr_op3_rd_addr\(3),
      \Using_FPGA.Native_i_1__125_0\ => \ex_gpr_write_addr_reg_n_0_[4]\,
      \Using_FPGA.Native_i_1__125_1\ => \^of_gpr_op3_rd_addr\(4),
      \Using_FPGA.Native_i_1__125_2\ => ex_gpr_write_reg_n_0,
      \Using_FPGA.Native_i_1__125_3\ => \^ex_valid\,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2
    );
\Using_FPGA_4.of_read_mem_write_op1_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8_96\
     port map (
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      of_predecode_raw(2) => of_predecode_raw(1),
      of_predecode_raw(1) => of_predecode_raw(2),
      of_predecode_raw(0) => of_predecode_raw(3),
      of_read_mem_write_op1_conflict_part1 => of_read_mem_write_op1_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10_97\
     port map (
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      mem_gpr_write => mem_gpr_write,
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      mem_is_multi_or_load_instr_reg => \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0\,
      mem_valid_instr => mem_valid_instr,
      of_predecode_raw(1) => of_predecode_raw(4),
      of_predecode_raw(0) => of_predecode_raw(5),
      of_read_mem_write_op1_conflict_part1 => of_read_mem_write_op1_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op2_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8_98\
     port map (
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      of_predecode_raw(2) => of_predecode_raw(6),
      of_predecode_raw(1) => of_predecode_raw(7),
      of_predecode_raw(0) => of_predecode_raw(8),
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op2_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10_99\
     port map (
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      mem_gpr_write => mem_gpr_write,
      mem_valid_instr => mem_valid_instr,
      of_predecode_raw(1) => of_predecode_raw(9),
      of_predecode_raw(0) => of_predecode_raw(10),
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2
    );
\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized8_100\
     port map (
      D(1) => \^of_gpr_op3_rd_addr\(0),
      D(0) => \^of_gpr_op3_rd_addr\(1),
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      \Using_FPGA.Native_i_1__126\ => \^of_gpr_op3_rd_addr\(2),
      of_read_mem_write_op3_conflict_part1 => of_read_mem_write_op3_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op3_conflict_INST2\: entity work.\mb_design_microblaze_0_1_MB_LUT6__parameterized10_101\
     port map (
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      \Using_FPGA.Native_i_1__126\ => \^of_gpr_op3_rd_addr\(3),
      \Using_FPGA.Native_i_1__126_0\ => \^of_gpr_op3_rd_addr\(4),
      mem_gpr_write => mem_gpr_write,
      mem_valid_instr => mem_valid_instr,
      of_read_mem_write_op3_conflict_part2 => of_read_mem_write_op3_conflict_part2
    );
\Using_Fast_Interrupt.Interrupt_Ack[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00005444"
    )
        port map (
      I0 => wb_MSR_Clear_IE,
      I1 => wb_ie_rising,
      I2 => \^wb_valid_reg_0\,
      I3 => wb_rtid_instr,
      I4 => reset_bool_for_rst,
      O => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55550444"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => wb_ie_rising,
      I2 => \^wb_valid_reg_0\,
      I3 => wb_rtid_instr,
      I4 => wb_MSR_Clear_IE,
      O => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\,
      Q => Interrupt_Ack(0),
      R => '0'
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\,
      Q => Interrupt_Ack(1),
      R => '0'
    );
\Using_Fast_Interrupt.mem_rtid_instr_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg_n_0_[4]\,
      I1 => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      O => of_set_MSR_IE
    );
\Using_Fast_Interrupt.mem_rtid_instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => of_set_MSR_IE,
      Q => mem_rtid_instr,
      R => '0'
    );
\Using_Fast_Interrupt.wb_ie_rising_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => wb_ie_rising0,
      Q => wb_ie_rising,
      R => '0'
    );
\Using_Fast_Interrupt.wb_rtid_instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_rtid_instr,
      Q => wb_rtid_instr,
      R => '0'
    );
\Using_LWX_SWX_instr.ex_reservation_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_load_store_instr_Inst_n_2\,
      Q => ex_reservation,
      R => '0'
    );
\Using_Mul_Instr.ex_not_mul_op_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_100,
      Q => ex_not_mul_op,
      R => reset_bool_for_rst
    );
\Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1\: entity work.mb_design_microblaze_0_1_carry_and_102
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_43\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt_3,
      lopt_1 => lopt_4
    );
\WB_BTR[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => MEM_Sel_SPR_BTR,
      O => \Use_Async_Reset.sync_reset_reg_1\(0)
    );
WB_Byte_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => \^mem_byte_access\,
      Q => \^wb_byte_access\,
      R => reset_bool_for_rst
    );
WB_DelaySlot_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_delayslot_instr,
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(0),
      R => reset_bool_for_rst
    );
WB_Div_Overflow_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_div_overflow,
      Q => wb_div_overflow,
      R => reset_bool_for_rst
    );
WB_Doublet_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => \^mem_doublet_access\,
      Q => wb_doublet_access,
      R => reset_bool_for_rst
    );
\WB_ESR_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFD0"
    )
        port map (
      I0 => wb_exception,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => wb_clr_ESR_l,
      I3 => reset_bool_for_rst,
      O => wb_exception_i_reg_0(0)
    );
\WB_MEM_Result[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => mem_Sel_MEM_Res,
      O => \Use_Async_Reset.sync_reset_reg_0\(0)
    );
WB_PC_Valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_valid_instr,
      Q => wb_pc_valid,
      R => reset_bool_for_rst
    );
WB_Read_Imm_Reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_read_imm_reg_1,
      Q => wb_read_imm_reg_1,
      R => reset_bool_for_rst
    );
WB_Read_Imm_Reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_read_imm_reg,
      Q => wb_read_imm_reg,
      R => reset_bool_for_rst
    );
WB_SW_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_is_store_instr,
      Q => \^wb_exception_kind_i_reg[30]_0\(5),
      R => reset_bool_for_rst
    );
WB_Word_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_word_access,
      Q => wb_word_access,
      R => reset_bool_for_rst
    );
active_access_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"080808A8"
    )
        port map (
      I0 => active_access_i_2_n_0,
      I1 => \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1\,
      I2 => active_access,
      I3 => M_AXI_DP_BVALID,
      I4 => M_AXI_DP_RVALID,
      O => active_access_reg
    );
active_access_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => \^mem_databus_access\,
      I2 => active_access_reg_0,
      O => active_access_i_2_n_0
    );
active_wakeup_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FEFEFE00"
    )
        port map (
      I0 => \^hibernate\,
      I1 => \^suspend\,
      I2 => \^sleep_decode\,
      I3 => wakeup_i(1),
      I4 => wakeup_i(0),
      O => active_wakeup0
    );
active_wakeup_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_wakeup0,
      Q => active_wakeup,
      R => reset_bool_for_rst
    );
\data_rd_reg[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(22),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(30),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15)
    );
\data_rd_reg[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(12),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(20),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(5)
    );
\data_rd_reg[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(11),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(19),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(4)
    );
\data_rd_reg[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(10),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(18),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(3)
    );
\data_rd_reg[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(9),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(17),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(2)
    );
\data_rd_reg[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(8),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(16),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(1)
    );
\data_rd_reg[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(7),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(15),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0)
    );
\data_rd_reg[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(21),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(29),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(14)
    );
\data_rd_reg[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(20),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(28),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(13)
    );
\data_rd_reg[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(19),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(27),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(12)
    );
\data_rd_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(18),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(26),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(11)
    );
\data_rd_reg[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(17),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(25),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(10)
    );
\data_rd_reg[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(16),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(24),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(9)
    );
\data_rd_reg[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(15),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(23),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(8)
    );
\data_rd_reg[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(14),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(22),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(7)
    );
\data_rd_reg[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(13),
      I1 => if_fetch_in_progress_reg_0,
      I2 => \^wb_gpr_wr_dbg\,
      I3 => \MEM_DataBus_Addr_reg[0]_0\(21),
      I4 => \data_rd_reg_reg[15]\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(6)
    );
ex_Instr_Excep_combo_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00A2"
    )
        port map (
      I0 => ex_Interrupt_Brk_combo_i_4_n_0,
      I1 => wb_exception,
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I3 => OF_Take_Exception_hold,
      O => ex_Instr_Excep_combo_i_2_n_0
    );
ex_Instr_Excep_combo_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_50,
      Q => ex_Instr_Excep_combo_reg_n_0,
      R => '0'
    );
ex_Interrupt_Brk_combo_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000007000"
    )
        port map (
      I0 => ex_Interrupt_Brk_combo_i_2_n_0,
      I1 => ex_valid_keep,
      I2 => ex_Interrupt_Brk_combo_reg_1,
      I3 => ex_Interrupt_Brk_combo_i_4_n_0,
      I4 => \^wb_load_esr\,
      I5 => OF_Take_Exception_hold,
      O => of_Interrupt
    );
ex_Interrupt_Brk_combo_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABABABABABABABAA"
    )
        port map (
      I0 => ex_atomic_Instruction_Pair,
      I1 => Read_Strobe_INST_0_i_6_n_0,
      I2 => ex_Take_Intr_or_Exc,
      I3 => ex_move_to_MSR_instr,
      I4 => ex_MSR_clear_decode,
      I5 => ex_MSR_set_decode,
      O => ex_Interrupt_Brk_combo_i_2_n_0
    );
ex_Interrupt_Brk_combo_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5545555555555555"
    )
        port map (
      I0 => of_Take_Interrupt_hold,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => ex_Interrupt_Brk_combo_i_4_n_0
    );
ex_Interrupt_Brk_combo_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Interrupt,
      Q => \^ex_interrupt_i\,
      R => reset_bool_for_rst
    );
ex_MSR_clear_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_125,
      Q => ex_MSR_clear_decode,
      R => reset_bool_for_rst
    );
ex_MSR_set_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_47,
      Q => ex_MSR_set_decode,
      R => '0'
    );
ex_Sel_SPR_BTR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_BTR,
      Q => ex_Sel_SPR_BTR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_EAR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_EAR,
      Q => ex_Sel_SPR_EAR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_EDR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_EDR,
      Q => ex_Sel_SPR_EDR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_ESR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_ESR,
      Q => ex_Sel_SPR_ESR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_FSR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_FSR,
      Q => ex_Sel_SPR_FSR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_PVR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_PVR,
      Q => ex_Sel_SPR_PVR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_SHR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_SHR,
      Q => ex_Sel_SPR_SHR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_SLR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_SLR,
      Q => ex_Sel_SPR_SLR,
      R => reset_bool_for_rst
    );
ex_Take_Intr_or_Exc_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_3,
      Q => ex_Take_Intr_or_Exc,
      R => '0'
    );
ex_Write_DCache_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_Write_DCache_decode_cmb,
      Q => ex_write_dcache_instr,
      R => reset_bool_for_rst
    );
ex_Write_ICache_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_Write_ICache_i_cmb,
      Q => ex_Write_ICache_i,
      R => reset_bool_for_rst
    );
ex_alu_sel_logic_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_122,
      Q => \^ex_alu_sel_logic\,
      S => reset_bool_for_rst
    );
ex_atomic_Instruction_Pair_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_atomic_Instruction_Pair0,
      Q => ex_atomic_Instruction_Pair,
      R => reset_bool_for_rst
    );
ex_branch_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_branch_instr0,
      Q => ex_branch_instr,
      R => reset_bool_for_rst
    );
ex_branch_with_delayslot_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => OF_Take_Exception_hold,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => wb_exception,
      O => of_Take_Exception
    );
ex_branch_with_delayslot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_branch_with_delayslot140_out,
      Q => ex_branch_with_delayslot,
      R => reset_bool_for_rst
    );
ex_delayslot_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_delayslot_Instr0,
      Q => ex_delayslot_Instr,
      R => reset_bool_for_rst
    );
ex_enable_alu_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_56,
      Q => EX_Enable_ALU,
      R => reset_bool_for_rst
    );
ex_enable_sext_shift_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_enable_sext_shift_i,
      Q => \^ex_enable_sext_shift\,
      R => reset_bool_for_rst
    );
ex_first_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[11].OF_Piperun_Stage_n_4\,
      Q => ex_first_cycle,
      R => '0'
    );
\ex_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(0),
      Q => \ex_gpr_write_addr_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(1),
      Q => I2,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(2),
      Q => I4,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(3),
      Q => I0,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(4),
      Q => \ex_gpr_write_addr_reg_n_0_[4]\,
      R => reset_bool_for_rst
    );
ex_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_120,
      Q => \ex_gpr_write_dbg__0\,
      R => '0'
    );
ex_gpr_write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_48,
      Q => ex_gpr_write_reg_n_0,
      R => '0'
    );
ex_hibernate_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => \^hibernate\,
      I1 => ex_sleep_i0,
      I2 => p_1_in147_in,
      I3 => active_wakeup,
      I4 => reset_bool_for_rst,
      O => ex_hibernate_i_i_1_n_0
    );
ex_hibernate_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA888AAAAA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => ex_jump_hold,
      I2 => ex_mbar_stall_no_sleep_1,
      I3 => ex_first_cycle,
      I4 => ex_mbar_decode,
      I5 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_sleep_i0
    );
ex_hibernate_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_hibernate_i_i_1_n_0,
      Q => \^hibernate\,
      R => '0'
    );
\ex_instr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(0),
      Q => \ex_instr_reg_n_0_[0]\,
      R => '0'
    );
\ex_instr_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(4),
      Q => \ex_instr_reg_n_0_[10]\,
      R => '0'
    );
\ex_instr_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(0),
      Q => \ex_instr_reg_n_0_[11]\,
      R => '0'
    );
\ex_instr_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(1),
      Q => \ex_instr_reg_n_0_[12]\,
      R => '0'
    );
\ex_instr_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(2),
      Q => \ex_instr_reg_n_0_[13]\,
      R => '0'
    );
\ex_instr_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(3),
      Q => \ex_instr_reg_n_0_[14]\,
      R => '0'
    );
\ex_instr_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(4),
      Q => \ex_instr_reg_n_0_[15]\,
      R => '0'
    );
\ex_instr_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(0),
      Q => \ex_instr_reg_n_0_[16]\,
      R => '0'
    );
\ex_instr_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(1),
      Q => \ex_instr_reg_n_0_[17]\,
      R => '0'
    );
\ex_instr_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(2),
      Q => \ex_instr_reg_n_0_[18]\,
      R => '0'
    );
\ex_instr_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(3),
      Q => \ex_instr_reg_n_0_[19]\,
      R => '0'
    );
\ex_instr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(1),
      Q => \ex_instr_reg_n_0_[1]\,
      R => '0'
    );
\ex_instr_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(4),
      Q => \ex_instr_reg_n_0_[20]\,
      R => '0'
    );
\ex_instr_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(5),
      Q => \ex_instr_reg_n_0_[21]\,
      R => '0'
    );
\ex_instr_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(6),
      Q => \ex_instr_reg_n_0_[22]\,
      R => '0'
    );
\ex_instr_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(7),
      Q => \ex_instr_reg_n_0_[23]\,
      R => '0'
    );
\ex_instr_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(8),
      Q => \ex_instr_reg_n_0_[24]\,
      R => '0'
    );
\ex_instr_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(9),
      Q => \ex_instr_reg_n_0_[25]\,
      R => '0'
    );
\ex_instr_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(10),
      Q => \ex_instr_reg_n_0_[26]\,
      R => '0'
    );
\ex_instr_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(11),
      Q => \ex_instr_reg_n_0_[27]\,
      R => '0'
    );
\ex_instr_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(12),
      Q => \ex_instr_reg_n_0_[28]\,
      R => '0'
    );
\ex_instr_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(13),
      Q => \ex_instr_reg_n_0_[29]\,
      R => '0'
    );
\ex_instr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(2),
      Q => \ex_instr_reg_n_0_[2]\,
      R => '0'
    );
\ex_instr_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(14),
      Q => \ex_instr_reg_n_0_[30]\,
      R => '0'
    );
\ex_instr_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(15),
      Q => \ex_instr_reg_n_0_[31]\,
      R => '0'
    );
\ex_instr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(3),
      Q => \ex_instr_reg_n_0_[3]\,
      R => '0'
    );
\ex_instr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(4),
      Q => \ex_instr_reg_n_0_[4]\,
      R => '0'
    );
\ex_instr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(5),
      Q => \ex_instr_reg_n_0_[5]\,
      R => '0'
    );
\ex_instr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(0),
      Q => p_1_in147_in,
      R => '0'
    );
\ex_instr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(1),
      Q => p_0_in146_in,
      R => '0'
    );
\ex_instr_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(2),
      Q => \ex_instr_reg_n_0_[8]\,
      R => '0'
    );
\ex_instr_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(3),
      Q => \ex_instr_reg_n_0_[9]\,
      R => '0'
    );
ex_is_bs_instr_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_127,
      Q => EX_Is_BS_Instr,
      R => reset_bool_for_rst
    );
ex_is_div_instr_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_49,
      Q => EX_Is_Div_Instr,
      R => '0'
    );
ex_is_mul_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_126,
      Q => ex_is_mul_instr,
      R => reset_bool_for_rst
    );
ex_is_multi_instr2_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_is_multi_instr20,
      Q => ex_is_multi_instr2,
      R => reset_bool_for_rst
    );
ex_is_multi_or_load_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_is_multi_or_load_instr0,
      Q => ex_is_multi_or_load_instr,
      R => reset_bool_for_rst
    );
ex_jump_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_43,
      Q => ex_jump_hold,
      R => '0'
    );
ex_jump_nodelay_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAA0008"
    )
        port map (
      I0 => \^if_missed_fetch\,
      I1 => IReady,
      I2 => \^wb_halted\,
      I3 => \mem_pc_i_reg[0]_0\,
      I4 => ex_jump_nodelay_reg_0,
      O => ex_jump_nodelay_i_2_n_0
    );
ex_jump_nodelay_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[11].OF_Piperun_Stage_n_1\,
      Q => ex_jump_nodelay_reg_n_0,
      R => '0'
    );
ex_load_alu_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_121,
      Q => ex_load_alu_carry_reg_n_0,
      R => reset_bool_for_rst
    );
ex_load_shift_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_load_shift_carry0,
      Q => ex_load_shift_carry,
      R => reset_bool_for_rst
    );
ex_mbar_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_decode_cmb,
      Q => ex_mbar_decode,
      R => reset_bool_for_rst
    );
ex_mbar_is_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_is_sleep_cmb,
      Q => ex_mbar_is_sleep,
      R => reset_bool_for_rst
    );
ex_mbar_sleep_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BAAAAAAA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      I2 => ex_mbar_decode,
      I3 => ex_first_cycle,
      I4 => ex_mbar_is_sleep,
      I5 => ex_mbar_sleep_i_2_n_0,
      O => ex_mbar_sleep_i_1_n_0
    );
ex_mbar_sleep_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => active_wakeup,
      O => ex_mbar_sleep_i_2_n_0
    );
ex_mbar_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_sleep_i_1_n_0,
      Q => ex_mbar_sleep,
      R => '0'
    );
ex_mbar_stall_no_sleep_1_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => I0,
      I1 => mem_valid_instr,
      I2 => \ex_gpr_write_addr_reg_n_0_[4]\,
      I3 => if_fetch_in_progress,
      O => ex_mbar_stall_no_sleep_10
    );
ex_mbar_stall_no_sleep_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_stall_no_sleep_10,
      Q => ex_mbar_stall_no_sleep_1,
      R => reset_bool_for_rst
    );
ex_mfsmsr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_MSR100_out,
      Q => ex_mfsmsr_i,
      R => reset_bool_for_rst
    );
ex_move_to_MSR_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_move_to_MSR_instr130_out,
      Q => ex_move_to_MSR_instr,
      R => reset_bool_for_rst
    );
\ex_opcode_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(0),
      Q => ex_opcode(0),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(1),
      Q => ex_opcode(1),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(2),
      Q => ex_opcode(2),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(3),
      Q => ex_opcode(3),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(4),
      Q => ex_opcode(4),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr_raw(5),
      Q => ex_opcode(5),
      R => reset_bool_for_rst
    );
ex_read_imm_reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_read_imm_reg,
      Q => ex_read_imm_reg_1,
      R => reset_bool_for_rst
    );
ex_read_imm_reg_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => of_read_imm_reg_ii,
      I1 => \^wb_halted\,
      I2 => \mem_pc_i_reg[0]_0\,
      O => of_read_imm_reg
    );
ex_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_read_imm_reg,
      Q => ex_read_imm_reg,
      R => reset_bool_for_rst
    );
ex_sel_alu_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_129,
      Q => ex_sel_alu,
      S => reset_bool_for_rst
    );
ex_set_MSR_EE_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F2"
    )
        port map (
      I0 => I4,
      I1 => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      I2 => of_set_MSR_EE_hold_reg_n_0,
      O => of_set_MSR_EE_hold0
    );
ex_set_MSR_EE_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_set_MSR_EE_hold0,
      Q => ex_set_MSR_EE_instr,
      R => reset_bool_for_rst
    );
ex_set_MSR_IE_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F2"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg_n_0_[4]\,
      I1 => \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst_n_0\,
      I2 => of_set_MSR_IE_hold_reg_n_0,
      O => of_set_MSR_IE_hold0
    );
ex_set_MSR_IE_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_set_MSR_IE_hold0,
      Q => ex_set_MSR_IE_instr,
      R => reset_bool_for_rst
    );
ex_set_bip_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_set_bip,
      Q => ex_set_bip_reg_n_0,
      R => reset_bool_for_rst
    );
ex_sleep_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => ex_sleep_i0,
      I2 => p_0_in146_in,
      I3 => active_wakeup,
      I4 => reset_bool_for_rst,
      O => ex_sleep_i_i_1_n_0
    );
ex_sleep_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_sleep_i_i_1_n_0,
      Q => \^sleep_decode\,
      R => '0'
    );
ex_start_div_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_112,
      Q => ex_start_div_i,
      R => '0'
    );
ex_suspend_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000E222"
    )
        port map (
      I0 => \^suspend\,
      I1 => ex_sleep_i0,
      I2 => p_1_in147_in,
      I3 => p_0_in146_in,
      I4 => active_wakeup,
      I5 => reset_bool_for_rst,
      O => ex_suspend_i_i_1_n_0
    );
ex_suspend_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_suspend_i_i_1_n_0,
      Q => \^suspend\,
      R => '0'
    );
ex_valid_jump_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_8\,
      Q => ex_valid_jump,
      R => '0'
    );
ex_valid_keep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[11].OF_Piperun_Stage_n_2\,
      Q => ex_valid_keep,
      R => '0'
    );
ex_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_7\,
      Q => \^ex_valid\,
      R => '0'
    );
\exception_registers_I1/WB_ESR_i\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FBFF4000"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I2 => wb_div_overflow,
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => wb_word_access,
      O => \^wb_exception_kind_i_reg[30]_0\(6)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_FSR
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_SLR
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_PVR
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_SHR
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(0)
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(1)
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(2)
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(3)
    );
if_fetch_in_progress_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_119,
      Q => if_fetch_in_progress,
      R => '0'
    );
if_missed_fetch_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_41,
      Q => \^if_missed_fetch\,
      R => '0'
    );
if_pc_incr_carry_and_0: entity work.mb_design_microblaze_0_1_carry_and_103
     port map (
      \Using_FPGA.Native\ => \^if_missed_fetch\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => \Using_FPGA.Native_43\,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => if_fetch_for_timing_optimization1,
      lopt_6 => lopt_7,
      lopt_7 => lopt_8,
      lopt_8 => lopt_9,
      lopt_9 => lopt_10
    );
if_pc_incr_carry_and_3: entity work.mb_design_microblaze_0_1_carry_and_104
     port map (
      CI => if_pc_incr_carry3,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt_5,
      lopt_1 => lopt_6
    );
jump_logic_I1: entity work.mb_design_microblaze_0_1_jump_logic
     port map (
      Clk => Clk,
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      EX_Op1_Zero => EX_Op1_Zero,
      I5 => I5,
      O => O_0,
      Q(3 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(5 downto 2),
      \Use_Async_Reset.sync_reset_reg\ => jump_logic_I1_n_43,
      \Using_FPGA.Native\ => \Using_FPGA.Native_47\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_1\ => ex_Instr_Excep_combo_reg_n_0,
      \Using_FPGA.Native_2\ => \^ex_interrupt_i\,
      \Using_FPGA.Native_3\ => \Use_MuxCy[2].OF_Piperun_Stage_n_1\,
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_59\(0),
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_Take_Intr_or_Exc_reg => jump_logic_I1_n_3,
      ex_Take_Intr_or_Exc_reg_0 => ex_Interrupt_Brk_combo_i_4_n_0,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => jump_logic_I1_n_7,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_first_cycle => ex_first_cycle,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => jump_logic_I1_n_44,
      ex_jump_hold_reg_0 => \^using_fpga.native_1\,
      ex_jump_nodelay_reg => jump_logic_I1_n_42,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      force12_out => force12_out,
      force2_reg_0 => PreFetch_Buffer_I1_n_70,
      force_Val10_out => force_Val10_out,
      force_Val2_N_reg_0 => PreFetch_Buffer_I1_n_78,
      if_fetch_in_progress_reg(0) => IF_PC_Write,
      if_missed_fetch_reg => jump_logic_I1_n_41,
      if_missed_fetch_reg_0(0) => \^performance_debug_control.dbg_state_nohalt_reg\(152),
      if_missed_fetch_reg_1 => \^if_missed_fetch\,
      if_missed_fetch_reg_2 => if_missed_fetch_reg_0,
      if_missed_fetch_reg_3 => if_missed_fetch_reg_1,
      \if_pc_reg[0]\(31 downto 0) => \^performance_debug_control.dbg_state_nohalt_reg\(151 downto 120),
      \if_pc_reg[0]_0\(29 downto 0) => \MEM_DataBus_Addr_reg[0]_0\(65 downto 36),
      \if_pc_reg[0]_1\ => PC_Module_I_n_0,
      \if_pc_reg[10]\ => PC_Module_I_n_79,
      \if_pc_reg[11]\ => PC_Module_I_n_78,
      \if_pc_reg[12]\ => PC_Module_I_n_77,
      \if_pc_reg[13]\ => PC_Module_I_n_76,
      \if_pc_reg[14]\ => PC_Module_I_n_75,
      \if_pc_reg[15]\ => PC_Module_I_n_74,
      \if_pc_reg[16]\ => PC_Module_I_n_73,
      \if_pc_reg[17]\ => PC_Module_I_n_72,
      \if_pc_reg[18]\ => PC_Module_I_n_71,
      \if_pc_reg[19]\ => PC_Module_I_n_70,
      \if_pc_reg[1]\ => PC_Module_I_n_88,
      \if_pc_reg[20]\ => PC_Module_I_n_69,
      \if_pc_reg[21]\ => PC_Module_I_n_68,
      \if_pc_reg[22]\ => PC_Module_I_n_67,
      \if_pc_reg[23]\ => PC_Module_I_n_66,
      \if_pc_reg[24]\ => PC_Module_I_n_65,
      \if_pc_reg[25]\ => PC_Module_I_n_64,
      \if_pc_reg[26]\ => PC_Module_I_n_63,
      \if_pc_reg[27]\ => PC_Module_I_n_62,
      \if_pc_reg[28]\ => PC_Module_I_n_61,
      \if_pc_reg[2]\ => PC_Module_I_n_87,
      \if_pc_reg[30]\(1 downto 0) => \if_pc_reg[30]\(1 downto 0),
      \if_pc_reg[30]_0\(1) => p_1_in3_in,
      \if_pc_reg[30]_0\(0) => PC_Module_I_n_34,
      \if_pc_reg[3]\ => PC_Module_I_n_86,
      \if_pc_reg[4]\ => PC_Module_I_n_85,
      \if_pc_reg[5]\ => PC_Module_I_n_84,
      \if_pc_reg[6]\ => PC_Module_I_n_83,
      \if_pc_reg[7]\ => PC_Module_I_n_82,
      \if_pc_reg[8]\ => PC_Module_I_n_81,
      \if_pc_reg[9]\ => PC_Module_I_n_80,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => jump_logic_I1_n_6,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_Take_Exception => of_Take_Exception,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => ex_Instr_Excep_combo_i_2_n_0,
      of_read_imm_reg_ii_reg_0 => ex_jump_nodelay_reg_n_0,
      of_read_imm_reg_ii_reg_1 => PreFetch_Buffer_I1_n_123,
      of_valid => of_valid,
      \out\ => ex_valid_jump,
      sync_reset => reset_bool_for_rst,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      use_Reg_Neg_S_reg_0 => of_PipeRun_for_ce,
      wb_exception => wb_exception
    );
keep_jump_taken_with_ds_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_6,
      Q => keep_jump_taken_with_ds,
      R => '0'
    );
mask_reset_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DDDF"
    )
        port map (
      I0 => EX_Is_BS_Instr,
      I1 => reset_bool_for_rst,
      I2 => \^ex_bit_insert\,
      I3 => \^ex_bit_extract\,
      O => ex_is_bs_instr_I_reg_0
    );
mem_PipeRun_carry_and: entity work.mb_design_microblaze_0_1_carry_and_105
     port map (
      Q(0) => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      Trace_WB_Jump_Taken_reg => Trace_WB_Jump_Taken_reg_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_54\,
      \Using_FPGA.Native_2\ => \^restore_wb_msr_to_ex\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_49\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_50\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_55\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_56\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_57\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_58\,
      ex_MSR(0) => ex_MSR(0),
      lopt => lopt_11,
      lopt_1 => lopt_12,
      mem_MSR(1 downto 0) => mem_MSR(1 downto 0),
      mem_div_stall_i_reg => \^mem_div_stall_i_reg\,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N,
      sync_reset => reset_bool_for_rst,
      wb_MSR_Clear_IE => wb_MSR_Clear_IE,
      wb_PipeRun_i_reg => mem_PipeRun_carry_and_n_1,
      wb_exception => wb_exception,
      \wb_exception_kind_i_reg[28]\ => \wb_exception_kind_i_reg[28]_0\,
      \wb_exception_kind_i_reg[28]_0\ => \wb_exception_kind_i_reg[28]_1\,
      \wb_exception_kind_i_reg[28]_1\ => \wb_exception_kind_i_reg[28]_2\,
      wb_gpr_write_dbg0 => wb_gpr_write_dbg0,
      wb_gpr_write_i0 => wb_gpr_write_i0,
      wb_valid_reg(0) => \^wb_piperun_i_reg_0\(0),
      wb_valid_reg_0 => \^wb_valid_reg_0\
    );
mem_Sel_SPR_BTR_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_Sel_SPR_BTR,
      Q => MEM_Sel_SPR_BTR,
      R => reset_bool_for_rst
    );
mem_Sel_SPR_EAR_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_Sel_SPR_EAR,
      Q => MEM_Sel_SPR_EAR,
      R => reset_bool_for_rst
    );
mem_Sel_SPR_ESR_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_Sel_SPR_ESR,
      Q => MEM_Sel_SPR_ESR,
      R => reset_bool_for_rst
    );
mem_Write_DCache_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => \^mem_exception_taken\,
      I1 => wb_exception,
      I2 => ex_write_dcache_instr,
      I3 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => mem_Write_DCache_i_1_n_0
    );
mem_Write_DCache_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_Write_DCache_i_1_n_0,
      Q => mem_Write_DCache,
      R => reset_bool_for_rst
    );
mem_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ex_byte_access\,
      Q => \^mem_byte_access\,
      R => reset_bool_for_rst
    );
mem_clr_ESR_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_set_MSR_EE_instr,
      I1 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => ex_MSR_Clear_EIP
    );
mem_clr_ESR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_MSR_Clear_EIP,
      Q => mem_clr_ESR,
      R => reset_bool_for_rst
    );
mem_delayslot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_delayslot_Instr,
      Q => mem_delayslot_instr,
      R => reset_bool_for_rst
    );
mem_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ex_doublet_access\,
      Q => \^mem_doublet_access\,
      R => reset_bool_for_rst
    );
mem_exception_from_ex_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_Exception_Taken,
      Q => \^mem_exception_from_ex\,
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_gpr_write_addr_reg_n_0_[0]\,
      Q => mem_gpr_write_addr(0),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I2,
      Q => mem_gpr_write_addr(1),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I4,
      Q => mem_gpr_write_addr(2),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I0,
      Q => mem_gpr_write_addr(3),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_gpr_write_addr_reg_n_0_[4]\,
      Q => mem_gpr_write_addr(4),
      R => reset_bool_for_rst
    );
mem_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_7\,
      Q => mem_gpr_write_dbg,
      R => '0'
    );
mem_gpr_write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_8\,
      Q => mem_gpr_write,
      R => '0'
    );
\mem_instr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[0]\,
      Q => mem_instr(0),
      R => '0'
    );
\mem_instr_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[10]\,
      Q => mem_instr(10),
      R => '0'
    );
\mem_instr_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[11]\,
      Q => mem_instr(11),
      R => '0'
    );
\mem_instr_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[12]\,
      Q => mem_instr(12),
      R => '0'
    );
\mem_instr_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[13]\,
      Q => mem_instr(13),
      R => '0'
    );
\mem_instr_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[14]\,
      Q => mem_instr(14),
      R => '0'
    );
\mem_instr_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[15]\,
      Q => mem_instr(15),
      R => '0'
    );
\mem_instr_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[16]\,
      Q => mem_instr(16),
      R => '0'
    );
\mem_instr_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[17]\,
      Q => mem_instr(17),
      R => '0'
    );
\mem_instr_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[18]\,
      Q => mem_instr(18),
      R => '0'
    );
\mem_instr_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[19]\,
      Q => mem_instr(19),
      R => '0'
    );
\mem_instr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[1]\,
      Q => mem_instr(1),
      R => '0'
    );
\mem_instr_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[20]\,
      Q => mem_instr(20),
      R => '0'
    );
\mem_instr_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[21]\,
      Q => mem_instr(21),
      R => '0'
    );
\mem_instr_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[22]\,
      Q => mem_instr(22),
      R => '0'
    );
\mem_instr_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[23]\,
      Q => mem_instr(23),
      R => '0'
    );
\mem_instr_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[24]\,
      Q => mem_instr(24),
      R => '0'
    );
\mem_instr_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[25]\,
      Q => mem_instr(25),
      R => '0'
    );
\mem_instr_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[26]\,
      Q => mem_instr(26),
      R => '0'
    );
\mem_instr_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[27]\,
      Q => mem_instr(27),
      R => '0'
    );
\mem_instr_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[28]\,
      Q => mem_instr(28),
      R => '0'
    );
\mem_instr_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[29]\,
      Q => mem_instr(29),
      R => '0'
    );
\mem_instr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[2]\,
      Q => mem_instr(2),
      R => '0'
    );
\mem_instr_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[30]\,
      Q => mem_instr(30),
      R => '0'
    );
\mem_instr_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[31]\,
      Q => mem_instr(31),
      R => '0'
    );
\mem_instr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[3]\,
      Q => mem_instr(3),
      R => '0'
    );
\mem_instr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[4]\,
      Q => mem_instr(4),
      R => '0'
    );
\mem_instr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[5]\,
      Q => mem_instr(5),
      R => '0'
    );
\mem_instr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => p_1_in147_in,
      Q => mem_instr(6),
      R => '0'
    );
\mem_instr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => p_0_in146_in,
      Q => mem_instr(7),
      R => '0'
    );
\mem_instr_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[8]\,
      Q => mem_instr(8),
      R => '0'
    );
\mem_instr_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[9]\,
      Q => mem_instr(9),
      R => '0'
    );
mem_is_div_instr_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => EX_Is_Div_Instr,
      Q => MEM_Is_Div_Instr,
      R => reset_bool_for_rst
    );
mem_is_msr_instr_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFE"
    )
        port map (
      I0 => ex_mfsmsr_i,
      I1 => ex_MSR_clear_decode,
      I2 => ex_MSR_set_decode,
      I3 => \Detect_IExt_Exceptions.ex_IExt_Exception_i_2_n_0\,
      O => mem_is_msr_instr0
    );
mem_is_msr_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_is_msr_instr0,
      Q => mem_sel_msr,
      R => reset_bool_for_rst
    );
mem_is_multi_or_load_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_is_multi_or_load_instr0,
      Q => mem_is_multi_or_load_instr,
      R => reset_bool_for_rst
    );
mem_is_store_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => p_255_in,
      Q => mem_is_store_instr,
      R => reset_bool_for_rst
    );
mem_jump_taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => jump_logic_I1_n_44,
      Q => mem_jump_taken,
      R => reset_bool_for_rst
    );
mem_load_store_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_load_store_access0,
      Q => mem_load_store_access,
      R => reset_bool_for_rst
    );
mem_read_imm_reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_read_imm_reg_1,
      Q => mem_read_imm_reg_1,
      R => reset_bool_for_rst
    );
mem_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_read_imm_reg,
      Q => mem_read_imm_reg,
      R => reset_bool_for_rst
    );
mem_valid_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => wb_exception,
      O => mem_valid_i_2_n_0
    );
mem_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_1\,
      Q => mem_valid_instr,
      R => '0'
    );
mem_wait_on_ready_N_carry_or: entity work.mb_design_microblaze_0_1_carry_or
     port map (
      MEM_DataBus_Ready => MEM_DataBus_Ready,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => Trace_WB_Jump_Taken_reg_0,
      lopt_3 => lopt_13,
      lopt_4 => lopt_14,
      lopt_5 => lopt_15,
      lopt_6 => lopt_16,
      lopt_7 => lopt_17,
      lopt_8 => jump_logic_I1_n_7,
      mem_Write_DCache => mem_Write_DCache,
      mem_load_store_access => mem_load_store_access,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N
    );
mem_word_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_word_access0,
      Q => mem_word_access,
      R => reset_bool_for_rst
    );
of_Take_Interrupt_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[11].OF_Piperun_Stage_n_3\,
      Q => of_Take_Interrupt_hold,
      R => '0'
    );
of_pause_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause,
      Q => \^of_pause\,
      R => reset_bool_for_rst
    );
of_read_imm_reg_ii_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\,
      Q => of_read_imm_reg_ii,
      R => '0'
    );
of_set_MSR_EE_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_4\,
      Q => of_set_MSR_EE_hold_reg_n_0,
      R => '0'
    );
of_set_MSR_IE_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_9\,
      Q => of_set_MSR_IE_hold_reg_n_0,
      R => '0'
    );
sign_byte_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[29]\(7),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      O => in0
    );
\wb_EAR_ii[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wb_exception,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      O => \^wb_load_esr\
    );
\wb_MSR_i[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I1 => wb_exception,
      I2 => \Using_FPGA.Native_58\,
      O => \wb_exception_kind_i_reg[28]_3\(2)
    );
\wb_MSR_i[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => mem_MSR(1),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I2 => wb_exception,
      O => \wb_exception_kind_i_reg[28]_3\(1)
    );
\wb_MSR_i[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA8AAAAAAAAAAAAA"
    )
        port map (
      I0 => mem_MSR(0),
      I1 => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      I2 => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      I3 => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      I4 => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      I5 => wb_exception,
      O => \wb_exception_kind_i_reg[28]_3\(0)
    );
wb_PipeRun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^mem_div_stall_i_reg\,
      Q => \^wb_piperun_i_reg_0\(0),
      R => reset_bool_for_rst
    );
wb_clr_ESR_l_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_clr_ESR,
      O => wb_clr_ESR_l0
    );
wb_clr_ESR_l_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => wb_clr_ESR_l0,
      Q => wb_clr_ESR_l,
      R => reset_bool_for_rst
    );
wb_exception_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA88888880"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_MSR(1),
      I2 => \wb_exception_kind_i_reg[31]_0\,
      I3 => DUE,
      I4 => MEM_DAXI_Exception,
      I5 => \^mem_exception_from_ex\,
      O => \^mem_exception_taken\
    );
wb_exception_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => \^mem_exception_taken\,
      Q => wb_exception,
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_exception_kind(28),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(5),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => \wb_exception_kind_i_reg[29]_0\(0),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(4),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_exception_kind(30),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(3),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_exception_kind(31),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(2),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_gpr_write_addr(0),
      Q => \^wb_exception_kind_i_reg[30]_0\(4),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_gpr_write_addr(1),
      Q => \^wb_exception_kind_i_reg[30]_0\(3),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_gpr_write_addr(2),
      Q => \^wb_exception_kind_i_reg[30]_0\(2),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_gpr_write_addr(3),
      Q => \^wb_exception_kind_i_reg[30]_0\(1),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_gpr_write_addr(4),
      Q => \^wb_exception_kind_i_reg[30]_0\(0),
      R => reset_bool_for_rst
    );
wb_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_write_dbg0,
      Q => \^wb_gpr_wr_dbg\,
      R => '0'
    );
wb_gpr_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_write_i0,
      Q => wb_gpr_write_i,
      R => '0'
    );
\wb_instr_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(0),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(61),
      R => '0'
    );
\wb_instr_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(10),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(51),
      R => '0'
    );
\wb_instr_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(11),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(50),
      R => '0'
    );
\wb_instr_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(12),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(49),
      R => '0'
    );
\wb_instr_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(13),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(48),
      R => '0'
    );
\wb_instr_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(14),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(47),
      R => '0'
    );
\wb_instr_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(15),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(46),
      R => '0'
    );
\wb_instr_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(16),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(45),
      R => '0'
    );
\wb_instr_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(17),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(44),
      R => '0'
    );
\wb_instr_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(18),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(43),
      R => '0'
    );
\wb_instr_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(19),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(42),
      R => '0'
    );
\wb_instr_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(1),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(60),
      R => '0'
    );
\wb_instr_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(20),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(41),
      R => '0'
    );
\wb_instr_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(21),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(40),
      R => '0'
    );
\wb_instr_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(22),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(39),
      R => '0'
    );
\wb_instr_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(23),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(38),
      R => '0'
    );
\wb_instr_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(24),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(37),
      R => '0'
    );
\wb_instr_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(25),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(36),
      R => '0'
    );
\wb_instr_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(26),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(35),
      R => '0'
    );
\wb_instr_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(27),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(34),
      R => '0'
    );
\wb_instr_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(28),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(33),
      R => '0'
    );
\wb_instr_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(29),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(32),
      R => '0'
    );
\wb_instr_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(2),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(59),
      R => '0'
    );
\wb_instr_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(30),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(31),
      R => '0'
    );
\wb_instr_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(31),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(30),
      R => '0'
    );
\wb_instr_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(3),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(58),
      R => '0'
    );
\wb_instr_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(4),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(57),
      R => '0'
    );
\wb_instr_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(5),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(56),
      R => '0'
    );
\wb_instr_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(6),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(55),
      R => '0'
    );
\wb_instr_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(7),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(54),
      R => '0'
    );
\wb_instr_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(8),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(53),
      R => '0'
    );
\wb_instr_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\,
      D => mem_instr(9),
      Q => \^performance_debug_control.dbg_state_nohalt_reg\(52),
      R => '0'
    );
wb_reset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_bool_for_rst,
      Q => wb_reset,
      R => '0'
    );
wb_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_PipeRun_carry_and_n_1,
      Q => \^wb_valid_reg_0\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_exception_registers_gti is
  port (
    DI : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.Native_30\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \WB_EAR_reg[15]_0\ : out STD_LOGIC;
    \WB_EAR_reg[14]_0\ : out STD_LOGIC;
    \WB_EAR_reg[13]_0\ : out STD_LOGIC;
    \WB_EAR_reg[12]_0\ : out STD_LOGIC;
    \WB_EAR_reg[11]_0\ : out STD_LOGIC;
    \WB_EAR_reg[10]_0\ : out STD_LOGIC;
    \WB_EAR_reg[9]_0\ : out STD_LOGIC;
    \WB_EAR_reg[8]_0\ : out STD_LOGIC;
    \WB_EAR_reg[7]_0\ : out STD_LOGIC;
    \WB_EAR_reg[6]_0\ : out STD_LOGIC;
    \WB_EAR_reg[5]_0\ : out STD_LOGIC;
    \WB_EAR_reg[4]_0\ : out STD_LOGIC;
    \WB_EAR_reg[3]_0\ : out STD_LOGIC;
    \WB_EAR_reg[2]_0\ : out STD_LOGIC;
    \WB_EAR_reg[1]_0\ : out STD_LOGIC;
    \WB_EAR_reg[0]_0\ : out STD_LOGIC;
    \WB_BTR_reg[27]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 11 downto 0 );
    \Using_FPGA.Native_31\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    I1 : in STD_LOGIC;
    \data_rd_reg_reg[31]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[31]_0\ : in STD_LOGIC;
    \Use_LUT6.mem_BTR_reg[0]_0\ : in STD_LOGIC_VECTOR ( 35 downto 0 );
    \LOCKSTEP_Out_reg[3038]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3038]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3007]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_mul_result : in STD_LOGIC_VECTOR ( 0 to 31 );
    \LOCKSTEP_Out_reg[3037]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3036]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3035]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3034]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3033]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3032]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3031]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3030]\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3029]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3028]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3027]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3026]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3025]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]\ : in STD_LOGIC;
    ex_load_btr : in STD_LOGIC;
    A1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    \mem_EAR_reg[31]_0\ : in STD_LOGIC;
    \WB_BTR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_EAR_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    wb_load_esr : in STD_LOGIC;
    \WB_EAR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_ESR_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_ESR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_exception_registers_gti : entity is "exception_registers_gti";
end mb_design_microblaze_0_1_exception_registers_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_exception_registers_gti is
  signal \^di\ : STD_LOGIC;
  signal O5 : STD_LOGIC;
  signal \Trace_New_Reg_Value[16]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[17]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[18]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[19]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[20]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[21]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[22]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[23]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[24]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[25]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[26]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[28]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[29]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[30]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \Trace_New_Reg_Value[31]_INST_0_i_2_n_0\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_10\ : STD_LOGIC;
  signal \^using_fpga.native_11\ : STD_LOGIC;
  signal \^using_fpga.native_12\ : STD_LOGIC;
  signal \^using_fpga.native_13\ : STD_LOGIC;
  signal \^using_fpga.native_14\ : STD_LOGIC;
  signal \^using_fpga.native_15\ : STD_LOGIC;
  signal \^using_fpga.native_16\ : STD_LOGIC;
  signal \^using_fpga.native_17\ : STD_LOGIC;
  signal \^using_fpga.native_18\ : STD_LOGIC;
  signal \^using_fpga.native_19\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_20\ : STD_LOGIC;
  signal \^using_fpga.native_21\ : STD_LOGIC;
  signal \^using_fpga.native_22\ : STD_LOGIC;
  signal \^using_fpga.native_23\ : STD_LOGIC;
  signal \^using_fpga.native_24\ : STD_LOGIC;
  signal \^using_fpga.native_25\ : STD_LOGIC;
  signal \^using_fpga.native_26\ : STD_LOGIC;
  signal \^using_fpga.native_27\ : STD_LOGIC;
  signal \^using_fpga.native_28\ : STD_LOGIC;
  signal \^using_fpga.native_29\ : STD_LOGIC_VECTOR ( 16 downto 0 );
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \^using_fpga.native_8\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0\ : STD_LOGIC;
  signal WB_BTR : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \WB_ESR_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \WB_ESR_i_reg_n_0_[31]\ : STD_LOGIC;
  signal addr_AddSub_0 : STD_LOGIC;
  signal addr_AddSub_1 : STD_LOGIC;
  signal addr_AddSub_10 : STD_LOGIC;
  signal addr_AddSub_11 : STD_LOGIC;
  signal addr_AddSub_12 : STD_LOGIC;
  signal addr_AddSub_13 : STD_LOGIC;
  signal addr_AddSub_14 : STD_LOGIC;
  signal addr_AddSub_15 : STD_LOGIC;
  signal addr_AddSub_16 : STD_LOGIC;
  signal addr_AddSub_17 : STD_LOGIC;
  signal addr_AddSub_18 : STD_LOGIC;
  signal addr_AddSub_19 : STD_LOGIC;
  signal addr_AddSub_2 : STD_LOGIC;
  signal addr_AddSub_20 : STD_LOGIC;
  signal addr_AddSub_21 : STD_LOGIC;
  signal addr_AddSub_22 : STD_LOGIC;
  signal addr_AddSub_23 : STD_LOGIC;
  signal addr_AddSub_24 : STD_LOGIC;
  signal addr_AddSub_25 : STD_LOGIC;
  signal addr_AddSub_26 : STD_LOGIC;
  signal addr_AddSub_27 : STD_LOGIC;
  signal addr_AddSub_28 : STD_LOGIC;
  signal addr_AddSub_29 : STD_LOGIC;
  signal addr_AddSub_3 : STD_LOGIC;
  signal addr_AddSub_30 : STD_LOGIC;
  signal addr_AddSub_31 : STD_LOGIC;
  signal addr_AddSub_4 : STD_LOGIC;
  signal addr_AddSub_5 : STD_LOGIC;
  signal addr_AddSub_6 : STD_LOGIC;
  signal addr_AddSub_7 : STD_LOGIC;
  signal addr_AddSub_8 : STD_LOGIC;
  signal addr_AddSub_9 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_10 : STD_LOGIC;
  signal carry_11 : STD_LOGIC;
  signal carry_12 : STD_LOGIC;
  signal carry_13 : STD_LOGIC;
  signal carry_14 : STD_LOGIC;
  signal carry_15 : STD_LOGIC;
  signal carry_16 : STD_LOGIC;
  signal carry_17 : STD_LOGIC;
  signal carry_18 : STD_LOGIC;
  signal carry_19 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_20 : STD_LOGIC;
  signal carry_21 : STD_LOGIC;
  signal carry_22 : STD_LOGIC;
  signal carry_23 : STD_LOGIC;
  signal carry_24 : STD_LOGIC;
  signal carry_25 : STD_LOGIC;
  signal carry_26 : STD_LOGIC;
  signal carry_27 : STD_LOGIC;
  signal carry_28 : STD_LOGIC;
  signal carry_29 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_30 : STD_LOGIC;
  signal carry_31 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal carry_8 : STD_LOGIC;
  signal carry_9 : STD_LOGIC;
  signal ex_btr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal mem_BTR : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_EAR : STD_LOGIC_VECTOR ( 30 to 31 );
  signal wb_EAR_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_EAR_ii : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_ear : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_esr : STD_LOGIC_VECTOR ( 19 to 31 );
begin
  DI <= \^di\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_10\ <= \^using_fpga.native_10\;
  \Using_FPGA.Native_11\ <= \^using_fpga.native_11\;
  \Using_FPGA.Native_12\ <= \^using_fpga.native_12\;
  \Using_FPGA.Native_13\ <= \^using_fpga.native_13\;
  \Using_FPGA.Native_14\ <= \^using_fpga.native_14\;
  \Using_FPGA.Native_15\ <= \^using_fpga.native_15\;
  \Using_FPGA.Native_16\ <= \^using_fpga.native_16\;
  \Using_FPGA.Native_17\ <= \^using_fpga.native_17\;
  \Using_FPGA.Native_18\ <= \^using_fpga.native_18\;
  \Using_FPGA.Native_19\ <= \^using_fpga.native_19\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_20\ <= \^using_fpga.native_20\;
  \Using_FPGA.Native_21\ <= \^using_fpga.native_21\;
  \Using_FPGA.Native_22\ <= \^using_fpga.native_22\;
  \Using_FPGA.Native_23\ <= \^using_fpga.native_23\;
  \Using_FPGA.Native_24\ <= \^using_fpga.native_24\;
  \Using_FPGA.Native_25\ <= \^using_fpga.native_25\;
  \Using_FPGA.Native_26\ <= \^using_fpga.native_26\;
  \Using_FPGA.Native_27\ <= \^using_fpga.native_27\;
  \Using_FPGA.Native_28\ <= \^using_fpga.native_28\;
  \Using_FPGA.Native_29\(16 downto 0) <= \^using_fpga.native_29\(16 downto 0);
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_FPGA.Native_8\ <= \^using_fpga.native_8\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
CarryIn_MUXCY: entity work.mb_design_microblaze_0_1_MB_MUXCY_334
     port map (
      CI => carry_0,
      D(0) => D(3),
      lopt => lopt,
      lopt_1 => \^di\,
      lopt_10 => lopt_4,
      lopt_11 => lopt_5,
      lopt_2 => addr_AddSub_0,
      lopt_3 => lopt_1,
      lopt_4 => \^using_fpga.native\,
      lopt_5 => addr_AddSub_1,
      lopt_6 => lopt_2,
      lopt_7 => \^using_fpga.native_0\,
      lopt_8 => addr_AddSub_2,
      lopt_9 => lopt_3
    );
\Trace_New_Reg_Value[0]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(0),
      I1 => WB_BTR(0),
      I2 => \LOCKSTEP_Out_reg[3007]\(31),
      I3 => wb_mul_result(0),
      O => \WB_EAR_reg[0]_0\
    );
\Trace_New_Reg_Value[10]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(10),
      I1 => WB_BTR(10),
      I2 => \LOCKSTEP_Out_reg[3007]\(21),
      I3 => wb_mul_result(10),
      O => \WB_EAR_reg[10]_0\
    );
\Trace_New_Reg_Value[11]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(11),
      I1 => WB_BTR(11),
      I2 => \LOCKSTEP_Out_reg[3007]\(20),
      I3 => wb_mul_result(11),
      O => \WB_EAR_reg[11]_0\
    );
\Trace_New_Reg_Value[12]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(12),
      I1 => WB_BTR(12),
      I2 => \LOCKSTEP_Out_reg[3007]\(19),
      I3 => wb_mul_result(12),
      O => \WB_EAR_reg[12]_0\
    );
\Trace_New_Reg_Value[13]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(13),
      I1 => WB_BTR(13),
      I2 => \LOCKSTEP_Out_reg[3007]\(18),
      I3 => wb_mul_result(13),
      O => \WB_EAR_reg[13]_0\
    );
\Trace_New_Reg_Value[14]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(14),
      I1 => WB_BTR(14),
      I2 => \LOCKSTEP_Out_reg[3007]\(17),
      I3 => wb_mul_result(14),
      O => \WB_EAR_reg[14]_0\
    );
\Trace_New_Reg_Value[15]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(15),
      I1 => WB_BTR(15),
      I2 => \LOCKSTEP_Out_reg[3007]\(16),
      I3 => wb_mul_result(15),
      O => \WB_EAR_reg[15]_0\
    );
\Trace_New_Reg_Value[16]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(16),
      I1 => WB_BTR(16),
      I2 => \LOCKSTEP_Out_reg[3007]\(15),
      I3 => wb_mul_result(16),
      O => \Trace_New_Reg_Value[16]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[17]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(17),
      I1 => WB_BTR(17),
      I2 => \LOCKSTEP_Out_reg[3007]\(14),
      I3 => wb_mul_result(17),
      O => \Trace_New_Reg_Value[17]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[18]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => wb_ear(18),
      I1 => \LOCKSTEP_Out_reg[3007]\(13),
      I2 => wb_mul_result(18),
      O => \Trace_New_Reg_Value[18]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[19]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(19),
      I1 => wb_ear(19),
      I2 => \LOCKSTEP_Out_reg[3007]\(12),
      I3 => wb_mul_result(19),
      O => \Trace_New_Reg_Value[19]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[1]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(1),
      I1 => WB_BTR(1),
      I2 => \LOCKSTEP_Out_reg[3007]\(30),
      I3 => wb_mul_result(1),
      O => \WB_EAR_reg[1]_0\
    );
\Trace_New_Reg_Value[20]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(20),
      I1 => wb_ear(20),
      I2 => \LOCKSTEP_Out_reg[3007]\(11),
      I3 => wb_mul_result(20),
      O => \Trace_New_Reg_Value[20]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[21]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(21),
      I1 => wb_ear(21),
      I2 => \LOCKSTEP_Out_reg[3007]\(10),
      I3 => wb_mul_result(21),
      O => \Trace_New_Reg_Value[21]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[22]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(22),
      I1 => wb_ear(22),
      I2 => \LOCKSTEP_Out_reg[3007]\(9),
      I3 => wb_mul_result(22),
      O => \Trace_New_Reg_Value[22]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[23]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(23),
      I1 => wb_ear(23),
      I2 => \LOCKSTEP_Out_reg[3007]\(8),
      I3 => wb_mul_result(23),
      O => \Trace_New_Reg_Value[23]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[24]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(24),
      I1 => wb_ear(24),
      I2 => \LOCKSTEP_Out_reg[3007]\(7),
      I3 => wb_mul_result(24),
      O => \Trace_New_Reg_Value[24]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[25]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(25),
      I1 => wb_ear(25),
      I2 => \LOCKSTEP_Out_reg[3007]\(6),
      I3 => wb_mul_result(25),
      O => \Trace_New_Reg_Value[25]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[26]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(26),
      I1 => wb_ear(26),
      I2 => \LOCKSTEP_Out_reg[3007]\(5),
      I3 => wb_mul_result(26),
      O => \Trace_New_Reg_Value[26]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[28]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(28),
      I1 => wb_ear(28),
      I2 => \LOCKSTEP_Out_reg[3007]\(3),
      I3 => wb_mul_result(28),
      O => \Trace_New_Reg_Value[28]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[29]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(29),
      I1 => wb_ear(29),
      I2 => \LOCKSTEP_Out_reg[3007]\(2),
      I3 => wb_mul_result(29),
      O => \Trace_New_Reg_Value[29]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[2]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(2),
      I1 => WB_BTR(2),
      I2 => \LOCKSTEP_Out_reg[3007]\(29),
      I3 => wb_mul_result(2),
      O => \WB_EAR_reg[2]_0\
    );
\Trace_New_Reg_Value[30]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(30),
      I1 => wb_ear(30),
      I2 => \LOCKSTEP_Out_reg[3007]\(1),
      I3 => wb_mul_result(30),
      O => \Trace_New_Reg_Value[30]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[31]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_esr(31),
      I1 => wb_ear(31),
      I2 => \LOCKSTEP_Out_reg[3007]\(0),
      I3 => wb_mul_result(31),
      O => \Trace_New_Reg_Value[31]_INST_0_i_2_n_0\
    );
\Trace_New_Reg_Value[3]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(3),
      I1 => WB_BTR(3),
      I2 => \LOCKSTEP_Out_reg[3007]\(28),
      I3 => wb_mul_result(3),
      O => \WB_EAR_reg[3]_0\
    );
\Trace_New_Reg_Value[4]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(4),
      I1 => WB_BTR(4),
      I2 => \LOCKSTEP_Out_reg[3007]\(27),
      I3 => wb_mul_result(4),
      O => \WB_EAR_reg[4]_0\
    );
\Trace_New_Reg_Value[5]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(5),
      I1 => WB_BTR(5),
      I2 => \LOCKSTEP_Out_reg[3007]\(26),
      I3 => wb_mul_result(5),
      O => \WB_EAR_reg[5]_0\
    );
\Trace_New_Reg_Value[6]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(6),
      I1 => WB_BTR(6),
      I2 => \LOCKSTEP_Out_reg[3007]\(25),
      I3 => wb_mul_result(6),
      O => \WB_EAR_reg[6]_0\
    );
\Trace_New_Reg_Value[7]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(7),
      I1 => WB_BTR(7),
      I2 => \LOCKSTEP_Out_reg[3007]\(24),
      I3 => wb_mul_result(7),
      O => \WB_EAR_reg[7]_0\
    );
\Trace_New_Reg_Value[8]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(8),
      I1 => WB_BTR(8),
      I2 => \LOCKSTEP_Out_reg[3007]\(23),
      I3 => wb_mul_result(8),
      O => \WB_EAR_reg[8]_0\
    );
\Trace_New_Reg_Value[9]_INST_0_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => wb_ear(9),
      I1 => WB_BTR(9),
      I2 => \LOCKSTEP_Out_reg[3007]\(22),
      I3 => wb_mul_result(9),
      O => \WB_EAR_reg[9]_0\
    );
\Use_LUT6.Mux_Inxt\: entity work.mb_design_microblaze_0_1_mux_bus_335
     port map (
      A1(0) => \Use_LUT6.mem_BTR_reg[0]_0\(35),
      A1(1) => \Use_LUT6.mem_BTR_reg[0]_0\(34),
      A1(2) => \Use_LUT6.mem_BTR_reg[0]_0\(33),
      A1(3) => \Use_LUT6.mem_BTR_reg[0]_0\(32),
      A1(4) => \Use_LUT6.mem_BTR_reg[0]_0\(31),
      A1(5) => \Use_LUT6.mem_BTR_reg[0]_0\(30),
      A1(6) => \Use_LUT6.mem_BTR_reg[0]_0\(29),
      A1(7) => \Use_LUT6.mem_BTR_reg[0]_0\(28),
      A1(8) => \Use_LUT6.mem_BTR_reg[0]_0\(27),
      A1(9) => \Use_LUT6.mem_BTR_reg[0]_0\(26),
      A1(10) => \Use_LUT6.mem_BTR_reg[0]_0\(25),
      A1(11) => \Use_LUT6.mem_BTR_reg[0]_0\(24),
      A1(12) => \Use_LUT6.mem_BTR_reg[0]_0\(23),
      A1(13) => \Use_LUT6.mem_BTR_reg[0]_0\(22),
      A1(14) => \Use_LUT6.mem_BTR_reg[0]_0\(21),
      A1(15) => \Use_LUT6.mem_BTR_reg[0]_0\(20),
      A1(16) => \Use_LUT6.mem_BTR_reg[0]_0\(19),
      A1(17) => \Use_LUT6.mem_BTR_reg[0]_0\(18),
      A1(18) => \Use_LUT6.mem_BTR_reg[0]_0\(17),
      A1(19) => \Use_LUT6.mem_BTR_reg[0]_0\(16),
      A1(20) => \Use_LUT6.mem_BTR_reg[0]_0\(15),
      A1(21) => \Use_LUT6.mem_BTR_reg[0]_0\(14),
      A1(22) => \Use_LUT6.mem_BTR_reg[0]_0\(13),
      A1(23) => \Use_LUT6.mem_BTR_reg[0]_0\(12),
      A1(24) => \Use_LUT6.mem_BTR_reg[0]_0\(11),
      A1(25) => \Use_LUT6.mem_BTR_reg[0]_0\(10),
      A1(26) => \Use_LUT6.mem_BTR_reg[0]_0\(9),
      A1(27) => \Use_LUT6.mem_BTR_reg[0]_0\(8),
      A1(28) => \Use_LUT6.mem_BTR_reg[0]_0\(7),
      A1(29) => \Use_LUT6.mem_BTR_reg[0]_0\(6),
      A1(30) => A1(1),
      A1(31) => A1(0),
      Q(31) => mem_BTR(0),
      Q(30) => mem_BTR(1),
      Q(29) => mem_BTR(2),
      Q(28) => mem_BTR(3),
      Q(27) => mem_BTR(4),
      Q(26) => mem_BTR(5),
      Q(25) => mem_BTR(6),
      Q(24) => mem_BTR(7),
      Q(23) => mem_BTR(8),
      Q(22) => mem_BTR(9),
      Q(21) => mem_BTR(10),
      Q(20) => mem_BTR(11),
      Q(19) => mem_BTR(12),
      Q(18) => mem_BTR(13),
      Q(17) => mem_BTR(14),
      Q(16) => mem_BTR(15),
      Q(15) => mem_BTR(16),
      Q(14) => mem_BTR(17),
      Q(13) => mem_BTR(18),
      Q(12) => mem_BTR(19),
      Q(11) => mem_BTR(20),
      Q(10) => mem_BTR(21),
      Q(9) => mem_BTR(22),
      Q(8) => mem_BTR(23),
      Q(7) => mem_BTR(24),
      Q(6) => mem_BTR(25),
      Q(5) => mem_BTR(26),
      Q(4) => mem_BTR(27),
      Q(3) => mem_BTR(28),
      Q(2) => mem_BTR(29),
      Q(1) => mem_BTR(30),
      Q(0) => mem_BTR(31),
      Y(0 to 31) => ex_btr(0 to 31),
      ex_load_btr => ex_load_btr
    );
\Use_LUT6.mem_BTR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(0),
      Q => mem_BTR(0),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(10),
      Q => mem_BTR(10),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(11),
      Q => mem_BTR(11),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(12),
      Q => mem_BTR(12),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(13),
      Q => mem_BTR(13),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(14),
      Q => mem_BTR(14),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(15),
      Q => mem_BTR(15),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(16),
      Q => mem_BTR(16),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(17),
      Q => mem_BTR(17),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(18),
      Q => mem_BTR(18),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(19),
      Q => mem_BTR(19),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(1),
      Q => mem_BTR(1),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(20),
      Q => mem_BTR(20),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(21),
      Q => mem_BTR(21),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(22),
      Q => mem_BTR(22),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(23),
      Q => mem_BTR(23),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(24),
      Q => mem_BTR(24),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(25),
      Q => mem_BTR(25),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(26),
      Q => mem_BTR(26),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(27),
      Q => mem_BTR(27),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(28),
      Q => mem_BTR(28),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(29),
      Q => mem_BTR(29),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(2),
      Q => mem_BTR(2),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(30),
      Q => mem_BTR(30),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(31),
      Q => mem_BTR(31),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(3),
      Q => mem_BTR(3),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(4),
      Q => mem_BTR(4),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(5),
      Q => mem_BTR(5),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(6),
      Q => mem_BTR(6),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(7),
      Q => mem_BTR(7),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(8),
      Q => mem_BTR(8),
      R => sync_reset
    );
\Use_LUT6.mem_BTR_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => ex_btr(9),
      Q => mem_BTR(9),
      R => sync_reset
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \^using_fpga.native_29\(16),
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(31),
      addr_AddSub_31 => addr_AddSub_31
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_336
     port map (
      LO => carry_31,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(15),
      addr_AddSub_31 => addr_AddSub_31
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_337
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\(0) => \^using_fpga.native_29\(16),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_338\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_21,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_19\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(21)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_339
     port map (
      LO => carry_22,
      \LOCKSTEP_Out_reg[3017]\ => carry_21,
      S => addr_AddSub_21,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(5),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_19\,
      lopt => lopt_31,
      lopt_1 => lopt_34
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_340
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_19\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_341\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_20,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_18\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(20)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_342
     port map (
      LO => carry_21,
      \LOCKSTEP_Out_reg[3018]\ => carry_20,
      S => addr_AddSub_20,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(4),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_18\,
      lopt => lopt_30,
      lopt_1 => lopt_33
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_343
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_18\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_344\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_19,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_17\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(19)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_345
     port map (
      LO => carry_20,
      \LOCKSTEP_Out_reg[3019]\ => carry_19,
      S => addr_AddSub_19,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(3),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_17\,
      lopt => lopt_30,
      lopt_1 => \^using_fpga.native_18\,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => addr_AddSub_20,
      lopt_3 => lopt_31,
      lopt_4 => \^using_fpga.native_19\,
      lopt_5 => addr_AddSub_21,
      lopt_6 => lopt_32,
      lopt_7 => \^using_fpga.native_20\,
      lopt_8 => addr_AddSub_22,
      lopt_9 => lopt_33
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_346
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_17\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_347\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_18,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_16\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(18)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_348
     port map (
      LO => carry_19,
      \LOCKSTEP_Out_reg[3020]\ => carry_18,
      S => addr_AddSub_18,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(2),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_16\,
      lopt => lopt_26,
      lopt_1 => lopt_29
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_349
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_16\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_350\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_17,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_15\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(17)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_351
     port map (
      LO => carry_18,
      \LOCKSTEP_Out_reg[3021]\ => carry_17,
      S => addr_AddSub_17,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(1),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_15\,
      lopt => lopt_25,
      lopt_1 => lopt_28
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_352
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_15\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_353\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_16,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_14\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(16)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_354
     port map (
      LO => carry_17,
      \LOCKSTEP_Out_reg[3022]\ => carry_16,
      S => addr_AddSub_16,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(0),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_14\,
      lopt => lopt_24,
      lopt_1 => lopt_27
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_355
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_14\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_356\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_13\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_15,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(15)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_357
     port map (
      DI => \^using_fpga.native_13\,
      LO => carry_16,
      \LOCKSTEP_Out_reg[3023]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3023]_0\ => \LOCKSTEP_Out_reg[3023]\,
      \LOCKSTEP_Out_reg[3023]_1\ => \Trace_New_Reg_Value[16]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3023]_2\ => carry_15,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15),
      S => addr_AddSub_15,
      WB_Byte_Access_reg(0) => \^using_fpga.native_29\(15),
      \data_rd_reg_reg[16]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[16]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_24,
      lopt_1 => \^using_fpga.native_14\,
      lopt_10 => lopt_28,
      lopt_11 => lopt_29,
      lopt_2 => addr_AddSub_16,
      lopt_3 => lopt_25,
      lopt_4 => \^using_fpga.native_15\,
      lopt_5 => addr_AddSub_17,
      lopt_6 => lopt_26,
      lopt_7 => \^using_fpga.native_16\,
      lopt_8 => addr_AddSub_18,
      lopt_9 => lopt_27,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_358
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_13\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_359\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_12\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_14,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(14)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_360
     port map (
      DI => \^using_fpga.native_12\,
      LO => carry_15,
      \LOCKSTEP_Out_reg[3024]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3024]_0\ => \LOCKSTEP_Out_reg[3024]\,
      \LOCKSTEP_Out_reg[3024]_1\ => \Trace_New_Reg_Value[17]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3024]_2\ => carry_14,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(14),
      S => addr_AddSub_14,
      WB_Byte_Access_reg(0) => \^using_fpga.native_29\(14),
      \data_rd_reg_reg[17]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[17]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_20,
      lopt_1 => lopt_23,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_361
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_12\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_362\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_11\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_13,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(13)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_363
     port map (
      DI => \^using_fpga.native_11\,
      LO => carry_14,
      \LOCKSTEP_Out_reg[3025]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3025]_0\ => \LOCKSTEP_Out_reg[3025]\,
      \LOCKSTEP_Out_reg[3025]_1\ => \Trace_New_Reg_Value[18]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3025]_2\ => carry_13,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(13),
      Q(0) => WB_BTR(18),
      S => addr_AddSub_13,
      \WB_BTR_reg[18]\(0) => \^using_fpga.native_29\(13),
      \data_rd_reg_reg[18]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[18]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_19,
      lopt_1 => lopt_22,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_364
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_11\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_365\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_10\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_12,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(12)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_366
     port map (
      DI => \^using_fpga.native_10\,
      LO => carry_13,
      \LOCKSTEP_Out_reg[3026]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3026]_0\ => \LOCKSTEP_Out_reg[3026]\,
      \LOCKSTEP_Out_reg[3026]_1\ => \Trace_New_Reg_Value[19]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3026]_2\ => carry_12,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(12),
      Q(0) => WB_BTR(19),
      S => addr_AddSub_12,
      \WB_BTR_reg[19]\(0) => \^using_fpga.native_29\(12),
      \data_rd_reg_reg[19]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[19]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_18,
      lopt_1 => lopt_21,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_367
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_10\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_368\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_30,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_28\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(30)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_369
     port map (
      LO => carry_31,
      \LOCKSTEP_Out_reg[3008]\ => carry_30,
      S => addr_AddSub_30,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(14),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_28\,
      lopt => lopt_44,
      lopt_1 => lopt_47
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_370
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_28\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_371\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_9\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_11,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(11)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_372
     port map (
      DI => \^using_fpga.native_9\,
      LO => carry_12,
      \LOCKSTEP_Out_reg[3027]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3027]_0\ => \LOCKSTEP_Out_reg[3027]\,
      \LOCKSTEP_Out_reg[3027]_1\ => \Trace_New_Reg_Value[20]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3027]_2\ => carry_11,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(11),
      Q(0) => WB_BTR(20),
      S => addr_AddSub_11,
      \WB_BTR_reg[20]\(0) => \^using_fpga.native_29\(11),
      \data_rd_reg_reg[20]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[20]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_18,
      lopt_1 => \^using_fpga.native_10\,
      lopt_10 => lopt_22,
      lopt_11 => lopt_23,
      lopt_2 => addr_AddSub_12,
      lopt_3 => lopt_19,
      lopt_4 => \^using_fpga.native_11\,
      lopt_5 => addr_AddSub_13,
      lopt_6 => lopt_20,
      lopt_7 => \^using_fpga.native_12\,
      lopt_8 => addr_AddSub_14,
      lopt_9 => lopt_21,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_373
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_374\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_8\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_10,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(10)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_375
     port map (
      DI => \^using_fpga.native_8\,
      LO => carry_11,
      \LOCKSTEP_Out_reg[3028]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3028]_0\ => \LOCKSTEP_Out_reg[3028]\,
      \LOCKSTEP_Out_reg[3028]_1\ => \Trace_New_Reg_Value[21]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3028]_2\ => carry_10,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(10),
      Q(0) => WB_BTR(21),
      S => addr_AddSub_10,
      \WB_BTR_reg[21]\(0) => \^using_fpga.native_29\(10),
      \data_rd_reg_reg[21]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[21]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_14,
      lopt_1 => lopt_17,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_376
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_8\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_377\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_7\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_9,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(9)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_378
     port map (
      DI => \^using_fpga.native_7\,
      LO => carry_10,
      \LOCKSTEP_Out_reg[3029]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3029]_0\ => \LOCKSTEP_Out_reg[3029]\,
      \LOCKSTEP_Out_reg[3029]_1\ => \Trace_New_Reg_Value[22]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3029]_2\ => carry_9,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(9),
      Q(0) => WB_BTR(22),
      S => addr_AddSub_9,
      \WB_BTR_reg[22]\(0) => \^using_fpga.native_29\(9),
      \data_rd_reg_reg[22]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[22]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(5),
      \data_rd_reg_reg[22]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_13,
      lopt_1 => lopt_16,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_379
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_380\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_6\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_8,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(8)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_381
     port map (
      DI => \^using_fpga.native_6\,
      LO => carry_9,
      \LOCKSTEP_Out_reg[3030]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3030]_0\ => \LOCKSTEP_Out_reg[3030]\,
      \LOCKSTEP_Out_reg[3030]_1\ => \Trace_New_Reg_Value[23]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3030]_2\ => carry_8,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(8),
      Q(0) => WB_BTR(23),
      S => addr_AddSub_8,
      \WB_BTR_reg[23]\(0) => \^using_fpga.native_29\(8),
      \data_rd_reg_reg[23]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[23]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(4),
      \data_rd_reg_reg[23]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_12,
      lopt_1 => lopt_15,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_382
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_383\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_5\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_7,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(7)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_384
     port map (
      DI => \^using_fpga.native_5\,
      LO => carry_8,
      \LOCKSTEP_Out_reg[3031]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3031]_0\ => \LOCKSTEP_Out_reg[3031]\,
      \LOCKSTEP_Out_reg[3031]_1\ => \Trace_New_Reg_Value[24]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3031]_2\ => carry_7,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(7),
      Q(0) => WB_BTR(24),
      S => addr_AddSub_7,
      \WB_BTR_reg[24]\(0) => \^using_fpga.native_29\(7),
      \data_rd_reg_reg[24]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[24]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_12,
      lopt_1 => \^using_fpga.native_6\,
      lopt_10 => lopt_16,
      lopt_11 => lopt_17,
      lopt_2 => addr_AddSub_8,
      lopt_3 => lopt_13,
      lopt_4 => \^using_fpga.native_7\,
      lopt_5 => addr_AddSub_9,
      lopt_6 => lopt_14,
      lopt_7 => \^using_fpga.native_8\,
      lopt_8 => addr_AddSub_10,
      lopt_9 => lopt_15,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_385
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_386\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_4\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_6,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(6)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_387
     port map (
      DI => \^using_fpga.native_4\,
      LO => carry_7,
      \LOCKSTEP_Out_reg[3032]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3032]_0\ => \LOCKSTEP_Out_reg[3032]\,
      \LOCKSTEP_Out_reg[3032]_1\ => \Trace_New_Reg_Value[25]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3032]_2\ => carry_6,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(6),
      Q(0) => WB_BTR(25),
      S => addr_AddSub_6,
      \WB_BTR_reg[25]\(0) => \^using_fpga.native_29\(6),
      \data_rd_reg_reg[25]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[25]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(3),
      \data_rd_reg_reg[25]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_8,
      lopt_1 => lopt_11,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_388
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_389\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_3\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_5,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(5)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_390
     port map (
      DI => \^using_fpga.native_3\,
      LO => carry_6,
      \LOCKSTEP_Out_reg[3033]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3033]_0\ => \LOCKSTEP_Out_reg[3033]\,
      \LOCKSTEP_Out_reg[3033]_1\ => \Trace_New_Reg_Value[26]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3033]_2\ => carry_5,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(5),
      Q(0) => WB_BTR(26),
      S => addr_AddSub_5,
      \WB_BTR_reg[26]\(0) => \^using_fpga.native_29\(5),
      \data_rd_reg_reg[26]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[26]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_7,
      lopt_1 => lopt_10,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_391
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_392\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_2\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_4,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(4)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_393
     port map (
      DI => \^using_fpga.native_2\,
      LO => carry_5,
      \LOCKSTEP_Out_reg[3034]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3034]_0\ => \LOCKSTEP_Out_reg[3034]\,
      \LOCKSTEP_Out_reg[3034]_1\(0) => \LOCKSTEP_Out_reg[3007]\(4),
      \LOCKSTEP_Out_reg[3034]_2\ => carry_4,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(4),
      Q(0) => wb_ear(27),
      S => addr_AddSub_4,
      \Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[27]\(0) => \^using_fpga.native_29\(4),
      \data_rd_reg_reg[27]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[27]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_6,
      lopt_1 => lopt_9,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_mul_result(0) => wb_mul_result(27)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_394
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_395\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_1\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_3,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(3)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_396
     port map (
      DI => \^using_fpga.native_1\,
      LO => carry_4,
      \LOCKSTEP_Out_reg[3035]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3035]_0\ => \LOCKSTEP_Out_reg[3035]\,
      \LOCKSTEP_Out_reg[3035]_1\ => \Trace_New_Reg_Value[28]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3035]_2\ => carry_3,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(3),
      Q(0) => WB_BTR(28),
      S => addr_AddSub_3,
      \WB_BTR_reg[28]\(0) => \^using_fpga.native_29\(3),
      \data_rd_reg_reg[28]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[28]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(2),
      \data_rd_reg_reg[28]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_6,
      lopt_1 => \^using_fpga.native_2\,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => addr_AddSub_4,
      lopt_3 => lopt_7,
      lopt_4 => \^using_fpga.native_3\,
      lopt_5 => addr_AddSub_5,
      lopt_6 => lopt_8,
      lopt_7 => \^using_fpga.native_4\,
      lopt_8 => addr_AddSub_6,
      lopt_9 => lopt_9,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_397
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_398\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native_0\,
      I1 => I1,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_2,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(2)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_399
     port map (
      DI => \^using_fpga.native_0\,
      LO => carry_3,
      \LOCKSTEP_Out_reg[3036]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3036]_0\ => \LOCKSTEP_Out_reg[3036]\,
      \LOCKSTEP_Out_reg[3036]_1\ => \Trace_New_Reg_Value[29]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3036]_2\ => carry_2,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(2),
      Q(0) => WB_BTR(29),
      S => addr_AddSub_2,
      \WB_BTR_reg[29]\(0) => \^using_fpga.native_29\(2),
      \data_rd_reg_reg[29]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[29]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(1),
      \data_rd_reg_reg[29]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_2,
      lopt_1 => lopt_5,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_400
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_401\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_29,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_27\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(29)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_402
     port map (
      LO => carry_30,
      \LOCKSTEP_Out_reg[3009]\ => carry_29,
      S => addr_AddSub_29,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(13),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_27\,
      lopt => lopt_43,
      lopt_1 => lopt_46
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_403
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_27\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_404\
     port map (
      D(0) => D(3),
      DI => \^using_fpga.native\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_1,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_31\(1)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_405
     port map (
      DI => \^using_fpga.native\,
      LO => carry_2,
      \LOCKSTEP_Out_reg[3037]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3037]_0\ => \LOCKSTEP_Out_reg[3037]\,
      \LOCKSTEP_Out_reg[3037]_1\ => \Trace_New_Reg_Value[30]_INST_0_i_2_n_0\,
      \LOCKSTEP_Out_reg[3037]_2\ => carry_1,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(1),
      Q(0) => WB_BTR(30),
      S => addr_AddSub_1,
      \WB_BTR_reg[30]\(0) => \^using_fpga.native_29\(1),
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[30]_0\(0) => \Use_LUT6.mem_BTR_reg[0]_0\(0),
      \data_rd_reg_reg[30]_1\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt_1,
      lopt_1 => lopt_4,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_406
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_407\
     port map (
      D(0) => D(3),
      DI => \^di\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      O5 => O5,
      S => addr_AddSub_0,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_31\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_408
     port map (
      CI => carry_0,
      DI => \^di\,
      LO => carry_1,
      \LOCKSTEP_Out_reg[3038]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3038]_0\ => \LOCKSTEP_Out_reg[3038]_0\,
      \LOCKSTEP_Out_reg[3038]_1\ => \Trace_New_Reg_Value[31]_INST_0_i_2_n_0\,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0),
      Q(0) => WB_BTR(31),
      S => addr_AddSub_0,
      \WB_BTR_reg[31]\(0) => \^using_fpga.native_29\(0),
      \data_rd_reg_reg[31]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[31]_0\ => \data_rd_reg_reg[31]_0\,
      lopt => lopt,
      lopt_1 => lopt_3,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_409
     port map (
      Clk => Clk,
      DI => \^di\,
      O5 => O5,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_410\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_28,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_26\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(28)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_411
     port map (
      LO => carry_29,
      \LOCKSTEP_Out_reg[3010]\ => carry_28,
      S => addr_AddSub_28,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(12),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_26\,
      lopt => lopt_42,
      lopt_1 => lopt_45
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_412
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_26\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_413\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_27,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_25\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(27)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_414
     port map (
      LO => carry_28,
      \LOCKSTEP_Out_reg[3011]\ => carry_27,
      S => addr_AddSub_27,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(11),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_25\,
      lopt => lopt_42,
      lopt_1 => \^using_fpga.native_26\,
      lopt_10 => lopt_46,
      lopt_11 => lopt_47,
      lopt_2 => addr_AddSub_28,
      lopt_3 => lopt_43,
      lopt_4 => \^using_fpga.native_27\,
      lopt_5 => addr_AddSub_29,
      lopt_6 => lopt_44,
      lopt_7 => \^using_fpga.native_28\,
      lopt_8 => addr_AddSub_30,
      lopt_9 => lopt_45
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_415
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_25\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_416\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_26,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(26)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_417
     port map (
      LO => carry_27,
      \LOCKSTEP_Out_reg[3012]\ => carry_26,
      S => addr_AddSub_26,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(10),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_24\,
      lopt => lopt_38,
      lopt_1 => lopt_41
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_418
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_24\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_419\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_25,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_23\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(25)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_420
     port map (
      LO => carry_26,
      \LOCKSTEP_Out_reg[3013]\ => carry_25,
      S => addr_AddSub_25,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(9),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_23\,
      lopt => lopt_37,
      lopt_1 => lopt_40
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_421
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_23\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_422\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_24,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_22\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(24)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_423
     port map (
      LO => carry_25,
      \LOCKSTEP_Out_reg[3014]\ => carry_24,
      S => addr_AddSub_24,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(8),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_22\,
      lopt => lopt_36,
      lopt_1 => lopt_39
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_424
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_22\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_425\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_23,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_21\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(23)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_426
     port map (
      LO => carry_24,
      \LOCKSTEP_Out_reg[3015]\ => carry_23,
      S => addr_AddSub_23,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(7),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_21\,
      lopt => lopt_36,
      lopt_1 => \^using_fpga.native_22\,
      lopt_10 => lopt_40,
      lopt_11 => lopt_41,
      lopt_2 => addr_AddSub_24,
      lopt_3 => lopt_37,
      lopt_4 => \^using_fpga.native_23\,
      lopt_5 => addr_AddSub_25,
      lopt_6 => lopt_38,
      lopt_7 => \^using_fpga.native_24\,
      lopt_8 => addr_AddSub_26,
      lopt_9 => lopt_39
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_427
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_21\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized5_428\
     port map (
      D(0) => D(3),
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      S => addr_AddSub_22,
      \Using_FPGA.Native_0\ => \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_20\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_31\(22)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_XORCY_429
     port map (
      CI => carry_22,
      LO => carry_23,
      S => addr_AddSub_22,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_30\(6),
      \Using_FPGA.Native_I2_0\ => \^using_fpga.native_20\,
      lopt => lopt_32,
      lopt_1 => lopt_35
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].WB_PC_FDRE\: entity work.mb_design_microblaze_0_1_MB_FDRE_430
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_20\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_2\ => \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0\
    );
\WB_BTR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(0),
      Q => WB_BTR(0),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(10),
      Q => WB_BTR(10),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(11),
      Q => WB_BTR(11),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(12),
      Q => WB_BTR(12),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(13),
      Q => WB_BTR(13),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(14),
      Q => WB_BTR(14),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(15),
      Q => WB_BTR(15),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(16),
      Q => WB_BTR(16),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(17),
      Q => WB_BTR(17),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(18),
      Q => WB_BTR(18),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(19),
      Q => WB_BTR(19),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(1),
      Q => WB_BTR(1),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(20),
      Q => WB_BTR(20),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(21),
      Q => WB_BTR(21),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(22),
      Q => WB_BTR(22),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(23),
      Q => WB_BTR(23),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(24),
      Q => WB_BTR(24),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(25),
      Q => WB_BTR(25),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(26),
      Q => WB_BTR(26),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(27),
      Q => \WB_BTR_reg[27]_0\(0),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(28),
      Q => WB_BTR(28),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(29),
      Q => WB_BTR(29),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(2),
      Q => WB_BTR(2),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(30),
      Q => WB_BTR(30),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(31),
      Q => WB_BTR(31),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(3),
      Q => WB_BTR(3),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(4),
      Q => WB_BTR(4),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(5),
      Q => WB_BTR(5),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(6),
      Q => WB_BTR(6),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(7),
      Q => WB_BTR(7),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(8),
      Q => WB_BTR(8),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_BTR_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_BTR(9),
      Q => WB_BTR(9),
      R => \WB_BTR_reg[31]_0\(0)
    );
\WB_EAR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(0),
      Q => wb_ear(0),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(10),
      Q => wb_ear(10),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(11),
      Q => wb_ear(11),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(12),
      Q => wb_ear(12),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(13),
      Q => wb_ear(13),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(14),
      Q => wb_ear(14),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(15),
      Q => wb_ear(15),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(16),
      Q => wb_ear(16),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(17),
      Q => wb_ear(17),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(18),
      Q => wb_ear(18),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(19),
      Q => wb_ear(19),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(1),
      Q => wb_ear(1),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(20),
      Q => wb_ear(20),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(21),
      Q => wb_ear(21),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(22),
      Q => wb_ear(22),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(23),
      Q => wb_ear(23),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(24),
      Q => wb_ear(24),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(25),
      Q => wb_ear(25),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(26),
      Q => wb_ear(26),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(27),
      Q => wb_ear(27),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(28),
      Q => wb_ear(28),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(29),
      Q => wb_ear(29),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(2),
      Q => wb_ear(2),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(30),
      Q => wb_ear(30),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(31),
      Q => wb_ear(31),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(3),
      Q => wb_ear(3),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(4),
      Q => wb_ear(4),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(5),
      Q => wb_ear(5),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(6),
      Q => wb_ear(6),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(7),
      Q => wb_ear(7),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(8),
      Q => wb_ear(8),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_EAR_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => wb_EAR_ii(9),
      Q => wb_ear(9),
      R => \WB_EAR_reg[31]_0\(0)
    );
\WB_ESR_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(11),
      Q => \WB_ESR_i_reg_n_0_[19]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(10),
      Q => \WB_ESR_i_reg_n_0_[20]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(9),
      Q => \WB_ESR_i_reg_n_0_[21]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(8),
      Q => \WB_ESR_i_reg_n_0_[22]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(7),
      Q => \WB_ESR_i_reg_n_0_[23]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(6),
      Q => \WB_ESR_i_reg_n_0_[24]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(5),
      Q => \WB_ESR_i_reg_n_0_[25]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(4),
      Q => \WB_ESR_i_reg_n_0_[26]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(3),
      Q => \WB_ESR_i_reg_n_0_[28]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(2),
      Q => \WB_ESR_i_reg_n_0_[29]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(1),
      Q => \WB_ESR_i_reg_n_0_[30]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => D(0),
      Q => \WB_ESR_i_reg_n_0_[31]\,
      R => \WB_ESR_i_reg[31]_0\(0)
    );
\WB_ESR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[19]\,
      Q => wb_esr(19),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[20]\,
      Q => wb_esr(20),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[21]\,
      Q => wb_esr(21),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[22]\,
      Q => wb_esr(22),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[23]\,
      Q => wb_esr(23),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[24]\,
      Q => wb_esr(24),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[25]\,
      Q => wb_esr(25),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[26]\,
      Q => wb_esr(26),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[28]\,
      Q => wb_esr(28),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[29]\,
      Q => wb_esr(29),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[30]\,
      Q => wb_esr(30),
      R => \WB_ESR_reg[31]_0\(0)
    );
\WB_ESR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \WB_ESR_i_reg_n_0_[31]\,
      Q => wb_esr(31),
      R => \WB_ESR_reg[31]_0\(0)
    );
\mem_EAR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => A1(1),
      Q => mem_EAR(30),
      R => sync_reset
    );
\mem_EAR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \mem_EAR_reg[31]_0\,
      D => A1(0),
      Q => mem_EAR(31),
      R => sync_reset
    );
\wb_EAR_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(29),
      Q => wb_EAR_i(0),
      R => sync_reset
    );
\wb_EAR_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(19),
      Q => wb_EAR_i(10),
      R => sync_reset
    );
\wb_EAR_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(18),
      Q => wb_EAR_i(11),
      R => sync_reset
    );
\wb_EAR_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(17),
      Q => wb_EAR_i(12),
      R => sync_reset
    );
\wb_EAR_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(16),
      Q => wb_EAR_i(13),
      R => sync_reset
    );
\wb_EAR_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(15),
      Q => wb_EAR_i(14),
      R => sync_reset
    );
\wb_EAR_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(14),
      Q => wb_EAR_i(15),
      R => sync_reset
    );
\wb_EAR_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(13),
      Q => wb_EAR_i(16),
      R => sync_reset
    );
\wb_EAR_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(12),
      Q => wb_EAR_i(17),
      R => sync_reset
    );
\wb_EAR_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(11),
      Q => wb_EAR_i(18),
      R => sync_reset
    );
\wb_EAR_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(10),
      Q => wb_EAR_i(19),
      R => sync_reset
    );
\wb_EAR_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(28),
      Q => wb_EAR_i(1),
      R => sync_reset
    );
\wb_EAR_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(9),
      Q => wb_EAR_i(20),
      R => sync_reset
    );
\wb_EAR_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(8),
      Q => wb_EAR_i(21),
      R => sync_reset
    );
\wb_EAR_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(7),
      Q => wb_EAR_i(22),
      R => sync_reset
    );
\wb_EAR_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(6),
      Q => wb_EAR_i(23),
      R => sync_reset
    );
\wb_EAR_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(5),
      Q => wb_EAR_i(24),
      R => sync_reset
    );
\wb_EAR_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(4),
      Q => wb_EAR_i(25),
      R => sync_reset
    );
\wb_EAR_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(3),
      Q => wb_EAR_i(26),
      R => sync_reset
    );
\wb_EAR_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(2),
      Q => wb_EAR_i(27),
      R => sync_reset
    );
\wb_EAR_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(1),
      Q => wb_EAR_i(28),
      R => sync_reset
    );
\wb_EAR_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(0),
      Q => wb_EAR_i(29),
      R => sync_reset
    );
\wb_EAR_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(27),
      Q => wb_EAR_i(2),
      R => sync_reset
    );
\wb_EAR_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_EAR(30),
      Q => wb_EAR_i(30),
      R => sync_reset
    );
\wb_EAR_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => mem_EAR(31),
      Q => wb_EAR_i(31),
      R => sync_reset
    );
\wb_EAR_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(26),
      Q => wb_EAR_i(3),
      R => sync_reset
    );
\wb_EAR_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(25),
      Q => wb_EAR_i(4),
      R => sync_reset
    );
\wb_EAR_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(24),
      Q => wb_EAR_i(5),
      R => sync_reset
    );
\wb_EAR_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(23),
      Q => wb_EAR_i(6),
      R => sync_reset
    );
\wb_EAR_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(22),
      Q => wb_EAR_i(7),
      R => sync_reset
    );
\wb_EAR_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(21),
      Q => wb_EAR_i(8),
      R => sync_reset
    );
\wb_EAR_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_32\,
      D => \wb_EAR_i_reg[0]_0\(20),
      Q => wb_EAR_i(9),
      R => sync_reset
    );
\wb_EAR_ii_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(0),
      Q => wb_EAR_ii(0),
      R => sync_reset
    );
\wb_EAR_ii_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(10),
      Q => wb_EAR_ii(10),
      R => sync_reset
    );
\wb_EAR_ii_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(11),
      Q => wb_EAR_ii(11),
      R => sync_reset
    );
\wb_EAR_ii_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(12),
      Q => wb_EAR_ii(12),
      R => sync_reset
    );
\wb_EAR_ii_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(13),
      Q => wb_EAR_ii(13),
      R => sync_reset
    );
\wb_EAR_ii_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(14),
      Q => wb_EAR_ii(14),
      R => sync_reset
    );
\wb_EAR_ii_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(15),
      Q => wb_EAR_ii(15),
      R => sync_reset
    );
\wb_EAR_ii_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(16),
      Q => wb_EAR_ii(16),
      R => sync_reset
    );
\wb_EAR_ii_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(17),
      Q => wb_EAR_ii(17),
      R => sync_reset
    );
\wb_EAR_ii_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(18),
      Q => wb_EAR_ii(18),
      R => sync_reset
    );
\wb_EAR_ii_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(19),
      Q => wb_EAR_ii(19),
      R => sync_reset
    );
\wb_EAR_ii_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(1),
      Q => wb_EAR_ii(1),
      R => sync_reset
    );
\wb_EAR_ii_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(20),
      Q => wb_EAR_ii(20),
      R => sync_reset
    );
\wb_EAR_ii_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(21),
      Q => wb_EAR_ii(21),
      R => sync_reset
    );
\wb_EAR_ii_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(22),
      Q => wb_EAR_ii(22),
      R => sync_reset
    );
\wb_EAR_ii_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(23),
      Q => wb_EAR_ii(23),
      R => sync_reset
    );
\wb_EAR_ii_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(24),
      Q => wb_EAR_ii(24),
      R => sync_reset
    );
\wb_EAR_ii_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(25),
      Q => wb_EAR_ii(25),
      R => sync_reset
    );
\wb_EAR_ii_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(26),
      Q => wb_EAR_ii(26),
      R => sync_reset
    );
\wb_EAR_ii_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(27),
      Q => wb_EAR_ii(27),
      R => sync_reset
    );
\wb_EAR_ii_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(28),
      Q => wb_EAR_ii(28),
      R => sync_reset
    );
\wb_EAR_ii_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(29),
      Q => wb_EAR_ii(29),
      R => sync_reset
    );
\wb_EAR_ii_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(2),
      Q => wb_EAR_ii(2),
      R => sync_reset
    );
\wb_EAR_ii_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(30),
      Q => wb_EAR_ii(30),
      R => sync_reset
    );
\wb_EAR_ii_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(31),
      Q => wb_EAR_ii(31),
      R => sync_reset
    );
\wb_EAR_ii_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(3),
      Q => wb_EAR_ii(3),
      R => sync_reset
    );
\wb_EAR_ii_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(4),
      Q => wb_EAR_ii(4),
      R => sync_reset
    );
\wb_EAR_ii_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(5),
      Q => wb_EAR_ii(5),
      R => sync_reset
    );
\wb_EAR_ii_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(6),
      Q => wb_EAR_ii(6),
      R => sync_reset
    );
\wb_EAR_ii_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(7),
      Q => wb_EAR_ii(7),
      R => sync_reset
    );
\wb_EAR_ii_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(8),
      Q => wb_EAR_ii(8),
      R => sync_reset
    );
\wb_EAR_ii_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_load_esr,
      D => wb_EAR_i(9),
      Q => wb_EAR_ii(9),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_instr_mux is
  port (
    I041_out : out STD_LOGIC;
    Y : out STD_LOGIC_VECTOR ( 0 to 31 );
    I139_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 32 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_instr_mux : entity is "instr_mux";
end mb_design_microblaze_0_1_instr_mux;

architecture STRUCTURE of mb_design_microblaze_0_1_instr_mux is
begin
\Mux_LD.LD_inst\: entity work.mb_design_microblaze_0_1_mux_bus
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(32 downto 0) => LOCKSTEP_Master_Out(32 downto 0),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_2\(0),
      Y(0 to 31) => Y(0 to 31),
      \in\(0) => \in\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_mul_unit is
  port (
    wb_mul_result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_mul_unit : entity is "mul_unit";
end mb_design_microblaze_0_1_mul_unit;

architecture STRUCTURE of mb_design_microblaze_0_1_mul_unit is
  signal mem_bd_p : STD_LOGIC_VECTOR ( 31 to 47 );
  signal mem_bd_pout : STD_LOGIC_VECTOR ( 0 to 47 );
  signal wb_ad_pout : STD_LOGIC_VECTOR ( 0 to 47 );
begin
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(31),
      Q => wb_mul_result(15),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(32),
      Q => wb_mul_result(16),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(33),
      Q => wb_mul_result(17),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(34),
      Q => wb_mul_result(18),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(35),
      Q => wb_mul_result(19),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(36),
      Q => wb_mul_result(20),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(37),
      Q => wb_mul_result(21),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(38),
      Q => wb_mul_result(22),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(39),
      Q => wb_mul_result(23),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(40),
      Q => wb_mul_result(24),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(41),
      Q => wb_mul_result(25),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(42),
      Q => wb_mul_result(26),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(43),
      Q => wb_mul_result(27),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(44),
      Q => wb_mul_result(28),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(45),
      Q => wb_mul_result(29),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(46),
      Q => wb_mul_result(30),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.WB_Mul_Result_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.DSP48E1_I1_1\,
      D => mem_bd_p(47),
      Q => wb_mul_result(31),
      R => SR(0)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2\: entity work.\mb_design_microblaze_0_1_dsp_module__parameterized1\
     port map (
      Clk => Clk,
      PCOUT(47) => wb_ad_pout(0),
      PCOUT(46) => wb_ad_pout(1),
      PCOUT(45) => wb_ad_pout(2),
      PCOUT(44) => wb_ad_pout(3),
      PCOUT(43) => wb_ad_pout(4),
      PCOUT(42) => wb_ad_pout(5),
      PCOUT(41) => wb_ad_pout(6),
      PCOUT(40) => wb_ad_pout(7),
      PCOUT(39) => wb_ad_pout(8),
      PCOUT(38) => wb_ad_pout(9),
      PCOUT(37) => wb_ad_pout(10),
      PCOUT(36) => wb_ad_pout(11),
      PCOUT(35) => wb_ad_pout(12),
      PCOUT(34) => wb_ad_pout(13),
      PCOUT(33) => wb_ad_pout(14),
      PCOUT(32) => wb_ad_pout(15),
      PCOUT(31) => wb_ad_pout(16),
      PCOUT(30) => wb_ad_pout(17),
      PCOUT(29) => wb_ad_pout(18),
      PCOUT(28) => wb_ad_pout(19),
      PCOUT(27) => wb_ad_pout(20),
      PCOUT(26) => wb_ad_pout(21),
      PCOUT(25) => wb_ad_pout(22),
      PCOUT(24) => wb_ad_pout(23),
      PCOUT(23) => wb_ad_pout(24),
      PCOUT(22) => wb_ad_pout(25),
      PCOUT(21) => wb_ad_pout(26),
      PCOUT(20) => wb_ad_pout(27),
      PCOUT(19) => wb_ad_pout(28),
      PCOUT(18) => wb_ad_pout(29),
      PCOUT(17) => wb_ad_pout(30),
      PCOUT(16) => wb_ad_pout(31),
      PCOUT(15) => wb_ad_pout(32),
      PCOUT(14) => wb_ad_pout(33),
      PCOUT(13) => wb_ad_pout(34),
      PCOUT(12) => wb_ad_pout(35),
      PCOUT(11) => wb_ad_pout(36),
      PCOUT(10) => wb_ad_pout(37),
      PCOUT(9) => wb_ad_pout(38),
      PCOUT(8) => wb_ad_pout(39),
      PCOUT(7) => wb_ad_pout(40),
      PCOUT(6) => wb_ad_pout(41),
      PCOUT(5) => wb_ad_pout(42),
      PCOUT(4) => wb_ad_pout(43),
      PCOUT(3) => wb_ad_pout(44),
      PCOUT(2) => wb_ad_pout(45),
      PCOUT(1) => wb_ad_pout(46),
      PCOUT(0) => wb_ad_pout(47),
      Q(16 downto 0) => Q(16 downto 0),
      SR(0) => SR(0),
      \Using_FPGA.DSP48E1_I1\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_0\(14 downto 0) => \Using_FPGA.DSP48E1_I1_0\(31 downto 17),
      \Using_FPGA.DSP48E1_I1_1\(47) => mem_bd_pout(0),
      \Using_FPGA.DSP48E1_I1_1\(46) => mem_bd_pout(1),
      \Using_FPGA.DSP48E1_I1_1\(45) => mem_bd_pout(2),
      \Using_FPGA.DSP48E1_I1_1\(44) => mem_bd_pout(3),
      \Using_FPGA.DSP48E1_I1_1\(43) => mem_bd_pout(4),
      \Using_FPGA.DSP48E1_I1_1\(42) => mem_bd_pout(5),
      \Using_FPGA.DSP48E1_I1_1\(41) => mem_bd_pout(6),
      \Using_FPGA.DSP48E1_I1_1\(40) => mem_bd_pout(7),
      \Using_FPGA.DSP48E1_I1_1\(39) => mem_bd_pout(8),
      \Using_FPGA.DSP48E1_I1_1\(38) => mem_bd_pout(9),
      \Using_FPGA.DSP48E1_I1_1\(37) => mem_bd_pout(10),
      \Using_FPGA.DSP48E1_I1_1\(36) => mem_bd_pout(11),
      \Using_FPGA.DSP48E1_I1_1\(35) => mem_bd_pout(12),
      \Using_FPGA.DSP48E1_I1_1\(34) => mem_bd_pout(13),
      \Using_FPGA.DSP48E1_I1_1\(33) => mem_bd_pout(14),
      \Using_FPGA.DSP48E1_I1_1\(32) => mem_bd_pout(15),
      \Using_FPGA.DSP48E1_I1_1\(31) => mem_bd_pout(16),
      \Using_FPGA.DSP48E1_I1_1\(30) => mem_bd_pout(17),
      \Using_FPGA.DSP48E1_I1_1\(29) => mem_bd_pout(18),
      \Using_FPGA.DSP48E1_I1_1\(28) => mem_bd_pout(19),
      \Using_FPGA.DSP48E1_I1_1\(27) => mem_bd_pout(20),
      \Using_FPGA.DSP48E1_I1_1\(26) => mem_bd_pout(21),
      \Using_FPGA.DSP48E1_I1_1\(25) => mem_bd_pout(22),
      \Using_FPGA.DSP48E1_I1_1\(24) => mem_bd_pout(23),
      \Using_FPGA.DSP48E1_I1_1\(23) => mem_bd_pout(24),
      \Using_FPGA.DSP48E1_I1_1\(22) => mem_bd_pout(25),
      \Using_FPGA.DSP48E1_I1_1\(21) => mem_bd_pout(26),
      \Using_FPGA.DSP48E1_I1_1\(20) => mem_bd_pout(27),
      \Using_FPGA.DSP48E1_I1_1\(19) => mem_bd_pout(28),
      \Using_FPGA.DSP48E1_I1_1\(18) => mem_bd_pout(29),
      \Using_FPGA.DSP48E1_I1_1\(17) => mem_bd_pout(30),
      \Using_FPGA.DSP48E1_I1_1\(16) => mem_bd_pout(31),
      \Using_FPGA.DSP48E1_I1_1\(15) => mem_bd_pout(32),
      \Using_FPGA.DSP48E1_I1_1\(14) => mem_bd_pout(33),
      \Using_FPGA.DSP48E1_I1_1\(13) => mem_bd_pout(34),
      \Using_FPGA.DSP48E1_I1_1\(12) => mem_bd_pout(35),
      \Using_FPGA.DSP48E1_I1_1\(11) => mem_bd_pout(36),
      \Using_FPGA.DSP48E1_I1_1\(10) => mem_bd_pout(37),
      \Using_FPGA.DSP48E1_I1_1\(9) => mem_bd_pout(38),
      \Using_FPGA.DSP48E1_I1_1\(8) => mem_bd_pout(39),
      \Using_FPGA.DSP48E1_I1_1\(7) => mem_bd_pout(40),
      \Using_FPGA.DSP48E1_I1_1\(6) => mem_bd_pout(41),
      \Using_FPGA.DSP48E1_I1_1\(5) => mem_bd_pout(42),
      \Using_FPGA.DSP48E1_I1_1\(4) => mem_bd_pout(43),
      \Using_FPGA.DSP48E1_I1_1\(3) => mem_bd_pout(44),
      \Using_FPGA.DSP48E1_I1_1\(2) => mem_bd_pout(45),
      \Using_FPGA.DSP48E1_I1_1\(1) => mem_bd_pout(46),
      \Using_FPGA.DSP48E1_I1_1\(0) => mem_bd_pout(47)
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3\: entity work.\mb_design_microblaze_0_1_dsp_module__parameterized3\
     port map (
      Clk => Clk,
      PCOUT(47) => wb_ad_pout(0),
      PCOUT(46) => wb_ad_pout(1),
      PCOUT(45) => wb_ad_pout(2),
      PCOUT(44) => wb_ad_pout(3),
      PCOUT(43) => wb_ad_pout(4),
      PCOUT(42) => wb_ad_pout(5),
      PCOUT(41) => wb_ad_pout(6),
      PCOUT(40) => wb_ad_pout(7),
      PCOUT(39) => wb_ad_pout(8),
      PCOUT(38) => wb_ad_pout(9),
      PCOUT(37) => wb_ad_pout(10),
      PCOUT(36) => wb_ad_pout(11),
      PCOUT(35) => wb_ad_pout(12),
      PCOUT(34) => wb_ad_pout(13),
      PCOUT(33) => wb_ad_pout(14),
      PCOUT(32) => wb_ad_pout(15),
      PCOUT(31) => wb_ad_pout(16),
      PCOUT(30) => wb_ad_pout(17),
      PCOUT(29) => wb_ad_pout(18),
      PCOUT(28) => wb_ad_pout(19),
      PCOUT(27) => wb_ad_pout(20),
      PCOUT(26) => wb_ad_pout(21),
      PCOUT(25) => wb_ad_pout(22),
      PCOUT(24) => wb_ad_pout(23),
      PCOUT(23) => wb_ad_pout(24),
      PCOUT(22) => wb_ad_pout(25),
      PCOUT(21) => wb_ad_pout(26),
      PCOUT(20) => wb_ad_pout(27),
      PCOUT(19) => wb_ad_pout(28),
      PCOUT(18) => wb_ad_pout(29),
      PCOUT(17) => wb_ad_pout(30),
      PCOUT(16) => wb_ad_pout(31),
      PCOUT(15) => wb_ad_pout(32),
      PCOUT(14) => wb_ad_pout(33),
      PCOUT(13) => wb_ad_pout(34),
      PCOUT(12) => wb_ad_pout(35),
      PCOUT(11) => wb_ad_pout(36),
      PCOUT(10) => wb_ad_pout(37),
      PCOUT(9) => wb_ad_pout(38),
      PCOUT(8) => wb_ad_pout(39),
      PCOUT(7) => wb_ad_pout(40),
      PCOUT(6) => wb_ad_pout(41),
      PCOUT(5) => wb_ad_pout(42),
      PCOUT(4) => wb_ad_pout(43),
      PCOUT(3) => wb_ad_pout(44),
      PCOUT(2) => wb_ad_pout(45),
      PCOUT(1) => wb_ad_pout(46),
      PCOUT(0) => wb_ad_pout(47),
      Q(14 downto 0) => Q(31 downto 17),
      SR(0) => SR(0),
      \Using_FPGA.DSP48E1_I1\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1_1\,
      \Using_FPGA.DSP48E1_I1_1\(16 downto 0) => \Using_FPGA.DSP48E1_I1_0\(16 downto 0),
      wb_mul_result(14) => wb_mul_result(0),
      wb_mul_result(13) => wb_mul_result(1),
      wb_mul_result(12) => wb_mul_result(2),
      wb_mul_result(11) => wb_mul_result(3),
      wb_mul_result(10) => wb_mul_result(4),
      wb_mul_result(9) => wb_mul_result(5),
      wb_mul_result(8) => wb_mul_result(6),
      wb_mul_result(7) => wb_mul_result(7),
      wb_mul_result(6) => wb_mul_result(8),
      wb_mul_result(5) => wb_mul_result(9),
      wb_mul_result(4) => wb_mul_result(10),
      wb_mul_result(3) => wb_mul_result(11),
      wb_mul_result(2) => wb_mul_result(12),
      wb_mul_result(1) => wb_mul_result(13),
      wb_mul_result(0) => wb_mul_result(14)
    );
\Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1\: entity work.mb_design_microblaze_0_1_dsp_module
     port map (
      Clk => Clk,
      D(16) => mem_bd_p(31),
      D(15) => mem_bd_p(32),
      D(14) => mem_bd_p(33),
      D(13) => mem_bd_p(34),
      D(12) => mem_bd_p(35),
      D(11) => mem_bd_p(36),
      D(10) => mem_bd_p(37),
      D(9) => mem_bd_p(38),
      D(8) => mem_bd_p(39),
      D(7) => mem_bd_p(40),
      D(6) => mem_bd_p(41),
      D(5) => mem_bd_p(42),
      D(4) => mem_bd_p(43),
      D(3) => mem_bd_p(44),
      D(2) => mem_bd_p(45),
      D(1) => mem_bd_p(46),
      D(0) => mem_bd_p(47),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1\(47) => mem_bd_pout(0),
      \Using_FPGA.DSP48E1_I1\(46) => mem_bd_pout(1),
      \Using_FPGA.DSP48E1_I1\(45) => mem_bd_pout(2),
      \Using_FPGA.DSP48E1_I1\(44) => mem_bd_pout(3),
      \Using_FPGA.DSP48E1_I1\(43) => mem_bd_pout(4),
      \Using_FPGA.DSP48E1_I1\(42) => mem_bd_pout(5),
      \Using_FPGA.DSP48E1_I1\(41) => mem_bd_pout(6),
      \Using_FPGA.DSP48E1_I1\(40) => mem_bd_pout(7),
      \Using_FPGA.DSP48E1_I1\(39) => mem_bd_pout(8),
      \Using_FPGA.DSP48E1_I1\(38) => mem_bd_pout(9),
      \Using_FPGA.DSP48E1_I1\(37) => mem_bd_pout(10),
      \Using_FPGA.DSP48E1_I1\(36) => mem_bd_pout(11),
      \Using_FPGA.DSP48E1_I1\(35) => mem_bd_pout(12),
      \Using_FPGA.DSP48E1_I1\(34) => mem_bd_pout(13),
      \Using_FPGA.DSP48E1_I1\(33) => mem_bd_pout(14),
      \Using_FPGA.DSP48E1_I1\(32) => mem_bd_pout(15),
      \Using_FPGA.DSP48E1_I1\(31) => mem_bd_pout(16),
      \Using_FPGA.DSP48E1_I1\(30) => mem_bd_pout(17),
      \Using_FPGA.DSP48E1_I1\(29) => mem_bd_pout(18),
      \Using_FPGA.DSP48E1_I1\(28) => mem_bd_pout(19),
      \Using_FPGA.DSP48E1_I1\(27) => mem_bd_pout(20),
      \Using_FPGA.DSP48E1_I1\(26) => mem_bd_pout(21),
      \Using_FPGA.DSP48E1_I1\(25) => mem_bd_pout(22),
      \Using_FPGA.DSP48E1_I1\(24) => mem_bd_pout(23),
      \Using_FPGA.DSP48E1_I1\(23) => mem_bd_pout(24),
      \Using_FPGA.DSP48E1_I1\(22) => mem_bd_pout(25),
      \Using_FPGA.DSP48E1_I1\(21) => mem_bd_pout(26),
      \Using_FPGA.DSP48E1_I1\(20) => mem_bd_pout(27),
      \Using_FPGA.DSP48E1_I1\(19) => mem_bd_pout(28),
      \Using_FPGA.DSP48E1_I1\(18) => mem_bd_pout(29),
      \Using_FPGA.DSP48E1_I1\(17) => mem_bd_pout(30),
      \Using_FPGA.DSP48E1_I1\(16) => mem_bd_pout(31),
      \Using_FPGA.DSP48E1_I1\(15) => mem_bd_pout(32),
      \Using_FPGA.DSP48E1_I1\(14) => mem_bd_pout(33),
      \Using_FPGA.DSP48E1_I1\(13) => mem_bd_pout(34),
      \Using_FPGA.DSP48E1_I1\(12) => mem_bd_pout(35),
      \Using_FPGA.DSP48E1_I1\(11) => mem_bd_pout(36),
      \Using_FPGA.DSP48E1_I1\(10) => mem_bd_pout(37),
      \Using_FPGA.DSP48E1_I1\(9) => mem_bd_pout(38),
      \Using_FPGA.DSP48E1_I1\(8) => mem_bd_pout(39),
      \Using_FPGA.DSP48E1_I1\(7) => mem_bd_pout(40),
      \Using_FPGA.DSP48E1_I1\(6) => mem_bd_pout(41),
      \Using_FPGA.DSP48E1_I1\(5) => mem_bd_pout(42),
      \Using_FPGA.DSP48E1_I1\(4) => mem_bd_pout(43),
      \Using_FPGA.DSP48E1_I1\(3) => mem_bd_pout(44),
      \Using_FPGA.DSP48E1_I1\(2) => mem_bd_pout(45),
      \Using_FPGA.DSP48E1_I1\(1) => mem_bd_pout(46),
      \Using_FPGA.DSP48E1_I1\(0) => mem_bd_pout(47),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\(16 downto 0) => \Using_FPGA.DSP48E1_I1_0\(16 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_Data_Flow_gti is
  port (
    Q : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \EX_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \out\ : out STD_LOGIC;
    \EX_Op3_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    mem_reverse_byteorder : out STD_LOGIC;
    wb_read_lsb_1_sel : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_read_msb_doublet_sel : out STD_LOGIC;
    ex_sel_alu_i_reg : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    mem_MSR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    of_MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    DI : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    \Using_FPGA.Native_32\ : out STD_LOGIC;
    \Using_FPGA.Native_33\ : out STD_LOGIC;
    \Using_FPGA.Native_34\ : out STD_LOGIC;
    \Using_FPGA.Native_35\ : out STD_LOGIC;
    \Using_FPGA.Native_36\ : out STD_LOGIC;
    \Using_FPGA.Native_37\ : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC_VECTOR ( 102 downto 0 );
    \Using_FPGA.Native_38\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    div_busy_reg : out STD_LOGIC;
    mem_last_cycle_reg : out STD_LOGIC;
    mem_div_overflow : out STD_LOGIC;
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op2_reg[30]\ : out STD_LOGIC;
    mem_daxi_exception_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_ie_rising0 : out STD_LOGIC;
    \Using_FPGA.Native_39\ : out STD_LOGIC;
    mem_div_stall_i_reg : out STD_LOGIC;
    \EX_Op1_reg[15]\ : out STD_LOGIC;
    MEM_Div_By_Zero_reg : out STD_LOGIC;
    \Using_FPGA.Native_40\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    GPR_Op1 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \WB_BTR_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_EAR_reg[15]\ : out STD_LOGIC;
    \WB_EAR_reg[14]\ : out STD_LOGIC;
    \WB_EAR_reg[13]\ : out STD_LOGIC;
    \WB_EAR_reg[12]\ : out STD_LOGIC;
    \WB_EAR_reg[11]\ : out STD_LOGIC;
    \WB_EAR_reg[10]\ : out STD_LOGIC;
    \WB_EAR_reg[9]\ : out STD_LOGIC;
    \WB_EAR_reg[8]\ : out STD_LOGIC;
    \WB_EAR_reg[7]\ : out STD_LOGIC;
    \WB_EAR_reg[6]\ : out STD_LOGIC;
    \WB_EAR_reg[5]\ : out STD_LOGIC;
    \WB_EAR_reg[4]\ : out STD_LOGIC;
    \WB_EAR_reg[3]\ : out STD_LOGIC;
    \WB_EAR_reg[2]\ : out STD_LOGIC;
    \WB_EAR_reg[1]\ : out STD_LOGIC;
    \WB_EAR_reg[0]\ : out STD_LOGIC;
    ex_addr_low_bits : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_byte_selects_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]\ : out STD_LOGIC;
    EX_Op1_Zero : out STD_LOGIC;
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    \imm_reg_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Branch_CMP_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2_reg[30]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Op1_reg[1]\ : in STD_LOGIC;
    \EX_Op1_reg[2]\ : in STD_LOGIC;
    \EX_Op1_reg[3]\ : in STD_LOGIC;
    \EX_Op1_reg[4]\ : in STD_LOGIC;
    \EX_Op1_reg[5]\ : in STD_LOGIC;
    \EX_Op1_reg[6]\ : in STD_LOGIC;
    \EX_Op1_reg[7]\ : in STD_LOGIC;
    \EX_Op1_reg[8]\ : in STD_LOGIC;
    \EX_Op1_reg[9]\ : in STD_LOGIC;
    \EX_Op1_reg[10]\ : in STD_LOGIC;
    \EX_Op1_reg[11]\ : in STD_LOGIC;
    \EX_Op1_reg[12]\ : in STD_LOGIC;
    \EX_Op1_reg[13]\ : in STD_LOGIC;
    \EX_Op1_reg[14]\ : in STD_LOGIC;
    \EX_Op1_reg[15]_0\ : in STD_LOGIC;
    \EX_Op1_reg[16]\ : in STD_LOGIC;
    \EX_Op1_reg[17]\ : in STD_LOGIC;
    \EX_Op1_reg[18]\ : in STD_LOGIC;
    \EX_Op1_reg[19]\ : in STD_LOGIC;
    \EX_Op1_reg[20]\ : in STD_LOGIC;
    \EX_Op1_reg[21]\ : in STD_LOGIC;
    \EX_Op1_reg[24]\ : in STD_LOGIC;
    \EX_Op1_reg[26]\ : in STD_LOGIC;
    \EX_Op1_reg[27]\ : in STD_LOGIC;
    \EX_Op1_reg[31]\ : in STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    \MEM_DataBus_Addr_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask1_reg[30]\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_EAR_reg[31]\ : in STD_LOGIC;
    ex_void_bit : in STD_LOGIC;
    ex_left_shift_i : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    ex_reverse_mem_access : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    R : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    \Using_FPGA.Native_47\ : in STD_LOGIC;
    \Using_FPGA.Native_48\ : in STD_LOGIC;
    \Using_FPGA.Native_49\ : in STD_LOGIC;
    \Using_FPGA.Native_50\ : in STD_LOGIC;
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    \Using_FPGA.Native_52\ : in STD_LOGIC;
    \Using_FPGA.Native_53\ : in STD_LOGIC;
    \Using_FPGA.Native_54\ : in STD_LOGIC;
    \Using_FPGA.Native_55\ : in STD_LOGIC;
    \WB_ESR_i_reg[28]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_56\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    MEM_WB_Sel_Mem_PC : in STD_LOGIC;
    I1 : in STD_LOGIC;
    \FPGA_Impl1.D_Handle[0].D_Sel_reg\ : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    ex_not_mul_op : in STD_LOGIC;
    \data_rd_reg_reg[31]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[31]_0\ : in STD_LOGIC;
    ex_doublet_access : in STD_LOGIC;
    \Using_FPGA.Native_57\ : in STD_LOGIC;
    MEM_DAXI_Exception : in STD_LOGIC;
    DUE : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_swap_byte_instr : in STD_LOGIC;
    ex_swap_instr : in STD_LOGIC;
    \Using_FPGA.Native_i_4__1\ : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    \EX_Op2_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    of_op2_imm_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Op3_reg[0]_0\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Branch_CMP_Op1_reg[1]\ : in STD_LOGIC;
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[2]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[3]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[4]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[5]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[6]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[7]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[8]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[9]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[10]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[11]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[12]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[13]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[14]\ : in STD_LOGIC;
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_58\ : in STD_LOGIC;
    \Using_FPGA.Native_59\ : in STD_LOGIC;
    \Using_FPGA.Native_60\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_61\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_bit_extract : in STD_LOGIC;
    ex_mux1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Use_HW_BS.mem_mux3_reg[0]\ : in STD_LOGIC;
    ex_bit_insert : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3038]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3038]_0\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3037]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3036]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3035]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3034]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3033]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3032]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3031]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3030]\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3029]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3028]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3027]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3026]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3025]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3024]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[3023]\ : in STD_LOGIC;
    ex_byte_access : in STD_LOGIC;
    mem_byte_access : in STD_LOGIC;
    mem_doublet_access : in STD_LOGIC;
    restore_wb_msr_to_ex : in STD_LOGIC;
    ex_MTS_MSR : in STD_LOGIC;
    ex_MSRSET : in STD_LOGIC;
    ex_MSRCLR : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[18]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]_0\ : in STD_LOGIC;
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 0 to 15 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Branch_CMP_Op1_reg[14]_0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Branch_CMP_Op1_reg[31]\ : in STD_LOGIC;
    \EX_Op1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    of_op1_sel_spr_pc : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[1]\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    EX_Op1_CMP_Equal : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    \MEM_DataBus_Write_Data_reg[0]\ : in STD_LOGIC_VECTOR ( 54 downto 0 );
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_MSR_i_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_MSR_i_reg[22]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_load_btr : in STD_LOGIC;
    \Q_reg[32]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \R_reg[32]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_BTR_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_load_esr : in STD_LOGIC;
    \WB_EAR_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_ESR_i_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_ESR_i_reg[20]\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \WB_ESR_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_62\ : in STD_LOGIC;
    \Using_FPGA.Native_63\ : in STD_LOGIC;
    ex_sel_alu : in STD_LOGIC;
    \Using_FPGA.Native_64\ : in STD_LOGIC;
    \Using_FPGA.Native_65\ : in STD_LOGIC;
    \Using_FPGA.Native_66\ : in STD_LOGIC;
    \Using_FPGA.Native_67\ : in STD_LOGIC;
    \Using_FPGA.Native_68\ : in STD_LOGIC;
    \Using_FPGA.Native_69\ : in STD_LOGIC;
    ex_Enable_Sext_Shift : in STD_LOGIC;
    \Using_FPGA.Native_70\ : in STD_LOGIC;
    \Using_FPGA.Native_71\ : in STD_LOGIC;
    \Using_FPGA.Native_72\ : in STD_LOGIC;
    \Using_FPGA.Native_73\ : in STD_LOGIC;
    \Using_FPGA.Native_74\ : in STD_LOGIC;
    \Using_FPGA.Native_75\ : in STD_LOGIC;
    \Using_FPGA.Native_76\ : in STD_LOGIC;
    \Using_FPGA.Native_77\ : in STD_LOGIC;
    \Using_FPGA.Native_78\ : in STD_LOGIC;
    \Using_FPGA.Native_79\ : in STD_LOGIC;
    \Using_FPGA.Native_80\ : in STD_LOGIC;
    \Using_FPGA.Native_81\ : in STD_LOGIC;
    \Using_FPGA.Native_82\ : in STD_LOGIC;
    \Using_FPGA.Native_83\ : in STD_LOGIC;
    \Using_FPGA.Native_84\ : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_Data_Flow_gti : entity is "Data_Flow_gti";
end mb_design_microblaze_0_1_Data_Flow_gti;

architecture STRUCTURE of mb_design_microblaze_0_1_Data_Flow_gti is
  signal ALU_I_n_14 : STD_LOGIC;
  signal ALU_I_n_15 : STD_LOGIC;
  signal ALU_I_n_16 : STD_LOGIC;
  signal ALU_I_n_17 : STD_LOGIC;
  signal ALU_I_n_18 : STD_LOGIC;
  signal ALU_I_n_19 : STD_LOGIC;
  signal ALU_I_n_20 : STD_LOGIC;
  signal ALU_I_n_21 : STD_LOGIC;
  signal ALU_I_n_22 : STD_LOGIC;
  signal ALU_I_n_23 : STD_LOGIC;
  signal ALU_I_n_24 : STD_LOGIC;
  signal ALU_I_n_25 : STD_LOGIC;
  signal ALU_I_n_26 : STD_LOGIC;
  signal ALU_I_n_27 : STD_LOGIC;
  signal \^ex_branch_cmp_op1_reg[0]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal EX_Fwd : STD_LOGIC_VECTOR ( 27 to 27 );
  signal \^ex_op1_zero\ : STD_LOGIC;
  signal \^ex_op1_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^ex_op2_reg[0]\ : STD_LOGIC_VECTOR ( 102 downto 0 );
  signal \^ex_op2_reg[30]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^ex_op3_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal EX_Shift_Logic_Result : STD_LOGIC_VECTOR ( 28 to 28 );
  signal \FPGA_Impl1.D_Handle[10].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[11].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[12].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[13].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[14].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[15].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[16].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[17].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[18].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[19].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[1].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[20].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[21].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[22].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[23].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[24].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[25].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[26].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[27].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[28].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[29].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[2].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[31].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[3].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[4].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[5].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[6].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[7].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[8].D_Sel_reg\ : STD_LOGIC;
  signal \FPGA_Impl1.D_Handle[9].D_Sel_reg\ : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal MEM_Barrel_Result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal MEM_Div_Result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal MEM_EX_Result : STD_LOGIC_VECTOR ( 0 to 30 );
  signal MEM_Fwd : STD_LOGIC_VECTOR ( 27 to 27 );
  signal Operand_Select_I_n_100 : STD_LOGIC;
  signal Operand_Select_I_n_101 : STD_LOGIC;
  signal Operand_Select_I_n_102 : STD_LOGIC;
  signal Operand_Select_I_n_103 : STD_LOGIC;
  signal Operand_Select_I_n_104 : STD_LOGIC;
  signal Operand_Select_I_n_105 : STD_LOGIC;
  signal Operand_Select_I_n_106 : STD_LOGIC;
  signal Operand_Select_I_n_107 : STD_LOGIC;
  signal Operand_Select_I_n_108 : STD_LOGIC;
  signal Operand_Select_I_n_109 : STD_LOGIC;
  signal Operand_Select_I_n_110 : STD_LOGIC;
  signal Operand_Select_I_n_111 : STD_LOGIC;
  signal Operand_Select_I_n_112 : STD_LOGIC;
  signal Operand_Select_I_n_113 : STD_LOGIC;
  signal Operand_Select_I_n_114 : STD_LOGIC;
  signal Operand_Select_I_n_115 : STD_LOGIC;
  signal Operand_Select_I_n_116 : STD_LOGIC;
  signal Operand_Select_I_n_117 : STD_LOGIC;
  signal Operand_Select_I_n_118 : STD_LOGIC;
  signal Operand_Select_I_n_119 : STD_LOGIC;
  signal Operand_Select_I_n_120 : STD_LOGIC;
  signal Operand_Select_I_n_121 : STD_LOGIC;
  signal Operand_Select_I_n_122 : STD_LOGIC;
  signal Operand_Select_I_n_123 : STD_LOGIC;
  signal Operand_Select_I_n_124 : STD_LOGIC;
  signal Operand_Select_I_n_125 : STD_LOGIC;
  signal Operand_Select_I_n_126 : STD_LOGIC;
  signal Operand_Select_I_n_127 : STD_LOGIC;
  signal Operand_Select_I_n_128 : STD_LOGIC;
  signal Operand_Select_I_n_129 : STD_LOGIC;
  signal Operand_Select_I_n_130 : STD_LOGIC;
  signal Operand_Select_I_n_131 : STD_LOGIC;
  signal Operand_Select_I_n_132 : STD_LOGIC;
  signal Operand_Select_I_n_133 : STD_LOGIC;
  signal Operand_Select_I_n_135 : STD_LOGIC;
  signal Operand_Select_I_n_136 : STD_LOGIC;
  signal Operand_Select_I_n_137 : STD_LOGIC;
  signal Operand_Select_I_n_138 : STD_LOGIC;
  signal Operand_Select_I_n_139 : STD_LOGIC;
  signal Operand_Select_I_n_140 : STD_LOGIC;
  signal Operand_Select_I_n_141 : STD_LOGIC;
  signal Operand_Select_I_n_142 : STD_LOGIC;
  signal Operand_Select_I_n_143 : STD_LOGIC;
  signal Operand_Select_I_n_144 : STD_LOGIC;
  signal Operand_Select_I_n_145 : STD_LOGIC;
  signal Operand_Select_I_n_146 : STD_LOGIC;
  signal Operand_Select_I_n_147 : STD_LOGIC;
  signal Operand_Select_I_n_148 : STD_LOGIC;
  signal Operand_Select_I_n_149 : STD_LOGIC;
  signal Operand_Select_I_n_150 : STD_LOGIC;
  signal Operand_Select_I_n_151 : STD_LOGIC;
  signal Operand_Select_I_n_263 : STD_LOGIC;
  signal Operand_Select_I_n_264 : STD_LOGIC;
  signal Operand_Select_I_n_268 : STD_LOGIC;
  signal Operand_Select_I_n_65 : STD_LOGIC;
  signal Operand_Select_I_n_66 : STD_LOGIC;
  signal Operand_Select_I_n_67 : STD_LOGIC;
  signal Operand_Select_I_n_68 : STD_LOGIC;
  signal Operand_Select_I_n_69 : STD_LOGIC;
  signal Operand_Select_I_n_70 : STD_LOGIC;
  signal Operand_Select_I_n_71 : STD_LOGIC;
  signal Operand_Select_I_n_72 : STD_LOGIC;
  signal Operand_Select_I_n_73 : STD_LOGIC;
  signal Operand_Select_I_n_74 : STD_LOGIC;
  signal Operand_Select_I_n_75 : STD_LOGIC;
  signal Operand_Select_I_n_76 : STD_LOGIC;
  signal Operand_Select_I_n_77 : STD_LOGIC;
  signal Operand_Select_I_n_78 : STD_LOGIC;
  signal Operand_Select_I_n_79 : STD_LOGIC;
  signal Operand_Select_I_n_80 : STD_LOGIC;
  signal Operand_Select_I_n_81 : STD_LOGIC;
  signal Operand_Select_I_n_82 : STD_LOGIC;
  signal Operand_Select_I_n_83 : STD_LOGIC;
  signal Operand_Select_I_n_84 : STD_LOGIC;
  signal Operand_Select_I_n_85 : STD_LOGIC;
  signal Operand_Select_I_n_86 : STD_LOGIC;
  signal Operand_Select_I_n_87 : STD_LOGIC;
  signal Operand_Select_I_n_88 : STD_LOGIC;
  signal Operand_Select_I_n_89 : STD_LOGIC;
  signal Operand_Select_I_n_90 : STD_LOGIC;
  signal Operand_Select_I_n_91 : STD_LOGIC;
  signal Operand_Select_I_n_92 : STD_LOGIC;
  signal Operand_Select_I_n_93 : STD_LOGIC;
  signal Operand_Select_I_n_94 : STD_LOGIC;
  signal Operand_Select_I_n_96 : STD_LOGIC;
  signal Operand_Select_I_n_97 : STD_LOGIC;
  signal Operand_Select_I_n_98 : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal S : STD_LOGIC;
  signal \Using_Div_Unit.Div_unit_I1_n_34\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_unit_I1_n_35\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_unit_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^using_fpga.native_4\ : STD_LOGIC;
  signal \^using_fpga.native_40\ : STD_LOGIC_VECTOR ( 30 downto 0 );
  signal \^using_fpga.native_5\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal Zero_Detect_I_n_1 : STD_LOGIC;
  signal Zero_Detect_I_n_3 : STD_LOGIC;
  signal div_busy : STD_LOGIC;
  signal \^ex_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal ex_alu_carryin : STD_LOGIC;
  signal ex_branch_cmp_op1 : STD_LOGIC_VECTOR ( 1 to 29 );
  signal ex_op2 : STD_LOGIC_VECTOR ( 1 to 27 );
  signal ex_pre_alu_carry : STD_LOGIC;
  signal \^ex_sel_alu_i_reg\ : STD_LOGIC_VECTOR ( 30 downto 0 );
  signal \^gpr_op1\ : STD_LOGIC_VECTOR ( 1 to 27 );
  signal \^gpr_op3\ : STD_LOGIC_VECTOR ( 1 to 27 );
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal make_result_neg : STD_LOGIC;
  signal \^mem_msr\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal mem_mask12 : STD_LOGIC_VECTOR ( 4 to 4 );
  signal mem_not_mul_op : STD_LOGIC;
  signal muxcy_di : STD_LOGIC;
  signal muxcy_sel : STD_LOGIC;
  signal negative_operands : STD_LOGIC;
  signal of_op3 : STD_LOGIC_VECTOR ( 1 to 14 );
  signal p_30_out : STD_LOGIC_VECTOR ( 30 downto 0 );
  signal wb_mem_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_mul_result : STD_LOGIC_VECTOR ( 0 to 31 );
begin
  \EX_Branch_CMP_Op1_reg[0]\(0) <= \^ex_branch_cmp_op1_reg[0]\(0);
  EX_Op1_Zero <= \^ex_op1_zero\;
  \EX_Op1_reg[0]\(31 downto 0) <= \^ex_op1_reg[0]\(31 downto 0);
  \EX_Op2_reg[0]\(102 downto 0) <= \^ex_op2_reg[0]\(102 downto 0);
  \EX_Op2_reg[30]_0\(1 downto 0) <= \^ex_op2_reg[30]_0\(1 downto 0);
  \EX_Op3_reg[0]\(31 downto 0) <= \^ex_op3_reg[0]\(31 downto 0);
  Q(7 downto 0) <= \^q\(7 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  \Using_FPGA.Native_4\ <= \^using_fpga.native_4\;
  \Using_FPGA.Native_40\(30 downto 0) <= \^using_fpga.native_40\(30 downto 0);
  \Using_FPGA.Native_5\ <= \^using_fpga.native_5\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  ex_MSR(0) <= \^ex_msr\(0);
  ex_sel_alu_i_reg(30 downto 0) <= \^ex_sel_alu_i_reg\(30 downto 0);
  lopt <= lopt_8;
  lopt_10 <= lopt_2;
  lopt_9 <= lopt_1;
  mem_MSR(1 downto 0) <= \^mem_msr\(1 downto 0);
ALU_I: entity work.mb_design_microblaze_0_1_ALU
     port map (
      A1(0) => \^ex_op2_reg[0]\(102),
      A1(1) => \^ex_op2_reg[0]\(101),
      A1(2) => \^ex_op2_reg[0]\(100),
      A1(3) => \^ex_op2_reg[0]\(99),
      A1(4) => \^ex_op2_reg[0]\(98),
      A1(5) => \^ex_op2_reg[0]\(97),
      A1(6) => \^ex_op2_reg[0]\(96),
      A1(7) => \^ex_op2_reg[0]\(95),
      A1(8) => \^ex_op2_reg[0]\(94),
      A1(9) => \^ex_op2_reg[0]\(93),
      A1(10) => \^ex_op2_reg[0]\(92),
      A1(11) => \^ex_op2_reg[0]\(91),
      A1(12) => \^ex_op2_reg[0]\(90),
      A1(13) => \^ex_op2_reg[0]\(89),
      A1(14) => \^ex_op2_reg[0]\(88),
      A1(15) => \^ex_op2_reg[0]\(87),
      A1(16) => \^ex_op2_reg[0]\(86),
      A1(17) => \^ex_op2_reg[0]\(85),
      A1(18) => \^ex_op2_reg[0]\(84),
      A1(19) => \^ex_op2_reg[0]\(83),
      A1(20) => \^ex_op2_reg[0]\(82),
      A1(21) => \^ex_op2_reg[0]\(81),
      A1(22) => \^ex_op2_reg[0]\(80),
      A1(23) => \^ex_op2_reg[0]\(79),
      A1(24) => \^ex_op2_reg[0]\(78),
      A1(25) => \^ex_op2_reg[0]\(77),
      A1(26) => \^ex_op2_reg[0]\(76),
      A1(27) => \^ex_op2_reg[0]\(75),
      A1(28) => \^ex_op2_reg[0]\(74),
      A1(29) => \^ex_op2_reg[0]\(73),
      A1(30) => \^ex_op2_reg[30]_0\(1),
      A1(31) => \^ex_op2_reg[30]_0\(0),
      D(13) => of_op3(1),
      D(12) => of_op3(2),
      D(11) => of_op3(3),
      D(10) => of_op3(4),
      D(9) => of_op3(5),
      D(8) => of_op3(6),
      D(7) => of_op3(7),
      D(6) => of_op3(8),
      D(5) => of_op3(9),
      D(4) => of_op3(10),
      D(3) => of_op3(11),
      D(2) => of_op3(12),
      D(1) => of_op3(13),
      D(0) => of_op3(14),
      DI_0 => DI_0,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[10]\ => \^ex_sel_alu_i_reg\(20),
      \EX_Branch_CMP_Op1_reg[11]\ => \^ex_sel_alu_i_reg\(19),
      \EX_Branch_CMP_Op1_reg[12]\ => \^ex_sel_alu_i_reg\(18),
      \EX_Branch_CMP_Op1_reg[13]\ => \^ex_sel_alu_i_reg\(17),
      \EX_Branch_CMP_Op1_reg[14]\ => \^ex_sel_alu_i_reg\(16),
      \EX_Branch_CMP_Op1_reg[1]\ => \^ex_sel_alu_i_reg\(29),
      \EX_Branch_CMP_Op1_reg[1]_0\(13 downto 0) => \^using_fpga.native_40\(29 downto 16),
      \EX_Branch_CMP_Op1_reg[2]\ => \^ex_sel_alu_i_reg\(28),
      \EX_Branch_CMP_Op1_reg[3]\ => \^ex_sel_alu_i_reg\(27),
      \EX_Branch_CMP_Op1_reg[4]\ => \^ex_sel_alu_i_reg\(26),
      \EX_Branch_CMP_Op1_reg[5]\ => \^ex_sel_alu_i_reg\(25),
      \EX_Branch_CMP_Op1_reg[6]\ => \^ex_sel_alu_i_reg\(24),
      \EX_Branch_CMP_Op1_reg[7]\ => \^ex_sel_alu_i_reg\(23),
      \EX_Branch_CMP_Op1_reg[8]\ => \^ex_sel_alu_i_reg\(22),
      \EX_Branch_CMP_Op1_reg[9]\ => \^ex_sel_alu_i_reg\(21),
      EX_Enable_ALU => EX_Enable_ALU,
      GPR_Op1(13) => \^gpr_op1\(1),
      GPR_Op1(12) => \^gpr_op1\(2),
      GPR_Op1(11) => \^gpr_op1\(3),
      GPR_Op1(10) => \^gpr_op1\(4),
      GPR_Op1(9) => \^gpr_op1\(5),
      GPR_Op1(8) => \^gpr_op1\(6),
      GPR_Op1(7) => \^gpr_op1\(7),
      GPR_Op1(6) => \^gpr_op1\(8),
      GPR_Op1(5) => \^gpr_op1\(9),
      GPR_Op1(4) => \^gpr_op1\(10),
      GPR_Op1(3) => \^gpr_op1\(11),
      GPR_Op1(2) => \^gpr_op1\(12),
      GPR_Op1(1) => \^gpr_op1\(13),
      GPR_Op1(0) => \^gpr_op1\(14),
      GPR_Op3(13) => \^gpr_op3\(1),
      GPR_Op3(12) => \^gpr_op3\(2),
      GPR_Op3(11) => \^gpr_op3\(3),
      GPR_Op3(10) => \^gpr_op3\(4),
      GPR_Op3(9) => \^gpr_op3\(5),
      GPR_Op3(8) => \^gpr_op3\(6),
      GPR_Op3(7) => \^gpr_op3\(7),
      GPR_Op3(6) => \^gpr_op3\(8),
      GPR_Op3(5) => \^gpr_op3\(9),
      GPR_Op3(4) => \^gpr_op3\(10),
      GPR_Op3(3) => \^gpr_op3\(11),
      GPR_Op3(2) => \^gpr_op3\(12),
      GPR_Op3(1) => \^gpr_op3\(13),
      GPR_Op3(0) => \^gpr_op3\(14),
      I0 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\,
      I2 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\,
      LO => LO,
      \MEM_DataBus_Addr_reg[9]\(1 downto 0) => \MEM_DataBus_Addr_reg[9]\(1 downto 0),
      Q(31) => \^q\(7),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9 downto 8) => \^q\(6 downto 5),
      Q(7) => ex_op2(24),
      Q(6) => \^q\(4),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3 downto 0) => \^q\(3 downto 0),
      S => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      \Using_FPGA.Native\(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      WB_Fwd(13) => \EX_Branch_CMP_Op1_reg[1]\,
      WB_Fwd(12) => \EX_Branch_CMP_Op1_reg[2]\,
      WB_Fwd(11) => \EX_Branch_CMP_Op1_reg[3]\,
      WB_Fwd(10) => \EX_Branch_CMP_Op1_reg[4]\,
      WB_Fwd(9) => \EX_Branch_CMP_Op1_reg[5]\,
      WB_Fwd(8) => \EX_Branch_CMP_Op1_reg[6]\,
      WB_Fwd(7) => \EX_Branch_CMP_Op1_reg[7]\,
      WB_Fwd(6) => \EX_Branch_CMP_Op1_reg[8]\,
      WB_Fwd(5) => \EX_Branch_CMP_Op1_reg[9]\,
      WB_Fwd(4) => \EX_Branch_CMP_Op1_reg[10]\,
      WB_Fwd(3) => \EX_Branch_CMP_Op1_reg[11]\,
      WB_Fwd(2) => \EX_Branch_CMP_Op1_reg[12]\,
      WB_Fwd(1) => \EX_Branch_CMP_Op1_reg[13]\,
      WB_Fwd(0) => \EX_Branch_CMP_Op1_reg[14]\,
      ex_alu_carryin => ex_alu_carryin,
      ex_sel_alu_i_reg(13) => ALU_I_n_14,
      ex_sel_alu_i_reg(12) => ALU_I_n_15,
      ex_sel_alu_i_reg(11) => ALU_I_n_16,
      ex_sel_alu_i_reg(10) => ALU_I_n_17,
      ex_sel_alu_i_reg(9) => ALU_I_n_18,
      ex_sel_alu_i_reg(8) => ALU_I_n_19,
      ex_sel_alu_i_reg(7) => ALU_I_n_20,
      ex_sel_alu_i_reg(6) => ALU_I_n_21,
      ex_sel_alu_i_reg(5) => ALU_I_n_22,
      ex_sel_alu_i_reg(4) => ALU_I_n_23,
      ex_sel_alu_i_reg(3) => ALU_I_n_24,
      ex_sel_alu_i_reg(2) => ALU_I_n_25,
      ex_sel_alu_i_reg(1) => ALU_I_n_26,
      ex_sel_alu_i_reg(0) => ALU_I_n_27,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_5,
      lopt_3 => lopt_6,
      lopt_4 => lopt_7,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1)
    );
Barrel_Shifter_I: entity work.mb_design_microblaze_0_1_Barrel_Shifter_gti
     port map (
      Clk => Clk,
      D(31) => Operand_Select_I_n_150,
      D(30 downto 1) => \Use_HW_BS.mem_mux3_reg[1]\(29 downto 0),
      D(0) => Operand_Select_I_n_151,
      MEM_Barrel_Result(0 to 31) => MEM_Barrel_Result(0 to 31),
      Q(1) => ex_op2(27),
      Q(0) => \^q\(3),
      SR(0) => SR(0),
      \Use_HW_BS.Using_BitField.Gen_Bits[0].mem_Rd_reg[0]_0\(31 downto 0) => \^ex_op3_reg[0]\(31 downto 0),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(31) => ex_bit_insert,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(30 downto 0) => p_30_out(30 downto 0),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\ => \mem_EAR_reg[31]\,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(30) => Operand_Select_I_n_119,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(29) => Operand_Select_I_n_120,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(28) => Operand_Select_I_n_121,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(27) => Operand_Select_I_n_122,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(26) => Operand_Select_I_n_123,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(25) => Operand_Select_I_n_124,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(24) => Operand_Select_I_n_125,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(23) => Operand_Select_I_n_126,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(22) => Operand_Select_I_n_127,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(21) => Operand_Select_I_n_128,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(20) => Operand_Select_I_n_129,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(19) => Operand_Select_I_n_130,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(18) => Operand_Select_I_n_131,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(17) => Operand_Select_I_n_132,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(16) => Operand_Select_I_n_133,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(15) => mem_mask12(4),
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(14) => Operand_Select_I_n_135,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(13) => Operand_Select_I_n_136,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(12) => Operand_Select_I_n_137,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(11) => Operand_Select_I_n_138,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(10) => Operand_Select_I_n_139,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(9) => Operand_Select_I_n_140,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(8) => Operand_Select_I_n_141,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(7) => Operand_Select_I_n_142,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(6) => Operand_Select_I_n_143,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(5) => Operand_Select_I_n_144,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(4) => Operand_Select_I_n_145,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(3) => Operand_Select_I_n_146,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(2) => Operand_Select_I_n_147,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(1) => Operand_Select_I_n_148,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(0) => Operand_Select_I_n_149,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[30]_0\ => \Use_HW_BS.Using_BitField.mem_mask1_reg[30]\,
      ex_left_shift_i => ex_left_shift_i,
      ex_void_bit => ex_void_bit,
      sync_reset => sync_reset
    );
Byte_Doublet_Handle_gti_I: entity work.mb_design_microblaze_0_1_Byte_Doublet_Handle_gti
     port map (
      Clk => Clk,
      D(31 downto 16) => \MEM_DataBus_Write_Data_reg[0]\(54 downto 39),
      D(15 downto 8) => \^ex_op2_reg[0]\(70 downto 63),
      D(7 downto 0) => \MEM_DataBus_Write_Data_reg[0]\(38 downto 31),
      \MEM_DataBus_Byte_Enable_reg[0]_0\(3 downto 0) => \^ex_op2_reg[0]\(62 downto 59),
      \MEM_DataBus_Write_Data_reg[0]_0\(35 downto 0) => \^ex_op2_reg[0]\(58 downto 23),
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\(1 downto 0) => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\(1 downto 0),
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_1\(0) => \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\(0),
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\ => \Using_FPGA.Native_41\,
      ex_reverse_mem_access => ex_reverse_mem_access,
      mem_byte_access => mem_byte_access,
      \mem_byte_selects_reg[0]_0\(0) => \mem_byte_selects_reg[0]\(0),
      \mem_byte_selects_reg[0]_1\ => Operand_Select_I_n_97,
      \mem_byte_selects_reg[1]_0\ => \mem_EAR_reg[31]\,
      \mem_byte_selects_reg[1]_1\(0) => Operand_Select_I_n_96,
      mem_doublet_access => mem_doublet_access,
      mem_reverse_byteorder_reg_0 => mem_reverse_byteorder,
      sync_reset => sync_reset,
      wb_read_lsb_1_sel(0) => wb_read_lsb_1_sel(0),
      wb_read_msb_doublet_sel => wb_read_msb_doublet_sel
    );
Data_Flow_Logic_I: entity work.mb_design_microblaze_0_1_Data_Flow_Logic
     port map (
      Clk => Clk,
      D(24 downto 4) => \^using_fpga.native_40\(29 downto 9),
      D(3) => \^using_fpga.native_40\(6),
      D(2) => \^using_fpga.native_40\(4),
      D(1) => MEM_Fwd(27),
      D(0) => \^using_fpga.native_40\(0),
      EX_Fwd(0) => EX_Fwd(27),
      MEM_Barrel_Result(24) => MEM_Barrel_Result(1),
      MEM_Barrel_Result(23) => MEM_Barrel_Result(2),
      MEM_Barrel_Result(22) => MEM_Barrel_Result(3),
      MEM_Barrel_Result(21) => MEM_Barrel_Result(4),
      MEM_Barrel_Result(20) => MEM_Barrel_Result(5),
      MEM_Barrel_Result(19) => MEM_Barrel_Result(6),
      MEM_Barrel_Result(18) => MEM_Barrel_Result(7),
      MEM_Barrel_Result(17) => MEM_Barrel_Result(8),
      MEM_Barrel_Result(16) => MEM_Barrel_Result(9),
      MEM_Barrel_Result(15) => MEM_Barrel_Result(10),
      MEM_Barrel_Result(14) => MEM_Barrel_Result(11),
      MEM_Barrel_Result(13) => MEM_Barrel_Result(12),
      MEM_Barrel_Result(12) => MEM_Barrel_Result(13),
      MEM_Barrel_Result(11) => MEM_Barrel_Result(14),
      MEM_Barrel_Result(10) => MEM_Barrel_Result(15),
      MEM_Barrel_Result(9) => MEM_Barrel_Result(16),
      MEM_Barrel_Result(8) => MEM_Barrel_Result(17),
      MEM_Barrel_Result(7) => MEM_Barrel_Result(18),
      MEM_Barrel_Result(6) => MEM_Barrel_Result(19),
      MEM_Barrel_Result(5) => MEM_Barrel_Result(20),
      MEM_Barrel_Result(4) => MEM_Barrel_Result(21),
      MEM_Barrel_Result(3) => MEM_Barrel_Result(24),
      MEM_Barrel_Result(2) => MEM_Barrel_Result(26),
      MEM_Barrel_Result(1) => MEM_Barrel_Result(27),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(31),
      Q(24) => MEM_Div_Result(1),
      Q(23) => MEM_Div_Result(2),
      Q(22) => MEM_Div_Result(3),
      Q(21) => MEM_Div_Result(4),
      Q(20) => MEM_Div_Result(5),
      Q(19) => MEM_Div_Result(6),
      Q(18) => MEM_Div_Result(7),
      Q(17) => MEM_Div_Result(8),
      Q(16) => MEM_Div_Result(9),
      Q(15) => MEM_Div_Result(10),
      Q(14) => MEM_Div_Result(11),
      Q(13) => MEM_Div_Result(12),
      Q(12) => MEM_Div_Result(13),
      Q(11) => MEM_Div_Result(14),
      Q(10) => MEM_Div_Result(15),
      Q(9) => MEM_Div_Result(16),
      Q(8) => MEM_Div_Result(17),
      Q(7) => MEM_Div_Result(18),
      Q(6) => MEM_Div_Result(19),
      Q(5) => MEM_Div_Result(20),
      Q(4) => MEM_Div_Result(21),
      Q(3) => MEM_Div_Result(24),
      Q(2) => MEM_Div_Result(26),
      Q(1) => MEM_Div_Result(27),
      Q(0) => MEM_Div_Result(31),
      R => R,
      SR(0) => mem_not_mul_op,
      \Using_FPGA.Native\(6) => MEM_EX_Result(0),
      \Using_FPGA.Native\(5) => MEM_EX_Result(22),
      \Using_FPGA.Native\(4) => MEM_EX_Result(23),
      \Using_FPGA.Native\(3) => MEM_EX_Result(25),
      \Using_FPGA.Native\(2) => MEM_EX_Result(28),
      \Using_FPGA.Native\(1) => MEM_EX_Result(29),
      \Using_FPGA.Native\(0) => MEM_EX_Result(30),
      \Using_FPGA.Native_0\ => \mem_EAR_reg[31]\,
      \Using_FPGA.Native_1\(30 downto 0) => \^ex_sel_alu_i_reg\(30 downto 0),
      \WB_MEM_Result_reg[0]_0\(31) => wb_mem_result(0),
      \WB_MEM_Result_reg[0]_0\(30) => wb_mem_result(1),
      \WB_MEM_Result_reg[0]_0\(29) => wb_mem_result(2),
      \WB_MEM_Result_reg[0]_0\(28) => wb_mem_result(3),
      \WB_MEM_Result_reg[0]_0\(27) => wb_mem_result(4),
      \WB_MEM_Result_reg[0]_0\(26) => wb_mem_result(5),
      \WB_MEM_Result_reg[0]_0\(25) => wb_mem_result(6),
      \WB_MEM_Result_reg[0]_0\(24) => wb_mem_result(7),
      \WB_MEM_Result_reg[0]_0\(23) => wb_mem_result(8),
      \WB_MEM_Result_reg[0]_0\(22) => wb_mem_result(9),
      \WB_MEM_Result_reg[0]_0\(21) => wb_mem_result(10),
      \WB_MEM_Result_reg[0]_0\(20) => wb_mem_result(11),
      \WB_MEM_Result_reg[0]_0\(19) => wb_mem_result(12),
      \WB_MEM_Result_reg[0]_0\(18) => wb_mem_result(13),
      \WB_MEM_Result_reg[0]_0\(17) => wb_mem_result(14),
      \WB_MEM_Result_reg[0]_0\(16) => wb_mem_result(15),
      \WB_MEM_Result_reg[0]_0\(15) => wb_mem_result(16),
      \WB_MEM_Result_reg[0]_0\(14) => wb_mem_result(17),
      \WB_MEM_Result_reg[0]_0\(13) => wb_mem_result(18),
      \WB_MEM_Result_reg[0]_0\(12) => wb_mem_result(19),
      \WB_MEM_Result_reg[0]_0\(11) => wb_mem_result(20),
      \WB_MEM_Result_reg[0]_0\(10) => wb_mem_result(21),
      \WB_MEM_Result_reg[0]_0\(9) => wb_mem_result(22),
      \WB_MEM_Result_reg[0]_0\(8) => wb_mem_result(23),
      \WB_MEM_Result_reg[0]_0\(7) => wb_mem_result(24),
      \WB_MEM_Result_reg[0]_0\(6) => wb_mem_result(25),
      \WB_MEM_Result_reg[0]_0\(5) => wb_mem_result(26),
      \WB_MEM_Result_reg[0]_0\(4) => wb_mem_result(27),
      \WB_MEM_Result_reg[0]_0\(3) => wb_mem_result(28),
      \WB_MEM_Result_reg[0]_0\(2) => wb_mem_result(29),
      \WB_MEM_Result_reg[0]_0\(1) => wb_mem_result(30),
      \WB_MEM_Result_reg[0]_0\(0) => wb_mem_result(31),
      \WB_MEM_Result_reg[0]_1\(6) => \^using_fpga.native_40\(30),
      \WB_MEM_Result_reg[0]_1\(5 downto 4) => \^using_fpga.native_40\(8 downto 7),
      \WB_MEM_Result_reg[0]_1\(3) => \^using_fpga.native_40\(5),
      \WB_MEM_Result_reg[0]_1\(2 downto 0) => \^using_fpga.native_40\(3 downto 1),
      \WB_MEM_Result_reg[31]_0\(0) => \WB_MEM_Result_reg[31]\(0),
      \WB_MEM_Result_reg[31]_1\ => \Using_FPGA.Native_41\,
      ex_not_mul_op => ex_not_mul_op,
      mem_sel_msr => mem_sel_msr,
      sync_reset => sync_reset
    );
MUL_Unit_I: entity work.mb_design_microblaze_0_1_mul_unit
     port map (
      Clk => Clk,
      Q(31) => \^q\(7),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9 downto 8) => \^q\(6 downto 5),
      Q(7) => ex_op2(24),
      Q(6) => \^q\(4),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3 downto 0) => \^q\(3 downto 0),
      SR(0) => mem_not_mul_op,
      \Using_FPGA.DSP48E1_I1\ => \mem_EAR_reg[31]\,
      \Using_FPGA.DSP48E1_I1_0\(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      \Using_FPGA.DSP48E1_I1_1\ => \Using_FPGA.Native_41\,
      wb_mul_result(0 to 31) => wb_mul_result(0 to 31)
    );
Operand_Select_I: entity work.mb_design_microblaze_0_1_Operand_Select_gti
     port map (
      CI => Operand_Select_I_n_98,
      Clk => Clk,
      D(30) => D(16),
      D(29) => ALU_I_n_14,
      D(28) => ALU_I_n_15,
      D(27) => ALU_I_n_16,
      D(26) => ALU_I_n_17,
      D(25) => ALU_I_n_18,
      D(24) => ALU_I_n_19,
      D(23) => ALU_I_n_20,
      D(22) => ALU_I_n_21,
      D(21) => ALU_I_n_22,
      D(20) => ALU_I_n_23,
      D(19) => ALU_I_n_24,
      D(18) => ALU_I_n_25,
      D(17) => ALU_I_n_26,
      D(16) => ALU_I_n_27,
      D(15 downto 0) => D(15 downto 0),
      E(0) => E(0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[0]_0\(29) => \^ex_branch_cmp_op1_reg[0]\(0),
      \EX_Branch_CMP_Op1_reg[0]_0\(28) => ex_branch_cmp_op1(1),
      \EX_Branch_CMP_Op1_reg[0]_0\(27) => ex_branch_cmp_op1(2),
      \EX_Branch_CMP_Op1_reg[0]_0\(26) => ex_branch_cmp_op1(3),
      \EX_Branch_CMP_Op1_reg[0]_0\(25) => ex_branch_cmp_op1(4),
      \EX_Branch_CMP_Op1_reg[0]_0\(24) => ex_branch_cmp_op1(5),
      \EX_Branch_CMP_Op1_reg[0]_0\(23) => ex_branch_cmp_op1(6),
      \EX_Branch_CMP_Op1_reg[0]_0\(22) => ex_branch_cmp_op1(7),
      \EX_Branch_CMP_Op1_reg[0]_0\(21) => ex_branch_cmp_op1(8),
      \EX_Branch_CMP_Op1_reg[0]_0\(20) => ex_branch_cmp_op1(9),
      \EX_Branch_CMP_Op1_reg[0]_0\(19) => ex_branch_cmp_op1(10),
      \EX_Branch_CMP_Op1_reg[0]_0\(18) => ex_branch_cmp_op1(11),
      \EX_Branch_CMP_Op1_reg[0]_0\(17) => ex_branch_cmp_op1(12),
      \EX_Branch_CMP_Op1_reg[0]_0\(16) => ex_branch_cmp_op1(13),
      \EX_Branch_CMP_Op1_reg[0]_0\(15) => ex_branch_cmp_op1(14),
      \EX_Branch_CMP_Op1_reg[0]_0\(14) => ex_branch_cmp_op1(15),
      \EX_Branch_CMP_Op1_reg[0]_0\(13) => ex_branch_cmp_op1(16),
      \EX_Branch_CMP_Op1_reg[0]_0\(12) => ex_branch_cmp_op1(17),
      \EX_Branch_CMP_Op1_reg[0]_0\(11) => ex_branch_cmp_op1(18),
      \EX_Branch_CMP_Op1_reg[0]_0\(10) => ex_branch_cmp_op1(19),
      \EX_Branch_CMP_Op1_reg[0]_0\(9) => ex_branch_cmp_op1(20),
      \EX_Branch_CMP_Op1_reg[0]_0\(8) => ex_branch_cmp_op1(21),
      \EX_Branch_CMP_Op1_reg[0]_0\(7) => ex_branch_cmp_op1(22),
      \EX_Branch_CMP_Op1_reg[0]_0\(6) => ex_branch_cmp_op1(23),
      \EX_Branch_CMP_Op1_reg[0]_0\(5) => ex_branch_cmp_op1(24),
      \EX_Branch_CMP_Op1_reg[0]_0\(4) => ex_branch_cmp_op1(25),
      \EX_Branch_CMP_Op1_reg[0]_0\(3) => ex_branch_cmp_op1(26),
      \EX_Branch_CMP_Op1_reg[0]_0\(2) => ex_branch_cmp_op1(27),
      \EX_Branch_CMP_Op1_reg[0]_0\(1) => ex_branch_cmp_op1(28),
      \EX_Branch_CMP_Op1_reg[0]_0\(0) => ex_branch_cmp_op1(29),
      \EX_Branch_CMP_Op1_reg[27]_0\(0) => MEM_Fwd(27),
      \EX_Branch_CMP_Op1_reg[30]_0\ => Operand_Select_I_n_268,
      \EX_Branch_CMP_Op1_reg[31]_0\ => \EX_Branch_CMP_Op1_reg[31]\,
      EX_CLZ_Instr_reg => Operand_Select_I_n_94,
      EX_CLZ_Instr_reg_0 => Operand_Select_I_n_102,
      EX_CLZ_Instr_reg_1 => Operand_Select_I_n_117,
      EX_Div_Unsigned_reg => S,
      EX_Div_Unsigned_reg_0 => \FPGA_Impl1.D_Handle[29].D_Sel_reg\,
      EX_Div_Unsigned_reg_1 => \FPGA_Impl1.D_Handle[28].D_Sel_reg\,
      EX_Div_Unsigned_reg_10 => \FPGA_Impl1.D_Handle[19].D_Sel_reg\,
      EX_Div_Unsigned_reg_11 => \FPGA_Impl1.D_Handle[18].D_Sel_reg\,
      EX_Div_Unsigned_reg_12 => \FPGA_Impl1.D_Handle[17].D_Sel_reg\,
      EX_Div_Unsigned_reg_13 => \FPGA_Impl1.D_Handle[16].D_Sel_reg\,
      EX_Div_Unsigned_reg_14 => \FPGA_Impl1.D_Handle[15].D_Sel_reg\,
      EX_Div_Unsigned_reg_15 => \FPGA_Impl1.D_Handle[14].D_Sel_reg\,
      EX_Div_Unsigned_reg_16 => \FPGA_Impl1.D_Handle[13].D_Sel_reg\,
      EX_Div_Unsigned_reg_17 => \FPGA_Impl1.D_Handle[12].D_Sel_reg\,
      EX_Div_Unsigned_reg_18 => \FPGA_Impl1.D_Handle[11].D_Sel_reg\,
      EX_Div_Unsigned_reg_19 => \FPGA_Impl1.D_Handle[10].D_Sel_reg\,
      EX_Div_Unsigned_reg_2 => \FPGA_Impl1.D_Handle[27].D_Sel_reg\,
      EX_Div_Unsigned_reg_20 => \FPGA_Impl1.D_Handle[9].D_Sel_reg\,
      EX_Div_Unsigned_reg_21 => \FPGA_Impl1.D_Handle[8].D_Sel_reg\,
      EX_Div_Unsigned_reg_22 => \FPGA_Impl1.D_Handle[7].D_Sel_reg\,
      EX_Div_Unsigned_reg_23 => \FPGA_Impl1.D_Handle[6].D_Sel_reg\,
      EX_Div_Unsigned_reg_24 => \FPGA_Impl1.D_Handle[5].D_Sel_reg\,
      EX_Div_Unsigned_reg_25 => \FPGA_Impl1.D_Handle[4].D_Sel_reg\,
      EX_Div_Unsigned_reg_26 => \FPGA_Impl1.D_Handle[3].D_Sel_reg\,
      EX_Div_Unsigned_reg_27 => \FPGA_Impl1.D_Handle[2].D_Sel_reg\,
      EX_Div_Unsigned_reg_28 => \FPGA_Impl1.D_Handle[1].D_Sel_reg\,
      EX_Div_Unsigned_reg_29 => Operand_Select_I_n_263,
      EX_Div_Unsigned_reg_3 => \FPGA_Impl1.D_Handle[26].D_Sel_reg\,
      EX_Div_Unsigned_reg_4 => \FPGA_Impl1.D_Handle[25].D_Sel_reg\,
      EX_Div_Unsigned_reg_5 => \FPGA_Impl1.D_Handle[24].D_Sel_reg\,
      EX_Div_Unsigned_reg_6 => \FPGA_Impl1.D_Handle[23].D_Sel_reg\,
      EX_Div_Unsigned_reg_7 => \FPGA_Impl1.D_Handle[22].D_Sel_reg\,
      EX_Div_Unsigned_reg_8 => \FPGA_Impl1.D_Handle[21].D_Sel_reg\,
      EX_Div_Unsigned_reg_9 => \FPGA_Impl1.D_Handle[20].D_Sel_reg\,
      EX_Fwd(0) => EX_Fwd(27),
      \EX_Logic_Op_reg[1]\ => Operand_Select_I_n_113,
      \EX_Op1_reg[0]_0\(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      \EX_Op1_reg[0]_1\ => Operand_Select_I_n_81,
      \EX_Op1_reg[0]_2\ => Operand_Select_I_n_91,
      \EX_Op1_reg[0]_3\ => Operand_Select_I_n_93,
      \EX_Op1_reg[0]_4\ => \^using_fpga.native_6\,
      \EX_Op1_reg[0]_5\(6 downto 0) => \EX_Op1_reg[0]_0\(6 downto 0),
      \EX_Op1_reg[10]_0\ => \EX_Op1_reg[10]\,
      \EX_Op1_reg[11]_0\ => \EX_Op1_reg[11]\,
      \EX_Op1_reg[12]_0\ => \EX_Op1_reg[12]\,
      \EX_Op1_reg[13]_0\ => \EX_Op1_reg[13]\,
      \EX_Op1_reg[14]_0\ => \EX_Op1_reg[14]\,
      \EX_Op1_reg[15]_0\ => \EX_Op1_reg[15]\,
      \EX_Op1_reg[15]_1\ => \EX_Op1_reg[15]_0\,
      \EX_Op1_reg[16]_0\ => Operand_Select_I_n_65,
      \EX_Op1_reg[16]_1\ => Operand_Select_I_n_100,
      \EX_Op1_reg[16]_2\ => Operand_Select_I_n_109,
      \EX_Op1_reg[16]_3\ => Operand_Select_I_n_114,
      \EX_Op1_reg[16]_4\ => Operand_Select_I_n_118,
      \EX_Op1_reg[16]_5\ => \EX_Op1_reg[16]\,
      \EX_Op1_reg[17]_0\ => Operand_Select_I_n_66,
      \EX_Op1_reg[17]_1\ => Operand_Select_I_n_111,
      \EX_Op1_reg[17]_2\ => \EX_Op1_reg[17]\,
      \EX_Op1_reg[18]_0\ => Operand_Select_I_n_67,
      \EX_Op1_reg[18]_1\ => Operand_Select_I_n_108,
      \EX_Op1_reg[18]_2\ => \EX_Op1_reg[18]\,
      \EX_Op1_reg[19]_0\ => Operand_Select_I_n_68,
      \EX_Op1_reg[19]_1\ => Operand_Select_I_n_107,
      \EX_Op1_reg[19]_2\ => Operand_Select_I_n_115,
      \EX_Op1_reg[19]_3\ => \EX_Op1_reg[19]\,
      \EX_Op1_reg[1]_0\ => Operand_Select_I_n_82,
      \EX_Op1_reg[1]_1\ => Operand_Select_I_n_92,
      \EX_Op1_reg[1]_2\ => \EX_Op1_reg[1]\,
      \EX_Op1_reg[20]_0\ => Operand_Select_I_n_69,
      \EX_Op1_reg[20]_1\ => Operand_Select_I_n_106,
      \EX_Op1_reg[20]_2\ => \EX_Op1_reg[20]\,
      \EX_Op1_reg[21]_0\ => Operand_Select_I_n_70,
      \EX_Op1_reg[21]_1\ => Operand_Select_I_n_105,
      \EX_Op1_reg[21]_2\ => \EX_Op1_reg[21]\,
      \EX_Op1_reg[22]_0\ => Operand_Select_I_n_71,
      \EX_Op1_reg[22]_1\ => Operand_Select_I_n_104,
      \EX_Op1_reg[22]_2\ => \^using_fpga.native_3\,
      \EX_Op1_reg[23]_0\ => Operand_Select_I_n_72,
      \EX_Op1_reg[23]_1\ => Operand_Select_I_n_103,
      \EX_Op1_reg[24]_0\ => Operand_Select_I_n_73,
      \EX_Op1_reg[24]_1\ => Operand_Select_I_n_101,
      \EX_Op1_reg[24]_2\ => \EX_Op1_reg[24]\,
      \EX_Op1_reg[25]_0\ => Operand_Select_I_n_74,
      \EX_Op1_reg[25]_1\ => \^using_fpga.native_4\,
      \EX_Op1_reg[26]_0\ => Operand_Select_I_n_75,
      \EX_Op1_reg[26]_1\ => \EX_Op1_reg[26]\,
      \EX_Op1_reg[27]_0\ => Operand_Select_I_n_76,
      \EX_Op1_reg[27]_1\ => \EX_Op1_reg[27]\,
      \EX_Op1_reg[28]_0\ => Operand_Select_I_n_77,
      \EX_Op1_reg[28]_1\ => \^using_fpga.native_5\,
      \EX_Op1_reg[29]_0\ => Operand_Select_I_n_78,
      \EX_Op1_reg[29]_1\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[2]_0\ => Operand_Select_I_n_83,
      \EX_Op1_reg[2]_1\ => \EX_Op1_reg[2]\,
      \EX_Op1_reg[30]_0\ => Operand_Select_I_n_79,
      \EX_Op1_reg[30]_1\ => \^using_fpga.native_7\,
      \EX_Op1_reg[31]_0\ => Operand_Select_I_n_80,
      \EX_Op1_reg[31]_1\ => \EX_Op1_reg[31]\,
      \EX_Op1_reg[3]_0\ => Operand_Select_I_n_84,
      \EX_Op1_reg[3]_1\ => \EX_Op1_reg[3]\,
      \EX_Op1_reg[4]_0\ => Operand_Select_I_n_85,
      \EX_Op1_reg[4]_1\ => \EX_Op1_reg[4]\,
      \EX_Op1_reg[5]_0\ => Operand_Select_I_n_86,
      \EX_Op1_reg[5]_1\ => \EX_Op1_reg[5]\,
      \EX_Op1_reg[6]_0\ => Operand_Select_I_n_87,
      \EX_Op1_reg[6]_1\ => \EX_Op1_reg[6]\,
      \EX_Op1_reg[7]_0\ => Operand_Select_I_n_88,
      \EX_Op1_reg[7]_1\ => \EX_Op1_reg[7]\,
      \EX_Op1_reg[8]_0\ => Operand_Select_I_n_89,
      \EX_Op1_reg[8]_1\ => \EX_Op1_reg[8]\,
      \EX_Op1_reg[9]_0\ => Operand_Select_I_n_90,
      \EX_Op1_reg[9]_1\ => \EX_Op1_reg[9]\,
      \EX_Op2_reg[0]_0\ => Operand_Select_I_n_264,
      \EX_Op2_reg[0]_1\(30 downto 0) => \EX_Op2_reg[0]_0\(30 downto 0),
      \EX_Op2_reg[21]_0\(30 downto 0) => p_30_out(30 downto 0),
      \EX_Op2_reg[22]_0\(30) => Operand_Select_I_n_119,
      \EX_Op2_reg[22]_0\(29) => Operand_Select_I_n_120,
      \EX_Op2_reg[22]_0\(28) => Operand_Select_I_n_121,
      \EX_Op2_reg[22]_0\(27) => Operand_Select_I_n_122,
      \EX_Op2_reg[22]_0\(26) => Operand_Select_I_n_123,
      \EX_Op2_reg[22]_0\(25) => Operand_Select_I_n_124,
      \EX_Op2_reg[22]_0\(24) => Operand_Select_I_n_125,
      \EX_Op2_reg[22]_0\(23) => Operand_Select_I_n_126,
      \EX_Op2_reg[22]_0\(22) => Operand_Select_I_n_127,
      \EX_Op2_reg[22]_0\(21) => Operand_Select_I_n_128,
      \EX_Op2_reg[22]_0\(20) => Operand_Select_I_n_129,
      \EX_Op2_reg[22]_0\(19) => Operand_Select_I_n_130,
      \EX_Op2_reg[22]_0\(18) => Operand_Select_I_n_131,
      \EX_Op2_reg[22]_0\(17) => Operand_Select_I_n_132,
      \EX_Op2_reg[22]_0\(16) => Operand_Select_I_n_133,
      \EX_Op2_reg[22]_0\(15) => mem_mask12(4),
      \EX_Op2_reg[22]_0\(14) => Operand_Select_I_n_135,
      \EX_Op2_reg[22]_0\(13) => Operand_Select_I_n_136,
      \EX_Op2_reg[22]_0\(12) => Operand_Select_I_n_137,
      \EX_Op2_reg[22]_0\(11) => Operand_Select_I_n_138,
      \EX_Op2_reg[22]_0\(10) => Operand_Select_I_n_139,
      \EX_Op2_reg[22]_0\(9) => Operand_Select_I_n_140,
      \EX_Op2_reg[22]_0\(8) => Operand_Select_I_n_141,
      \EX_Op2_reg[22]_0\(7) => Operand_Select_I_n_142,
      \EX_Op2_reg[22]_0\(6) => Operand_Select_I_n_143,
      \EX_Op2_reg[22]_0\(5) => Operand_Select_I_n_144,
      \EX_Op2_reg[22]_0\(4) => Operand_Select_I_n_145,
      \EX_Op2_reg[22]_0\(3) => Operand_Select_I_n_146,
      \EX_Op2_reg[22]_0\(2) => Operand_Select_I_n_147,
      \EX_Op2_reg[22]_0\(1) => Operand_Select_I_n_148,
      \EX_Op2_reg[22]_0\(0) => Operand_Select_I_n_149,
      \EX_Op2_reg[29]_0\(1) => Operand_Select_I_n_150,
      \EX_Op2_reg[29]_0\(0) => Operand_Select_I_n_151,
      \EX_Op2_reg[30]_0\ => \EX_Op2_reg[30]\,
      \EX_Op3_reg[0]_0\(31 downto 0) => \^ex_op3_reg[0]\(31 downto 0),
      \EX_Op3_reg[0]_1\(30) => \EX_Op3_reg[0]_0\(16),
      \EX_Op3_reg[0]_1\(29) => of_op3(1),
      \EX_Op3_reg[0]_1\(28) => of_op3(2),
      \EX_Op3_reg[0]_1\(27) => of_op3(3),
      \EX_Op3_reg[0]_1\(26) => of_op3(4),
      \EX_Op3_reg[0]_1\(25) => of_op3(5),
      \EX_Op3_reg[0]_1\(24) => of_op3(6),
      \EX_Op3_reg[0]_1\(23) => of_op3(7),
      \EX_Op3_reg[0]_1\(22) => of_op3(8),
      \EX_Op3_reg[0]_1\(21) => of_op3(9),
      \EX_Op3_reg[0]_1\(20) => of_op3(10),
      \EX_Op3_reg[0]_1\(19) => of_op3(11),
      \EX_Op3_reg[0]_1\(18) => of_op3(12),
      \EX_Op3_reg[0]_1\(17) => of_op3(13),
      \EX_Op3_reg[0]_1\(16) => of_op3(14),
      \EX_Op3_reg[0]_1\(15 downto 0) => \EX_Op3_reg[0]_0\(15 downto 0),
      EX_Pattern_Cmp_Sel_reg => Operand_Select_I_n_112,
      EX_Pattern_Cmp_Sel_reg_0 => Operand_Select_I_n_116,
      EX_Shift_Logic_Result(0) => EX_Shift_Logic_Result(28),
      GPR_Op1(0) => \^gpr_op1\(27),
      GPR_Op3(0) => \^gpr_op3\(27),
      I0 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\,
      I2 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\,
      Q(31) => \^q\(7),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9 downto 8) => \^q\(6 downto 5),
      Q(7) => ex_op2(24),
      Q(6) => \^q\(4),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3 downto 0) => \^q\(3 downto 0),
      S => \FPGA_Impl1.D_Handle[31].D_Sel_reg\,
      S_0 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      \Use_HW_BS.mem_mux3_reg[0]\ => \Use_HW_BS.mem_mux3_reg[0]\,
      \Using_FPGA.Native\(0) => Operand_Select_I_n_96,
      \Using_FPGA.Native_0\ => Operand_Select_I_n_97,
      \Using_FPGA.Native_1\(13 downto 0) => \^ex_op2_reg[0]\(72 downto 59),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_57\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_58\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_59\,
      \Using_FPGA.Native_5\(1 downto 0) => \Using_FPGA.Native_60\(1 downto 0),
      \Using_FPGA.Native_6\(1 downto 0) => \Using_FPGA.Native_61\(1 downto 0),
      \Using_FPGA.Native_i_4__1\ => \Using_FPGA.Native_i_4__1\,
      WB_Fwd(0) => \^ex_op2_reg[0]\(4),
      ex_MSR(0) => \^ex_msr\(0),
      ex_MSRCLR => ex_MSRCLR,
      ex_MSRSET => ex_MSRSET,
      ex_MTS_MSR => ex_MTS_MSR,
      ex_addr_low_bits(1 downto 0) => ex_addr_low_bits(1 downto 0),
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_byte_access => ex_byte_access,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_div_unsigned => ex_div_unsigned,
      ex_doublet_access => ex_doublet_access,
      ex_left_shift_i => ex_left_shift_i,
      ex_mux1(2 downto 0) => ex_mux1(2 downto 0),
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_reverse_mem_access => ex_reverse_mem_access,
      ex_start_div => ex_start_div,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      ex_void_bit => ex_void_bit,
      \imm_reg_reg[0]_0\(15 downto 0) => \imm_reg_reg[0]\(15 downto 0),
      in0 => Operand_Select_I_n_110,
      make_result_neg => make_result_neg,
      negative_operands => negative_operands,
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      of_op2_imm_addr(0) => of_op2_imm_addr(0),
      of_op2_sel(0 to 1) => of_op2_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      \out\ => I4,
      sync_reset => sync_reset
    );
Register_File_I: entity work.mb_design_microblaze_0_1_Register_File_gti
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[18]\ => \EX_Branch_CMP_Op1_reg[18]\,
      GPR_Op1(0) => GPR_Op1(16),
      GPR_Op1(1 to 14) => \^gpr_op1\(1 to 14),
      GPR_Op1(15) => GPR_Op1(15),
      GPR_Op1(16) => GPR_Op1(14),
      GPR_Op1(17) => GPR_Op1(13),
      GPR_Op1(18) => GPR_Op1(12),
      GPR_Op1(19) => GPR_Op1(11),
      GPR_Op1(20) => GPR_Op1(10),
      GPR_Op1(21) => GPR_Op1(9),
      GPR_Op1(22) => GPR_Op1(8),
      GPR_Op1(23) => GPR_Op1(7),
      GPR_Op1(24) => GPR_Op1(6),
      GPR_Op1(25) => GPR_Op1(5),
      GPR_Op1(26) => GPR_Op1(4),
      GPR_Op1(27) => \^gpr_op1\(27),
      GPR_Op1(28) => GPR_Op1(3),
      GPR_Op1(29) => GPR_Op1(2),
      GPR_Op1(30) => GPR_Op1(1),
      GPR_Op1(31) => GPR_Op1(0),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(0) => GPR_Op3(16),
      GPR_Op3(1 to 14) => \^gpr_op3\(1 to 14),
      GPR_Op3(15) => GPR_Op3(15),
      GPR_Op3(16) => GPR_Op3(14),
      GPR_Op3(17) => GPR_Op3(13),
      GPR_Op3(18) => GPR_Op3(12),
      GPR_Op3(19) => GPR_Op3(11),
      GPR_Op3(20) => GPR_Op3(10),
      GPR_Op3(21) => GPR_Op3(9),
      GPR_Op3(22) => GPR_Op3(8),
      GPR_Op3(23) => GPR_Op3(7),
      GPR_Op3(24) => GPR_Op3(6),
      GPR_Op3(25) => GPR_Op3(5),
      GPR_Op3(26) => GPR_Op3(4),
      GPR_Op3(27) => \^gpr_op3\(27),
      GPR_Op3(28) => GPR_Op3(3),
      GPR_Op3(29) => GPR_Op3(2),
      GPR_Op3(30) => GPR_Op3(1),
      GPR_Op3(31) => GPR_Op3(0),
      WB_Fwd(0) => \EX_Branch_CMP_Op1_reg[0]_0\,
      WB_Fwd(1) => \EX_Branch_CMP_Op1_reg[1]\,
      WB_Fwd(2) => \EX_Branch_CMP_Op1_reg[2]\,
      WB_Fwd(3) => \EX_Branch_CMP_Op1_reg[3]\,
      WB_Fwd(4) => \EX_Branch_CMP_Op1_reg[4]\,
      WB_Fwd(5) => \EX_Branch_CMP_Op1_reg[5]\,
      WB_Fwd(6) => \EX_Branch_CMP_Op1_reg[6]\,
      WB_Fwd(7) => \EX_Branch_CMP_Op1_reg[7]\,
      WB_Fwd(8) => \EX_Branch_CMP_Op1_reg[8]\,
      WB_Fwd(9) => \EX_Branch_CMP_Op1_reg[9]\,
      WB_Fwd(10) => \EX_Branch_CMP_Op1_reg[10]\,
      WB_Fwd(11) => \EX_Branch_CMP_Op1_reg[11]\,
      WB_Fwd(12) => \EX_Branch_CMP_Op1_reg[12]\,
      WB_Fwd(13) => \EX_Branch_CMP_Op1_reg[13]\,
      WB_Fwd(14) => \EX_Branch_CMP_Op1_reg[14]\,
      WB_Fwd(15) => \EX_Branch_CMP_Op1_reg[14]_0\,
      WB_Fwd(16) => \^ex_op2_reg[0]\(15),
      WB_Fwd(17) => \^ex_op2_reg[0]\(14),
      WB_Fwd(18) => \^ex_op2_reg[0]\(13),
      WB_Fwd(19) => \^ex_op2_reg[0]\(12),
      WB_Fwd(20) => \^ex_op2_reg[0]\(11),
      WB_Fwd(21) => \^ex_op2_reg[0]\(10),
      WB_Fwd(22) => \^ex_op2_reg[0]\(9),
      WB_Fwd(23) => \^ex_op2_reg[0]\(8),
      WB_Fwd(24) => \^ex_op2_reg[0]\(7),
      WB_Fwd(25) => \^ex_op2_reg[0]\(6),
      WB_Fwd(26) => \^ex_op2_reg[0]\(5),
      WB_Fwd(27) => \^ex_op2_reg[0]\(4),
      WB_Fwd(28) => \^ex_op2_reg[0]\(3),
      WB_Fwd(29) => \^ex_op2_reg[0]\(2),
      WB_Fwd(30) => \^ex_op2_reg[0]\(1),
      WB_Fwd(31) => \^ex_op2_reg[0]\(0),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4) => of_imm_data(0),
      of_imm_data(3) => of_imm_data(1),
      of_imm_data(2) => of_imm_data(2),
      of_imm_data(1) => of_imm_data(3),
      of_imm_data(0) => of_imm_data(4)
    );
Shift_Logic_Module_I: entity work.mb_design_microblaze_0_1_Shift_Logic_Module_gti
     port map (
      \EX_Op1_reg[16]\ => \out\,
      \Using_FPGA.Native\ => Operand_Select_I_n_110,
      in0 => in0,
      \out\ => I4
    );
\Using_DAXI_ALU_Carry.Direct_MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_317
     port map (
      \Using_FPGA.Native_0\ => \^using_fpga.native_6\,
      ex_pre_alu_carry => ex_pre_alu_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      lopt_3 => lopt_3,
      lopt_4 => DI_0,
      lopt_5 => ex_use_carry,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => lopt_6,
      lopt_9 => lopt_7,
      muxcy_di => muxcy_di,
      muxcy_sel => muxcy_sel
    );
\Using_DAXI_ALU_Carry.Post_MUXCY_I\: entity work.mb_design_microblaze_0_1_MB_MUXCY_318
     port map (
      ex_alu_carryin => ex_alu_carryin,
      ex_pre_alu_carry => ex_pre_alu_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\
    );
\Using_DAXI_ALU_Carry.direct_lut_INST\: entity work.\mb_design_microblaze_0_1_MB_LUT6_2__parameterized1\
     port map (
      muxcy_di => muxcy_di,
      muxcy_sel => muxcy_sel
    );
\Using_Div_Unit.Div_unit_I1\: entity work.mb_design_microblaze_0_1_Div_unit_gti
     port map (
      CI => Operand_Select_I_n_98,
      Clk => Clk,
      D(0) => \^using_fpga.native_0\,
      DUE => DUE,
      \D_reg[10]_0\ => \FPGA_Impl1.D_Handle[10].D_Sel_reg\,
      \D_reg[11]_0\ => \FPGA_Impl1.D_Handle[11].D_Sel_reg\,
      \D_reg[12]_0\ => \FPGA_Impl1.D_Handle[12].D_Sel_reg\,
      \D_reg[13]_0\ => \FPGA_Impl1.D_Handle[13].D_Sel_reg\,
      \D_reg[14]_0\ => \FPGA_Impl1.D_Handle[14].D_Sel_reg\,
      \D_reg[15]_0\ => \FPGA_Impl1.D_Handle[15].D_Sel_reg\,
      \D_reg[16]_0\ => \FPGA_Impl1.D_Handle[16].D_Sel_reg\,
      \D_reg[17]_0\ => \FPGA_Impl1.D_Handle[17].D_Sel_reg\,
      \D_reg[18]_0\ => \FPGA_Impl1.D_Handle[18].D_Sel_reg\,
      \D_reg[19]_0\ => \FPGA_Impl1.D_Handle[19].D_Sel_reg\,
      \D_reg[1]_0\ => \FPGA_Impl1.D_Handle[1].D_Sel_reg\,
      \D_reg[20]_0\ => \FPGA_Impl1.D_Handle[20].D_Sel_reg\,
      \D_reg[21]_0\ => \FPGA_Impl1.D_Handle[21].D_Sel_reg\,
      \D_reg[22]_0\ => \FPGA_Impl1.D_Handle[22].D_Sel_reg\,
      \D_reg[23]_0\ => \FPGA_Impl1.D_Handle[23].D_Sel_reg\,
      \D_reg[24]_0\ => \FPGA_Impl1.D_Handle[24].D_Sel_reg\,
      \D_reg[25]_0\ => \FPGA_Impl1.D_Handle[25].D_Sel_reg\,
      \D_reg[26]_0\ => \FPGA_Impl1.D_Handle[26].D_Sel_reg\,
      \D_reg[27]_0\ => \FPGA_Impl1.D_Handle[27].D_Sel_reg\,
      \D_reg[28]_0\ => \FPGA_Impl1.D_Handle[28].D_Sel_reg\,
      \D_reg[29]_0\ => \FPGA_Impl1.D_Handle[29].D_Sel_reg\,
      \D_reg[2]_0\ => \FPGA_Impl1.D_Handle[2].D_Sel_reg\,
      \D_reg[30]_0\ => S,
      \D_reg[3]_0\ => \FPGA_Impl1.D_Handle[3].D_Sel_reg\,
      \D_reg[4]_0\ => \FPGA_Impl1.D_Handle[4].D_Sel_reg\,
      \D_reg[5]_0\ => \FPGA_Impl1.D_Handle[5].D_Sel_reg\,
      \D_reg[6]_0\ => \FPGA_Impl1.D_Handle[6].D_Sel_reg\,
      \D_reg[7]_0\ => \FPGA_Impl1.D_Handle[7].D_Sel_reg\,
      \D_reg[8]_0\ => \FPGA_Impl1.D_Handle[8].D_Sel_reg\,
      \D_reg[9]_0\ => \FPGA_Impl1.D_Handle[9].D_Sel_reg\,
      E(0) => div_busy_reg,
      \FPGA_Impl1.D_Handle[0].D_Sel_reg\ => \FPGA_Impl1.D_Handle[0].D_Sel_reg\,
      \FPGA_Shift.cnt_shifts_reg[31]_0\ => Zero_Detect_I_n_3,
      MEM_DAXI_Exception => MEM_DAXI_Exception,
      MEM_Div_By_Zero_reg_0 => MEM_Div_By_Zero_reg,
      MEM_Div_By_Zero_reg_1 => \mem_EAR_reg[31]\,
      MEM_Div_By_Zero_reg_2 => Zero_Detect_I_n_1,
      MEM_Div_Overflow_reg_0 => mem_div_overflow,
      MEM_Div_Overflow_reg_1 => \Using_Div_Unit.Div_unit_I1_n_42\,
      Q(31) => \^q\(7),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9 downto 8) => \^q\(6 downto 5),
      Q(7) => ex_op2(24),
      Q(6) => \^q\(4),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3 downto 0) => \^q\(3 downto 0),
      \Q_reg[0]_0\(31) => MEM_Div_Result(0),
      \Q_reg[0]_0\(30) => MEM_Div_Result(1),
      \Q_reg[0]_0\(29) => MEM_Div_Result(2),
      \Q_reg[0]_0\(28) => MEM_Div_Result(3),
      \Q_reg[0]_0\(27) => MEM_Div_Result(4),
      \Q_reg[0]_0\(26) => MEM_Div_Result(5),
      \Q_reg[0]_0\(25) => MEM_Div_Result(6),
      \Q_reg[0]_0\(24) => MEM_Div_Result(7),
      \Q_reg[0]_0\(23) => MEM_Div_Result(8),
      \Q_reg[0]_0\(22) => MEM_Div_Result(9),
      \Q_reg[0]_0\(21) => MEM_Div_Result(10),
      \Q_reg[0]_0\(20) => MEM_Div_Result(11),
      \Q_reg[0]_0\(19) => MEM_Div_Result(12),
      \Q_reg[0]_0\(18) => MEM_Div_Result(13),
      \Q_reg[0]_0\(17) => MEM_Div_Result(14),
      \Q_reg[0]_0\(16) => MEM_Div_Result(15),
      \Q_reg[0]_0\(15) => MEM_Div_Result(16),
      \Q_reg[0]_0\(14) => MEM_Div_Result(17),
      \Q_reg[0]_0\(13) => MEM_Div_Result(18),
      \Q_reg[0]_0\(12) => MEM_Div_Result(19),
      \Q_reg[0]_0\(11) => MEM_Div_Result(20),
      \Q_reg[0]_0\(10) => MEM_Div_Result(21),
      \Q_reg[0]_0\(9) => MEM_Div_Result(22),
      \Q_reg[0]_0\(8) => MEM_Div_Result(23),
      \Q_reg[0]_0\(7) => MEM_Div_Result(24),
      \Q_reg[0]_0\(6) => MEM_Div_Result(25),
      \Q_reg[0]_0\(5) => MEM_Div_Result(26),
      \Q_reg[0]_0\(4) => MEM_Div_Result(27),
      \Q_reg[0]_0\(3) => MEM_Div_Result(28),
      \Q_reg[0]_0\(2) => MEM_Div_Result(29),
      \Q_reg[0]_0\(1) => MEM_Div_Result(30),
      \Q_reg[0]_0\(0) => MEM_Div_Result(31),
      \Q_reg[32]_0\(0) => \Q_reg[32]\(0),
      \R_reg[32]_0\(0) => \R_reg[32]\(0),
      S => \FPGA_Impl1.D_Handle[31].D_Sel_reg\,
      \Using_FPGA.Native\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_41\,
      div_busy => div_busy,
      div_iterations_early_reg_0 => \Using_Div_Unit.Div_unit_I1_n_34\,
      div_iterations_early_reg_1 => \^ex_op1_zero\,
      ex_div_unsigned => ex_div_unsigned,
      ex_hold_div_by_zero_reg_0 => \Using_Div_Unit.Div_unit_I1_n_35\,
      ex_start_div => ex_start_div,
      make_result_neg => make_result_neg,
      make_result_neg_reg_0 => Operand_Select_I_n_264,
      mem_MSR(0) => \^mem_msr\(1),
      mem_daxi_exception_i_reg(0) => mem_daxi_exception_i_reg(0),
      mem_div_stall_i_reg_0 => mem_div_stall_i_reg,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_last_cycle_reg_0 => mem_last_cycle_reg,
      negative_operands => negative_operands,
      negative_operands_reg_0 => Operand_Select_I_n_263,
      restore_wb_msr_to_ex => restore_wb_msr_to_ex,
      sync_reset => sync_reset
    );
\Using_FPGA.Native_i_1__0__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(74),
      I1 => EX_Shift_Logic_Result(28),
      I2 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(3)
    );
\Using_FPGA.Native_i_1__10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(81),
      I1 => Operand_Select_I_n_105,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_86,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(9)
    );
\Using_FPGA.Native_i_1__11__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(82),
      I1 => Operand_Select_I_n_106,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_85,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(10)
    );
\Using_FPGA.Native_i_1__12__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(83),
      I1 => Operand_Select_I_n_107,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_84,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(11)
    );
\Using_FPGA.Native_i_1__13__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(84),
      I1 => Operand_Select_I_n_108,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_83,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(12)
    );
\Using_FPGA.Native_i_1__14__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(86),
      I1 => Operand_Select_I_n_109,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_81,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(14)
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAFF30"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(102),
      I1 => \Using_FPGA.Native_62\,
      I2 => \Using_FPGA.Native_63\,
      I3 => Operand_Select_I_n_65,
      I4 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(30)
    );
\Using_FPGA.Native_i_1__15__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(85),
      I1 => Operand_Select_I_n_111,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_82,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(13)
    );
\Using_FPGA.Native_i_1__16__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(87),
      I1 => \Using_FPGA.Native_70\,
      I2 => Operand_Select_I_n_80,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(15)
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(88),
      I1 => \Using_FPGA.Native_71\,
      I2 => Operand_Select_I_n_79,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(16)
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(89),
      I1 => \Using_FPGA.Native_72\,
      I2 => Operand_Select_I_n_78,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(17)
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(90),
      I1 => \Using_FPGA.Native_73\,
      I2 => Operand_Select_I_n_77,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(18)
    );
\Using_FPGA.Native_i_1__1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAACFCFCFCC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(75),
      I1 => \Using_FPGA.Native_64\,
      I2 => Operand_Select_I_n_94,
      I3 => Operand_Select_I_n_101,
      I4 => Operand_Select_I_n_100,
      I5 => ex_sel_alu,
      O => EX_Fwd(27)
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(91),
      I1 => \Using_FPGA.Native_74\,
      I2 => Operand_Select_I_n_76,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(19)
    );
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(92),
      I1 => \Using_FPGA.Native_75\,
      I2 => Operand_Select_I_n_75,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(20)
    );
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(93),
      I1 => \Using_FPGA.Native_76\,
      I2 => Operand_Select_I_n_74,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(21)
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(94),
      I1 => \Using_FPGA.Native_77\,
      I2 => Operand_Select_I_n_73,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(22)
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(95),
      I1 => \Using_FPGA.Native_78\,
      I2 => Operand_Select_I_n_72,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(23)
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(96),
      I1 => \Using_FPGA.Native_79\,
      I2 => Operand_Select_I_n_71,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(24)
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(97),
      I1 => \Using_FPGA.Native_80\,
      I2 => Operand_Select_I_n_70,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(25)
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(98),
      I1 => \Using_FPGA.Native_81\,
      I2 => Operand_Select_I_n_69,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(26)
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(99),
      I1 => \Using_FPGA.Native_82\,
      I2 => Operand_Select_I_n_68,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(27)
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(100),
      I1 => \Using_FPGA.Native_83\,
      I2 => Operand_Select_I_n_67,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(28)
    );
\Using_FPGA.Native_i_1__2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAACCFCCCCC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(76),
      I1 => \Using_FPGA.Native_65\,
      I2 => ex_clz_instr,
      I3 => Operand_Select_I_n_92,
      I4 => Operand_Select_I_n_118,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(4)
    );
\Using_FPGA.Native_i_1__30__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(101),
      I1 => \Using_FPGA.Native_84\,
      I2 => Operand_Select_I_n_66,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(29)
    );
\Using_FPGA.Native_i_1__3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(78),
      I1 => \Using_FPGA.Native_66\,
      I2 => Operand_Select_I_n_89,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(6)
    );
\Using_FPGA.Native_i_1__4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF300F3F3"
    )
        port map (
      I0 => \^ex_op2_reg[30]_0\(0),
      I1 => ex_pattern_cmp_sel,
      I2 => Operand_Select_I_n_113,
      I3 => Operand_Select_I_n_102,
      I4 => Operand_Select_I_n_117,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(0)
    );
\Using_FPGA.Native_i_1__5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF3330"
    )
        port map (
      I0 => \^ex_op2_reg[30]_0\(1),
      I1 => \Using_FPGA.Native_67\,
      I2 => Operand_Select_I_n_114,
      I3 => Operand_Select_I_n_91,
      I4 => Operand_Select_I_n_112,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(1)
    );
\Using_FPGA.Native_i_1__6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF3330"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(73),
      I1 => \Using_FPGA.Native_68\,
      I2 => Operand_Select_I_n_115,
      I3 => Operand_Select_I_n_93,
      I4 => Operand_Select_I_n_116,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(2)
    );
\Using_FPGA.Native_i_1__7__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(77),
      I1 => \Using_FPGA.Native_69\,
      I2 => Operand_Select_I_n_90,
      I3 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(5)
    );
\Using_FPGA.Native_i_1__8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(79),
      I1 => Operand_Select_I_n_103,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_88,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(7)
    );
\Using_FPGA.Native_i_1__9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAFFFF0300"
    )
        port map (
      I0 => \^ex_op2_reg[0]\(80),
      I1 => Operand_Select_I_n_104,
      I2 => ex_swap_instr,
      I3 => ex_Enable_Sext_Shift,
      I4 => Operand_Select_I_n_87,
      I5 => ex_sel_alu,
      O => \^ex_sel_alu_i_reg\(8)
    );
Zero_Detect_I: entity work.mb_design_microblaze_0_1_Zero_Detect_gti
     port map (
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      \FPGA_Shift.cnt_shifts_reg[31]\ => Operand_Select_I_n_268,
      MEM_Div_By_Zero_reg => \Using_Div_Unit.Div_unit_I1_n_35\,
      \Using_FPGA.Native\(29) => \^ex_branch_cmp_op1_reg[0]\(0),
      \Using_FPGA.Native\(28) => ex_branch_cmp_op1(1),
      \Using_FPGA.Native\(27) => ex_branch_cmp_op1(2),
      \Using_FPGA.Native\(26) => ex_branch_cmp_op1(3),
      \Using_FPGA.Native\(25) => ex_branch_cmp_op1(4),
      \Using_FPGA.Native\(24) => ex_branch_cmp_op1(5),
      \Using_FPGA.Native\(23) => ex_branch_cmp_op1(6),
      \Using_FPGA.Native\(22) => ex_branch_cmp_op1(7),
      \Using_FPGA.Native\(21) => ex_branch_cmp_op1(8),
      \Using_FPGA.Native\(20) => ex_branch_cmp_op1(9),
      \Using_FPGA.Native\(19) => ex_branch_cmp_op1(10),
      \Using_FPGA.Native\(18) => ex_branch_cmp_op1(11),
      \Using_FPGA.Native\(17) => ex_branch_cmp_op1(12),
      \Using_FPGA.Native\(16) => ex_branch_cmp_op1(13),
      \Using_FPGA.Native\(15) => ex_branch_cmp_op1(14),
      \Using_FPGA.Native\(14) => ex_branch_cmp_op1(15),
      \Using_FPGA.Native\(13) => ex_branch_cmp_op1(16),
      \Using_FPGA.Native\(12) => ex_branch_cmp_op1(17),
      \Using_FPGA.Native\(11) => ex_branch_cmp_op1(18),
      \Using_FPGA.Native\(10) => ex_branch_cmp_op1(19),
      \Using_FPGA.Native\(9) => ex_branch_cmp_op1(20),
      \Using_FPGA.Native\(8) => ex_branch_cmp_op1(21),
      \Using_FPGA.Native\(7) => ex_branch_cmp_op1(22),
      \Using_FPGA.Native\(6) => ex_branch_cmp_op1(23),
      \Using_FPGA.Native\(5) => ex_branch_cmp_op1(24),
      \Using_FPGA.Native\(4) => ex_branch_cmp_op1(25),
      \Using_FPGA.Native\(3) => ex_branch_cmp_op1(26),
      \Using_FPGA.Native\(2) => ex_branch_cmp_op1(27),
      \Using_FPGA.Native\(1) => ex_branch_cmp_op1(28),
      \Using_FPGA.Native\(0) => ex_branch_cmp_op1(29),
      div_busy => div_busy,
      div_busy_reg => \Using_Div_Unit.Div_unit_I1_n_34\,
      ex_hold_div_by_zero_reg => Zero_Detect_I_n_1,
      ex_op1_cmp_eq_n_reg => \^ex_op1_zero\,
      ex_op1_cmp_eq_n_reg_0 => Zero_Detect_I_n_3,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_start_div => ex_start_div,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => lopt_10
    );
exception_registers_I1: entity work.mb_design_microblaze_0_1_exception_registers_gti
     port map (
      A1(1 downto 0) => \^ex_op2_reg[30]_0\(1 downto 0),
      Clk => Clk,
      D(11) => \MEM_DataBus_Write_Data_reg[0]\(0),
      D(10 downto 4) => \WB_ESR_i_reg[20]\(6 downto 0),
      D(3 downto 0) => \WB_ESR_i_reg[28]\(3 downto 0),
      DI => DI,
      I1 => I1,
      \LOCKSTEP_Out_reg[3007]\(31) => wb_mem_result(0),
      \LOCKSTEP_Out_reg[3007]\(30) => wb_mem_result(1),
      \LOCKSTEP_Out_reg[3007]\(29) => wb_mem_result(2),
      \LOCKSTEP_Out_reg[3007]\(28) => wb_mem_result(3),
      \LOCKSTEP_Out_reg[3007]\(27) => wb_mem_result(4),
      \LOCKSTEP_Out_reg[3007]\(26) => wb_mem_result(5),
      \LOCKSTEP_Out_reg[3007]\(25) => wb_mem_result(6),
      \LOCKSTEP_Out_reg[3007]\(24) => wb_mem_result(7),
      \LOCKSTEP_Out_reg[3007]\(23) => wb_mem_result(8),
      \LOCKSTEP_Out_reg[3007]\(22) => wb_mem_result(9),
      \LOCKSTEP_Out_reg[3007]\(21) => wb_mem_result(10),
      \LOCKSTEP_Out_reg[3007]\(20) => wb_mem_result(11),
      \LOCKSTEP_Out_reg[3007]\(19) => wb_mem_result(12),
      \LOCKSTEP_Out_reg[3007]\(18) => wb_mem_result(13),
      \LOCKSTEP_Out_reg[3007]\(17) => wb_mem_result(14),
      \LOCKSTEP_Out_reg[3007]\(16) => wb_mem_result(15),
      \LOCKSTEP_Out_reg[3007]\(15) => wb_mem_result(16),
      \LOCKSTEP_Out_reg[3007]\(14) => wb_mem_result(17),
      \LOCKSTEP_Out_reg[3007]\(13) => wb_mem_result(18),
      \LOCKSTEP_Out_reg[3007]\(12) => wb_mem_result(19),
      \LOCKSTEP_Out_reg[3007]\(11) => wb_mem_result(20),
      \LOCKSTEP_Out_reg[3007]\(10) => wb_mem_result(21),
      \LOCKSTEP_Out_reg[3007]\(9) => wb_mem_result(22),
      \LOCKSTEP_Out_reg[3007]\(8) => wb_mem_result(23),
      \LOCKSTEP_Out_reg[3007]\(7) => wb_mem_result(24),
      \LOCKSTEP_Out_reg[3007]\(6) => wb_mem_result(25),
      \LOCKSTEP_Out_reg[3007]\(5) => wb_mem_result(26),
      \LOCKSTEP_Out_reg[3007]\(4) => wb_mem_result(27),
      \LOCKSTEP_Out_reg[3007]\(3) => wb_mem_result(28),
      \LOCKSTEP_Out_reg[3007]\(2) => wb_mem_result(29),
      \LOCKSTEP_Out_reg[3007]\(1) => wb_mem_result(30),
      \LOCKSTEP_Out_reg[3007]\(0) => wb_mem_result(31),
      \LOCKSTEP_Out_reg[3023]\ => \LOCKSTEP_Out_reg[3023]\,
      \LOCKSTEP_Out_reg[3024]\ => \LOCKSTEP_Out_reg[3024]\,
      \LOCKSTEP_Out_reg[3025]\ => \LOCKSTEP_Out_reg[3025]\,
      \LOCKSTEP_Out_reg[3026]\ => \LOCKSTEP_Out_reg[3026]\,
      \LOCKSTEP_Out_reg[3027]\ => \LOCKSTEP_Out_reg[3027]\,
      \LOCKSTEP_Out_reg[3028]\ => \LOCKSTEP_Out_reg[3028]\,
      \LOCKSTEP_Out_reg[3029]\ => \LOCKSTEP_Out_reg[3029]\,
      \LOCKSTEP_Out_reg[3030]\ => \LOCKSTEP_Out_reg[3030]\,
      \LOCKSTEP_Out_reg[3031]\ => \LOCKSTEP_Out_reg[3031]\,
      \LOCKSTEP_Out_reg[3032]\ => \LOCKSTEP_Out_reg[3032]\,
      \LOCKSTEP_Out_reg[3033]\ => \LOCKSTEP_Out_reg[3033]\,
      \LOCKSTEP_Out_reg[3034]\ => \LOCKSTEP_Out_reg[3034]\,
      \LOCKSTEP_Out_reg[3035]\ => \LOCKSTEP_Out_reg[3035]\,
      \LOCKSTEP_Out_reg[3036]\ => \LOCKSTEP_Out_reg[3036]\,
      \LOCKSTEP_Out_reg[3037]\ => \LOCKSTEP_Out_reg[3037]\,
      \LOCKSTEP_Out_reg[3038]\ => \LOCKSTEP_Out_reg[3038]\,
      \LOCKSTEP_Out_reg[3038]_0\ => \LOCKSTEP_Out_reg[3038]_0\,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15 downto 0) => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15 downto 0),
      \Use_LUT6.mem_BTR_reg[0]_0\(35 downto 6) => \^ex_op2_reg[0]\(102 downto 73),
      \Use_LUT6.mem_BTR_reg[0]_0\(5 downto 0) => \^ex_op2_reg[0]\(21 downto 16),
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_26\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_27\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_28\ => \Using_FPGA.Native_37\,
      \Using_FPGA.Native_29\(16) => \^ex_op2_reg[0]\(22),
      \Using_FPGA.Native_29\(15 downto 0) => \^ex_op2_reg[0]\(15 downto 0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_30\(15 downto 0) => \Using_FPGA.Native_38\(15 downto 0),
      \Using_FPGA.Native_31\(31 downto 0) => \Using_FPGA.Native_56\(31 downto 0),
      \Using_FPGA.Native_32\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_18\,
      \WB_BTR_reg[27]_0\(0) => \WB_BTR_reg[27]\(0),
      \WB_BTR_reg[31]_0\(0) => \WB_BTR_reg[31]\(0),
      \WB_EAR_reg[0]_0\ => \WB_EAR_reg[0]\,
      \WB_EAR_reg[10]_0\ => \WB_EAR_reg[10]\,
      \WB_EAR_reg[11]_0\ => \WB_EAR_reg[11]\,
      \WB_EAR_reg[12]_0\ => \WB_EAR_reg[12]\,
      \WB_EAR_reg[13]_0\ => \WB_EAR_reg[13]\,
      \WB_EAR_reg[14]_0\ => \WB_EAR_reg[14]\,
      \WB_EAR_reg[15]_0\ => \WB_EAR_reg[15]\,
      \WB_EAR_reg[1]_0\ => \WB_EAR_reg[1]\,
      \WB_EAR_reg[2]_0\ => \WB_EAR_reg[2]\,
      \WB_EAR_reg[31]_0\(0) => \WB_EAR_reg[31]\(0),
      \WB_EAR_reg[3]_0\ => \WB_EAR_reg[3]\,
      \WB_EAR_reg[4]_0\ => \WB_EAR_reg[4]\,
      \WB_EAR_reg[5]_0\ => \WB_EAR_reg[5]\,
      \WB_EAR_reg[6]_0\ => \WB_EAR_reg[6]\,
      \WB_EAR_reg[7]_0\ => \WB_EAR_reg[7]\,
      \WB_EAR_reg[8]_0\ => \WB_EAR_reg[8]\,
      \WB_EAR_reg[9]_0\ => \WB_EAR_reg[9]\,
      \WB_ESR_i_reg[31]_0\(0) => \WB_ESR_i_reg[31]\(0),
      \WB_ESR_reg[31]_0\(0) => \WB_ESR_reg[31]\(0),
      \data_rd_reg_reg[31]\ => \data_rd_reg_reg[31]\,
      \data_rd_reg_reg[31]_0\ => \data_rd_reg_reg[31]_0\,
      ex_load_btr => ex_load_btr,
      \mem_EAR_reg[31]_0\ => \mem_EAR_reg[31]\,
      sync_reset => sync_reset,
      \wb_EAR_i_reg[0]_0\(29 downto 0) => \MEM_DataBus_Write_Data_reg[0]\(30 downto 1),
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_load_esr => wb_load_esr,
      wb_mul_result(0 to 31) => wb_mul_result(0 to 31)
    );
msr_reg_i: entity work.mb_design_microblaze_0_1_msr_reg_gti
     port map (
      Clk => Clk,
      D(2) => \^using_fpga.native_0\,
      D(1) => \Using_FPGA.Native_1\,
      D(0) => \Using_FPGA.Native_2\,
      Interrupt => Interrupt,
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      MEM_Barrel_Result(6) => MEM_Barrel_Result(0),
      MEM_Barrel_Result(5) => MEM_Barrel_Result(22),
      MEM_Barrel_Result(4) => MEM_Barrel_Result(23),
      MEM_Barrel_Result(3) => MEM_Barrel_Result(25),
      MEM_Barrel_Result(2) => MEM_Barrel_Result(28),
      MEM_Barrel_Result(1) => MEM_Barrel_Result(29),
      MEM_Barrel_Result(0) => MEM_Barrel_Result(30),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_3\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_4\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_44\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_46\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_47\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_49\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_50\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_51\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_52\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_53\,
      \Using_FPGA.Native_2\ => \^using_fpga.native_5\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_54\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_55\,
      \Using_FPGA.Native_3\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_4\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_6\(6) => \^using_fpga.native_40\(30),
      \Using_FPGA.Native_6\(5 downto 4) => \^using_fpga.native_40\(8 downto 7),
      \Using_FPGA.Native_6\(3) => \^using_fpga.native_40\(5),
      \Using_FPGA.Native_6\(2 downto 0) => \^using_fpga.native_40\(3 downto 1),
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_42\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_9\ => \Using_Div_Unit.Div_unit_I1_n_42\,
      \WB_MEM_Result_reg[0]\(6) => MEM_Div_Result(0),
      \WB_MEM_Result_reg[0]\(5) => MEM_Div_Result(22),
      \WB_MEM_Result_reg[0]\(4) => MEM_Div_Result(23),
      \WB_MEM_Result_reg[0]\(3) => MEM_Div_Result(25),
      \WB_MEM_Result_reg[0]\(2) => MEM_Div_Result(28),
      \WB_MEM_Result_reg[0]\(1) => MEM_Div_Result(29),
      \WB_MEM_Result_reg[0]\(0) => MEM_Div_Result(30),
      \WB_MEM_Result_reg[0]_0\(6) => MEM_EX_Result(0),
      \WB_MEM_Result_reg[0]_0\(5) => MEM_EX_Result(22),
      \WB_MEM_Result_reg[0]_0\(4) => MEM_EX_Result(23),
      \WB_MEM_Result_reg[0]_0\(3) => MEM_EX_Result(25),
      \WB_MEM_Result_reg[0]_0\(2) => MEM_EX_Result(28),
      \WB_MEM_Result_reg[0]_0\(1) => MEM_EX_Result(29),
      \WB_MEM_Result_reg[0]_0\(0) => MEM_EX_Result(30),
      ex_MSR(0) => \^ex_msr\(0),
      mem_MSR(1 downto 0) => \^mem_msr\(1 downto 0),
      mem_sel_msr => mem_sel_msr,
      of_MSR(2 downto 0) => of_MSR(2 downto 0),
      sync_reset => sync_reset,
      \wb_MSR_i_reg[22]_0\(5 downto 0) => \^ex_op2_reg[0]\(21 downto 16),
      \wb_MSR_i_reg[22]_1\(2 downto 0) => \wb_MSR_i_reg[22]\(2 downto 0),
      \wb_MSR_i_reg[30]_0\(0) => \wb_MSR_i_reg[30]\(0),
      wb_ie_rising0 => wb_ie_rising0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MicroBlaze_GTi is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_div_stall_i_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 363 downto 0 );
    Sleep : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 40 downto 0 );
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    \Dbg_Reg_En[1]_0\ : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    IReady : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    DUE : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    sleep_reset_mode_reg : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_TDI : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MicroBlaze_GTi : entity is "MicroBlaze_GTi";
end mb_design_microblaze_0_1_MicroBlaze_GTi;

architecture STRUCTURE of mb_design_microblaze_0_1_MicroBlaze_GTi is
  signal \ALU_I/DI\ : STD_LOGIC;
  signal \Barrel_Shifter_I/ex_left_shift_i\ : STD_LOGIC;
  signal \Barrel_Shifter_I/ex_mux1\ : STD_LOGIC_VECTOR ( 1 to 31 );
  signal \Barrel_Shifter_I/ex_void_bit\ : STD_LOGIC;
  signal \Barrel_Shifter_I/in00\ : STD_LOGIC;
  signal \Barrel_Shifter_I/mem_left_shift0\ : STD_LOGIC;
  signal \Byte_Doublet_Handle_gti_I/mem_reverse_byteorder\ : STD_LOGIC;
  signal \Byte_Doublet_Handle_gti_I/p_0_in\ : STD_LOGIC;
  signal \Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Byte_Doublet_Handle_gti_I/wb_read_lsb_sel\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel\ : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 363 downto 0 );
  signal Data_Flow_I_n_10 : STD_LOGIC;
  signal Data_Flow_I_n_107 : STD_LOGIC;
  signal Data_Flow_I_n_11 : STD_LOGIC;
  signal Data_Flow_I_n_110 : STD_LOGIC;
  signal Data_Flow_I_n_111 : STD_LOGIC;
  signal Data_Flow_I_n_112 : STD_LOGIC;
  signal Data_Flow_I_n_113 : STD_LOGIC;
  signal Data_Flow_I_n_118 : STD_LOGIC;
  signal Data_Flow_I_n_119 : STD_LOGIC;
  signal Data_Flow_I_n_12 : STD_LOGIC;
  signal Data_Flow_I_n_120 : STD_LOGIC;
  signal Data_Flow_I_n_121 : STD_LOGIC;
  signal Data_Flow_I_n_13 : STD_LOGIC;
  signal Data_Flow_I_n_14 : STD_LOGIC;
  signal Data_Flow_I_n_15 : STD_LOGIC;
  signal Data_Flow_I_n_16 : STD_LOGIC;
  signal Data_Flow_I_n_17 : STD_LOGIC;
  signal Data_Flow_I_n_18 : STD_LOGIC;
  signal Data_Flow_I_n_19 : STD_LOGIC;
  signal Data_Flow_I_n_20 : STD_LOGIC;
  signal Data_Flow_I_n_21 : STD_LOGIC;
  signal Data_Flow_I_n_22 : STD_LOGIC;
  signal Data_Flow_I_n_23 : STD_LOGIC;
  signal Data_Flow_I_n_24 : STD_LOGIC;
  signal Data_Flow_I_n_25 : STD_LOGIC;
  signal Data_Flow_I_n_26 : STD_LOGIC;
  signal Data_Flow_I_n_27 : STD_LOGIC;
  signal Data_Flow_I_n_272 : STD_LOGIC;
  signal Data_Flow_I_n_273 : STD_LOGIC;
  signal Data_Flow_I_n_275 : STD_LOGIC;
  signal Data_Flow_I_n_276 : STD_LOGIC;
  signal Data_Flow_I_n_277 : STD_LOGIC;
  signal Data_Flow_I_n_278 : STD_LOGIC;
  signal Data_Flow_I_n_279 : STD_LOGIC;
  signal Data_Flow_I_n_28 : STD_LOGIC;
  signal Data_Flow_I_n_280 : STD_LOGIC;
  signal Data_Flow_I_n_281 : STD_LOGIC;
  signal Data_Flow_I_n_282 : STD_LOGIC;
  signal Data_Flow_I_n_283 : STD_LOGIC;
  signal Data_Flow_I_n_284 : STD_LOGIC;
  signal Data_Flow_I_n_285 : STD_LOGIC;
  signal Data_Flow_I_n_286 : STD_LOGIC;
  signal Data_Flow_I_n_287 : STD_LOGIC;
  signal Data_Flow_I_n_288 : STD_LOGIC;
  signal Data_Flow_I_n_289 : STD_LOGIC;
  signal Data_Flow_I_n_29 : STD_LOGIC;
  signal Data_Flow_I_n_290 : STD_LOGIC;
  signal Data_Flow_I_n_291 : STD_LOGIC;
  signal Data_Flow_I_n_294 : STD_LOGIC;
  signal Data_Flow_I_n_295 : STD_LOGIC;
  signal Data_Flow_I_n_296 : STD_LOGIC;
  signal Data_Flow_I_n_297 : STD_LOGIC;
  signal Data_Flow_I_n_30 : STD_LOGIC;
  signal Data_Flow_I_n_31 : STD_LOGIC;
  signal Data_Flow_I_n_32 : STD_LOGIC;
  signal Data_Flow_I_n_33 : STD_LOGIC;
  signal Data_Flow_I_n_34 : STD_LOGIC;
  signal Data_Flow_I_n_35 : STD_LOGIC;
  signal Data_Flow_I_n_36 : STD_LOGIC;
  signal Data_Flow_I_n_364 : STD_LOGIC;
  signal Data_Flow_I_n_365 : STD_LOGIC;
  signal Data_Flow_I_n_366 : STD_LOGIC;
  signal Data_Flow_I_n_367 : STD_LOGIC;
  signal Data_Flow_I_n_368 : STD_LOGIC;
  signal Data_Flow_I_n_369 : STD_LOGIC;
  signal Data_Flow_I_n_37 : STD_LOGIC;
  signal Data_Flow_I_n_370 : STD_LOGIC;
  signal Data_Flow_I_n_371 : STD_LOGIC;
  signal Data_Flow_I_n_372 : STD_LOGIC;
  signal Data_Flow_I_n_373 : STD_LOGIC;
  signal Data_Flow_I_n_374 : STD_LOGIC;
  signal Data_Flow_I_n_375 : STD_LOGIC;
  signal Data_Flow_I_n_376 : STD_LOGIC;
  signal Data_Flow_I_n_377 : STD_LOGIC;
  signal Data_Flow_I_n_378 : STD_LOGIC;
  signal Data_Flow_I_n_379 : STD_LOGIC;
  signal Data_Flow_I_n_38 : STD_LOGIC;
  signal Data_Flow_I_n_383 : STD_LOGIC;
  signal Data_Flow_I_n_39 : STD_LOGIC;
  signal Data_Flow_I_n_4 : STD_LOGIC;
  signal Data_Flow_I_n_40 : STD_LOGIC;
  signal Data_Flow_I_n_5 : STD_LOGIC;
  signal Data_Flow_I_n_6 : STD_LOGIC;
  signal Data_Flow_I_n_7 : STD_LOGIC;
  signal Data_Flow_I_n_8 : STD_LOGIC;
  signal Data_Flow_I_n_9 : STD_LOGIC;
  signal \Data_Flow_Logic_I/R\ : STD_LOGIC;
  signal \Data_Flow_Logic_I/WB_MEM_Result0\ : STD_LOGIC;
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Decode_I_n_269 : STD_LOGIC;
  signal Decode_I_n_272 : STD_LOGIC;
  signal Decode_I_n_274 : STD_LOGIC;
  signal Decode_I_n_275 : STD_LOGIC;
  signal Decode_I_n_276 : STD_LOGIC;
  signal Decode_I_n_277 : STD_LOGIC;
  signal Decode_I_n_278 : STD_LOGIC;
  signal Decode_I_n_279 : STD_LOGIC;
  signal Decode_I_n_280 : STD_LOGIC;
  signal Decode_I_n_281 : STD_LOGIC;
  signal Decode_I_n_282 : STD_LOGIC;
  signal Decode_I_n_283 : STD_LOGIC;
  signal Decode_I_n_284 : STD_LOGIC;
  signal Decode_I_n_285 : STD_LOGIC;
  signal Decode_I_n_286 : STD_LOGIC;
  signal Decode_I_n_287 : STD_LOGIC;
  signal Decode_I_n_288 : STD_LOGIC;
  signal Decode_I_n_289 : STD_LOGIC;
  signal Decode_I_n_291 : STD_LOGIC;
  signal Decode_I_n_296 : STD_LOGIC;
  signal Decode_I_n_299 : STD_LOGIC;
  signal Decode_I_n_300 : STD_LOGIC;
  signal Decode_I_n_301 : STD_LOGIC;
  signal Decode_I_n_313 : STD_LOGIC;
  signal Decode_I_n_314 : STD_LOGIC;
  signal Decode_I_n_315 : STD_LOGIC;
  signal Decode_I_n_316 : STD_LOGIC;
  signal Decode_I_n_318 : STD_LOGIC;
  signal Decode_I_n_319 : STD_LOGIC;
  signal Decode_I_n_320 : STD_LOGIC;
  signal Decode_I_n_321 : STD_LOGIC;
  signal Decode_I_n_322 : STD_LOGIC;
  signal Decode_I_n_323 : STD_LOGIC;
  signal Decode_I_n_324 : STD_LOGIC;
  signal Decode_I_n_325 : STD_LOGIC;
  signal Decode_I_n_326 : STD_LOGIC;
  signal Decode_I_n_327 : STD_LOGIC;
  signal Decode_I_n_328 : STD_LOGIC;
  signal Decode_I_n_329 : STD_LOGIC;
  signal Decode_I_n_330 : STD_LOGIC;
  signal Decode_I_n_331 : STD_LOGIC;
  signal Decode_I_n_332 : STD_LOGIC;
  signal Decode_I_n_333 : STD_LOGIC;
  signal Decode_I_n_334 : STD_LOGIC;
  signal Decode_I_n_335 : STD_LOGIC;
  signal Decode_I_n_336 : STD_LOGIC;
  signal Decode_I_n_337 : STD_LOGIC;
  signal Decode_I_n_338 : STD_LOGIC;
  signal Decode_I_n_339 : STD_LOGIC;
  signal Decode_I_n_340 : STD_LOGIC;
  signal Decode_I_n_341 : STD_LOGIC;
  signal Decode_I_n_342 : STD_LOGIC;
  signal Decode_I_n_343 : STD_LOGIC;
  signal Decode_I_n_344 : STD_LOGIC;
  signal Decode_I_n_345 : STD_LOGIC;
  signal Decode_I_n_396 : STD_LOGIC;
  signal Decode_I_n_397 : STD_LOGIC;
  signal Decode_I_n_398 : STD_LOGIC;
  signal Decode_I_n_399 : STD_LOGIC;
  signal Decode_I_n_400 : STD_LOGIC;
  signal Decode_I_n_401 : STD_LOGIC;
  signal Decode_I_n_402 : STD_LOGIC;
  signal Decode_I_n_403 : STD_LOGIC;
  signal Decode_I_n_404 : STD_LOGIC;
  signal Decode_I_n_405 : STD_LOGIC;
  signal Decode_I_n_406 : STD_LOGIC;
  signal Decode_I_n_407 : STD_LOGIC;
  signal Decode_I_n_408 : STD_LOGIC;
  signal Decode_I_n_409 : STD_LOGIC;
  signal Decode_I_n_410 : STD_LOGIC;
  signal Decode_I_n_411 : STD_LOGIC;
  signal Decode_I_n_414 : STD_LOGIC;
  signal Decode_I_n_415 : STD_LOGIC;
  signal Decode_I_n_416 : STD_LOGIC;
  signal Decode_I_n_417 : STD_LOGIC;
  signal Decode_I_n_418 : STD_LOGIC;
  signal Decode_I_n_419 : STD_LOGIC;
  signal Decode_I_n_420 : STD_LOGIC;
  signal Decode_I_n_421 : STD_LOGIC;
  signal Decode_I_n_422 : STD_LOGIC;
  signal Decode_I_n_423 : STD_LOGIC;
  signal Decode_I_n_424 : STD_LOGIC;
  signal Decode_I_n_425 : STD_LOGIC;
  signal Decode_I_n_426 : STD_LOGIC;
  signal Decode_I_n_427 : STD_LOGIC;
  signal Decode_I_n_428 : STD_LOGIC;
  signal Decode_I_n_429 : STD_LOGIC;
  signal Decode_I_n_430 : STD_LOGIC;
  signal Decode_I_n_431 : STD_LOGIC;
  signal Decode_I_n_432 : STD_LOGIC;
  signal Decode_I_n_433 : STD_LOGIC;
  signal Decode_I_n_434 : STD_LOGIC;
  signal Decode_I_n_435 : STD_LOGIC;
  signal Decode_I_n_436 : STD_LOGIC;
  signal Decode_I_n_439 : STD_LOGIC;
  signal Decode_I_n_440 : STD_LOGIC;
  signal Decode_I_n_441 : STD_LOGIC;
  signal Decode_I_n_442 : STD_LOGIC;
  signal Decode_I_n_443 : STD_LOGIC;
  signal Decode_I_n_444 : STD_LOGIC;
  signal Decode_I_n_445 : STD_LOGIC;
  signal Decode_I_n_446 : STD_LOGIC;
  signal Decode_I_n_447 : STD_LOGIC;
  signal Decode_I_n_448 : STD_LOGIC;
  signal Decode_I_n_449 : STD_LOGIC;
  signal Decode_I_n_450 : STD_LOGIC;
  signal Decode_I_n_451 : STD_LOGIC;
  signal Decode_I_n_452 : STD_LOGIC;
  signal Decode_I_n_453 : STD_LOGIC;
  signal Decode_I_n_454 : STD_LOGIC;
  signal Decode_I_n_455 : STD_LOGIC;
  signal Decode_I_n_456 : STD_LOGIC;
  signal Decode_I_n_457 : STD_LOGIC;
  signal Decode_I_n_458 : STD_LOGIC;
  signal Decode_I_n_459 : STD_LOGIC;
  signal Decode_I_n_460 : STD_LOGIC;
  signal Decode_I_n_461 : STD_LOGIC;
  signal Decode_I_n_462 : STD_LOGIC;
  signal Decode_I_n_463 : STD_LOGIC;
  signal Decode_I_n_464 : STD_LOGIC;
  signal Decode_I_n_465 : STD_LOGIC;
  signal Decode_I_n_466 : STD_LOGIC;
  signal Decode_I_n_467 : STD_LOGIC;
  signal Decode_I_n_468 : STD_LOGIC;
  signal Decode_I_n_474 : STD_LOGIC;
  signal Decode_I_n_475 : STD_LOGIC;
  signal Decode_I_n_476 : STD_LOGIC;
  signal Decode_I_n_478 : STD_LOGIC;
  signal Decode_I_n_479 : STD_LOGIC;
  signal Decode_I_n_480 : STD_LOGIC;
  signal Decode_I_n_481 : STD_LOGIC;
  signal Decode_I_n_482 : STD_LOGIC;
  signal Decode_I_n_483 : STD_LOGIC;
  signal Decode_I_n_484 : STD_LOGIC;
  signal Decode_I_n_485 : STD_LOGIC;
  signal Decode_I_n_486 : STD_LOGIC;
  signal Decode_I_n_487 : STD_LOGIC;
  signal Decode_I_n_488 : STD_LOGIC;
  signal Decode_I_n_489 : STD_LOGIC;
  signal Decode_I_n_490 : STD_LOGIC;
  signal Decode_I_n_495 : STD_LOGIC;
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal EX_ALU_Sel_Logic : STD_LOGIC;
  signal EX_Enable_ALU : STD_LOGIC;
  signal EX_Fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal IReady_0 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 40 downto 0 );
  signal MEM_DAXI_Exception : STD_LOGIC;
  signal MEM_DataBus_Ready : STD_LOGIC;
  signal MEM_Fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal MEM_PC : STD_LOGIC_VECTOR ( 0 to 31 );
  signal MEM_Sel_SPR_EAR : STD_LOGIC;
  signal MEM_Sel_SPR_ESR : STD_LOGIC;
  signal MEM_WB_Sel_Mem_PC : STD_LOGIC;
  signal \Operand_Select_I/I0\ : STD_LOGIC;
  signal \Operand_Select_I/imm_reg\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal \Operand_Select_I/of_op2\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \Operand_Select_I/of_op2_imm_addr\ : STD_LOGIC_VECTOR ( 27 to 27 );
  signal \Operand_Select_I/of_op3\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \PreFetch_Buffer_I1/I041_out\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/I139_out\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/p_0_in49_in\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/p_1_in50_in\ : STD_LOGIC;
  signal SRI : STD_LOGIC;
  signal \^sleep\ : STD_LOGIC;
  signal Sleep_Decode : STD_LOGIC;
  signal Sleep_Out : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_41\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_42\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_43\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_44\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_45\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_46\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_47\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_48\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_49\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_50\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_51\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_52\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_53\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_54\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_55\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_56\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_57\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_58\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_59\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_60\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_61\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_62\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_63\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_64\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_65\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_66\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_67\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_68\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_69\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_70\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_71\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_8\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_40\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_41\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_45\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_46\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_52\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_55\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_60\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_unit_I1/FPGA_Impl1.D_Handle[0].D_Sel_reg\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_unit_I1/reset_Q\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_15__0_n_0\ : STD_LOGIC;
  signal WB_BTR : STD_LOGIC_VECTOR ( 27 to 27 );
  signal WB_ESR_i0 : STD_LOGIC;
  signal active_access : STD_LOGIC;
  signal active_access_d1 : STD_LOGIC;
  signal dbg_clean_stop : STD_LOGIC;
  signal dbg_stop_i : STD_LOGIC;
  signal ex_Enable_Sext_Shift : STD_LOGIC;
  signal ex_Interrupt_i : STD_LOGIC;
  signal ex_MSR : STD_LOGIC_VECTOR ( 23 to 23 );
  signal ex_MSRCLR : STD_LOGIC;
  signal ex_MSRSET : STD_LOGIC;
  signal ex_MTS_MSR : STD_LOGIC;
  signal ex_addr_low_bits : STD_LOGIC_VECTOR ( 1 to 2 );
  signal ex_alu_carry_32 : STD_LOGIC;
  signal ex_alu_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_alu_result : STD_LOGIC_VECTOR ( 30 to 31 );
  signal ex_bit_extract : STD_LOGIC;
  signal ex_bit_insert : STD_LOGIC;
  signal ex_byte_access : STD_LOGIC;
  signal ex_clz_instr : STD_LOGIC;
  signal ex_cmp_op : STD_LOGIC;
  signal ex_div_unsigned : STD_LOGIC;
  signal ex_doublet_access : STD_LOGIC;
  signal ex_load_btr : STD_LOGIC;
  signal ex_logic_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_not_mul_op : STD_LOGIC;
  signal ex_op1_cmp_equal : STD_LOGIC;
  signal ex_op1_cmp_equal_n : STD_LOGIC;
  signal ex_op1_neg : STD_LOGIC;
  signal ex_op1_zero : STD_LOGIC;
  signal ex_op2 : STD_LOGIC_VECTOR ( 0 to 25 );
  signal ex_op3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ex_pattern_cmp_sel : STD_LOGIC;
  signal ex_reverse_mem_access : STD_LOGIC;
  signal ex_sel_alu : STD_LOGIC;
  signal ex_sext_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_start_div : STD_LOGIC;
  signal ex_swap_byte_instr : STD_LOGIC;
  signal ex_swap_instr : STD_LOGIC;
  signal ex_unsigned_op : STD_LOGIC;
  signal ex_use_carry : STD_LOGIC;
  signal ex_valid : STD_LOGIC;
  signal \exception_registers_I1/I1\ : STD_LOGIC;
  signal \exception_registers_I1/WB_BTR0\ : STD_LOGIC;
  signal \exception_registers_I1/WB_EAR0\ : STD_LOGIC;
  signal \exception_registers_I1/WB_ESR0\ : STD_LOGIC;
  signal \exception_registers_I1/WB_ESR_i\ : STD_LOGIC;
  signal gpr_op1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal gpr_op2 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal gpr_op3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ib_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if_missed_fetch : STD_LOGIC;
  signal if_sel_input : STD_LOGIC_VECTOR ( 3 to 3 );
  signal interrupt_address_d1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal mem_Exception_Taken : STD_LOGIC;
  signal mem_MSR : STD_LOGIC_VECTOR ( 23 to 30 );
  signal mem_byte_access : STD_LOGIC;
  signal mem_databus_access : STD_LOGIC;
  signal mem_databus_read : STD_LOGIC;
  signal mem_databus_write : STD_LOGIC;
  signal mem_div_overflow : STD_LOGIC;
  signal \^mem_div_stall_i_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mem_doublet_access : STD_LOGIC;
  signal mem_exception_from_ex : STD_LOGIC;
  signal mem_exception_kind : STD_LOGIC_VECTOR ( 29 to 29 );
  signal mem_sel_msr : STD_LOGIC;
  signal \msr_reg_i/restore_wb_msr_to_ex\ : STD_LOGIC;
  signal \msr_reg_i/wb_MSR_cmb\ : STD_LOGIC_VECTOR ( 22 to 30 );
  signal of_MSR : STD_LOGIC_VECTOR ( 22 to 30 );
  signal of_gpr_op1_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_gpr_op3_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_imm_data : STD_LOGIC_VECTOR ( 0 to 15 );
  signal of_op1_sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal of_op1_sel_spr : STD_LOGIC;
  signal of_op1_sel_spr_pc : STD_LOGIC;
  signal of_op2_sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal of_op3_sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal of_pause : STD_LOGIC;
  signal of_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_predecode_raw : STD_LOGIC_VECTOR ( 0 to 0 );
  signal of_write_imm_reg : STD_LOGIC;
  signal wb_Halted : STD_LOGIC;
  signal wb_byte_access : STD_LOGIC;
  signal wb_databus_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_dext_Data_Strobe : STD_LOGIC;
  signal wb_dext_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_dlmb_valid_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_dlmb_valid_read_data0 : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 0 to 15 );
  signal wb_gpr_wr_dbg : STD_LOGIC;
  signal wb_ie_rising0 : STD_LOGIC;
  signal wb_load_esr : STD_LOGIC;
  signal wb_new_esr_ess_rx : STD_LOGIC_VECTOR ( 0 to 4 );
  signal wb_pc_valid : STD_LOGIC;
  signal wb_piperun : STD_LOGIC;
  signal wb_read_imm_reg : STD_LOGIC;
  signal wb_read_imm_reg_1 : STD_LOGIC;
  signal wb_sw_instr : STD_LOGIC;
begin
  D(363 downto 0) <= \^d\(363 downto 0);
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
  E(0) <= \^e\(0);
  LOCKSTEP_Master_Out(40 downto 0) <= \^lockstep_master_out\(40 downto 0);
  Sleep <= \^sleep\;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  mem_div_stall_i_reg(0) <= \^mem_div_stall_i_reg\(0);
Data_Flow_I: entity work.mb_design_microblaze_0_1_Data_Flow_gti
     port map (
      ADDRD(4 downto 0) => \^d\(120 downto 116),
      Clk => Clk,
      D(16) => \Operand_Select_I/I0\,
      D(15) => Decode_I_n_396,
      D(14) => Decode_I_n_397,
      D(13) => Decode_I_n_398,
      D(12) => Decode_I_n_399,
      D(11) => Decode_I_n_400,
      D(10) => Decode_I_n_401,
      D(9) => Decode_I_n_402,
      D(8) => Decode_I_n_403,
      D(7) => Decode_I_n_404,
      D(6) => Decode_I_n_405,
      D(5) => Decode_I_n_406,
      D(4) => Decode_I_n_407,
      D(3) => Decode_I_n_408,
      D(2) => Decode_I_n_409,
      D(1) => Decode_I_n_410,
      D(0) => Decode_I_n_411,
      DI => \^d\(122),
      DI_0 => \ALU_I/DI\,
      DUE => DUE,
      E(0) => of_write_imm_reg,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[0]\(0) => ex_op1_neg,
      \EX_Branch_CMP_Op1_reg[0]_0\ => \^d\(109),
      \EX_Branch_CMP_Op1_reg[10]\ => \^d\(99),
      \EX_Branch_CMP_Op1_reg[11]\ => \^d\(98),
      \EX_Branch_CMP_Op1_reg[12]\ => \^d\(97),
      \EX_Branch_CMP_Op1_reg[13]\ => \^d\(96),
      \EX_Branch_CMP_Op1_reg[14]\ => \^d\(95),
      \EX_Branch_CMP_Op1_reg[14]_0\ => \^d\(94),
      \EX_Branch_CMP_Op1_reg[18]\ => \^d\(121),
      \EX_Branch_CMP_Op1_reg[1]\ => \^d\(108),
      \EX_Branch_CMP_Op1_reg[2]\ => \^d\(107),
      \EX_Branch_CMP_Op1_reg[31]\ => \^e\(0),
      \EX_Branch_CMP_Op1_reg[3]\ => \^d\(106),
      \EX_Branch_CMP_Op1_reg[4]\ => \^d\(105),
      \EX_Branch_CMP_Op1_reg[5]\ => \^d\(104),
      \EX_Branch_CMP_Op1_reg[6]\ => \^d\(103),
      \EX_Branch_CMP_Op1_reg[7]\ => \^d\(102),
      \EX_Branch_CMP_Op1_reg[8]\ => \^d\(101),
      \EX_Branch_CMP_Op1_reg[9]\ => \^d\(100),
      EX_Enable_ALU => EX_Enable_ALU,
      EX_Op1_CMP_Equal => ex_op1_cmp_equal,
      EX_Op1_Zero => ex_op1_zero,
      \EX_Op1_reg[0]\(31) => Data_Flow_I_n_8,
      \EX_Op1_reg[0]\(30) => Data_Flow_I_n_9,
      \EX_Op1_reg[0]\(29) => Data_Flow_I_n_10,
      \EX_Op1_reg[0]\(28) => Data_Flow_I_n_11,
      \EX_Op1_reg[0]\(27) => Data_Flow_I_n_12,
      \EX_Op1_reg[0]\(26) => Data_Flow_I_n_13,
      \EX_Op1_reg[0]\(25) => Data_Flow_I_n_14,
      \EX_Op1_reg[0]\(24) => Data_Flow_I_n_15,
      \EX_Op1_reg[0]\(23) => Data_Flow_I_n_16,
      \EX_Op1_reg[0]\(22) => Data_Flow_I_n_17,
      \EX_Op1_reg[0]\(21) => Data_Flow_I_n_18,
      \EX_Op1_reg[0]\(20) => Data_Flow_I_n_19,
      \EX_Op1_reg[0]\(19) => Data_Flow_I_n_20,
      \EX_Op1_reg[0]\(18) => Data_Flow_I_n_21,
      \EX_Op1_reg[0]\(17) => Data_Flow_I_n_22,
      \EX_Op1_reg[0]\(16) => Data_Flow_I_n_23,
      \EX_Op1_reg[0]\(15) => Data_Flow_I_n_24,
      \EX_Op1_reg[0]\(14) => Data_Flow_I_n_25,
      \EX_Op1_reg[0]\(13) => Data_Flow_I_n_26,
      \EX_Op1_reg[0]\(12) => Data_Flow_I_n_27,
      \EX_Op1_reg[0]\(11) => Data_Flow_I_n_28,
      \EX_Op1_reg[0]\(10) => Data_Flow_I_n_29,
      \EX_Op1_reg[0]\(9) => Data_Flow_I_n_30,
      \EX_Op1_reg[0]\(8) => Data_Flow_I_n_31,
      \EX_Op1_reg[0]\(7) => Data_Flow_I_n_32,
      \EX_Op1_reg[0]\(6) => Data_Flow_I_n_33,
      \EX_Op1_reg[0]\(5) => Data_Flow_I_n_34,
      \EX_Op1_reg[0]\(4) => Data_Flow_I_n_35,
      \EX_Op1_reg[0]\(3) => Data_Flow_I_n_36,
      \EX_Op1_reg[0]\(2) => Data_Flow_I_n_37,
      \EX_Op1_reg[0]\(1) => Data_Flow_I_n_38,
      \EX_Op1_reg[0]\(0) => Data_Flow_I_n_39,
      \EX_Op1_reg[0]_0\(6) => of_pc(0),
      \EX_Op1_reg[0]_0\(5) => of_pc(22),
      \EX_Op1_reg[0]_0\(4) => of_pc(23),
      \EX_Op1_reg[0]_0\(3) => of_pc(25),
      \EX_Op1_reg[0]_0\(2) => of_pc(28),
      \EX_Op1_reg[0]_0\(1) => of_pc(29),
      \EX_Op1_reg[0]_0\(0) => of_pc(30),
      \EX_Op1_reg[10]\ => Decode_I_n_334,
      \EX_Op1_reg[11]\ => Decode_I_n_333,
      \EX_Op1_reg[12]\ => Decode_I_n_332,
      \EX_Op1_reg[13]\ => Decode_I_n_331,
      \EX_Op1_reg[14]\ => Decode_I_n_330,
      \EX_Op1_reg[15]\ => Data_Flow_I_n_296,
      \EX_Op1_reg[15]_0\ => Decode_I_n_342,
      \EX_Op1_reg[16]\ => Decode_I_n_344,
      \EX_Op1_reg[17]\ => Decode_I_n_323,
      \EX_Op1_reg[18]\ => Decode_I_n_327,
      \EX_Op1_reg[19]\ => Decode_I_n_326,
      \EX_Op1_reg[1]\ => Decode_I_n_335,
      \EX_Op1_reg[20]\ => Decode_I_n_325,
      \EX_Op1_reg[21]\ => Decode_I_n_324,
      \EX_Op1_reg[24]\ => Decode_I_n_343,
      \EX_Op1_reg[26]\ => Decode_I_n_322,
      \EX_Op1_reg[27]\ => Decode_I_n_321,
      \EX_Op1_reg[29]\ => Data_Flow_I_n_383,
      \EX_Op1_reg[2]\ => Decode_I_n_340,
      \EX_Op1_reg[31]\ => Decode_I_n_345,
      \EX_Op1_reg[3]\ => Decode_I_n_339,
      \EX_Op1_reg[4]\ => Decode_I_n_338,
      \EX_Op1_reg[5]\ => Decode_I_n_337,
      \EX_Op1_reg[6]\ => Decode_I_n_336,
      \EX_Op1_reg[7]\ => Decode_I_n_341,
      \EX_Op1_reg[8]\ => Decode_I_n_329,
      \EX_Op1_reg[9]\ => Decode_I_n_328,
      \EX_Op2_reg[0]\(102 downto 71) => \^d\(328 downto 297),
      \EX_Op2_reg[0]\(70 downto 63) => \^d\(280 downto 273),
      \EX_Op2_reg[0]\(62 downto 59) => \^d\(261 downto 258),
      \EX_Op2_reg[0]\(58 downto 23) => \^d\(224 downto 189),
      \EX_Op2_reg[0]\(22) => \^d\(153),
      \EX_Op2_reg[0]\(21 downto 16) => \^d\(115 downto 110),
      \EX_Op2_reg[0]\(15 downto 0) => \^d\(93 downto 78),
      \EX_Op2_reg[0]_0\(30) => \Operand_Select_I/of_op2\(0),
      \EX_Op2_reg[0]_0\(29) => \Operand_Select_I/of_op2\(1),
      \EX_Op2_reg[0]_0\(28) => \Operand_Select_I/of_op2\(2),
      \EX_Op2_reg[0]_0\(27) => \Operand_Select_I/of_op2\(3),
      \EX_Op2_reg[0]_0\(26) => \Operand_Select_I/of_op2\(4),
      \EX_Op2_reg[0]_0\(25) => \Operand_Select_I/of_op2\(5),
      \EX_Op2_reg[0]_0\(24) => \Operand_Select_I/of_op2\(6),
      \EX_Op2_reg[0]_0\(23) => \Operand_Select_I/of_op2\(7),
      \EX_Op2_reg[0]_0\(22) => \Operand_Select_I/of_op2\(8),
      \EX_Op2_reg[0]_0\(21) => \Operand_Select_I/of_op2\(9),
      \EX_Op2_reg[0]_0\(20) => \Operand_Select_I/of_op2\(10),
      \EX_Op2_reg[0]_0\(19) => \Operand_Select_I/of_op2\(11),
      \EX_Op2_reg[0]_0\(18) => \Operand_Select_I/of_op2\(12),
      \EX_Op2_reg[0]_0\(17) => \Operand_Select_I/of_op2\(13),
      \EX_Op2_reg[0]_0\(16) => \Operand_Select_I/of_op2\(14),
      \EX_Op2_reg[0]_0\(15) => \Operand_Select_I/of_op2\(15),
      \EX_Op2_reg[0]_0\(14) => \Operand_Select_I/of_op2\(16),
      \EX_Op2_reg[0]_0\(13) => \Operand_Select_I/of_op2\(17),
      \EX_Op2_reg[0]_0\(12) => \Operand_Select_I/of_op2\(18),
      \EX_Op2_reg[0]_0\(11) => \Operand_Select_I/of_op2\(19),
      \EX_Op2_reg[0]_0\(10) => \Operand_Select_I/of_op2\(20),
      \EX_Op2_reg[0]_0\(9) => \Operand_Select_I/of_op2\(21),
      \EX_Op2_reg[0]_0\(8) => \Operand_Select_I/of_op2\(22),
      \EX_Op2_reg[0]_0\(7) => \Operand_Select_I/of_op2\(23),
      \EX_Op2_reg[0]_0\(6) => \Operand_Select_I/of_op2\(24),
      \EX_Op2_reg[0]_0\(5) => \Operand_Select_I/of_op2\(25),
      \EX_Op2_reg[0]_0\(4) => \Operand_Select_I/of_op2\(26),
      \EX_Op2_reg[0]_0\(3) => \Operand_Select_I/of_op2\(28),
      \EX_Op2_reg[0]_0\(2) => \Operand_Select_I/of_op2\(29),
      \EX_Op2_reg[0]_0\(1) => \Operand_Select_I/of_op2\(30),
      \EX_Op2_reg[0]_0\(0) => \Operand_Select_I/of_op2\(31),
      \EX_Op2_reg[30]\ => Data_Flow_I_n_291,
      \EX_Op2_reg[30]_0\(1) => ex_alu_result(30),
      \EX_Op2_reg[30]_0\(0) => ex_alu_result(31),
      \EX_Op3_reg[0]\(31) => ex_op3(0),
      \EX_Op3_reg[0]\(30) => ex_op3(1),
      \EX_Op3_reg[0]\(29) => ex_op3(2),
      \EX_Op3_reg[0]\(28) => ex_op3(3),
      \EX_Op3_reg[0]\(27) => ex_op3(4),
      \EX_Op3_reg[0]\(26) => ex_op3(5),
      \EX_Op3_reg[0]\(25) => ex_op3(6),
      \EX_Op3_reg[0]\(24) => ex_op3(7),
      \EX_Op3_reg[0]\(23) => ex_op3(8),
      \EX_Op3_reg[0]\(22) => ex_op3(9),
      \EX_Op3_reg[0]\(21) => ex_op3(10),
      \EX_Op3_reg[0]\(20) => ex_op3(11),
      \EX_Op3_reg[0]\(19) => ex_op3(12),
      \EX_Op3_reg[0]\(18) => ex_op3(13),
      \EX_Op3_reg[0]\(17) => ex_op3(14),
      \EX_Op3_reg[0]\(16) => ex_op3(15),
      \EX_Op3_reg[0]\(15) => ex_op3(16),
      \EX_Op3_reg[0]\(14) => ex_op3(17),
      \EX_Op3_reg[0]\(13) => ex_op3(18),
      \EX_Op3_reg[0]\(12) => ex_op3(19),
      \EX_Op3_reg[0]\(11) => ex_op3(20),
      \EX_Op3_reg[0]\(10) => ex_op3(21),
      \EX_Op3_reg[0]\(9) => ex_op3(22),
      \EX_Op3_reg[0]\(8) => ex_op3(23),
      \EX_Op3_reg[0]\(7) => ex_op3(24),
      \EX_Op3_reg[0]\(6) => ex_op3(25),
      \EX_Op3_reg[0]\(5) => ex_op3(26),
      \EX_Op3_reg[0]\(4) => ex_op3(27),
      \EX_Op3_reg[0]\(3) => ex_op3(28),
      \EX_Op3_reg[0]\(2) => ex_op3(29),
      \EX_Op3_reg[0]\(1) => ex_op3(30),
      \EX_Op3_reg[0]\(0) => ex_op3(31),
      \EX_Op3_reg[0]_0\(16) => \Operand_Select_I/of_op3\(0),
      \EX_Op3_reg[0]_0\(15) => \Operand_Select_I/of_op3\(15),
      \EX_Op3_reg[0]_0\(14) => \Operand_Select_I/of_op3\(16),
      \EX_Op3_reg[0]_0\(13) => \Operand_Select_I/of_op3\(17),
      \EX_Op3_reg[0]_0\(12) => \Operand_Select_I/of_op3\(18),
      \EX_Op3_reg[0]_0\(11) => \Operand_Select_I/of_op3\(19),
      \EX_Op3_reg[0]_0\(10) => \Operand_Select_I/of_op3\(20),
      \EX_Op3_reg[0]_0\(9) => \Operand_Select_I/of_op3\(21),
      \EX_Op3_reg[0]_0\(8) => \Operand_Select_I/of_op3\(22),
      \EX_Op3_reg[0]_0\(7) => \Operand_Select_I/of_op3\(23),
      \EX_Op3_reg[0]_0\(6) => \Operand_Select_I/of_op3\(24),
      \EX_Op3_reg[0]_0\(5) => \Operand_Select_I/of_op3\(25),
      \EX_Op3_reg[0]_0\(4) => \Operand_Select_I/of_op3\(26),
      \EX_Op3_reg[0]_0\(3) => \Operand_Select_I/of_op3\(28),
      \EX_Op3_reg[0]_0\(2) => \Operand_Select_I/of_op3\(29),
      \EX_Op3_reg[0]_0\(1) => \Operand_Select_I/of_op3\(30),
      \EX_Op3_reg[0]_0\(0) => \Operand_Select_I/of_op3\(31),
      \FPGA_Impl1.D_Handle[0].D_Sel_reg\ => \Using_Div_Unit.Div_unit_I1/FPGA_Impl1.D_Handle[0].D_Sel_reg\,
      GPR_Op1(16) => gpr_op1(0),
      GPR_Op1(15) => gpr_op1(15),
      GPR_Op1(14) => gpr_op1(16),
      GPR_Op1(13) => gpr_op1(17),
      GPR_Op1(12) => gpr_op1(18),
      GPR_Op1(11) => gpr_op1(19),
      GPR_Op1(10) => gpr_op1(20),
      GPR_Op1(9) => gpr_op1(21),
      GPR_Op1(8) => gpr_op1(22),
      GPR_Op1(7) => gpr_op1(23),
      GPR_Op1(6) => gpr_op1(24),
      GPR_Op1(5) => gpr_op1(25),
      GPR_Op1(4) => gpr_op1(26),
      GPR_Op1(3) => gpr_op1(28),
      GPR_Op1(2) => gpr_op1(29),
      GPR_Op1(1) => gpr_op1(30),
      GPR_Op1(0) => gpr_op1(31),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(16) => gpr_op3(0),
      GPR_Op3(15) => gpr_op3(15),
      GPR_Op3(14) => gpr_op3(16),
      GPR_Op3(13) => gpr_op3(17),
      GPR_Op3(12) => gpr_op3(18),
      GPR_Op3(11) => gpr_op3(19),
      GPR_Op3(10) => gpr_op3(20),
      GPR_Op3(9) => gpr_op3(21),
      GPR_Op3(8) => gpr_op3(22),
      GPR_Op3(7) => gpr_op3(23),
      GPR_Op3(6) => gpr_op3(24),
      GPR_Op3(5) => gpr_op3(25),
      GPR_Op3(4) => gpr_op3(26),
      GPR_Op3(3) => gpr_op3(28),
      GPR_Op3(2) => gpr_op3(29),
      GPR_Op3(1) => gpr_op3(30),
      GPR_Op3(0) => gpr_op3(31),
      I1 => \exception_registers_I1/I1\,
      Interrupt => Interrupt,
      LO => ex_alu_carry_32,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(39),
      \LOCKSTEP_Out_reg[3023]\ => \Use_DBUS.DAXI_Interface_I1_n_48\,
      \LOCKSTEP_Out_reg[3024]\ => \Use_DBUS.DAXI_Interface_I1_n_49\,
      \LOCKSTEP_Out_reg[3025]\ => \Use_DBUS.DAXI_Interface_I1_n_50\,
      \LOCKSTEP_Out_reg[3026]\ => \Use_DBUS.DAXI_Interface_I1_n_51\,
      \LOCKSTEP_Out_reg[3027]\ => \Use_DBUS.DAXI_Interface_I1_n_52\,
      \LOCKSTEP_Out_reg[3028]\ => \Use_DBUS.DAXI_Interface_I1_n_53\,
      \LOCKSTEP_Out_reg[3029]\ => \Use_DBUS.DAXI_Interface_I1_n_54\,
      \LOCKSTEP_Out_reg[3030]\ => \Use_DBUS.DAXI_Interface_I1_n_55\,
      \LOCKSTEP_Out_reg[3031]\ => \Use_DBUS.DAXI_Interface_I1_n_41\,
      \LOCKSTEP_Out_reg[3032]\ => \Use_DBUS.DAXI_Interface_I1_n_42\,
      \LOCKSTEP_Out_reg[3033]\ => \Use_DBUS.DAXI_Interface_I1_n_43\,
      \LOCKSTEP_Out_reg[3034]\ => \Use_DBUS.DAXI_Interface_I1_n_8\,
      \LOCKSTEP_Out_reg[3035]\ => \Use_DBUS.DAXI_Interface_I1_n_44\,
      \LOCKSTEP_Out_reg[3036]\ => \Use_DBUS.DAXI_Interface_I1_n_45\,
      \LOCKSTEP_Out_reg[3037]\ => \Use_DBUS.DAXI_Interface_I1_n_46\,
      \LOCKSTEP_Out_reg[3038]\ => \^d\(77),
      \LOCKSTEP_Out_reg[3038]_0\ => \Use_DBUS.DAXI_Interface_I1_n_47\,
      MEM_DAXI_Exception => MEM_DAXI_Exception,
      \MEM_DataBus_Addr_reg[9]\(1) => ex_alu_op(0),
      \MEM_DataBus_Addr_reg[9]\(0) => ex_alu_op(1),
      \MEM_DataBus_Write_Data_reg[0]\(54 downto 39) => \^d\(296 downto 281),
      \MEM_DataBus_Write_Data_reg[0]\(38 downto 31) => \^d\(272 downto 265),
      \MEM_DataBus_Write_Data_reg[0]\(30 downto 1) => \^d\(257 downto 228),
      \MEM_DataBus_Write_Data_reg[0]\(0) => \^d\(71),
      MEM_Div_By_Zero_reg => Data_Flow_I_n_297,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\(1) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_sel\(0),
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\(0) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_sel\(1),
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0\(0) => Decode_I_n_475,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15) => Data_Flow_I_n_275,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(14) => Data_Flow_I_n_276,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(13) => Data_Flow_I_n_277,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(12) => Data_Flow_I_n_278,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(11) => Data_Flow_I_n_279,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(10) => Data_Flow_I_n_280,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(9) => Data_Flow_I_n_281,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(8) => Data_Flow_I_n_282,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(7) => Data_Flow_I_n_283,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(6) => Data_Flow_I_n_284,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(5) => Data_Flow_I_n_285,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(4) => Data_Flow_I_n_286,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(3) => Data_Flow_I_n_287,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(2) => Data_Flow_I_n_288,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(1) => Data_Flow_I_n_289,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => Data_Flow_I_n_290,
      Q(7) => ex_op2(0),
      Q(6) => ex_op2(22),
      Q(5) => ex_op2(23),
      Q(4) => ex_op2(25),
      Q(3) => Data_Flow_I_n_4,
      Q(2) => Data_Flow_I_n_5,
      Q(1) => Data_Flow_I_n_6,
      Q(0) => Data_Flow_I_n_7,
      \Q_reg[32]\(0) => \Using_Div_Unit.Div_unit_I1/reset_Q\,
      R => \Data_Flow_Logic_I/R\,
      \R_reg[32]\(0) => Decode_I_n_495,
      SR(0) => \Barrel_Shifter_I/mem_left_shift0\,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[30]\ => \Barrel_Shifter_I/in00\,
      \Use_HW_BS.mem_mux3_reg[0]\ => Decode_I_n_474,
      \Use_HW_BS.mem_mux3_reg[1]\(29) => Decode_I_n_439,
      \Use_HW_BS.mem_mux3_reg[1]\(28) => Decode_I_n_440,
      \Use_HW_BS.mem_mux3_reg[1]\(27) => Decode_I_n_441,
      \Use_HW_BS.mem_mux3_reg[1]\(26) => Decode_I_n_442,
      \Use_HW_BS.mem_mux3_reg[1]\(25) => Decode_I_n_443,
      \Use_HW_BS.mem_mux3_reg[1]\(24) => Decode_I_n_444,
      \Use_HW_BS.mem_mux3_reg[1]\(23) => Decode_I_n_445,
      \Use_HW_BS.mem_mux3_reg[1]\(22) => Decode_I_n_446,
      \Use_HW_BS.mem_mux3_reg[1]\(21) => Decode_I_n_447,
      \Use_HW_BS.mem_mux3_reg[1]\(20) => Decode_I_n_448,
      \Use_HW_BS.mem_mux3_reg[1]\(19) => Decode_I_n_449,
      \Use_HW_BS.mem_mux3_reg[1]\(18) => Decode_I_n_450,
      \Use_HW_BS.mem_mux3_reg[1]\(17) => Decode_I_n_451,
      \Use_HW_BS.mem_mux3_reg[1]\(16) => Decode_I_n_452,
      \Use_HW_BS.mem_mux3_reg[1]\(15) => Decode_I_n_453,
      \Use_HW_BS.mem_mux3_reg[1]\(14) => Decode_I_n_454,
      \Use_HW_BS.mem_mux3_reg[1]\(13) => Decode_I_n_455,
      \Use_HW_BS.mem_mux3_reg[1]\(12) => Decode_I_n_456,
      \Use_HW_BS.mem_mux3_reg[1]\(11) => Decode_I_n_457,
      \Use_HW_BS.mem_mux3_reg[1]\(10) => Decode_I_n_458,
      \Use_HW_BS.mem_mux3_reg[1]\(9) => Decode_I_n_459,
      \Use_HW_BS.mem_mux3_reg[1]\(8) => Decode_I_n_460,
      \Use_HW_BS.mem_mux3_reg[1]\(7) => Decode_I_n_461,
      \Use_HW_BS.mem_mux3_reg[1]\(6) => Decode_I_n_462,
      \Use_HW_BS.mem_mux3_reg[1]\(5) => Decode_I_n_463,
      \Use_HW_BS.mem_mux3_reg[1]\(4) => Decode_I_n_464,
      \Use_HW_BS.mem_mux3_reg[1]\(3) => Decode_I_n_465,
      \Use_HW_BS.mem_mux3_reg[1]\(2) => Decode_I_n_466,
      \Use_HW_BS.mem_mux3_reg[1]\(1) => Decode_I_n_467,
      \Use_HW_BS.mem_mux3_reg[1]\(0) => Decode_I_n_468,
      \Using_FPGA.Native\ => Data_Flow_I_n_107,
      \Using_FPGA.Native_0\ => Data_Flow_I_n_110,
      \Using_FPGA.Native_1\ => Data_Flow_I_n_111,
      \Using_FPGA.Native_10\ => \^d\(125),
      \Using_FPGA.Native_11\ => \^d\(126),
      \Using_FPGA.Native_12\ => \^d\(127),
      \Using_FPGA.Native_13\ => \^d\(128),
      \Using_FPGA.Native_14\ => \^d\(129),
      \Using_FPGA.Native_15\ => \^d\(130),
      \Using_FPGA.Native_16\ => \^d\(131),
      \Using_FPGA.Native_17\ => \^d\(132),
      \Using_FPGA.Native_18\ => \^d\(133),
      \Using_FPGA.Native_19\ => \^d\(134),
      \Using_FPGA.Native_2\ => Data_Flow_I_n_112,
      \Using_FPGA.Native_20\ => \^d\(135),
      \Using_FPGA.Native_21\ => \^d\(136),
      \Using_FPGA.Native_22\ => \^d\(137),
      \Using_FPGA.Native_23\ => \^d\(138),
      \Using_FPGA.Native_24\ => \^d\(139),
      \Using_FPGA.Native_25\ => \^d\(140),
      \Using_FPGA.Native_26\ => \^d\(141),
      \Using_FPGA.Native_27\ => \^d\(142),
      \Using_FPGA.Native_28\ => \^d\(143),
      \Using_FPGA.Native_29\ => \^d\(144),
      \Using_FPGA.Native_3\ => Data_Flow_I_n_113,
      \Using_FPGA.Native_30\ => \^d\(145),
      \Using_FPGA.Native_31\ => \^d\(146),
      \Using_FPGA.Native_32\ => \^d\(147),
      \Using_FPGA.Native_33\ => \^d\(148),
      \Using_FPGA.Native_34\ => \^d\(149),
      \Using_FPGA.Native_35\ => \^d\(150),
      \Using_FPGA.Native_36\ => \^d\(151),
      \Using_FPGA.Native_37\ => \^d\(152),
      \Using_FPGA.Native_38\(15) => wb_excep_return_addr(0),
      \Using_FPGA.Native_38\(14) => wb_excep_return_addr(1),
      \Using_FPGA.Native_38\(13) => wb_excep_return_addr(2),
      \Using_FPGA.Native_38\(12) => wb_excep_return_addr(3),
      \Using_FPGA.Native_38\(11) => wb_excep_return_addr(4),
      \Using_FPGA.Native_38\(10) => wb_excep_return_addr(5),
      \Using_FPGA.Native_38\(9) => wb_excep_return_addr(6),
      \Using_FPGA.Native_38\(8) => wb_excep_return_addr(7),
      \Using_FPGA.Native_38\(7) => wb_excep_return_addr(8),
      \Using_FPGA.Native_38\(6) => wb_excep_return_addr(9),
      \Using_FPGA.Native_38\(5) => wb_excep_return_addr(10),
      \Using_FPGA.Native_38\(4) => wb_excep_return_addr(11),
      \Using_FPGA.Native_38\(3) => wb_excep_return_addr(12),
      \Using_FPGA.Native_38\(2) => wb_excep_return_addr(13),
      \Using_FPGA.Native_38\(1) => wb_excep_return_addr(14),
      \Using_FPGA.Native_38\(0) => wb_excep_return_addr(15),
      \Using_FPGA.Native_39\ => Data_Flow_I_n_294,
      \Using_FPGA.Native_4\ => Data_Flow_I_n_118,
      \Using_FPGA.Native_40\(30) => MEM_Fwd(0),
      \Using_FPGA.Native_40\(29) => MEM_Fwd(1),
      \Using_FPGA.Native_40\(28) => MEM_Fwd(2),
      \Using_FPGA.Native_40\(27) => MEM_Fwd(3),
      \Using_FPGA.Native_40\(26) => MEM_Fwd(4),
      \Using_FPGA.Native_40\(25) => MEM_Fwd(5),
      \Using_FPGA.Native_40\(24) => MEM_Fwd(6),
      \Using_FPGA.Native_40\(23) => MEM_Fwd(7),
      \Using_FPGA.Native_40\(22) => MEM_Fwd(8),
      \Using_FPGA.Native_40\(21) => MEM_Fwd(9),
      \Using_FPGA.Native_40\(20) => MEM_Fwd(10),
      \Using_FPGA.Native_40\(19) => MEM_Fwd(11),
      \Using_FPGA.Native_40\(18) => MEM_Fwd(12),
      \Using_FPGA.Native_40\(17) => MEM_Fwd(13),
      \Using_FPGA.Native_40\(16) => MEM_Fwd(14),
      \Using_FPGA.Native_40\(15) => MEM_Fwd(15),
      \Using_FPGA.Native_40\(14) => MEM_Fwd(16),
      \Using_FPGA.Native_40\(13) => MEM_Fwd(17),
      \Using_FPGA.Native_40\(12) => MEM_Fwd(18),
      \Using_FPGA.Native_40\(11) => MEM_Fwd(19),
      \Using_FPGA.Native_40\(10) => MEM_Fwd(20),
      \Using_FPGA.Native_40\(9) => MEM_Fwd(21),
      \Using_FPGA.Native_40\(8) => MEM_Fwd(22),
      \Using_FPGA.Native_40\(7) => MEM_Fwd(23),
      \Using_FPGA.Native_40\(6) => MEM_Fwd(24),
      \Using_FPGA.Native_40\(5) => MEM_Fwd(25),
      \Using_FPGA.Native_40\(4) => MEM_Fwd(26),
      \Using_FPGA.Native_40\(3) => MEM_Fwd(28),
      \Using_FPGA.Native_40\(2) => MEM_Fwd(29),
      \Using_FPGA.Native_40\(1) => MEM_Fwd(30),
      \Using_FPGA.Native_40\(0) => MEM_Fwd(31),
      \Using_FPGA.Native_41\ => \^mem_div_stall_i_reg\(0),
      \Using_FPGA.Native_42\ => Decode_I_n_483,
      \Using_FPGA.Native_43\ => Decode_I_n_482,
      \Using_FPGA.Native_44\ => Decode_I_n_481,
      \Using_FPGA.Native_45\ => Decode_I_n_480,
      \Using_FPGA.Native_46\ => Decode_I_n_479,
      \Using_FPGA.Native_47\ => Decode_I_n_487,
      \Using_FPGA.Native_48\ => Decode_I_n_490,
      \Using_FPGA.Native_49\ => Decode_I_n_486,
      \Using_FPGA.Native_5\ => Data_Flow_I_n_119,
      \Using_FPGA.Native_50\ => Decode_I_n_478,
      \Using_FPGA.Native_51\ => Decode_I_n_485,
      \Using_FPGA.Native_52\ => Decode_I_n_489,
      \Using_FPGA.Native_53\ => Decode_I_n_476,
      \Using_FPGA.Native_54\ => Decode_I_n_484,
      \Using_FPGA.Native_55\ => Decode_I_n_488,
      \Using_FPGA.Native_56\(31) => MEM_PC(0),
      \Using_FPGA.Native_56\(30) => MEM_PC(1),
      \Using_FPGA.Native_56\(29) => MEM_PC(2),
      \Using_FPGA.Native_56\(28) => MEM_PC(3),
      \Using_FPGA.Native_56\(27) => MEM_PC(4),
      \Using_FPGA.Native_56\(26) => MEM_PC(5),
      \Using_FPGA.Native_56\(25) => MEM_PC(6),
      \Using_FPGA.Native_56\(24) => MEM_PC(7),
      \Using_FPGA.Native_56\(23) => MEM_PC(8),
      \Using_FPGA.Native_56\(22) => MEM_PC(9),
      \Using_FPGA.Native_56\(21) => MEM_PC(10),
      \Using_FPGA.Native_56\(20) => MEM_PC(11),
      \Using_FPGA.Native_56\(19) => MEM_PC(12),
      \Using_FPGA.Native_56\(18) => MEM_PC(13),
      \Using_FPGA.Native_56\(17) => MEM_PC(14),
      \Using_FPGA.Native_56\(16) => MEM_PC(15),
      \Using_FPGA.Native_56\(15) => MEM_PC(16),
      \Using_FPGA.Native_56\(14) => MEM_PC(17),
      \Using_FPGA.Native_56\(13) => MEM_PC(18),
      \Using_FPGA.Native_56\(12) => MEM_PC(19),
      \Using_FPGA.Native_56\(11) => MEM_PC(20),
      \Using_FPGA.Native_56\(10) => MEM_PC(21),
      \Using_FPGA.Native_56\(9) => MEM_PC(22),
      \Using_FPGA.Native_56\(8) => MEM_PC(23),
      \Using_FPGA.Native_56\(7) => MEM_PC(24),
      \Using_FPGA.Native_56\(6) => MEM_PC(25),
      \Using_FPGA.Native_56\(5) => MEM_PC(26),
      \Using_FPGA.Native_56\(4) => MEM_PC(27),
      \Using_FPGA.Native_56\(3) => MEM_PC(28),
      \Using_FPGA.Native_56\(2) => MEM_PC(29),
      \Using_FPGA.Native_56\(1) => MEM_PC(30),
      \Using_FPGA.Native_56\(0) => MEM_PC(31),
      \Using_FPGA.Native_57\ => Decode_I_n_291,
      \Using_FPGA.Native_58\ => Decode_I_n_318,
      \Using_FPGA.Native_59\ => Decode_I_n_415,
      \Using_FPGA.Native_6\ => Data_Flow_I_n_120,
      \Using_FPGA.Native_60\(1) => ex_sext_op(0),
      \Using_FPGA.Native_60\(0) => ex_sext_op(1),
      \Using_FPGA.Native_61\(1) => ex_logic_op(0),
      \Using_FPGA.Native_61\(0) => ex_logic_op(1),
      \Using_FPGA.Native_62\ => Decode_I_n_419,
      \Using_FPGA.Native_63\ => Decode_I_n_435,
      \Using_FPGA.Native_64\ => Decode_I_n_319,
      \Using_FPGA.Native_65\ => Decode_I_n_320,
      \Using_FPGA.Native_66\ => Decode_I_n_414,
      \Using_FPGA.Native_67\ => Decode_I_n_416,
      \Using_FPGA.Native_68\ => Decode_I_n_417,
      \Using_FPGA.Native_69\ => Decode_I_n_418,
      \Using_FPGA.Native_7\ => Data_Flow_I_n_121,
      \Using_FPGA.Native_70\ => Decode_I_n_420,
      \Using_FPGA.Native_71\ => Decode_I_n_421,
      \Using_FPGA.Native_72\ => Decode_I_n_422,
      \Using_FPGA.Native_73\ => Decode_I_n_423,
      \Using_FPGA.Native_74\ => Decode_I_n_424,
      \Using_FPGA.Native_75\ => Decode_I_n_425,
      \Using_FPGA.Native_76\ => Decode_I_n_426,
      \Using_FPGA.Native_77\ => Decode_I_n_427,
      \Using_FPGA.Native_78\ => Decode_I_n_428,
      \Using_FPGA.Native_79\ => Decode_I_n_429,
      \Using_FPGA.Native_8\ => \^d\(123),
      \Using_FPGA.Native_80\ => Decode_I_n_430,
      \Using_FPGA.Native_81\ => Decode_I_n_431,
      \Using_FPGA.Native_82\ => Decode_I_n_432,
      \Using_FPGA.Native_83\ => Decode_I_n_433,
      \Using_FPGA.Native_84\ => Decode_I_n_434,
      \Using_FPGA.Native_9\ => \^d\(124),
      \Using_FPGA.Native_i_4__1\ => \Using_FPGA.Native_i_15__0_n_0\,
      \WB_BTR_reg[27]\(0) => WB_BTR(27),
      \WB_BTR_reg[31]\(0) => \exception_registers_I1/WB_BTR0\,
      \WB_EAR_reg[0]\ => Data_Flow_I_n_379,
      \WB_EAR_reg[10]\ => Data_Flow_I_n_369,
      \WB_EAR_reg[11]\ => Data_Flow_I_n_368,
      \WB_EAR_reg[12]\ => Data_Flow_I_n_367,
      \WB_EAR_reg[13]\ => Data_Flow_I_n_366,
      \WB_EAR_reg[14]\ => Data_Flow_I_n_365,
      \WB_EAR_reg[15]\ => Data_Flow_I_n_364,
      \WB_EAR_reg[1]\ => Data_Flow_I_n_378,
      \WB_EAR_reg[2]\ => Data_Flow_I_n_377,
      \WB_EAR_reg[31]\(0) => \exception_registers_I1/WB_EAR0\,
      \WB_EAR_reg[3]\ => Data_Flow_I_n_376,
      \WB_EAR_reg[4]\ => Data_Flow_I_n_375,
      \WB_EAR_reg[5]\ => Data_Flow_I_n_374,
      \WB_EAR_reg[6]\ => Data_Flow_I_n_373,
      \WB_EAR_reg[7]\ => Data_Flow_I_n_372,
      \WB_EAR_reg[8]\ => Data_Flow_I_n_371,
      \WB_EAR_reg[9]\ => Data_Flow_I_n_370,
      \WB_ESR_i_reg[20]\(6) => \exception_registers_I1/WB_ESR_i\,
      \WB_ESR_i_reg[20]\(5) => wb_sw_instr,
      \WB_ESR_i_reg[20]\(4) => wb_new_esr_ess_rx(0),
      \WB_ESR_i_reg[20]\(3) => wb_new_esr_ess_rx(1),
      \WB_ESR_i_reg[20]\(2) => wb_new_esr_ess_rx(2),
      \WB_ESR_i_reg[20]\(1) => wb_new_esr_ess_rx(3),
      \WB_ESR_i_reg[20]\(0) => wb_new_esr_ess_rx(4),
      \WB_ESR_i_reg[28]\(3 downto 0) => \^d\(76 downto 73),
      \WB_ESR_i_reg[31]\(0) => WB_ESR_i0,
      \WB_ESR_reg[31]\(0) => \exception_registers_I1/WB_ESR0\,
      \WB_MEM_Result_reg[31]\(0) => \Data_Flow_Logic_I/WB_MEM_Result0\,
      \data_rd_reg_reg[31]\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\,
      \data_rd_reg_reg[31]_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_41\,
      div_busy_reg => Data_Flow_I_n_272,
      ex_Enable_Sext_Shift => ex_Enable_Sext_Shift,
      ex_MSR(0) => ex_MSR(23),
      ex_MSRCLR => ex_MSRCLR,
      ex_MSRSET => ex_MSRSET,
      ex_MTS_MSR => ex_MTS_MSR,
      ex_addr_low_bits(1) => ex_addr_low_bits(1),
      ex_addr_low_bits(0) => ex_addr_low_bits(2),
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_byte_access => ex_byte_access,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_div_unsigned => ex_div_unsigned,
      ex_doublet_access => ex_doublet_access,
      ex_left_shift_i => \Barrel_Shifter_I/ex_left_shift_i\,
      ex_load_btr => ex_load_btr,
      ex_mux1(2) => \Barrel_Shifter_I/ex_mux1\(1),
      ex_mux1(1) => \Barrel_Shifter_I/ex_mux1\(3),
      ex_mux1(0) => \Barrel_Shifter_I/ex_mux1\(31),
      ex_not_mul_op => ex_not_mul_op,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_reverse_mem_access => ex_reverse_mem_access,
      ex_sel_alu => ex_sel_alu,
      ex_sel_alu_i_reg(30) => EX_Fwd(0),
      ex_sel_alu_i_reg(29) => EX_Fwd(1),
      ex_sel_alu_i_reg(28) => EX_Fwd(2),
      ex_sel_alu_i_reg(27) => EX_Fwd(3),
      ex_sel_alu_i_reg(26) => EX_Fwd(4),
      ex_sel_alu_i_reg(25) => EX_Fwd(5),
      ex_sel_alu_i_reg(24) => EX_Fwd(6),
      ex_sel_alu_i_reg(23) => EX_Fwd(7),
      ex_sel_alu_i_reg(22) => EX_Fwd(8),
      ex_sel_alu_i_reg(21) => EX_Fwd(9),
      ex_sel_alu_i_reg(20) => EX_Fwd(10),
      ex_sel_alu_i_reg(19) => EX_Fwd(11),
      ex_sel_alu_i_reg(18) => EX_Fwd(12),
      ex_sel_alu_i_reg(17) => EX_Fwd(13),
      ex_sel_alu_i_reg(16) => EX_Fwd(14),
      ex_sel_alu_i_reg(15) => EX_Fwd(15),
      ex_sel_alu_i_reg(14) => EX_Fwd(16),
      ex_sel_alu_i_reg(13) => EX_Fwd(17),
      ex_sel_alu_i_reg(12) => EX_Fwd(18),
      ex_sel_alu_i_reg(11) => EX_Fwd(19),
      ex_sel_alu_i_reg(10) => EX_Fwd(20),
      ex_sel_alu_i_reg(9) => EX_Fwd(21),
      ex_sel_alu_i_reg(8) => EX_Fwd(22),
      ex_sel_alu_i_reg(7) => EX_Fwd(23),
      ex_sel_alu_i_reg(6) => EX_Fwd(24),
      ex_sel_alu_i_reg(5) => EX_Fwd(25),
      ex_sel_alu_i_reg(4) => EX_Fwd(26),
      ex_sel_alu_i_reg(3) => EX_Fwd(28),
      ex_sel_alu_i_reg(2) => EX_Fwd(29),
      ex_sel_alu_i_reg(1) => EX_Fwd(30),
      ex_sel_alu_i_reg(0) => EX_Fwd(31),
      ex_start_div => ex_start_div,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      ex_void_bit => \Barrel_Shifter_I/ex_void_bit\,
      \imm_reg_reg[0]\(15) => \Operand_Select_I/imm_reg\(0),
      \imm_reg_reg[0]\(14) => \Operand_Select_I/imm_reg\(1),
      \imm_reg_reg[0]\(13) => \Operand_Select_I/imm_reg\(2),
      \imm_reg_reg[0]\(12) => \Operand_Select_I/imm_reg\(3),
      \imm_reg_reg[0]\(11) => \Operand_Select_I/imm_reg\(4),
      \imm_reg_reg[0]\(10) => \Operand_Select_I/imm_reg\(5),
      \imm_reg_reg[0]\(9) => \Operand_Select_I/imm_reg\(6),
      \imm_reg_reg[0]\(8) => \Operand_Select_I/imm_reg\(7),
      \imm_reg_reg[0]\(7) => \Operand_Select_I/imm_reg\(8),
      \imm_reg_reg[0]\(6) => \Operand_Select_I/imm_reg\(9),
      \imm_reg_reg[0]\(5) => \Operand_Select_I/imm_reg\(10),
      \imm_reg_reg[0]\(4) => \Operand_Select_I/imm_reg\(11),
      \imm_reg_reg[0]\(3) => \Operand_Select_I/imm_reg\(12),
      \imm_reg_reg[0]\(2) => \Operand_Select_I/imm_reg\(13),
      \imm_reg_reg[0]\(1) => \Operand_Select_I/imm_reg\(14),
      \imm_reg_reg[0]\(0) => \Operand_Select_I/imm_reg\(15),
      in0 => Decode_I_n_436,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      \mem_EAR_reg[31]\ => \^using_fpga.native\,
      mem_MSR(1) => mem_MSR(23),
      mem_MSR(0) => mem_MSR(30),
      mem_byte_access => mem_byte_access,
      \mem_byte_selects_reg[0]\(0) => \Byte_Doublet_Handle_gti_I/p_0_in\,
      mem_daxi_exception_i_reg(0) => mem_exception_kind(29),
      mem_div_overflow => mem_div_overflow,
      mem_div_stall_i_reg => Data_Flow_I_n_295,
      mem_doublet_access => mem_doublet_access,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_last_cycle_reg => Data_Flow_I_n_273,
      mem_reverse_byteorder => \Byte_Doublet_Handle_gti_I/mem_reverse_byteorder\,
      mem_sel_msr => mem_sel_msr,
      of_MSR(2) => of_MSR(22),
      of_MSR(1) => of_MSR(28),
      of_MSR(0) => of_MSR(30),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      of_op2_imm_addr(0) => \Operand_Select_I/of_op2_imm_addr\(27),
      of_op2_sel(0 to 1) => of_op2_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      \out\ => Data_Flow_I_n_40,
      restore_wb_msr_to_ex => \msr_reg_i/restore_wb_msr_to_ex\,
      sync_reset => sync_reset,
      \wb_MSR_i_reg[22]\(2) => \msr_reg_i/wb_MSR_cmb\(22),
      \wb_MSR_i_reg[22]\(1) => \msr_reg_i/wb_MSR_cmb\(23),
      \wb_MSR_i_reg[22]\(0) => \msr_reg_i/wb_MSR_cmb\(30),
      \wb_MSR_i_reg[30]\(0) => wb_piperun,
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_ie_rising0 => wb_ie_rising0,
      wb_load_esr => wb_load_esr,
      wb_read_lsb_1_sel(0) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel\(0),
      wb_read_msb_doublet_sel => \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel\
    );
Decode_I: entity work.mb_design_microblaze_0_1_Decode_gti
     port map (
      Clk => Clk,
      D(31) => of_pc(0),
      D(30) => of_pc(1),
      D(29) => of_pc(2),
      D(28) => of_pc(3),
      D(27) => of_pc(4),
      D(26) => of_pc(5),
      D(25) => of_pc(6),
      D(24) => of_pc(7),
      D(23) => of_pc(8),
      D(22) => of_pc(9),
      D(21) => of_pc(10),
      D(20) => of_pc(11),
      D(19) => of_pc(12),
      D(18) => of_pc(13),
      D(17) => of_pc(14),
      D(16) => of_pc(15),
      D(15) => of_pc(16),
      D(14) => of_pc(17),
      D(13) => of_pc(18),
      D(12) => of_pc(19),
      D(11) => of_pc(20),
      D(10) => of_pc(21),
      D(9) => of_pc(22),
      D(8) => of_pc(23),
      D(7) => of_pc(24),
      D(6) => of_pc(25),
      D(5) => of_pc(26),
      D(4) => of_pc(27),
      D(3) => of_pc(28),
      D(2) => of_pc(29),
      D(1) => of_pc(30),
      D(0) => of_pc(31),
      DI => \ALU_I/DI\,
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      E(0) => of_write_imm_reg,
      \EX_ALU_Op_reg[0]_0\(1) => ex_alu_op(0),
      \EX_ALU_Op_reg[0]_0\(0) => ex_alu_op(1),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CLZ_Instr_reg_0 => Decode_I_n_318,
      EX_CLZ_Instr_reg_1 => Decode_I_n_319,
      EX_CLZ_Instr_reg_2 => Decode_I_n_320,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Logic_Op_reg[0]_0\(1) => ex_logic_op(0),
      \EX_Logic_Op_reg[0]_0\(0) => ex_logic_op(1),
      EX_Op1_CMP_Equal => ex_op1_cmp_equal,
      EX_Op1_Zero => ex_op1_zero,
      \EX_Op1_reg[0]\ => Decode_I_n_434,
      \EX_Op1_reg[10]\ => Decode_I_n_424,
      \EX_Op1_reg[11]\ => Decode_I_n_423,
      \EX_Op1_reg[12]\ => Decode_I_n_422,
      \EX_Op1_reg[13]\ => Decode_I_n_421,
      \EX_Op1_reg[14]\ => Decode_I_n_420,
      \EX_Op1_reg[1]\ => Decode_I_n_433,
      \EX_Op1_reg[1]_0\(2) => \Barrel_Shifter_I/ex_mux1\(1),
      \EX_Op1_reg[1]_0\(1) => \Barrel_Shifter_I/ex_mux1\(3),
      \EX_Op1_reg[1]_0\(0) => \Barrel_Shifter_I/ex_mux1\(31),
      \EX_Op1_reg[23]\ => Decode_I_n_414,
      \EX_Op1_reg[25]\ => Decode_I_n_418,
      \EX_Op1_reg[2]\ => Decode_I_n_432,
      \EX_Op1_reg[3]\ => Decode_I_n_431,
      \EX_Op1_reg[4]\ => Decode_I_n_430,
      \EX_Op1_reg[5]\ => Decode_I_n_429,
      \EX_Op1_reg[6]\ => Decode_I_n_428,
      \EX_Op1_reg[7]\ => Decode_I_n_427,
      \EX_Op1_reg[8]\ => Decode_I_n_426,
      \EX_Op1_reg[9]\ => Decode_I_n_425,
      \EX_Op2[0]_i_2\(15) => \Operand_Select_I/imm_reg\(0),
      \EX_Op2[0]_i_2\(14) => \Operand_Select_I/imm_reg\(1),
      \EX_Op2[0]_i_2\(13) => \Operand_Select_I/imm_reg\(2),
      \EX_Op2[0]_i_2\(12) => \Operand_Select_I/imm_reg\(3),
      \EX_Op2[0]_i_2\(11) => \Operand_Select_I/imm_reg\(4),
      \EX_Op2[0]_i_2\(10) => \Operand_Select_I/imm_reg\(5),
      \EX_Op2[0]_i_2\(9) => \Operand_Select_I/imm_reg\(6),
      \EX_Op2[0]_i_2\(8) => \Operand_Select_I/imm_reg\(7),
      \EX_Op2[0]_i_2\(7) => \Operand_Select_I/imm_reg\(8),
      \EX_Op2[0]_i_2\(6) => \Operand_Select_I/imm_reg\(9),
      \EX_Op2[0]_i_2\(5) => \Operand_Select_I/imm_reg\(10),
      \EX_Op2[0]_i_2\(4) => \Operand_Select_I/imm_reg\(11),
      \EX_Op2[0]_i_2\(3) => \Operand_Select_I/imm_reg\(12),
      \EX_Op2[0]_i_2\(2) => \Operand_Select_I/imm_reg\(13),
      \EX_Op2[0]_i_2\(1) => \Operand_Select_I/imm_reg\(14),
      \EX_Op2[0]_i_2\(0) => \Operand_Select_I/imm_reg\(15),
      \EX_Op2_reg[29]\(29) => Decode_I_n_439,
      \EX_Op2_reg[29]\(28) => Decode_I_n_440,
      \EX_Op2_reg[29]\(27) => Decode_I_n_441,
      \EX_Op2_reg[29]\(26) => Decode_I_n_442,
      \EX_Op2_reg[29]\(25) => Decode_I_n_443,
      \EX_Op2_reg[29]\(24) => Decode_I_n_444,
      \EX_Op2_reg[29]\(23) => Decode_I_n_445,
      \EX_Op2_reg[29]\(22) => Decode_I_n_446,
      \EX_Op2_reg[29]\(21) => Decode_I_n_447,
      \EX_Op2_reg[29]\(20) => Decode_I_n_448,
      \EX_Op2_reg[29]\(19) => Decode_I_n_449,
      \EX_Op2_reg[29]\(18) => Decode_I_n_450,
      \EX_Op2_reg[29]\(17) => Decode_I_n_451,
      \EX_Op2_reg[29]\(16) => Decode_I_n_452,
      \EX_Op2_reg[29]\(15) => Decode_I_n_453,
      \EX_Op2_reg[29]\(14) => Decode_I_n_454,
      \EX_Op2_reg[29]\(13) => Decode_I_n_455,
      \EX_Op2_reg[29]\(12) => Decode_I_n_456,
      \EX_Op2_reg[29]\(11) => Decode_I_n_457,
      \EX_Op2_reg[29]\(10) => Decode_I_n_458,
      \EX_Op2_reg[29]\(9) => Decode_I_n_459,
      \EX_Op2_reg[29]\(8) => Decode_I_n_460,
      \EX_Op2_reg[29]\(7) => Decode_I_n_461,
      \EX_Op2_reg[29]\(6) => Decode_I_n_462,
      \EX_Op2_reg[29]\(5) => Decode_I_n_463,
      \EX_Op2_reg[29]\(4) => Decode_I_n_464,
      \EX_Op2_reg[29]\(3) => Decode_I_n_465,
      \EX_Op2_reg[29]\(2) => Decode_I_n_466,
      \EX_Op2_reg[29]\(1) => Decode_I_n_467,
      \EX_Op2_reg[29]\(0) => Decode_I_n_468,
      \EX_Op2_reg[30]\ => Decode_I_n_474,
      \EX_Op3_reg[0]\(30) => EX_Fwd(0),
      \EX_Op3_reg[0]\(29) => EX_Fwd(1),
      \EX_Op3_reg[0]\(28) => EX_Fwd(2),
      \EX_Op3_reg[0]\(27) => EX_Fwd(3),
      \EX_Op3_reg[0]\(26) => EX_Fwd(4),
      \EX_Op3_reg[0]\(25) => EX_Fwd(5),
      \EX_Op3_reg[0]\(24) => EX_Fwd(6),
      \EX_Op3_reg[0]\(23) => EX_Fwd(7),
      \EX_Op3_reg[0]\(22) => EX_Fwd(8),
      \EX_Op3_reg[0]\(21) => EX_Fwd(9),
      \EX_Op3_reg[0]\(20) => EX_Fwd(10),
      \EX_Op3_reg[0]\(19) => EX_Fwd(11),
      \EX_Op3_reg[0]\(18) => EX_Fwd(12),
      \EX_Op3_reg[0]\(17) => EX_Fwd(13),
      \EX_Op3_reg[0]\(16) => EX_Fwd(14),
      \EX_Op3_reg[0]\(15) => EX_Fwd(15),
      \EX_Op3_reg[0]\(14) => EX_Fwd(16),
      \EX_Op3_reg[0]\(13) => EX_Fwd(17),
      \EX_Op3_reg[0]\(12) => EX_Fwd(18),
      \EX_Op3_reg[0]\(11) => EX_Fwd(19),
      \EX_Op3_reg[0]\(10) => EX_Fwd(20),
      \EX_Op3_reg[0]\(9) => EX_Fwd(21),
      \EX_Op3_reg[0]\(8) => EX_Fwd(22),
      \EX_Op3_reg[0]\(7) => EX_Fwd(23),
      \EX_Op3_reg[0]\(6) => EX_Fwd(24),
      \EX_Op3_reg[0]\(5) => EX_Fwd(25),
      \EX_Op3_reg[0]\(4) => EX_Fwd(26),
      \EX_Op3_reg[0]\(3) => EX_Fwd(28),
      \EX_Op3_reg[0]\(2) => EX_Fwd(29),
      \EX_Op3_reg[0]\(1) => EX_Fwd(30),
      \EX_Op3_reg[0]\(0) => EX_Fwd(31),
      \EX_Op3_reg[0]_0\(30) => MEM_Fwd(0),
      \EX_Op3_reg[0]_0\(29) => MEM_Fwd(1),
      \EX_Op3_reg[0]_0\(28) => MEM_Fwd(2),
      \EX_Op3_reg[0]_0\(27) => MEM_Fwd(3),
      \EX_Op3_reg[0]_0\(26) => MEM_Fwd(4),
      \EX_Op3_reg[0]_0\(25) => MEM_Fwd(5),
      \EX_Op3_reg[0]_0\(24) => MEM_Fwd(6),
      \EX_Op3_reg[0]_0\(23) => MEM_Fwd(7),
      \EX_Op3_reg[0]_0\(22) => MEM_Fwd(8),
      \EX_Op3_reg[0]_0\(21) => MEM_Fwd(9),
      \EX_Op3_reg[0]_0\(20) => MEM_Fwd(10),
      \EX_Op3_reg[0]_0\(19) => MEM_Fwd(11),
      \EX_Op3_reg[0]_0\(18) => MEM_Fwd(12),
      \EX_Op3_reg[0]_0\(17) => MEM_Fwd(13),
      \EX_Op3_reg[0]_0\(16) => MEM_Fwd(14),
      \EX_Op3_reg[0]_0\(15) => MEM_Fwd(15),
      \EX_Op3_reg[0]_0\(14) => MEM_Fwd(16),
      \EX_Op3_reg[0]_0\(13) => MEM_Fwd(17),
      \EX_Op3_reg[0]_0\(12) => MEM_Fwd(18),
      \EX_Op3_reg[0]_0\(11) => MEM_Fwd(19),
      \EX_Op3_reg[0]_0\(10) => MEM_Fwd(20),
      \EX_Op3_reg[0]_0\(9) => MEM_Fwd(21),
      \EX_Op3_reg[0]_0\(8) => MEM_Fwd(22),
      \EX_Op3_reg[0]_0\(7) => MEM_Fwd(23),
      \EX_Op3_reg[0]_0\(6) => MEM_Fwd(24),
      \EX_Op3_reg[0]_0\(5) => MEM_Fwd(25),
      \EX_Op3_reg[0]_0\(4) => MEM_Fwd(26),
      \EX_Op3_reg[0]_0\(3) => MEM_Fwd(28),
      \EX_Op3_reg[0]_0\(2) => MEM_Fwd(29),
      \EX_Op3_reg[0]_0\(1) => MEM_Fwd(30),
      \EX_Op3_reg[0]_0\(0) => MEM_Fwd(31),
      EX_Pattern_Cmp_Sel_reg_0 => Decode_I_n_415,
      EX_Pattern_Cmp_Sel_reg_1 => Decode_I_n_416,
      EX_Pattern_Cmp_Sel_reg_2 => Decode_I_n_417,
      EX_SWAP_Instr_reg_0 => Decode_I_n_419,
      \EX_Sext_Op_reg[0]_0\(1) => ex_sext_op(0),
      \EX_Sext_Op_reg[0]_0\(0) => ex_sext_op(1),
      \FPGA_Impl1.D_Handle[0].D_Sel_reg\ => \Using_Div_Unit.Div_unit_I1/FPGA_Impl1.D_Handle[0].D_Sel_reg\,
      GPR_Op1(16) => gpr_op1(0),
      GPR_Op1(15) => gpr_op1(15),
      GPR_Op1(14) => gpr_op1(16),
      GPR_Op1(13) => gpr_op1(17),
      GPR_Op1(12) => gpr_op1(18),
      GPR_Op1(11) => gpr_op1(19),
      GPR_Op1(10) => gpr_op1(20),
      GPR_Op1(9) => gpr_op1(21),
      GPR_Op1(8) => gpr_op1(22),
      GPR_Op1(7) => gpr_op1(23),
      GPR_Op1(6) => gpr_op1(24),
      GPR_Op1(5) => gpr_op1(25),
      GPR_Op1(4) => gpr_op1(26),
      GPR_Op1(3) => gpr_op1(28),
      GPR_Op1(2) => gpr_op1(29),
      GPR_Op1(1) => gpr_op1(30),
      GPR_Op1(0) => gpr_op1(31),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(16) => gpr_op3(0),
      GPR_Op3(15) => gpr_op3(15),
      GPR_Op3(14) => gpr_op3(16),
      GPR_Op3(13) => gpr_op3(17),
      GPR_Op3(12) => gpr_op3(18),
      GPR_Op3(11) => gpr_op3(19),
      GPR_Op3(10) => gpr_op3(20),
      GPR_Op3(9) => gpr_op3(21),
      GPR_Op3(8) => gpr_op3(22),
      GPR_Op3(7) => gpr_op3(23),
      GPR_Op3(6) => gpr_op3(24),
      GPR_Op3(5) => gpr_op3(25),
      GPR_Op3(4) => gpr_op3(26),
      GPR_Op3(3) => gpr_op3(28),
      GPR_Op3(2) => gpr_op3(29),
      GPR_Op3(1) => gpr_op3(30),
      GPR_Op3(0) => gpr_op3(31),
      Hibernate => Hibernate,
      I041_out => \PreFetch_Buffer_I1/I041_out\,
      I1 => \exception_registers_I1/I1\,
      I139_out => \PreFetch_Buffer_I1/I139_out\,
      IReady => IReady,
      IReady_0 => IReady_0,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      LO => ex_alu_carry_32,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(35),
      \LOCKSTEP_Out_reg[3007]\(15) => wb_excep_return_addr(0),
      \LOCKSTEP_Out_reg[3007]\(14) => wb_excep_return_addr(1),
      \LOCKSTEP_Out_reg[3007]\(13) => wb_excep_return_addr(2),
      \LOCKSTEP_Out_reg[3007]\(12) => wb_excep_return_addr(3),
      \LOCKSTEP_Out_reg[3007]\(11) => wb_excep_return_addr(4),
      \LOCKSTEP_Out_reg[3007]\(10) => wb_excep_return_addr(5),
      \LOCKSTEP_Out_reg[3007]\(9) => wb_excep_return_addr(6),
      \LOCKSTEP_Out_reg[3007]\(8) => wb_excep_return_addr(7),
      \LOCKSTEP_Out_reg[3007]\(7) => wb_excep_return_addr(8),
      \LOCKSTEP_Out_reg[3007]\(6) => wb_excep_return_addr(9),
      \LOCKSTEP_Out_reg[3007]\(5) => wb_excep_return_addr(10),
      \LOCKSTEP_Out_reg[3007]\(4) => wb_excep_return_addr(11),
      \LOCKSTEP_Out_reg[3007]\(3) => wb_excep_return_addr(12),
      \LOCKSTEP_Out_reg[3007]\(2) => wb_excep_return_addr(13),
      \LOCKSTEP_Out_reg[3007]\(1) => wb_excep_return_addr(14),
      \LOCKSTEP_Out_reg[3007]\(0) => wb_excep_return_addr(15),
      \LOCKSTEP_Out_reg[3007]_0\ => \Use_DBUS.DAXI_Interface_I1_n_71\,
      \LOCKSTEP_Out_reg[3007]_1\ => Data_Flow_I_n_379,
      \LOCKSTEP_Out_reg[3008]\ => \Use_DBUS.DAXI_Interface_I1_n_70\,
      \LOCKSTEP_Out_reg[3008]_0\ => Data_Flow_I_n_378,
      \LOCKSTEP_Out_reg[3009]\ => \Use_DBUS.DAXI_Interface_I1_n_69\,
      \LOCKSTEP_Out_reg[3009]_0\ => Data_Flow_I_n_377,
      \LOCKSTEP_Out_reg[3010]\ => \Use_DBUS.DAXI_Interface_I1_n_68\,
      \LOCKSTEP_Out_reg[3010]_0\ => Data_Flow_I_n_376,
      \LOCKSTEP_Out_reg[3011]\ => \Use_DBUS.DAXI_Interface_I1_n_67\,
      \LOCKSTEP_Out_reg[3011]_0\ => Data_Flow_I_n_375,
      \LOCKSTEP_Out_reg[3012]\ => \Use_DBUS.DAXI_Interface_I1_n_66\,
      \LOCKSTEP_Out_reg[3012]_0\ => Data_Flow_I_n_374,
      \LOCKSTEP_Out_reg[3013]\ => \Use_DBUS.DAXI_Interface_I1_n_65\,
      \LOCKSTEP_Out_reg[3013]_0\ => Data_Flow_I_n_373,
      \LOCKSTEP_Out_reg[3014]\ => \Use_DBUS.DAXI_Interface_I1_n_64\,
      \LOCKSTEP_Out_reg[3014]_0\ => Data_Flow_I_n_372,
      \LOCKSTEP_Out_reg[3015]\ => \Use_DBUS.DAXI_Interface_I1_n_63\,
      \LOCKSTEP_Out_reg[3015]_0\ => Data_Flow_I_n_371,
      \LOCKSTEP_Out_reg[3016]\ => \Use_DBUS.DAXI_Interface_I1_n_62\,
      \LOCKSTEP_Out_reg[3016]_0\ => Data_Flow_I_n_370,
      \LOCKSTEP_Out_reg[3017]\ => \Use_DBUS.DAXI_Interface_I1_n_61\,
      \LOCKSTEP_Out_reg[3017]_0\ => Data_Flow_I_n_369,
      \LOCKSTEP_Out_reg[3018]\ => \Use_DBUS.DAXI_Interface_I1_n_60\,
      \LOCKSTEP_Out_reg[3018]_0\ => Data_Flow_I_n_368,
      \LOCKSTEP_Out_reg[3019]\ => \Use_DBUS.DAXI_Interface_I1_n_59\,
      \LOCKSTEP_Out_reg[3019]_0\ => Data_Flow_I_n_367,
      \LOCKSTEP_Out_reg[3020]\ => \Use_DBUS.DAXI_Interface_I1_n_58\,
      \LOCKSTEP_Out_reg[3020]_0\ => Data_Flow_I_n_366,
      \LOCKSTEP_Out_reg[3021]\ => \Use_DBUS.DAXI_Interface_I1_n_57\,
      \LOCKSTEP_Out_reg[3021]_0\ => Data_Flow_I_n_365,
      \LOCKSTEP_Out_reg[3022]\ => \Use_DBUS.DAXI_Interface_I1_n_56\,
      \LOCKSTEP_Out_reg[3022]_0\ => Data_Flow_I_n_364,
      MEM_DAXI_Exception => MEM_DAXI_Exception,
      \MEM_DataBus_Addr_reg[0]_0\(65 downto 34) => \^d\(328 downto 297),
      \MEM_DataBus_Addr_reg[0]_0\(33) => \^d\(225),
      \MEM_DataBus_Addr_reg[0]_0\(32 downto 31) => \^d\(188 downto 187),
      \MEM_DataBus_Addr_reg[0]_0\(30 downto 15) => \^d\(153 downto 138),
      \MEM_DataBus_Addr_reg[0]_0\(14 downto 4) => \^d\(93 downto 83),
      \MEM_DataBus_Addr_reg[0]_0\(3 downto 0) => \^d\(81 downto 78),
      MEM_DataBus_Ready => MEM_DataBus_Ready,
      \MEM_DataBus_Write_Data_reg[0]\(31) => ex_op3(0),
      \MEM_DataBus_Write_Data_reg[0]\(30) => ex_op3(1),
      \MEM_DataBus_Write_Data_reg[0]\(29) => ex_op3(2),
      \MEM_DataBus_Write_Data_reg[0]\(28) => ex_op3(3),
      \MEM_DataBus_Write_Data_reg[0]\(27) => ex_op3(4),
      \MEM_DataBus_Write_Data_reg[0]\(26) => ex_op3(5),
      \MEM_DataBus_Write_Data_reg[0]\(25) => ex_op3(6),
      \MEM_DataBus_Write_Data_reg[0]\(24) => ex_op3(7),
      \MEM_DataBus_Write_Data_reg[0]\(23) => ex_op3(8),
      \MEM_DataBus_Write_Data_reg[0]\(22) => ex_op3(9),
      \MEM_DataBus_Write_Data_reg[0]\(21) => ex_op3(10),
      \MEM_DataBus_Write_Data_reg[0]\(20) => ex_op3(11),
      \MEM_DataBus_Write_Data_reg[0]\(19) => ex_op3(12),
      \MEM_DataBus_Write_Data_reg[0]\(18) => ex_op3(13),
      \MEM_DataBus_Write_Data_reg[0]\(17) => ex_op3(14),
      \MEM_DataBus_Write_Data_reg[0]\(16) => ex_op3(15),
      \MEM_DataBus_Write_Data_reg[0]\(15) => ex_op3(16),
      \MEM_DataBus_Write_Data_reg[0]\(14) => ex_op3(17),
      \MEM_DataBus_Write_Data_reg[0]\(13) => ex_op3(18),
      \MEM_DataBus_Write_Data_reg[0]\(12) => ex_op3(19),
      \MEM_DataBus_Write_Data_reg[0]\(11) => ex_op3(20),
      \MEM_DataBus_Write_Data_reg[0]\(10) => ex_op3(21),
      \MEM_DataBus_Write_Data_reg[0]\(9) => ex_op3(22),
      \MEM_DataBus_Write_Data_reg[0]\(8) => ex_op3(23),
      \MEM_DataBus_Write_Data_reg[0]\(7) => ex_op3(24),
      \MEM_DataBus_Write_Data_reg[0]\(6) => ex_op3(25),
      \MEM_DataBus_Write_Data_reg[0]\(5) => ex_op3(26),
      \MEM_DataBus_Write_Data_reg[0]\(4) => ex_op3(27),
      \MEM_DataBus_Write_Data_reg[0]\(3) => ex_op3(28),
      \MEM_DataBus_Write_Data_reg[0]\(2) => ex_op3(29),
      \MEM_DataBus_Write_Data_reg[0]\(1) => ex_op3(30),
      \MEM_DataBus_Write_Data_reg[0]\(0) => ex_op3(31),
      MEM_Sel_SPR_EAR => MEM_Sel_SPR_EAR,
      MEM_Sel_SPR_ESR => MEM_Sel_SPR_ESR,
      MEM_WB_Sel_Mem_PC => MEM_WB_Sel_Mem_PC,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_ARREADY_0 => Decode_I_n_315,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWREADY_0 => Decode_I_n_314,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_DP_WREADY_0 => Decode_I_n_313,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]\(0) => \Byte_Doublet_Handle_gti_I/p_0_in\,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      \Performance_Debug_Control.dbg_freeze_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\,
      \Performance_Debug_Control.dbg_state_nohalt_reg\(154 downto 120) => \^d\(363 downto 329),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(119 downto 104) => \^d\(296 downto 281),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(103 downto 96) => \^d\(272 downto 265),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(95 downto 94) => \^d\(263 downto 262),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(93 downto 62) => \^d\(257 downto 226),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(61 downto 29) => \^d\(186 downto 154),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(28 downto 23) => \^d\(121 downto 116),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(22 downto 7) => \^d\(109 downto 94),
      \Performance_Debug_Control.dbg_state_nohalt_reg\(6 downto 0) => \^d\(77 downto 71),
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(15) => Decode_I_n_274,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(14) => Decode_I_n_275,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(13) => Decode_I_n_276,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(12) => Decode_I_n_277,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(11) => Decode_I_n_278,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(10) => Decode_I_n_279,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(9) => Decode_I_n_280,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(8) => Decode_I_n_281,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(7) => Decode_I_n_282,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(6) => Decode_I_n_283,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(5) => Decode_I_n_284,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(4) => Decode_I_n_285,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(3) => Decode_I_n_286,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(2) => Decode_I_n_287,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(1) => Decode_I_n_288,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\(0) => Decode_I_n_289,
      \Performance_Debug_Control.ex_brki_hit_i_2\ => Decode_I_n_300,
      \Performance_Debug_Control.ex_brki_hit_i_2_0\(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_60\,
      Q(6) => ex_op2(22),
      Q(5) => ex_op2(23),
      Q(4) => ex_op2(25),
      Q(3) => Data_Flow_I_n_4,
      Q(2) => Data_Flow_I_n_5,
      Q(1) => Data_Flow_I_n_6,
      Q(0) => Data_Flow_I_n_7,
      \Q_reg[32]\ => Data_Flow_I_n_273,
      R => \Data_Flow_Logic_I/R\,
      \R_reg[32]\ => Data_Flow_I_n_272,
      SR(0) => \Barrel_Shifter_I/mem_left_shift0\,
      SRI => SRI,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Suspend => Suspend,
      Trace_WB_Jump_Taken_reg_0 => Data_Flow_I_n_295,
      \Use_Async_Reset.sync_reset_reg\(0) => \Using_Div_Unit.Div_unit_I1/reset_Q\,
      \Use_Async_Reset.sync_reset_reg_0\(0) => \Data_Flow_Logic_I/WB_MEM_Result0\,
      \Use_Async_Reset.sync_reset_reg_1\(0) => \exception_registers_I1/WB_BTR0\,
      \Use_HW_BS.mem_mux3_reg[29]\(31) => Data_Flow_I_n_8,
      \Use_HW_BS.mem_mux3_reg[29]\(30) => Data_Flow_I_n_9,
      \Use_HW_BS.mem_mux3_reg[29]\(29) => Data_Flow_I_n_10,
      \Use_HW_BS.mem_mux3_reg[29]\(28) => Data_Flow_I_n_11,
      \Use_HW_BS.mem_mux3_reg[29]\(27) => Data_Flow_I_n_12,
      \Use_HW_BS.mem_mux3_reg[29]\(26) => Data_Flow_I_n_13,
      \Use_HW_BS.mem_mux3_reg[29]\(25) => Data_Flow_I_n_14,
      \Use_HW_BS.mem_mux3_reg[29]\(24) => Data_Flow_I_n_15,
      \Use_HW_BS.mem_mux3_reg[29]\(23) => Data_Flow_I_n_16,
      \Use_HW_BS.mem_mux3_reg[29]\(22) => Data_Flow_I_n_17,
      \Use_HW_BS.mem_mux3_reg[29]\(21) => Data_Flow_I_n_18,
      \Use_HW_BS.mem_mux3_reg[29]\(20) => Data_Flow_I_n_19,
      \Use_HW_BS.mem_mux3_reg[29]\(19) => Data_Flow_I_n_20,
      \Use_HW_BS.mem_mux3_reg[29]\(18) => Data_Flow_I_n_21,
      \Use_HW_BS.mem_mux3_reg[29]\(17) => Data_Flow_I_n_22,
      \Use_HW_BS.mem_mux3_reg[29]\(16) => Data_Flow_I_n_23,
      \Use_HW_BS.mem_mux3_reg[29]\(15) => Data_Flow_I_n_24,
      \Use_HW_BS.mem_mux3_reg[29]\(14) => Data_Flow_I_n_25,
      \Use_HW_BS.mem_mux3_reg[29]\(13) => Data_Flow_I_n_26,
      \Use_HW_BS.mem_mux3_reg[29]\(12) => Data_Flow_I_n_27,
      \Use_HW_BS.mem_mux3_reg[29]\(11) => Data_Flow_I_n_28,
      \Use_HW_BS.mem_mux3_reg[29]\(10) => Data_Flow_I_n_29,
      \Use_HW_BS.mem_mux3_reg[29]\(9) => Data_Flow_I_n_30,
      \Use_HW_BS.mem_mux3_reg[29]\(8) => Data_Flow_I_n_31,
      \Use_HW_BS.mem_mux3_reg[29]\(7) => Data_Flow_I_n_32,
      \Use_HW_BS.mem_mux3_reg[29]\(6) => Data_Flow_I_n_33,
      \Use_HW_BS.mem_mux3_reg[29]\(5) => Data_Flow_I_n_34,
      \Use_HW_BS.mem_mux3_reg[29]\(4) => Data_Flow_I_n_35,
      \Use_HW_BS.mem_mux3_reg[29]\(3) => Data_Flow_I_n_36,
      \Use_HW_BS.mem_mux3_reg[29]\(2) => Data_Flow_I_n_37,
      \Use_HW_BS.mem_mux3_reg[29]\(1) => Data_Flow_I_n_38,
      \Use_HW_BS.mem_mux3_reg[29]\(0) => Data_Flow_I_n_39,
      \Using_FPGA.Native\(0) => of_predecode_raw(0),
      \Using_FPGA.Native_0\(0) => if_sel_input(3),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_10\ => Decode_I_n_327,
      \Using_FPGA.Native_11\ => Decode_I_n_328,
      \Using_FPGA.Native_12\ => Decode_I_n_329,
      \Using_FPGA.Native_13\ => Decode_I_n_330,
      \Using_FPGA.Native_14\ => Decode_I_n_331,
      \Using_FPGA.Native_15\ => Decode_I_n_332,
      \Using_FPGA.Native_16\ => Decode_I_n_333,
      \Using_FPGA.Native_17\ => Decode_I_n_334,
      \Using_FPGA.Native_18\ => Decode_I_n_335,
      \Using_FPGA.Native_19\ => Decode_I_n_336,
      \Using_FPGA.Native_2\ => Decode_I_n_296,
      \Using_FPGA.Native_20\ => Decode_I_n_337,
      \Using_FPGA.Native_21\ => Decode_I_n_338,
      \Using_FPGA.Native_22\ => Decode_I_n_339,
      \Using_FPGA.Native_23\ => Decode_I_n_340,
      \Using_FPGA.Native_24\ => Decode_I_n_341,
      \Using_FPGA.Native_25\ => Decode_I_n_342,
      \Using_FPGA.Native_26\ => Decode_I_n_343,
      \Using_FPGA.Native_27\ => Decode_I_n_344,
      \Using_FPGA.Native_28\ => Decode_I_n_345,
      \Using_FPGA.Native_29\(0) => \Operand_Select_I/of_op2_imm_addr\(27),
      \Using_FPGA.Native_3\ => Decode_I_n_301,
      \Using_FPGA.Native_30\ => Decode_I_n_435,
      \Using_FPGA.Native_31\ => Decode_I_n_476,
      \Using_FPGA.Native_32\ => Decode_I_n_478,
      \Using_FPGA.Native_33\ => Decode_I_n_480,
      \Using_FPGA.Native_34\ => Decode_I_n_481,
      \Using_FPGA.Native_35\ => Decode_I_n_484,
      \Using_FPGA.Native_36\ => Decode_I_n_485,
      \Using_FPGA.Native_37\ => Decode_I_n_486,
      \Using_FPGA.Native_38\ => Decode_I_n_487,
      \Using_FPGA.Native_39\ => Decode_I_n_488,
      \Using_FPGA.Native_4\ => Decode_I_n_321,
      \Using_FPGA.Native_40\ => Decode_I_n_489,
      \Using_FPGA.Native_41\ => Decode_I_n_490,
      \Using_FPGA.Native_42\(0) => \PreFetch_Buffer_I1/p_1_in50_in\,
      \Using_FPGA.Native_43\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\,
      \Using_FPGA.Native_44\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\,
      \Using_FPGA.Native_45\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_55\,
      \Using_FPGA.Native_46\ => Data_Flow_I_n_291,
      \Using_FPGA.Native_47\ => \^lockstep_master_out\(36),
      \Using_FPGA.Native_48\ => \^lockstep_master_out\(32),
      \Using_FPGA.Native_49\ => Data_Flow_I_n_120,
      \Using_FPGA.Native_5\ => Decode_I_n_322,
      \Using_FPGA.Native_50\ => Data_Flow_I_n_112,
      \Using_FPGA.Native_51\ => Data_Flow_I_n_383,
      \Using_FPGA.Native_52\ => Data_Flow_I_n_110,
      \Using_FPGA.Native_53\ => Data_Flow_I_n_118,
      \Using_FPGA.Native_54\ => Data_Flow_I_n_121,
      \Using_FPGA.Native_55\ => Data_Flow_I_n_119,
      \Using_FPGA.Native_56\ => Data_Flow_I_n_111,
      \Using_FPGA.Native_57\ => Data_Flow_I_n_113,
      \Using_FPGA.Native_58\ => Data_Flow_I_n_107,
      \Using_FPGA.Native_59\(0) => ex_op1_neg,
      \Using_FPGA.Native_6\ => Decode_I_n_323,
      \Using_FPGA.Native_7\ => Decode_I_n_324,
      \Using_FPGA.Native_8\ => Decode_I_n_325,
      \Using_FPGA.Native_9\ => Decode_I_n_326,
      \Using_FPGA.Native_i_3\ => Data_Flow_I_n_296,
      Y(0 to 31) => ib_data(0 to 31),
      active_access => active_access,
      active_access_d1 => active_access_d1,
      active_access_reg => Decode_I_n_316,
      active_access_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_40\,
      \data_rd_reg_reg[15]\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_41\,
      dbg_clean_stop => dbg_clean_stop,
      dbg_halt_reset_mode_reg => Decode_I_n_299,
      dbg_stop_i => dbg_stop_i,
      div_busy_reg(0) => Decode_I_n_495,
      ex_Enable_Sext_Shift => ex_Enable_Sext_Shift,
      ex_Interrupt_Brk_combo_reg_0 => Decode_I_n_272,
      ex_Interrupt_Brk_combo_reg_1 => Data_Flow_I_n_294,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_MSR(0) => ex_MSR(23),
      ex_MSRCLR => ex_MSRCLR,
      ex_MSRSET => ex_MSRSET,
      ex_MTS_MSR => ex_MTS_MSR,
      ex_addr_low_bits(1) => ex_addr_low_bits(1),
      ex_addr_low_bits(0) => ex_addr_low_bits(2),
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_byte_access => ex_byte_access,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_div_unsigned => ex_div_unsigned,
      ex_doublet_access => ex_doublet_access,
      ex_is_bs_instr_I_reg_0 => \Barrel_Shifter_I/in00\,
      ex_jump_nodelay_reg_0 => \^lockstep_master_out\(38),
      ex_left_shift_i => \Barrel_Shifter_I/ex_left_shift_i\,
      ex_load_btr => ex_load_btr,
      ex_not_mul_op => ex_not_mul_op,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_reverse_mem_access => ex_reverse_mem_access,
      ex_sel_alu => ex_sel_alu,
      ex_sel_alu_i_reg_0(30) => \Operand_Select_I/of_op2\(0),
      ex_sel_alu_i_reg_0(29) => \Operand_Select_I/of_op2\(1),
      ex_sel_alu_i_reg_0(28) => \Operand_Select_I/of_op2\(2),
      ex_sel_alu_i_reg_0(27) => \Operand_Select_I/of_op2\(3),
      ex_sel_alu_i_reg_0(26) => \Operand_Select_I/of_op2\(4),
      ex_sel_alu_i_reg_0(25) => \Operand_Select_I/of_op2\(5),
      ex_sel_alu_i_reg_0(24) => \Operand_Select_I/of_op2\(6),
      ex_sel_alu_i_reg_0(23) => \Operand_Select_I/of_op2\(7),
      ex_sel_alu_i_reg_0(22) => \Operand_Select_I/of_op2\(8),
      ex_sel_alu_i_reg_0(21) => \Operand_Select_I/of_op2\(9),
      ex_sel_alu_i_reg_0(20) => \Operand_Select_I/of_op2\(10),
      ex_sel_alu_i_reg_0(19) => \Operand_Select_I/of_op2\(11),
      ex_sel_alu_i_reg_0(18) => \Operand_Select_I/of_op2\(12),
      ex_sel_alu_i_reg_0(17) => \Operand_Select_I/of_op2\(13),
      ex_sel_alu_i_reg_0(16) => \Operand_Select_I/of_op2\(14),
      ex_sel_alu_i_reg_0(15) => \Operand_Select_I/of_op2\(15),
      ex_sel_alu_i_reg_0(14) => \Operand_Select_I/of_op2\(16),
      ex_sel_alu_i_reg_0(13) => \Operand_Select_I/of_op2\(17),
      ex_sel_alu_i_reg_0(12) => \Operand_Select_I/of_op2\(18),
      ex_sel_alu_i_reg_0(11) => \Operand_Select_I/of_op2\(19),
      ex_sel_alu_i_reg_0(10) => \Operand_Select_I/of_op2\(20),
      ex_sel_alu_i_reg_0(9) => \Operand_Select_I/of_op2\(21),
      ex_sel_alu_i_reg_0(8) => \Operand_Select_I/of_op2\(22),
      ex_sel_alu_i_reg_0(7) => \Operand_Select_I/of_op2\(23),
      ex_sel_alu_i_reg_0(6) => \Operand_Select_I/of_op2\(24),
      ex_sel_alu_i_reg_0(5) => \Operand_Select_I/of_op2\(25),
      ex_sel_alu_i_reg_0(4) => \Operand_Select_I/of_op2\(26),
      ex_sel_alu_i_reg_0(3) => \Operand_Select_I/of_op2\(28),
      ex_sel_alu_i_reg_0(2) => \Operand_Select_I/of_op2\(29),
      ex_sel_alu_i_reg_0(1) => \Operand_Select_I/of_op2\(30),
      ex_sel_alu_i_reg_0(0) => \Operand_Select_I/of_op2\(31),
      ex_sel_alu_i_reg_1(16) => \Operand_Select_I/of_op3\(0),
      ex_sel_alu_i_reg_1(15) => \Operand_Select_I/of_op3\(15),
      ex_sel_alu_i_reg_1(14) => \Operand_Select_I/of_op3\(16),
      ex_sel_alu_i_reg_1(13) => \Operand_Select_I/of_op3\(17),
      ex_sel_alu_i_reg_1(12) => \Operand_Select_I/of_op3\(18),
      ex_sel_alu_i_reg_1(11) => \Operand_Select_I/of_op3\(19),
      ex_sel_alu_i_reg_1(10) => \Operand_Select_I/of_op3\(20),
      ex_sel_alu_i_reg_1(9) => \Operand_Select_I/of_op3\(21),
      ex_sel_alu_i_reg_1(8) => \Operand_Select_I/of_op3\(22),
      ex_sel_alu_i_reg_1(7) => \Operand_Select_I/of_op3\(23),
      ex_sel_alu_i_reg_1(6) => \Operand_Select_I/of_op3\(24),
      ex_sel_alu_i_reg_1(5) => \Operand_Select_I/of_op3\(25),
      ex_sel_alu_i_reg_1(4) => \Operand_Select_I/of_op3\(26),
      ex_sel_alu_i_reg_1(3) => \Operand_Select_I/of_op3\(28),
      ex_sel_alu_i_reg_1(2) => \Operand_Select_I/of_op3\(29),
      ex_sel_alu_i_reg_1(1) => \Operand_Select_I/of_op3\(30),
      ex_sel_alu_i_reg_1(0) => \Operand_Select_I/of_op3\(31),
      ex_sel_alu_i_reg_2(16) => \Operand_Select_I/I0\,
      ex_sel_alu_i_reg_2(15) => Decode_I_n_396,
      ex_sel_alu_i_reg_2(14) => Decode_I_n_397,
      ex_sel_alu_i_reg_2(13) => Decode_I_n_398,
      ex_sel_alu_i_reg_2(12) => Decode_I_n_399,
      ex_sel_alu_i_reg_2(11) => Decode_I_n_400,
      ex_sel_alu_i_reg_2(10) => Decode_I_n_401,
      ex_sel_alu_i_reg_2(9) => Decode_I_n_402,
      ex_sel_alu_i_reg_2(8) => Decode_I_n_403,
      ex_sel_alu_i_reg_2(7) => Decode_I_n_404,
      ex_sel_alu_i_reg_2(6) => Decode_I_n_405,
      ex_sel_alu_i_reg_2(5) => Decode_I_n_406,
      ex_sel_alu_i_reg_2(4) => Decode_I_n_407,
      ex_sel_alu_i_reg_2(3) => Decode_I_n_408,
      ex_sel_alu_i_reg_2(2) => Decode_I_n_409,
      ex_sel_alu_i_reg_2(1) => Decode_I_n_410,
      ex_sel_alu_i_reg_2(0) => Decode_I_n_411,
      ex_start_div => ex_start_div,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_swap_instr => ex_swap_instr,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      ex_valid => ex_valid,
      ex_valid_reg_0 => Decode_I_n_291,
      ex_void_bit => \Barrel_Shifter_I/ex_void_bit\,
      if_fetch_in_progress_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\,
      if_missed_fetch => if_missed_fetch,
      if_missed_fetch_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_52\,
      if_missed_fetch_reg_1 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\,
      \if_pc_reg[30]\(1) => ex_alu_result(30),
      \if_pc_reg[30]\(0) => ex_alu_result(31),
      \in\(1) => IUE,
      \in\(0) => \PreFetch_Buffer_I1/p_0_in49_in\,
      in0 => Decode_I_n_436,
      interrupt_address_d1(0 to 31) => interrupt_address_d1(0 to 31),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      mb_halted_1_reg => \Use_Debug_Logic.Master_Core.Debug_Perf_n_45\,
      mem_Exception_Taken => mem_Exception_Taken,
      mem_MSR(1) => mem_MSR(23),
      mem_MSR(0) => mem_MSR(30),
      mem_byte_access => mem_byte_access,
      mem_byte_access_i_reg_0(0) => Decode_I_n_475,
      mem_databus_access => mem_databus_access,
      mem_databus_read => mem_databus_read,
      mem_databus_write => mem_databus_write,
      mem_div_overflow => mem_div_overflow,
      mem_div_stall_i_reg => \^mem_div_stall_i_reg\(0),
      mem_doublet_access => mem_doublet_access,
      mem_exception_from_ex => mem_exception_from_ex,
      \mem_pc_i_reg[0]\(31) => MEM_PC(0),
      \mem_pc_i_reg[0]\(30) => MEM_PC(1),
      \mem_pc_i_reg[0]\(29) => MEM_PC(2),
      \mem_pc_i_reg[0]\(28) => MEM_PC(3),
      \mem_pc_i_reg[0]\(27) => MEM_PC(4),
      \mem_pc_i_reg[0]\(26) => MEM_PC(5),
      \mem_pc_i_reg[0]\(25) => MEM_PC(6),
      \mem_pc_i_reg[0]\(24) => MEM_PC(7),
      \mem_pc_i_reg[0]\(23) => MEM_PC(8),
      \mem_pc_i_reg[0]\(22) => MEM_PC(9),
      \mem_pc_i_reg[0]\(21) => MEM_PC(10),
      \mem_pc_i_reg[0]\(20) => MEM_PC(11),
      \mem_pc_i_reg[0]\(19) => MEM_PC(12),
      \mem_pc_i_reg[0]\(18) => MEM_PC(13),
      \mem_pc_i_reg[0]\(17) => MEM_PC(14),
      \mem_pc_i_reg[0]\(16) => MEM_PC(15),
      \mem_pc_i_reg[0]\(15) => MEM_PC(16),
      \mem_pc_i_reg[0]\(14) => MEM_PC(17),
      \mem_pc_i_reg[0]\(13) => MEM_PC(18),
      \mem_pc_i_reg[0]\(12) => MEM_PC(19),
      \mem_pc_i_reg[0]\(11) => MEM_PC(20),
      \mem_pc_i_reg[0]\(10) => MEM_PC(21),
      \mem_pc_i_reg[0]\(9) => MEM_PC(22),
      \mem_pc_i_reg[0]\(8) => MEM_PC(23),
      \mem_pc_i_reg[0]\(7) => MEM_PC(24),
      \mem_pc_i_reg[0]\(6) => MEM_PC(25),
      \mem_pc_i_reg[0]\(5) => MEM_PC(26),
      \mem_pc_i_reg[0]\(4) => MEM_PC(27),
      \mem_pc_i_reg[0]\(3) => MEM_PC(28),
      \mem_pc_i_reg[0]\(2) => MEM_PC(29),
      \mem_pc_i_reg[0]\(1) => MEM_PC(30),
      \mem_pc_i_reg[0]\(0) => MEM_PC(31),
      \mem_pc_i_reg[0]_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_46\,
      mem_reverse_byteorder => \Byte_Doublet_Handle_gti_I/mem_reverse_byteorder\,
      mem_sel_msr => mem_sel_msr,
      of_MSR(2) => of_MSR(22),
      of_MSR(1) => of_MSR(28),
      of_MSR(0) => of_MSR(30),
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      of_op2_sel(0 to 1) => of_op2_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      of_pause => of_pause,
      of_pause_reg_0 => \^e\(0),
      \out\ => Data_Flow_I_n_40,
      restore_wb_msr_to_ex => \msr_reg_i/restore_wb_msr_to_ex\,
      sync_reset => sync_reset,
      wakeup_i(0 to 1) => wakeup_i(0 to 1),
      wb_Halted => wb_Halted,
      wb_PipeRun_i_reg_0(0) => wb_piperun,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg_0(0) => WB_ESR_i0,
      \wb_exception_kind_i_reg[28]_0\ => Decode_I_n_479,
      \wb_exception_kind_i_reg[28]_1\ => Decode_I_n_482,
      \wb_exception_kind_i_reg[28]_2\ => Decode_I_n_483,
      \wb_exception_kind_i_reg[28]_3\(2) => \msr_reg_i/wb_MSR_cmb\(22),
      \wb_exception_kind_i_reg[28]_3\(1) => \msr_reg_i/wb_MSR_cmb\(23),
      \wb_exception_kind_i_reg[28]_3\(0) => \msr_reg_i/wb_MSR_cmb\(30),
      \wb_exception_kind_i_reg[29]_0\(0) => mem_exception_kind(29),
      \wb_exception_kind_i_reg[30]_0\(6) => \exception_registers_I1/WB_ESR_i\,
      \wb_exception_kind_i_reg[30]_0\(5) => wb_sw_instr,
      \wb_exception_kind_i_reg[30]_0\(4) => wb_new_esr_ess_rx(0),
      \wb_exception_kind_i_reg[30]_0\(3) => wb_new_esr_ess_rx(1),
      \wb_exception_kind_i_reg[30]_0\(2) => wb_new_esr_ess_rx(2),
      \wb_exception_kind_i_reg[30]_0\(1) => wb_new_esr_ess_rx(3),
      \wb_exception_kind_i_reg[30]_0\(0) => wb_new_esr_ess_rx(4),
      \wb_exception_kind_i_reg[31]_0\ => Data_Flow_I_n_297,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_ie_rising0 => wb_ie_rising0,
      wb_load_esr => wb_load_esr,
      wb_pc_valid => wb_pc_valid,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1,
      wb_valid_reg_0 => Decode_I_n_269
    );
\Use_DBUS.DAXI_Interface_I1\: entity work.mb_design_microblaze_0_1_DAXI_interface
     port map (
      Clk => Clk,
      D(2) => \^d\(225),
      D(1 downto 0) => \^d\(188 downto 187),
      DReady => DReady,
      \LOCKSTEP_Out_reg[3007]\(31) => wb_dlmb_valid_read_data(0),
      \LOCKSTEP_Out_reg[3007]\(30) => wb_dlmb_valid_read_data(1),
      \LOCKSTEP_Out_reg[3007]\(29) => wb_dlmb_valid_read_data(2),
      \LOCKSTEP_Out_reg[3007]\(28) => wb_dlmb_valid_read_data(3),
      \LOCKSTEP_Out_reg[3007]\(27) => wb_dlmb_valid_read_data(4),
      \LOCKSTEP_Out_reg[3007]\(26) => wb_dlmb_valid_read_data(5),
      \LOCKSTEP_Out_reg[3007]\(25) => wb_dlmb_valid_read_data(6),
      \LOCKSTEP_Out_reg[3007]\(24) => wb_dlmb_valid_read_data(7),
      \LOCKSTEP_Out_reg[3007]\(23) => wb_dlmb_valid_read_data(8),
      \LOCKSTEP_Out_reg[3007]\(22) => wb_dlmb_valid_read_data(9),
      \LOCKSTEP_Out_reg[3007]\(21) => wb_dlmb_valid_read_data(10),
      \LOCKSTEP_Out_reg[3007]\(20) => wb_dlmb_valid_read_data(11),
      \LOCKSTEP_Out_reg[3007]\(19) => wb_dlmb_valid_read_data(12),
      \LOCKSTEP_Out_reg[3007]\(18) => wb_dlmb_valid_read_data(13),
      \LOCKSTEP_Out_reg[3007]\(17) => wb_dlmb_valid_read_data(14),
      \LOCKSTEP_Out_reg[3007]\(16) => wb_dlmb_valid_read_data(15),
      \LOCKSTEP_Out_reg[3007]\(15) => wb_dlmb_valid_read_data(16),
      \LOCKSTEP_Out_reg[3007]\(14) => wb_dlmb_valid_read_data(17),
      \LOCKSTEP_Out_reg[3007]\(13) => wb_dlmb_valid_read_data(18),
      \LOCKSTEP_Out_reg[3007]\(12) => wb_dlmb_valid_read_data(19),
      \LOCKSTEP_Out_reg[3007]\(11) => wb_dlmb_valid_read_data(20),
      \LOCKSTEP_Out_reg[3007]\(10) => wb_dlmb_valid_read_data(21),
      \LOCKSTEP_Out_reg[3007]\(9) => wb_dlmb_valid_read_data(22),
      \LOCKSTEP_Out_reg[3007]\(8) => wb_dlmb_valid_read_data(23),
      \LOCKSTEP_Out_reg[3007]\(7) => wb_dlmb_valid_read_data(24),
      \LOCKSTEP_Out_reg[3007]\(6) => wb_dlmb_valid_read_data(25),
      \LOCKSTEP_Out_reg[3007]\(5) => wb_dlmb_valid_read_data(26),
      \LOCKSTEP_Out_reg[3007]\(4) => wb_dlmb_valid_read_data(27),
      \LOCKSTEP_Out_reg[3007]\(3) => wb_dlmb_valid_read_data(28),
      \LOCKSTEP_Out_reg[3007]\(2) => wb_dlmb_valid_read_data(29),
      \LOCKSTEP_Out_reg[3007]\(1) => wb_dlmb_valid_read_data(30),
      \LOCKSTEP_Out_reg[3007]\(0) => wb_dlmb_valid_read_data(31),
      \LOCKSTEP_Out_reg[3034]\(1) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_sel\(0),
      \LOCKSTEP_Out_reg[3034]\(0) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_sel\(1),
      \LOCKSTEP_Out_reg[3034]_0\(0) => WB_BTR(27),
      MEM_DAXI_Exception => MEM_DAXI_Exception,
      MEM_DataBus_Ready => MEM_DataBus_Ready,
      M_AXI_DP_ARVALID_i_reg_0 => Decode_I_n_315,
      M_AXI_DP_AWVALID_i_reg_0 => Decode_I_n_314,
      M_AXI_DP_BRESP(0) => M_AXI_DP_BRESP(0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RRESP(0) => M_AXI_DP_RRESP(0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WVALID_i_reg_0 => Decode_I_n_313,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]\ => \Use_DBUS.DAXI_Interface_I1_n_8\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_0\ => \Use_DBUS.DAXI_Interface_I1_n_41\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_1\ => \Use_DBUS.DAXI_Interface_I1_n_42\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_2\ => \Use_DBUS.DAXI_Interface_I1_n_43\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_3\ => \Use_DBUS.DAXI_Interface_I1_n_44\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_4\ => \Use_DBUS.DAXI_Interface_I1_n_45\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_5\ => \Use_DBUS.DAXI_Interface_I1_n_46\,
      \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1]_6\ => \Use_DBUS.DAXI_Interface_I1_n_47\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg\ => \Use_DBUS.DAXI_Interface_I1_n_48\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0\ => \Use_DBUS.DAXI_Interface_I1_n_49\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1\ => \Use_DBUS.DAXI_Interface_I1_n_50\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2\ => \Use_DBUS.DAXI_Interface_I1_n_51\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3\ => \Use_DBUS.DAXI_Interface_I1_n_52\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4\ => \Use_DBUS.DAXI_Interface_I1_n_53\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5\ => \Use_DBUS.DAXI_Interface_I1_n_54\,
      \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6\ => \Use_DBUS.DAXI_Interface_I1_n_55\,
      Q(31) => wb_dext_read_data(0),
      Q(30) => wb_dext_read_data(1),
      Q(29) => wb_dext_read_data(2),
      Q(28) => wb_dext_read_data(3),
      Q(27) => wb_dext_read_data(4),
      Q(26) => wb_dext_read_data(5),
      Q(25) => wb_dext_read_data(6),
      Q(24) => wb_dext_read_data(7),
      Q(23) => wb_dext_read_data(8),
      Q(22) => wb_dext_read_data(9),
      Q(21) => wb_dext_read_data(10),
      Q(20) => wb_dext_read_data(11),
      Q(19) => wb_dext_read_data(12),
      Q(18) => wb_dext_read_data(13),
      Q(17) => wb_dext_read_data(14),
      Q(16) => wb_dext_read_data(15),
      Q(15) => wb_dext_read_data(16),
      Q(14) => wb_dext_read_data(17),
      Q(13) => wb_dext_read_data(18),
      Q(12) => wb_dext_read_data(19),
      Q(11) => wb_dext_read_data(20),
      Q(10) => wb_dext_read_data(21),
      Q(9) => wb_dext_read_data(22),
      Q(8) => wb_dext_read_data(23),
      Q(7) => wb_dext_read_data(24),
      Q(6) => wb_dext_read_data(25),
      Q(5) => wb_dext_read_data(26),
      Q(4) => wb_dext_read_data(27),
      Q(3) => wb_dext_read_data(28),
      Q(2) => wb_dext_read_data(29),
      Q(1) => wb_dext_read_data(30),
      Q(0) => wb_dext_read_data(31),
      \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ => \Use_DBUS.DAXI_Interface_I1_n_63\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ => \Use_DBUS.DAXI_Interface_I1_n_62\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ => \Use_DBUS.DAXI_Interface_I1_n_61\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ => \Use_DBUS.DAXI_Interface_I1_n_60\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ => \Use_DBUS.DAXI_Interface_I1_n_59\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ => \Use_DBUS.DAXI_Interface_I1_n_58\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ => \Use_DBUS.DAXI_Interface_I1_n_57\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ => \Use_DBUS.DAXI_Interface_I1_n_56\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ => \Use_DBUS.DAXI_Interface_I1_n_71\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ => \Use_DBUS.DAXI_Interface_I1_n_70\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ => \Use_DBUS.DAXI_Interface_I1_n_69\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ => \Use_DBUS.DAXI_Interface_I1_n_68\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ => \Use_DBUS.DAXI_Interface_I1_n_67\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ => \Use_DBUS.DAXI_Interface_I1_n_66\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ => \Use_DBUS.DAXI_Interface_I1_n_65\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ => \Use_DBUS.DAXI_Interface_I1_n_64\,
      active_access => active_access,
      active_access_d1 => active_access_d1,
      active_access_reg_0 => Decode_I_n_316,
      mem_databus_access => mem_databus_access,
      mem_daxi_exception_i_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_40\,
      sync_reset => sync_reset,
      wb_databus_read_data(0 to 31) => wb_databus_read_data(0 to 31),
      wb_dext_Data_Strobe => wb_dext_Data_Strobe,
      wb_read_lsb_1_sel(0) => \Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel\(0),
      wb_read_msb_doublet_sel => \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel\
    );
\Use_DLMB.Using_Latch_AS_Logic.AND2B1L_I1\: entity work.mb_design_microblaze_0_1_MB_AND2B1L
     port map (
      D(0) => \^d\(264),
      E(0) => \^mem_div_stall_i_reg\(0),
      SRI => SRI
    );
\Use_DLMB.wb_dlmb_valid_read_data[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sync_reset,
      I1 => DReady,
      O => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(0),
      Q => wb_dlmb_valid_read_data(0),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(10),
      Q => wb_dlmb_valid_read_data(10),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(11),
      Q => wb_dlmb_valid_read_data(11),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(12),
      Q => wb_dlmb_valid_read_data(12),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(13),
      Q => wb_dlmb_valid_read_data(13),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(14),
      Q => wb_dlmb_valid_read_data(14),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(15),
      Q => wb_dlmb_valid_read_data(15),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(16),
      Q => wb_dlmb_valid_read_data(16),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(17),
      Q => wb_dlmb_valid_read_data(17),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(18),
      Q => wb_dlmb_valid_read_data(18),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(19),
      Q => wb_dlmb_valid_read_data(19),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(1),
      Q => wb_dlmb_valid_read_data(1),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(20),
      Q => wb_dlmb_valid_read_data(20),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(21),
      Q => wb_dlmb_valid_read_data(21),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(22),
      Q => wb_dlmb_valid_read_data(22),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(23),
      Q => wb_dlmb_valid_read_data(23),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(24),
      Q => wb_dlmb_valid_read_data(24),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(25),
      Q => wb_dlmb_valid_read_data(25),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(26),
      Q => wb_dlmb_valid_read_data(26),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(27),
      Q => wb_dlmb_valid_read_data(27),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(28),
      Q => wb_dlmb_valid_read_data(28),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(29),
      Q => wb_dlmb_valid_read_data(29),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(2),
      Q => wb_dlmb_valid_read_data(2),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(30),
      Q => wb_dlmb_valid_read_data(30),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(31),
      Q => wb_dlmb_valid_read_data(31),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(3),
      Q => wb_dlmb_valid_read_data(3),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(4),
      Q => wb_dlmb_valid_read_data(4),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(5),
      Q => wb_dlmb_valid_read_data(5),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(6),
      Q => wb_dlmb_valid_read_data(6),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(7),
      Q => wb_dlmb_valid_read_data(7),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(8),
      Q => wb_dlmb_valid_read_data(8),
      R => wb_dlmb_valid_read_data0
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(9),
      Q => wb_dlmb_valid_read_data(9),
      R => wb_dlmb_valid_read_data0
    );
\Use_Debug_Logic.Master_Core.Debug_Perf\: entity work.mb_design_microblaze_0_1_Debug
     port map (
      Address(0 to 31) => of_pc(0 to 31),
      Clk => Clk,
      D(4 downto 3) => \^d\(363 downto 362),
      D(2) => \^d\(154),
      D(1) => \^d\(77),
      D(0) => \^d\(71),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[1]_0\ => \Dbg_Reg_En[1]_0\,
      Dbg_Reg_En_1_sp_1 => Dbg_Reg_En_1_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_0,
      Dbg_TDO_1 => Dbg_TDO_1,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      IReady => IReady,
      IReady_0 => IReady_0,
      LOCKSTEP_Master_Out(39 downto 35) => \^lockstep_master_out\(40 downto 36),
      LOCKSTEP_Master_Out(34 downto 0) => \^lockstep_master_out\(34 downto 0),
      Pause => Pause,
      \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_46\,
      \Performance_Debug_Control.dbg_freeze_nohalt_reg_1\ => Decode_I_n_299,
      \Performance_Debug_Control.dbg_state_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_45\,
      \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\,
      \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\,
      \Performance_Debug_Control.ex_brki_hit_reg_0\ => Decode_I_n_300,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_55\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => Decode_I_n_272,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => Decode_I_n_301,
      \Performance_Debug_Control.m0_dbg_hit_reg[1]_0\ => \^using_fpga.native\,
      \Performance_Debug_Control.wb_brki_hit_reg_0\ => \^mem_div_stall_i_reg\(0),
      Q(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_60\,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Serial_Dbg_Intf.force_stop_cmd_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_40\,
      \Serial_Dbg_Intf.if_debug_ready_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_52\,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Status_Reg_En => Status_Reg_En,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\,
      \data_rd_reg_reg[0]_0\(31) => Decode_I_n_274,
      \data_rd_reg_reg[0]_0\(30) => Decode_I_n_275,
      \data_rd_reg_reg[0]_0\(29) => Decode_I_n_276,
      \data_rd_reg_reg[0]_0\(28) => Decode_I_n_277,
      \data_rd_reg_reg[0]_0\(27) => Decode_I_n_278,
      \data_rd_reg_reg[0]_0\(26) => Decode_I_n_279,
      \data_rd_reg_reg[0]_0\(25) => Decode_I_n_280,
      \data_rd_reg_reg[0]_0\(24) => Decode_I_n_281,
      \data_rd_reg_reg[0]_0\(23) => Decode_I_n_282,
      \data_rd_reg_reg[0]_0\(22) => Decode_I_n_283,
      \data_rd_reg_reg[0]_0\(21) => Decode_I_n_284,
      \data_rd_reg_reg[0]_0\(20) => Decode_I_n_285,
      \data_rd_reg_reg[0]_0\(19) => Decode_I_n_286,
      \data_rd_reg_reg[0]_0\(18) => Decode_I_n_287,
      \data_rd_reg_reg[0]_0\(17) => Decode_I_n_288,
      \data_rd_reg_reg[0]_0\(16) => Decode_I_n_289,
      \data_rd_reg_reg[0]_0\(15) => Data_Flow_I_n_275,
      \data_rd_reg_reg[0]_0\(14) => Data_Flow_I_n_276,
      \data_rd_reg_reg[0]_0\(13) => Data_Flow_I_n_277,
      \data_rd_reg_reg[0]_0\(12) => Data_Flow_I_n_278,
      \data_rd_reg_reg[0]_0\(11) => Data_Flow_I_n_279,
      \data_rd_reg_reg[0]_0\(10) => Data_Flow_I_n_280,
      \data_rd_reg_reg[0]_0\(9) => Data_Flow_I_n_281,
      \data_rd_reg_reg[0]_0\(8) => Data_Flow_I_n_282,
      \data_rd_reg_reg[0]_0\(7) => Data_Flow_I_n_283,
      \data_rd_reg_reg[0]_0\(6) => Data_Flow_I_n_284,
      \data_rd_reg_reg[0]_0\(5) => Data_Flow_I_n_285,
      \data_rd_reg_reg[0]_0\(4) => Data_Flow_I_n_286,
      \data_rd_reg_reg[0]_0\(3) => Data_Flow_I_n_287,
      \data_rd_reg_reg[0]_0\(2) => Data_Flow_I_n_288,
      \data_rd_reg_reg[0]_0\(1) => Data_Flow_I_n_289,
      \data_rd_reg_reg[0]_0\(0) => Data_Flow_I_n_290,
      dbg_clean_stop => dbg_clean_stop,
      dbg_halt_reset_mode_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\,
      dbg_stop_i => dbg_stop_i,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_valid => ex_valid,
      executing_reg_0 => Decode_I_n_269,
      if_missed_fetch => if_missed_fetch,
      mem_Exception_Taken => mem_Exception_Taken,
      mem_databus_access => mem_databus_access,
      of_pause => of_pause,
      read_register_MSR_1_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_41\,
      single_Step_N_reg_0 => \^e\(0),
      sleep_reset_mode_reg_0 => sleep_reset_mode_reg,
      sync_reset => sync_reset,
      wb_Halted => wb_Halted,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_pc_valid => wb_pc_valid,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1
    );
\Using_FPGA.Native_i_15__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => Data_Flow_I_n_8,
      I1 => ex_op2(0),
      O => \Using_FPGA.Native_i_15__0_n_0\
    );
\WB_EAR[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => MEM_Sel_SPR_EAR,
      O => \exception_registers_I1/WB_EAR0\
    );
\WB_ESR[19]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => MEM_Sel_SPR_ESR,
      O => \exception_registers_I1/WB_ESR0\
    );
instr_mux_I: entity work.mb_design_microblaze_0_1_instr_mux
     port map (
      I041_out => \PreFetch_Buffer_I1/I041_out\,
      I139_out => \PreFetch_Buffer_I1/I139_out\,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(32) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(31 downto 0) => \^lockstep_master_out\(31 downto 0),
      \Using_FPGA.Native\ => Decode_I_n_296,
      \Using_FPGA.Native_0\(0) => of_predecode_raw(0),
      \Using_FPGA.Native_1\(0) => if_sel_input(3),
      \Using_FPGA.Native_2\(0) => \PreFetch_Buffer_I1/p_1_in50_in\,
      Y(0 to 31) => ib_data(0 to 31),
      \in\(0) => \PreFetch_Buffer_I1/p_0_in49_in\
    );
\interrupt_address_d1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(0),
      Q => interrupt_address_d1(0),
      R => '0'
    );
\interrupt_address_d1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(10),
      Q => interrupt_address_d1(10),
      R => '0'
    );
\interrupt_address_d1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(11),
      Q => interrupt_address_d1(11),
      R => '0'
    );
\interrupt_address_d1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(12),
      Q => interrupt_address_d1(12),
      R => '0'
    );
\interrupt_address_d1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(13),
      Q => interrupt_address_d1(13),
      R => '0'
    );
\interrupt_address_d1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(14),
      Q => interrupt_address_d1(14),
      R => '0'
    );
\interrupt_address_d1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(15),
      Q => interrupt_address_d1(15),
      R => '0'
    );
\interrupt_address_d1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(16),
      Q => interrupt_address_d1(16),
      R => '0'
    );
\interrupt_address_d1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(17),
      Q => interrupt_address_d1(17),
      R => '0'
    );
\interrupt_address_d1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(18),
      Q => interrupt_address_d1(18),
      R => '0'
    );
\interrupt_address_d1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(19),
      Q => interrupt_address_d1(19),
      R => '0'
    );
\interrupt_address_d1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(1),
      Q => interrupt_address_d1(1),
      R => '0'
    );
\interrupt_address_d1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(20),
      Q => interrupt_address_d1(20),
      R => '0'
    );
\interrupt_address_d1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(21),
      Q => interrupt_address_d1(21),
      R => '0'
    );
\interrupt_address_d1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(22),
      Q => interrupt_address_d1(22),
      R => '0'
    );
\interrupt_address_d1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(23),
      Q => interrupt_address_d1(23),
      R => '0'
    );
\interrupt_address_d1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(24),
      Q => interrupt_address_d1(24),
      R => '0'
    );
\interrupt_address_d1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(25),
      Q => interrupt_address_d1(25),
      R => '0'
    );
\interrupt_address_d1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(26),
      Q => interrupt_address_d1(26),
      R => '0'
    );
\interrupt_address_d1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(27),
      Q => interrupt_address_d1(27),
      R => '0'
    );
\interrupt_address_d1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(28),
      Q => interrupt_address_d1(28),
      R => '0'
    );
\interrupt_address_d1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(29),
      Q => interrupt_address_d1(29),
      R => '0'
    );
\interrupt_address_d1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(2),
      Q => interrupt_address_d1(2),
      R => '0'
    );
\interrupt_address_d1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(30),
      Q => interrupt_address_d1(30),
      R => '0'
    );
\interrupt_address_d1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(31),
      Q => interrupt_address_d1(31),
      R => '0'
    );
\interrupt_address_d1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(3),
      Q => interrupt_address_d1(3),
      R => '0'
    );
\interrupt_address_d1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(4),
      Q => interrupt_address_d1(4),
      R => '0'
    );
\interrupt_address_d1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(5),
      Q => interrupt_address_d1(5),
      R => '0'
    );
\interrupt_address_d1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(6),
      Q => interrupt_address_d1(6),
      R => '0'
    );
\interrupt_address_d1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(7),
      Q => interrupt_address_d1(7),
      R => '0'
    );
\interrupt_address_d1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(8),
      Q => interrupt_address_d1(8),
      R => '0'
    );
\interrupt_address_d1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(9),
      Q => interrupt_address_d1(9),
      R => '0'
    );
read_data_mux_I: entity work.mb_design_microblaze_0_1_read_data_mux
     port map (
      Q(31) => wb_dlmb_valid_read_data(0),
      Q(30) => wb_dlmb_valid_read_data(1),
      Q(29) => wb_dlmb_valid_read_data(2),
      Q(28) => wb_dlmb_valid_read_data(3),
      Q(27) => wb_dlmb_valid_read_data(4),
      Q(26) => wb_dlmb_valid_read_data(5),
      Q(25) => wb_dlmb_valid_read_data(6),
      Q(24) => wb_dlmb_valid_read_data(7),
      Q(23) => wb_dlmb_valid_read_data(8),
      Q(22) => wb_dlmb_valid_read_data(9),
      Q(21) => wb_dlmb_valid_read_data(10),
      Q(20) => wb_dlmb_valid_read_data(11),
      Q(19) => wb_dlmb_valid_read_data(12),
      Q(18) => wb_dlmb_valid_read_data(13),
      Q(17) => wb_dlmb_valid_read_data(14),
      Q(16) => wb_dlmb_valid_read_data(15),
      Q(15) => wb_dlmb_valid_read_data(16),
      Q(14) => wb_dlmb_valid_read_data(17),
      Q(13) => wb_dlmb_valid_read_data(18),
      Q(12) => wb_dlmb_valid_read_data(19),
      Q(11) => wb_dlmb_valid_read_data(20),
      Q(10) => wb_dlmb_valid_read_data(21),
      Q(9) => wb_dlmb_valid_read_data(22),
      Q(8) => wb_dlmb_valid_read_data(23),
      Q(7) => wb_dlmb_valid_read_data(24),
      Q(6) => wb_dlmb_valid_read_data(25),
      Q(5) => wb_dlmb_valid_read_data(26),
      Q(4) => wb_dlmb_valid_read_data(27),
      Q(3) => wb_dlmb_valid_read_data(28),
      Q(2) => wb_dlmb_valid_read_data(29),
      Q(1) => wb_dlmb_valid_read_data(30),
      Q(0) => wb_dlmb_valid_read_data(31),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(31) => wb_dext_read_data(0),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(30) => wb_dext_read_data(1),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(29) => wb_dext_read_data(2),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(28) => wb_dext_read_data(3),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(27) => wb_dext_read_data(4),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(26) => wb_dext_read_data(5),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(25) => wb_dext_read_data(6),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(24) => wb_dext_read_data(7),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(23) => wb_dext_read_data(8),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(22) => wb_dext_read_data(9),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(21) => wb_dext_read_data(10),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(20) => wb_dext_read_data(11),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(19) => wb_dext_read_data(12),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(18) => wb_dext_read_data(13),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(17) => wb_dext_read_data(14),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(16) => wb_dext_read_data(15),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(15) => wb_dext_read_data(16),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(14) => wb_dext_read_data(17),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(13) => wb_dext_read_data(18),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(12) => wb_dext_read_data(19),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(11) => wb_dext_read_data(20),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(10) => wb_dext_read_data(21),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(9) => wb_dext_read_data(22),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(8) => wb_dext_read_data(23),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(7) => wb_dext_read_data(24),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(6) => wb_dext_read_data(25),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(5) => wb_dext_read_data(26),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(4) => wb_dext_read_data(27),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(3) => wb_dext_read_data(28),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(2) => wb_dext_read_data(29),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(1) => wb_dext_read_data(30),
      \Trace_New_Reg_Value[16]_INST_0_i_1\(0) => wb_dext_read_data(31),
      wb_databus_read_data(0 to 31) => wb_databus_read_data(0 to 31),
      wb_dext_Data_Strobe => wb_dext_Data_Strobe
    );
trace_data_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => mem_databus_access,
      Q => \^d\(2),
      R => '0'
    );
\trace_data_address_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(257),
      Q => \^d\(70),
      R => '0'
    );
\trace_data_address_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(247),
      Q => \^d\(60),
      R => '0'
    );
\trace_data_address_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(246),
      Q => \^d\(59),
      R => '0'
    );
\trace_data_address_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(245),
      Q => \^d\(58),
      R => '0'
    );
\trace_data_address_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(244),
      Q => \^d\(57),
      R => '0'
    );
\trace_data_address_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(243),
      Q => \^d\(56),
      R => '0'
    );
\trace_data_address_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(242),
      Q => \^d\(55),
      R => '0'
    );
\trace_data_address_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(241),
      Q => \^d\(54),
      R => '0'
    );
\trace_data_address_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(240),
      Q => \^d\(53),
      R => '0'
    );
\trace_data_address_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(239),
      Q => \^d\(52),
      R => '0'
    );
\trace_data_address_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(238),
      Q => \^d\(51),
      R => '0'
    );
\trace_data_address_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(256),
      Q => \^d\(69),
      R => '0'
    );
\trace_data_address_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(237),
      Q => \^d\(50),
      R => '0'
    );
\trace_data_address_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(236),
      Q => \^d\(49),
      R => '0'
    );
\trace_data_address_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(235),
      Q => \^d\(48),
      R => '0'
    );
\trace_data_address_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(234),
      Q => \^d\(47),
      R => '0'
    );
\trace_data_address_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(233),
      Q => \^d\(46),
      R => '0'
    );
\trace_data_address_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(232),
      Q => \^d\(45),
      R => '0'
    );
\trace_data_address_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(231),
      Q => \^d\(44),
      R => '0'
    );
\trace_data_address_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(230),
      Q => \^d\(43),
      R => '0'
    );
\trace_data_address_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(229),
      Q => \^d\(42),
      R => '0'
    );
\trace_data_address_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(228),
      Q => \^d\(41),
      R => '0'
    );
\trace_data_address_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(255),
      Q => \^d\(68),
      R => '0'
    );
\trace_data_address_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(227),
      Q => \^d\(40),
      R => '0'
    );
\trace_data_address_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(226),
      Q => \^d\(39),
      R => '0'
    );
\trace_data_address_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(254),
      Q => \^d\(67),
      R => '0'
    );
\trace_data_address_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(253),
      Q => \^d\(66),
      R => '0'
    );
\trace_data_address_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(252),
      Q => \^d\(65),
      R => '0'
    );
\trace_data_address_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(251),
      Q => \^d\(64),
      R => '0'
    );
\trace_data_address_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(250),
      Q => \^d\(63),
      R => '0'
    );
\trace_data_address_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(249),
      Q => \^d\(62),
      R => '0'
    );
\trace_data_address_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(248),
      Q => \^d\(61),
      R => '0'
    );
\trace_data_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(192),
      Q => \^d\(6),
      R => '0'
    );
\trace_data_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(191),
      Q => \^d\(5),
      R => '0'
    );
\trace_data_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(190),
      Q => \^d\(4),
      R => '0'
    );
\trace_data_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(189),
      Q => \^d\(3),
      R => '0'
    );
trace_data_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => mem_databus_read,
      Q => \^d\(1),
      R => '0'
    );
trace_data_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => mem_databus_write,
      Q => \^d\(0),
      R => '0'
    );
\trace_data_write_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(224),
      Q => \^d\(38),
      R => '0'
    );
\trace_data_write_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(214),
      Q => \^d\(28),
      R => '0'
    );
\trace_data_write_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(213),
      Q => \^d\(27),
      R => '0'
    );
\trace_data_write_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(212),
      Q => \^d\(26),
      R => '0'
    );
\trace_data_write_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(211),
      Q => \^d\(25),
      R => '0'
    );
\trace_data_write_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(210),
      Q => \^d\(24),
      R => '0'
    );
\trace_data_write_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(209),
      Q => \^d\(23),
      R => '0'
    );
\trace_data_write_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(208),
      Q => \^d\(22),
      R => '0'
    );
\trace_data_write_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(207),
      Q => \^d\(21),
      R => '0'
    );
\trace_data_write_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(206),
      Q => \^d\(20),
      R => '0'
    );
\trace_data_write_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(205),
      Q => \^d\(19),
      R => '0'
    );
\trace_data_write_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(223),
      Q => \^d\(37),
      R => '0'
    );
\trace_data_write_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(204),
      Q => \^d\(18),
      R => '0'
    );
\trace_data_write_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(203),
      Q => \^d\(17),
      R => '0'
    );
\trace_data_write_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(202),
      Q => \^d\(16),
      R => '0'
    );
\trace_data_write_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(201),
      Q => \^d\(15),
      R => '0'
    );
\trace_data_write_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(200),
      Q => \^d\(14),
      R => '0'
    );
\trace_data_write_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(199),
      Q => \^d\(13),
      R => '0'
    );
\trace_data_write_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(198),
      Q => \^d\(12),
      R => '0'
    );
\trace_data_write_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(197),
      Q => \^d\(11),
      R => '0'
    );
\trace_data_write_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(196),
      Q => \^d\(10),
      R => '0'
    );
\trace_data_write_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(195),
      Q => \^d\(9),
      R => '0'
    );
\trace_data_write_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(222),
      Q => \^d\(36),
      R => '0'
    );
\trace_data_write_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(194),
      Q => \^d\(8),
      R => '0'
    );
\trace_data_write_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(193),
      Q => \^d\(7),
      R => '0'
    );
\trace_data_write_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(221),
      Q => \^d\(35),
      R => '0'
    );
\trace_data_write_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(220),
      Q => \^d\(34),
      R => '0'
    );
\trace_data_write_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(219),
      Q => \^d\(33),
      R => '0'
    );
\trace_data_write_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(218),
      Q => \^d\(32),
      R => '0'
    );
\trace_data_write_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(217),
      Q => \^d\(31),
      R => '0'
    );
\trace_data_write_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(216),
      Q => \^d\(30),
      R => '0'
    );
\trace_data_write_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^mem_div_stall_i_reg\(0),
      D => \^d\(215),
      Q => \^d\(29),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MicroBlaze_Core is
  port (
    of_pause_reg : out STD_LOGIC;
    mem_div_stall_i_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 363 downto 0 );
    Sleep : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 40 downto 0 );
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_1_sp_1 : out STD_LOGIC;
    \Dbg_Reg_En[1]_0\ : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Clk : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    IReady : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    DUE : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_TDI : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MicroBlaze_Core : entity is "MicroBlaze_Core";
end mb_design_microblaze_0_1_MicroBlaze_Core;

architecture STRUCTURE of mb_design_microblaze_0_1_MicroBlaze_Core is
  signal Dbg_Reg_En_1_sn_1 : STD_LOGIC;
  signal Synced : STD_LOGIC;
  signal \Using_Async_Wakeup_0.Wakeup_DFF_n_1\ : STD_LOGIC;
  signal \reset_temp__0\ : STD_LOGIC;
  signal sync_reset : STD_LOGIC;
  signal wakeup_i : STD_LOGIC_VECTOR ( 0 to 1 );
begin
  Dbg_Reg_En_1_sp_1 <= Dbg_Reg_En_1_sn_1;
\Performance.Core\: entity work.mb_design_microblaze_0_1_MicroBlaze_GTi
     port map (
      Clk => Clk,
      D(363 downto 0) => D(363 downto 0),
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[1]_0\ => \Dbg_Reg_En[1]_0\,
      Dbg_Reg_En_1_sp_1 => Dbg_Reg_En_1_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_0,
      Dbg_TDO_1 => Dbg_TDO_1,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      E(0) => of_pause_reg,
      Hibernate => Hibernate,
      IReady => IReady,
      IUE => IUE,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(40 downto 0) => LOCKSTEP_Master_Out(40 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BRESP(0) => M_AXI_DP_BRESP(0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RRESP(0) => M_AXI_DP_RRESP(0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Status_Reg_En => Status_Reg_En,
      Suspend => Suspend,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      mem_div_stall_i_reg(0) => mem_div_stall_i_reg,
      sleep_reset_mode_reg => \Using_Async_Wakeup_0.Wakeup_DFF_n_1\,
      sync_reset => sync_reset,
      wakeup_i(0 to 1) => wakeup_i(0 to 1)
    );
Reset_DFF: entity work.mb_design_microblaze_0_1_mb_sync_bit
     port map (
      Clk => Clk,
      \out\(0) => Synced,
      reset_temp => \reset_temp__0\
    );
\Use_Async_Reset.sync_reset_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Synced,
      Q => sync_reset,
      R => '0'
    );
\Using_Async_Wakeup_0.Wakeup_DFF\: entity work.mb_design_microblaze_0_1_mb_sync_bit_0
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      \Synchronize.use_sync_reset.sync_reg[2]_0\ => \Using_Async_Wakeup_0.Wakeup_DFF_n_1\,
      Wakeup(0) => Wakeup(0),
      \out\(0) => wakeup_i(0),
      sleep_reset_mode_reg(0) => wakeup_i(1)
    );
\Using_Async_Wakeup_1.Wakeup_DFF\: entity work.mb_design_microblaze_0_1_mb_sync_bit_1
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      Wakeup(0) => Wakeup(1),
      \out\(0) => wakeup_i(1)
    );
reset_temp: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Reset,
      I1 => Mb_Reset,
      I2 => Debug_Rst,
      O => \reset_temp__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1_MicroBlaze is
  port (
    RAM_To : in STD_LOGIC_VECTOR ( 255 downto 0 );
    RAM_From : out STD_LOGIC_VECTOR ( 255 downto 0 );
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Non_Secure : in STD_LOGIC_VECTOR ( 0 to 3 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Ext_BRK : in STD_LOGIC;
    Ext_NM_BRK : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Dbg_Continue : out STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Intr : out STD_LOGIC;
    MB_Halted : out STD_LOGIC;
    MB_Error : out STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Wakeup : out STD_LOGIC;
    LOCKSTEP_Slave_In : in STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    M_AXI_IP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_AWLOCK : out STD_LOGIC;
    M_AXI_IP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWVALID : out STD_LOGIC;
    M_AXI_IP_AWREADY : in STD_LOGIC;
    M_AXI_IP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_WLAST : out STD_LOGIC;
    M_AXI_IP_WVALID : out STD_LOGIC;
    M_AXI_IP_WREADY : in STD_LOGIC;
    M_AXI_IP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_BVALID : in STD_LOGIC;
    M_AXI_IP_BREADY : out STD_LOGIC;
    M_AXI_IP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_ARLOCK : out STD_LOGIC;
    M_AXI_IP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARVALID : out STD_LOGIC;
    M_AXI_IP_ARREADY : in STD_LOGIC;
    M_AXI_IP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_RLAST : in STD_LOGIC;
    M_AXI_IP_RVALID : in STD_LOGIC;
    M_AXI_IP_RREADY : out STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_AWLOCK : out STD_LOGIC;
    M_AXI_DP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WLAST : out STD_LOGIC;
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_ARLOCK : out STD_LOGIC;
    M_AXI_DP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RLAST : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trace_Clk : in STD_LOGIC;
    Dbg_Trace_Data : out STD_LOGIC_VECTOR ( 0 to 35 );
    Dbg_Trace_Ready : in STD_LOGIC;
    Dbg_Trace_Valid : out STD_LOGIC;
    Dbg_AWADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_AWVALID : in STD_LOGIC;
    Dbg_AWREADY : out STD_LOGIC;
    Dbg_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_WVALID : in STD_LOGIC;
    Dbg_WREADY : out STD_LOGIC;
    Dbg_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_BVALID : out STD_LOGIC;
    Dbg_BREADY : in STD_LOGIC;
    Dbg_ARADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_ARVALID : in STD_LOGIC;
    Dbg_ARREADY : out STD_LOGIC;
    Dbg_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_RVALID : out STD_LOGIC;
    Dbg_RREADY : in STD_LOGIC;
    DEBUG_ACLK : in STD_LOGIC;
    DEBUG_ARESETN : in STD_LOGIC;
    Trace_Instruction : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Valid_Instr : out STD_LOGIC;
    Trace_PC : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Reg_Write : out STD_LOGIC;
    Trace_Reg_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_MSR_Reg : out STD_LOGIC_VECTOR ( 0 to 14 );
    Trace_PID_Reg : out STD_LOGIC_VECTOR ( 0 to 7 );
    Trace_New_Reg_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Exception_Taken : out STD_LOGIC;
    Trace_Exception_Kind : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_Jump_Taken : out STD_LOGIC;
    Trace_Delay_Slot : out STD_LOGIC;
    Trace_Data_Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Write_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    Trace_Data_Access : out STD_LOGIC;
    Trace_Data_Read : out STD_LOGIC;
    Trace_Data_Write : out STD_LOGIC;
    Trace_DCache_Req : out STD_LOGIC;
    Trace_DCache_Hit : out STD_LOGIC;
    Trace_DCache_Rdy : out STD_LOGIC;
    Trace_DCache_Read : out STD_LOGIC;
    Trace_ICache_Req : out STD_LOGIC;
    Trace_ICache_Hit : out STD_LOGIC;
    Trace_ICache_Rdy : out STD_LOGIC;
    Trace_OF_PipeRun : out STD_LOGIC;
    Trace_EX_PipeRun : out STD_LOGIC;
    Trace_MEM_PipeRun : out STD_LOGIC;
    Trace_MB_Halted : out STD_LOGIC;
    Trace_Jump_Hit : out STD_LOGIC;
    M0_AXIS_TLAST : out STD_LOGIC;
    M0_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M0_AXIS_TVALID : out STD_LOGIC;
    M0_AXIS_TREADY : in STD_LOGIC;
    M1_AXIS_TLAST : out STD_LOGIC;
    M1_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M1_AXIS_TVALID : out STD_LOGIC;
    M1_AXIS_TREADY : in STD_LOGIC;
    M2_AXIS_TLAST : out STD_LOGIC;
    M2_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M2_AXIS_TVALID : out STD_LOGIC;
    M2_AXIS_TREADY : in STD_LOGIC;
    M3_AXIS_TLAST : out STD_LOGIC;
    M3_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M3_AXIS_TVALID : out STD_LOGIC;
    M3_AXIS_TREADY : in STD_LOGIC;
    M4_AXIS_TLAST : out STD_LOGIC;
    M4_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M4_AXIS_TVALID : out STD_LOGIC;
    M4_AXIS_TREADY : in STD_LOGIC;
    M5_AXIS_TLAST : out STD_LOGIC;
    M5_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M5_AXIS_TVALID : out STD_LOGIC;
    M5_AXIS_TREADY : in STD_LOGIC;
    M6_AXIS_TLAST : out STD_LOGIC;
    M6_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M6_AXIS_TVALID : out STD_LOGIC;
    M6_AXIS_TREADY : in STD_LOGIC;
    M7_AXIS_TLAST : out STD_LOGIC;
    M7_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M7_AXIS_TVALID : out STD_LOGIC;
    M7_AXIS_TREADY : in STD_LOGIC;
    M8_AXIS_TLAST : out STD_LOGIC;
    M8_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M8_AXIS_TVALID : out STD_LOGIC;
    M8_AXIS_TREADY : in STD_LOGIC;
    M9_AXIS_TLAST : out STD_LOGIC;
    M9_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M9_AXIS_TVALID : out STD_LOGIC;
    M9_AXIS_TREADY : in STD_LOGIC;
    M10_AXIS_TLAST : out STD_LOGIC;
    M10_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M10_AXIS_TVALID : out STD_LOGIC;
    M10_AXIS_TREADY : in STD_LOGIC;
    M11_AXIS_TLAST : out STD_LOGIC;
    M11_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M11_AXIS_TVALID : out STD_LOGIC;
    M11_AXIS_TREADY : in STD_LOGIC;
    M12_AXIS_TLAST : out STD_LOGIC;
    M12_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M12_AXIS_TVALID : out STD_LOGIC;
    M12_AXIS_TREADY : in STD_LOGIC;
    M13_AXIS_TLAST : out STD_LOGIC;
    M13_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M13_AXIS_TVALID : out STD_LOGIC;
    M13_AXIS_TREADY : in STD_LOGIC;
    M14_AXIS_TLAST : out STD_LOGIC;
    M14_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M14_AXIS_TVALID : out STD_LOGIC;
    M14_AXIS_TREADY : in STD_LOGIC;
    M15_AXIS_TLAST : out STD_LOGIC;
    M15_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M15_AXIS_TVALID : out STD_LOGIC;
    M15_AXIS_TREADY : in STD_LOGIC;
    S0_AXIS_TLAST : in STD_LOGIC;
    S0_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S0_AXIS_TVALID : in STD_LOGIC;
    S0_AXIS_TREADY : out STD_LOGIC;
    S1_AXIS_TLAST : in STD_LOGIC;
    S1_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S1_AXIS_TVALID : in STD_LOGIC;
    S1_AXIS_TREADY : out STD_LOGIC;
    S2_AXIS_TLAST : in STD_LOGIC;
    S2_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S2_AXIS_TVALID : in STD_LOGIC;
    S2_AXIS_TREADY : out STD_LOGIC;
    S3_AXIS_TLAST : in STD_LOGIC;
    S3_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S3_AXIS_TVALID : in STD_LOGIC;
    S3_AXIS_TREADY : out STD_LOGIC;
    S4_AXIS_TLAST : in STD_LOGIC;
    S4_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S4_AXIS_TVALID : in STD_LOGIC;
    S4_AXIS_TREADY : out STD_LOGIC;
    S5_AXIS_TLAST : in STD_LOGIC;
    S5_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S5_AXIS_TVALID : in STD_LOGIC;
    S5_AXIS_TREADY : out STD_LOGIC;
    S6_AXIS_TLAST : in STD_LOGIC;
    S6_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S6_AXIS_TVALID : in STD_LOGIC;
    S6_AXIS_TREADY : out STD_LOGIC;
    S7_AXIS_TLAST : in STD_LOGIC;
    S7_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S7_AXIS_TVALID : in STD_LOGIC;
    S7_AXIS_TREADY : out STD_LOGIC;
    S8_AXIS_TLAST : in STD_LOGIC;
    S8_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S8_AXIS_TVALID : in STD_LOGIC;
    S8_AXIS_TREADY : out STD_LOGIC;
    S9_AXIS_TLAST : in STD_LOGIC;
    S9_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S9_AXIS_TVALID : in STD_LOGIC;
    S9_AXIS_TREADY : out STD_LOGIC;
    S10_AXIS_TLAST : in STD_LOGIC;
    S10_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S10_AXIS_TVALID : in STD_LOGIC;
    S10_AXIS_TREADY : out STD_LOGIC;
    S11_AXIS_TLAST : in STD_LOGIC;
    S11_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S11_AXIS_TVALID : in STD_LOGIC;
    S11_AXIS_TREADY : out STD_LOGIC;
    S12_AXIS_TLAST : in STD_LOGIC;
    S12_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S12_AXIS_TVALID : in STD_LOGIC;
    S12_AXIS_TREADY : out STD_LOGIC;
    S13_AXIS_TLAST : in STD_LOGIC;
    S13_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S13_AXIS_TVALID : in STD_LOGIC;
    S13_AXIS_TREADY : out STD_LOGIC;
    S14_AXIS_TLAST : in STD_LOGIC;
    S14_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S14_AXIS_TVALID : in STD_LOGIC;
    S14_AXIS_TREADY : out STD_LOGIC;
    S15_AXIS_TLAST : in STD_LOGIC;
    S15_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S15_AXIS_TVALID : in STD_LOGIC;
    S15_AXIS_TREADY : out STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_WACK : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_IC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RACK : out STD_LOGIC;
    M_AXI_IC_ACVALID : in STD_LOGIC;
    M_AXI_IC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ACREADY : out STD_LOGIC;
    M_AXI_IC_CRVALID : out STD_LOGIC;
    M_AXI_IC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_CRREADY : in STD_LOGIC;
    M_AXI_IC_CDVALID : out STD_LOGIC;
    M_AXI_IC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_CDLAST : out STD_LOGIC;
    M_AXI_IC_CDREADY : in STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_WACK : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC;
    M_AXI_DC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RACK : out STD_LOGIC;
    M_AXI_DC_ACVALID : in STD_LOGIC;
    M_AXI_DC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ACREADY : out STD_LOGIC;
    M_AXI_DC_CRVALID : out STD_LOGIC;
    M_AXI_DC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_CRREADY : in STD_LOGIC;
    M_AXI_DC_CDVALID : out STD_LOGIC;
    M_AXI_DC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_CDLAST : out STD_LOGIC;
    M_AXI_DC_CDREADY : in STD_LOGIC
  );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of mb_design_microblaze_0_1_MicroBlaze : entity is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of mb_design_microblaze_0_1_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 8192;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of mb_design_microblaze_0_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001100000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of mb_design_microblaze_0_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001100000111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of mb_design_microblaze_0_1_MicroBlaze : entity is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of mb_design_microblaze_0_1_MicroBlaze : entity is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_D_LMB_PROTOCOL : integer;
  attribute C_D_LMB_PROTOCOL of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of mb_design_microblaze_0_1_MicroBlaze : entity is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of mb_design_microblaze_0_1_MicroBlaze : entity is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of mb_design_microblaze_0_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001100000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of mb_design_microblaze_0_1_MicroBlaze : entity is "64'b0000000000000000000000000000000001100000111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of mb_design_microblaze_0_1_MicroBlaze : entity is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of mb_design_microblaze_0_1_MicroBlaze : entity is "mb_design_microblaze_0_1";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_I_LMB_PROTOCOL : integer;
  attribute C_I_LMB_PROTOCOL of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of mb_design_microblaze_0_1_MicroBlaze : entity is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of mb_design_microblaze_0_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of mb_design_microblaze_0_1_MicroBlaze : entity is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_PVR : integer;
  attribute C_PVR of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of mb_design_microblaze_0_1_MicroBlaze : entity is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of mb_design_microblaze_0_1_MicroBlaze : entity is 32;
  attribute C_SCO : integer;
  attribute C_SCO of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of mb_design_microblaze_0_1_MicroBlaze : entity is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of mb_design_microblaze_0_1_MicroBlaze : entity is 1;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of mb_design_microblaze_0_1_MicroBlaze : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of mb_design_microblaze_0_1_MicroBlaze : entity is "MicroBlaze";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of mb_design_microblaze_0_1_MicroBlaze : entity is "yes";
end mb_design_microblaze_0_1_MicroBlaze;

architecture STRUCTURE of mb_design_microblaze_0_1_MicroBlaze is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^d_as\ : STD_LOGIC;
  signal \^data_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^data_write\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^dbg_continue\ : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_4_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_8_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^debug_rst\ : STD_LOGIC;
  signal \^ifetch\ : STD_LOGIC;
  signal \^i_as\ : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 1 to 46 );
  signal \^lockstep_out\ : STD_LOGIC_VECTOR ( 2 to 3228 );
  signal \^m_axi_dp_araddr\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_arvalid\ : STD_LOGIC;
  signal \^m_axi_dp_awvalid\ : STD_LOGIC;
  signal \^m_axi_dp_wdata\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_wstrb\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_dp_wvalid\ : STD_LOGIC;
  signal MicroBlaze_Core_I_n_417 : STD_LOGIC;
  signal MicroBlaze_Core_I_n_418 : STD_LOGIC;
  signal \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\ : STD_LOGIC;
  signal \^read_strobe\ : STD_LOGIC;
  signal \^trace_data_access\ : STD_LOGIC;
  signal \^trace_data_address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^trace_data_read\ : STD_LOGIC;
  signal \^trace_data_write\ : STD_LOGIC;
  signal \^trace_data_write_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_delay_slot\ : STD_LOGIC;
  signal \^trace_ex_piperun\ : STD_LOGIC;
  signal \^trace_exception_kind\ : STD_LOGIC_VECTOR ( 1 to 4 );
  signal \^trace_exception_taken\ : STD_LOGIC;
  signal \^trace_instruction\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_jump_taken\ : STD_LOGIC;
  signal \^trace_mem_piperun\ : STD_LOGIC;
  signal \^trace_msr_reg\ : STD_LOGIC_VECTOR ( 5 to 13 );
  signal \^trace_new_reg_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_of_piperun\ : STD_LOGIC;
  signal \^trace_pc\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_reg_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_reg_write\ : STD_LOGIC;
  signal \^trace_valid_instr\ : STD_LOGIC;
  signal \^write_strobe\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_4 : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_8 : label is "soft_lutpair140";
  attribute mark_debug : string;
  attribute mark_debug of Trace_DCache_Hit : signal is "false";
  attribute mark_debug of Trace_DCache_Rdy : signal is "false";
  attribute mark_debug of Trace_DCache_Read : signal is "false";
  attribute mark_debug of Trace_DCache_Req : signal is "false";
  attribute mark_debug of Trace_Data_Access : signal is "false";
  attribute mark_debug of Trace_Data_Read : signal is "false";
  attribute mark_debug of Trace_Data_Write : signal is "false";
  attribute mark_debug of Trace_Delay_Slot : signal is "false";
  attribute mark_debug of Trace_EX_PipeRun : signal is "false";
  attribute mark_debug of Trace_Exception_Taken : signal is "false";
  attribute mark_debug of Trace_ICache_Hit : signal is "false";
  attribute mark_debug of Trace_ICache_Rdy : signal is "false";
  attribute mark_debug of Trace_ICache_Req : signal is "false";
  attribute mark_debug of Trace_Jump_Hit : signal is "false";
  attribute mark_debug of Trace_Jump_Taken : signal is "false";
  attribute mark_debug of Trace_MB_Halted : signal is "false";
  attribute mark_debug of Trace_MEM_PipeRun : signal is "false";
  attribute mark_debug of Trace_OF_PipeRun : signal is "false";
  attribute mark_debug of Trace_Reg_Write : signal is "false";
  attribute mark_debug of Trace_Valid_Instr : signal is "false";
  attribute mark_debug of Trace_Data_Address : signal is "false";
  attribute mark_debug of Trace_Data_Byte_Enable : signal is "false";
  attribute mark_debug of Trace_Data_Write_Value : signal is "false";
  attribute mark_debug of Trace_Exception_Kind : signal is "false";
  attribute mark_debug of Trace_Instruction : signal is "false";
  attribute mark_debug of Trace_MSR_Reg : signal is "false";
  attribute mark_debug of Trace_New_Reg_Value : signal is "false";
  attribute mark_debug of Trace_PC : signal is "false";
  attribute mark_debug of Trace_PID_Reg : signal is "false";
  attribute mark_debug of Trace_Reg_Addr : signal is "false";
begin
  Byte_Enable(0 to 3) <= \^byte_enable\(0 to 3);
  D_AS <= \^d_as\;
  Data_Addr(0 to 31) <= \^data_addr\(0 to 31);
  Data_Write(0 to 31) <= \^data_write\(0 to 31);
  Dbg_ARREADY <= \<const0>\;
  Dbg_AWREADY <= \<const0>\;
  Dbg_BRESP(1) <= \<const0>\;
  Dbg_BRESP(0) <= \<const0>\;
  Dbg_BVALID <= \<const0>\;
  Dbg_Continue <= \^dbg_continue\;
  Dbg_Intr <= \<const0>\;
  Dbg_RDATA(31) <= \<const0>\;
  Dbg_RDATA(30) <= \<const0>\;
  Dbg_RDATA(29) <= \<const0>\;
  Dbg_RDATA(28) <= \<const0>\;
  Dbg_RDATA(27) <= \<const0>\;
  Dbg_RDATA(26) <= \<const0>\;
  Dbg_RDATA(25) <= \<const0>\;
  Dbg_RDATA(24) <= \<const0>\;
  Dbg_RDATA(23) <= \<const0>\;
  Dbg_RDATA(22) <= \<const0>\;
  Dbg_RDATA(21) <= \<const0>\;
  Dbg_RDATA(20) <= \<const0>\;
  Dbg_RDATA(19) <= \<const0>\;
  Dbg_RDATA(18) <= \<const0>\;
  Dbg_RDATA(17) <= \<const0>\;
  Dbg_RDATA(16) <= \<const0>\;
  Dbg_RDATA(15) <= \<const0>\;
  Dbg_RDATA(14) <= \<const0>\;
  Dbg_RDATA(13) <= \<const0>\;
  Dbg_RDATA(12) <= \<const0>\;
  Dbg_RDATA(11) <= \<const0>\;
  Dbg_RDATA(10) <= \<const0>\;
  Dbg_RDATA(9) <= \<const0>\;
  Dbg_RDATA(8) <= \<const0>\;
  Dbg_RDATA(7) <= \<const0>\;
  Dbg_RDATA(6) <= \<const0>\;
  Dbg_RDATA(5) <= \<const0>\;
  Dbg_RDATA(4) <= \<const0>\;
  Dbg_RDATA(3) <= \<const0>\;
  Dbg_RDATA(2) <= \<const0>\;
  Dbg_RDATA(1) <= \<const0>\;
  Dbg_RDATA(0) <= \<const0>\;
  Dbg_RRESP(1) <= \<const0>\;
  Dbg_RRESP(0) <= \<const0>\;
  Dbg_RVALID <= \<const0>\;
  Dbg_Trace_Data(0) <= \<const0>\;
  Dbg_Trace_Data(1) <= \<const0>\;
  Dbg_Trace_Data(2) <= \<const0>\;
  Dbg_Trace_Data(3) <= \<const0>\;
  Dbg_Trace_Data(4) <= \<const0>\;
  Dbg_Trace_Data(5) <= \<const0>\;
  Dbg_Trace_Data(6) <= \<const0>\;
  Dbg_Trace_Data(7) <= \<const0>\;
  Dbg_Trace_Data(8) <= \<const0>\;
  Dbg_Trace_Data(9) <= \<const0>\;
  Dbg_Trace_Data(10) <= \<const0>\;
  Dbg_Trace_Data(11) <= \<const0>\;
  Dbg_Trace_Data(12) <= \<const0>\;
  Dbg_Trace_Data(13) <= \<const0>\;
  Dbg_Trace_Data(14) <= \<const0>\;
  Dbg_Trace_Data(15) <= \<const0>\;
  Dbg_Trace_Data(16) <= \<const0>\;
  Dbg_Trace_Data(17) <= \<const0>\;
  Dbg_Trace_Data(18) <= \<const0>\;
  Dbg_Trace_Data(19) <= \<const0>\;
  Dbg_Trace_Data(20) <= \<const0>\;
  Dbg_Trace_Data(21) <= \<const0>\;
  Dbg_Trace_Data(22) <= \<const0>\;
  Dbg_Trace_Data(23) <= \<const0>\;
  Dbg_Trace_Data(24) <= \<const0>\;
  Dbg_Trace_Data(25) <= \<const0>\;
  Dbg_Trace_Data(26) <= \<const0>\;
  Dbg_Trace_Data(27) <= \<const0>\;
  Dbg_Trace_Data(28) <= \<const0>\;
  Dbg_Trace_Data(29) <= \<const0>\;
  Dbg_Trace_Data(30) <= \<const0>\;
  Dbg_Trace_Data(31) <= \<const0>\;
  Dbg_Trace_Data(32) <= \<const0>\;
  Dbg_Trace_Data(33) <= \<const0>\;
  Dbg_Trace_Data(34) <= \<const0>\;
  Dbg_Trace_Data(35) <= \<const0>\;
  Dbg_Trace_Valid <= \<const0>\;
  Dbg_Trig_Ack_Out(0 to 1) <= \^dbg_trig_ack_out\(0 to 1);
  Dbg_Trig_Ack_Out(2) <= \<const0>\;
  Dbg_Trig_Ack_Out(3) <= \<const0>\;
  Dbg_Trig_Ack_Out(4) <= \<const0>\;
  Dbg_Trig_Ack_Out(5) <= \<const0>\;
  Dbg_Trig_Ack_Out(6) <= \<const0>\;
  Dbg_Trig_Ack_Out(7) <= \<const0>\;
  Dbg_Trig_In(0 to 1) <= \^dbg_trig_in\(0 to 1);
  Dbg_Trig_In(2) <= \<const0>\;
  Dbg_Trig_In(3) <= \<const0>\;
  Dbg_Trig_In(4) <= \<const0>\;
  Dbg_Trig_In(5) <= \<const0>\;
  Dbg_Trig_In(6) <= \<const0>\;
  Dbg_Trig_In(7) <= \<const0>\;
  Dbg_WREADY <= \<const0>\;
  Dbg_Wakeup <= \^lockstep_master_out\(11);
  IFetch <= \^ifetch\;
  I_AS <= \^i_as\;
  Instr_Addr(0 to 31) <= \^instr_addr\(0 to 31);
  LOCKSTEP_Master_Out(0) <= \<const0>\;
  LOCKSTEP_Master_Out(1) <= \^lockstep_master_out\(1);
  LOCKSTEP_Master_Out(2) <= \<const0>\;
  LOCKSTEP_Master_Out(3 to 7) <= \^lockstep_master_out\(3 to 7);
  LOCKSTEP_Master_Out(8) <= \^lockstep_master_out\(10);
  LOCKSTEP_Master_Out(9) <= \<const0>\;
  LOCKSTEP_Master_Out(10 to 11) <= \^lockstep_master_out\(10 to 11);
  LOCKSTEP_Master_Out(12) <= \^dbg_continue\;
  LOCKSTEP_Master_Out(13) <= \^lockstep_master_out\(13);
  LOCKSTEP_Master_Out(14) <= \^debug_rst\;
  LOCKSTEP_Master_Out(15 to 46) <= \^lockstep_master_out\(15 to 46);
  LOCKSTEP_Master_Out(47) <= \<const0>\;
  LOCKSTEP_Master_Out(48) <= \<const0>\;
  LOCKSTEP_Master_Out(49) <= \<const0>\;
  LOCKSTEP_Master_Out(50) <= \<const0>\;
  LOCKSTEP_Master_Out(51) <= \<const0>\;
  LOCKSTEP_Master_Out(52) <= \<const0>\;
  LOCKSTEP_Master_Out(53) <= \<const0>\;
  LOCKSTEP_Master_Out(54) <= \<const0>\;
  LOCKSTEP_Master_Out(55) <= \<const0>\;
  LOCKSTEP_Master_Out(56) <= \<const0>\;
  LOCKSTEP_Master_Out(57) <= \<const0>\;
  LOCKSTEP_Master_Out(58) <= \<const0>\;
  LOCKSTEP_Master_Out(59) <= \<const0>\;
  LOCKSTEP_Master_Out(60) <= \<const0>\;
  LOCKSTEP_Master_Out(61) <= \<const0>\;
  LOCKSTEP_Master_Out(62) <= \<const0>\;
  LOCKSTEP_Master_Out(63) <= \<const0>\;
  LOCKSTEP_Master_Out(64) <= \<const0>\;
  LOCKSTEP_Master_Out(65) <= \<const0>\;
  LOCKSTEP_Master_Out(66) <= \<const0>\;
  LOCKSTEP_Master_Out(67) <= \<const0>\;
  LOCKSTEP_Master_Out(68) <= \<const0>\;
  LOCKSTEP_Master_Out(69) <= \<const0>\;
  LOCKSTEP_Master_Out(70) <= \<const0>\;
  LOCKSTEP_Master_Out(71) <= \<const0>\;
  LOCKSTEP_Master_Out(72) <= \<const0>\;
  LOCKSTEP_Master_Out(73) <= \<const0>\;
  LOCKSTEP_Master_Out(74) <= \<const0>\;
  LOCKSTEP_Master_Out(75) <= \<const0>\;
  LOCKSTEP_Master_Out(76) <= \<const0>\;
  LOCKSTEP_Master_Out(77) <= \<const0>\;
  LOCKSTEP_Master_Out(78) <= \<const0>\;
  LOCKSTEP_Master_Out(79) <= \<const0>\;
  LOCKSTEP_Master_Out(80) <= \<const0>\;
  LOCKSTEP_Master_Out(81) <= \<const0>\;
  LOCKSTEP_Master_Out(82) <= \<const0>\;
  LOCKSTEP_Master_Out(83) <= \<const0>\;
  LOCKSTEP_Master_Out(84) <= \<const0>\;
  LOCKSTEP_Master_Out(85) <= \<const0>\;
  LOCKSTEP_Master_Out(86) <= \<const0>\;
  LOCKSTEP_Master_Out(87) <= \<const0>\;
  LOCKSTEP_Master_Out(88) <= \<const0>\;
  LOCKSTEP_Master_Out(89) <= \<const0>\;
  LOCKSTEP_Master_Out(90) <= \<const0>\;
  LOCKSTEP_Master_Out(91) <= \<const0>\;
  LOCKSTEP_Master_Out(92) <= \<const0>\;
  LOCKSTEP_Master_Out(93) <= \<const0>\;
  LOCKSTEP_Master_Out(94) <= \<const0>\;
  LOCKSTEP_Master_Out(95) <= \<const0>\;
  LOCKSTEP_Master_Out(96) <= \<const0>\;
  LOCKSTEP_Master_Out(97) <= \<const0>\;
  LOCKSTEP_Master_Out(98) <= \<const0>\;
  LOCKSTEP_Master_Out(99) <= \<const0>\;
  LOCKSTEP_Master_Out(100) <= \<const0>\;
  LOCKSTEP_Master_Out(101) <= \<const0>\;
  LOCKSTEP_Master_Out(102) <= \<const0>\;
  LOCKSTEP_Master_Out(103) <= \<const0>\;
  LOCKSTEP_Master_Out(104) <= \<const0>\;
  LOCKSTEP_Master_Out(105) <= \<const0>\;
  LOCKSTEP_Master_Out(106) <= \<const0>\;
  LOCKSTEP_Master_Out(107) <= \<const0>\;
  LOCKSTEP_Master_Out(108) <= \<const0>\;
  LOCKSTEP_Master_Out(109) <= \<const0>\;
  LOCKSTEP_Master_Out(110) <= \<const0>\;
  LOCKSTEP_Master_Out(111) <= \<const0>\;
  LOCKSTEP_Master_Out(112) <= \<const0>\;
  LOCKSTEP_Master_Out(113) <= \<const0>\;
  LOCKSTEP_Master_Out(114) <= \<const0>\;
  LOCKSTEP_Master_Out(115) <= \<const0>\;
  LOCKSTEP_Master_Out(116) <= \<const0>\;
  LOCKSTEP_Master_Out(117) <= \<const0>\;
  LOCKSTEP_Master_Out(118) <= \<const0>\;
  LOCKSTEP_Master_Out(119) <= \<const0>\;
  LOCKSTEP_Master_Out(120) <= \<const0>\;
  LOCKSTEP_Master_Out(121) <= \<const0>\;
  LOCKSTEP_Master_Out(122) <= \<const0>\;
  LOCKSTEP_Master_Out(123) <= \<const0>\;
  LOCKSTEP_Master_Out(124) <= \<const0>\;
  LOCKSTEP_Master_Out(125) <= \<const0>\;
  LOCKSTEP_Master_Out(126) <= \<const0>\;
  LOCKSTEP_Master_Out(127) <= \<const0>\;
  LOCKSTEP_Master_Out(128) <= \<const0>\;
  LOCKSTEP_Master_Out(129) <= \<const0>\;
  LOCKSTEP_Master_Out(130) <= \<const0>\;
  LOCKSTEP_Master_Out(131) <= \<const0>\;
  LOCKSTEP_Master_Out(132) <= \<const0>\;
  LOCKSTEP_Master_Out(133) <= \<const0>\;
  LOCKSTEP_Master_Out(134) <= \<const0>\;
  LOCKSTEP_Master_Out(135) <= \<const0>\;
  LOCKSTEP_Master_Out(136) <= \<const0>\;
  LOCKSTEP_Master_Out(137) <= \<const0>\;
  LOCKSTEP_Master_Out(138) <= \<const0>\;
  LOCKSTEP_Master_Out(139) <= \<const0>\;
  LOCKSTEP_Master_Out(140) <= \<const0>\;
  LOCKSTEP_Master_Out(141) <= \<const0>\;
  LOCKSTEP_Master_Out(142) <= \<const0>\;
  LOCKSTEP_Master_Out(143) <= \<const0>\;
  LOCKSTEP_Master_Out(144) <= \<const0>\;
  LOCKSTEP_Master_Out(145) <= \<const0>\;
  LOCKSTEP_Master_Out(146) <= \<const0>\;
  LOCKSTEP_Master_Out(147) <= \<const0>\;
  LOCKSTEP_Master_Out(148) <= \<const0>\;
  LOCKSTEP_Master_Out(149) <= \<const0>\;
  LOCKSTEP_Master_Out(150) <= \<const0>\;
  LOCKSTEP_Master_Out(151) <= \<const0>\;
  LOCKSTEP_Master_Out(152) <= \<const0>\;
  LOCKSTEP_Master_Out(153) <= \<const0>\;
  LOCKSTEP_Master_Out(154) <= \<const0>\;
  LOCKSTEP_Master_Out(155) <= \<const0>\;
  LOCKSTEP_Master_Out(156) <= \<const0>\;
  LOCKSTEP_Master_Out(157) <= \<const0>\;
  LOCKSTEP_Master_Out(158) <= \<const0>\;
  LOCKSTEP_Master_Out(159) <= \<const0>\;
  LOCKSTEP_Master_Out(160) <= \<const0>\;
  LOCKSTEP_Master_Out(161) <= \<const0>\;
  LOCKSTEP_Master_Out(162) <= \<const0>\;
  LOCKSTEP_Master_Out(163) <= \<const0>\;
  LOCKSTEP_Master_Out(164) <= \<const0>\;
  LOCKSTEP_Master_Out(165) <= \<const0>\;
  LOCKSTEP_Master_Out(166) <= \<const0>\;
  LOCKSTEP_Master_Out(167) <= \<const0>\;
  LOCKSTEP_Master_Out(168) <= \<const0>\;
  LOCKSTEP_Master_Out(169) <= \<const0>\;
  LOCKSTEP_Master_Out(170) <= \<const0>\;
  LOCKSTEP_Master_Out(171) <= \<const0>\;
  LOCKSTEP_Master_Out(172) <= \<const0>\;
  LOCKSTEP_Master_Out(173) <= \<const0>\;
  LOCKSTEP_Master_Out(174) <= \<const0>\;
  LOCKSTEP_Master_Out(175) <= \<const0>\;
  LOCKSTEP_Master_Out(176) <= \<const0>\;
  LOCKSTEP_Master_Out(177) <= \<const0>\;
  LOCKSTEP_Master_Out(178) <= \<const0>\;
  LOCKSTEP_Master_Out(179) <= \<const0>\;
  LOCKSTEP_Master_Out(180) <= \<const0>\;
  LOCKSTEP_Master_Out(181) <= \<const0>\;
  LOCKSTEP_Master_Out(182) <= \<const0>\;
  LOCKSTEP_Master_Out(183) <= \<const0>\;
  LOCKSTEP_Master_Out(184) <= \<const0>\;
  LOCKSTEP_Master_Out(185) <= \<const0>\;
  LOCKSTEP_Master_Out(186) <= \<const0>\;
  LOCKSTEP_Master_Out(187) <= \<const0>\;
  LOCKSTEP_Master_Out(188) <= \<const0>\;
  LOCKSTEP_Master_Out(189) <= \<const0>\;
  LOCKSTEP_Master_Out(190) <= \<const0>\;
  LOCKSTEP_Master_Out(191) <= \<const0>\;
  LOCKSTEP_Master_Out(192) <= \<const0>\;
  LOCKSTEP_Master_Out(193) <= \<const0>\;
  LOCKSTEP_Master_Out(194) <= \<const0>\;
  LOCKSTEP_Master_Out(195) <= \<const0>\;
  LOCKSTEP_Master_Out(196) <= \<const0>\;
  LOCKSTEP_Master_Out(197) <= \<const0>\;
  LOCKSTEP_Master_Out(198) <= \<const0>\;
  LOCKSTEP_Master_Out(199) <= \<const0>\;
  LOCKSTEP_Master_Out(200) <= \<const0>\;
  LOCKSTEP_Master_Out(201) <= \<const0>\;
  LOCKSTEP_Master_Out(202) <= \<const0>\;
  LOCKSTEP_Master_Out(203) <= \<const0>\;
  LOCKSTEP_Master_Out(204) <= \<const0>\;
  LOCKSTEP_Master_Out(205) <= \<const0>\;
  LOCKSTEP_Master_Out(206) <= \<const0>\;
  LOCKSTEP_Master_Out(207) <= \<const0>\;
  LOCKSTEP_Master_Out(208) <= \<const0>\;
  LOCKSTEP_Master_Out(209) <= \<const0>\;
  LOCKSTEP_Master_Out(210) <= \<const0>\;
  LOCKSTEP_Master_Out(211) <= \<const0>\;
  LOCKSTEP_Master_Out(212) <= \<const0>\;
  LOCKSTEP_Master_Out(213) <= \<const0>\;
  LOCKSTEP_Master_Out(214) <= \<const0>\;
  LOCKSTEP_Master_Out(215) <= \<const0>\;
  LOCKSTEP_Master_Out(216) <= \<const0>\;
  LOCKSTEP_Master_Out(217) <= \<const0>\;
  LOCKSTEP_Master_Out(218) <= \<const0>\;
  LOCKSTEP_Master_Out(219) <= \<const0>\;
  LOCKSTEP_Master_Out(220) <= \<const0>\;
  LOCKSTEP_Master_Out(221) <= \<const0>\;
  LOCKSTEP_Master_Out(222) <= \<const0>\;
  LOCKSTEP_Master_Out(223) <= \<const0>\;
  LOCKSTEP_Master_Out(224) <= \<const0>\;
  LOCKSTEP_Master_Out(225) <= \<const0>\;
  LOCKSTEP_Master_Out(226) <= \<const0>\;
  LOCKSTEP_Master_Out(227) <= \<const0>\;
  LOCKSTEP_Master_Out(228) <= \<const0>\;
  LOCKSTEP_Master_Out(229) <= \<const0>\;
  LOCKSTEP_Master_Out(230) <= \<const0>\;
  LOCKSTEP_Master_Out(231) <= \<const0>\;
  LOCKSTEP_Master_Out(232) <= \<const0>\;
  LOCKSTEP_Master_Out(233) <= \<const0>\;
  LOCKSTEP_Master_Out(234) <= \<const0>\;
  LOCKSTEP_Master_Out(235) <= \<const0>\;
  LOCKSTEP_Master_Out(236) <= \<const0>\;
  LOCKSTEP_Master_Out(237) <= \<const0>\;
  LOCKSTEP_Master_Out(238) <= \<const0>\;
  LOCKSTEP_Master_Out(239) <= \<const0>\;
  LOCKSTEP_Master_Out(240) <= \<const0>\;
  LOCKSTEP_Master_Out(241) <= \<const0>\;
  LOCKSTEP_Master_Out(242) <= \<const0>\;
  LOCKSTEP_Master_Out(243) <= \<const0>\;
  LOCKSTEP_Master_Out(244) <= \<const0>\;
  LOCKSTEP_Master_Out(245) <= \<const0>\;
  LOCKSTEP_Master_Out(246) <= \<const0>\;
  LOCKSTEP_Master_Out(247) <= \<const0>\;
  LOCKSTEP_Master_Out(248) <= \<const0>\;
  LOCKSTEP_Master_Out(249) <= \<const0>\;
  LOCKSTEP_Master_Out(250) <= \<const0>\;
  LOCKSTEP_Master_Out(251) <= \<const0>\;
  LOCKSTEP_Master_Out(252) <= \<const0>\;
  LOCKSTEP_Master_Out(253) <= \<const0>\;
  LOCKSTEP_Master_Out(254) <= \<const0>\;
  LOCKSTEP_Master_Out(255) <= \<const0>\;
  LOCKSTEP_Master_Out(256) <= \<const0>\;
  LOCKSTEP_Master_Out(257) <= \<const0>\;
  LOCKSTEP_Master_Out(258) <= \<const0>\;
  LOCKSTEP_Master_Out(259) <= \<const0>\;
  LOCKSTEP_Master_Out(260) <= \<const0>\;
  LOCKSTEP_Master_Out(261) <= \<const0>\;
  LOCKSTEP_Master_Out(262) <= \<const0>\;
  LOCKSTEP_Master_Out(263) <= \<const0>\;
  LOCKSTEP_Master_Out(264) <= \<const0>\;
  LOCKSTEP_Master_Out(265) <= \<const0>\;
  LOCKSTEP_Master_Out(266) <= \<const0>\;
  LOCKSTEP_Master_Out(267) <= \<const0>\;
  LOCKSTEP_Master_Out(268) <= \<const0>\;
  LOCKSTEP_Master_Out(269) <= \<const0>\;
  LOCKSTEP_Master_Out(270) <= \<const0>\;
  LOCKSTEP_Master_Out(271) <= \<const0>\;
  LOCKSTEP_Master_Out(272) <= \<const0>\;
  LOCKSTEP_Master_Out(273) <= \<const0>\;
  LOCKSTEP_Master_Out(274) <= \<const0>\;
  LOCKSTEP_Master_Out(275) <= \<const0>\;
  LOCKSTEP_Master_Out(276) <= \<const0>\;
  LOCKSTEP_Master_Out(277) <= \<const0>\;
  LOCKSTEP_Master_Out(278) <= \<const0>\;
  LOCKSTEP_Master_Out(279) <= \<const0>\;
  LOCKSTEP_Master_Out(280) <= \<const0>\;
  LOCKSTEP_Master_Out(281) <= \<const0>\;
  LOCKSTEP_Master_Out(282) <= \<const0>\;
  LOCKSTEP_Master_Out(283) <= \<const0>\;
  LOCKSTEP_Master_Out(284) <= \<const0>\;
  LOCKSTEP_Master_Out(285) <= \<const0>\;
  LOCKSTEP_Master_Out(286) <= \<const0>\;
  LOCKSTEP_Master_Out(287) <= \<const0>\;
  LOCKSTEP_Master_Out(288) <= \<const0>\;
  LOCKSTEP_Master_Out(289) <= \<const0>\;
  LOCKSTEP_Master_Out(290) <= \<const0>\;
  LOCKSTEP_Master_Out(291) <= \<const0>\;
  LOCKSTEP_Master_Out(292) <= \<const0>\;
  LOCKSTEP_Master_Out(293) <= \<const0>\;
  LOCKSTEP_Master_Out(294) <= \<const0>\;
  LOCKSTEP_Master_Out(295) <= \<const0>\;
  LOCKSTEP_Master_Out(296) <= \<const0>\;
  LOCKSTEP_Master_Out(297) <= \<const0>\;
  LOCKSTEP_Master_Out(298) <= \<const0>\;
  LOCKSTEP_Master_Out(299) <= \<const0>\;
  LOCKSTEP_Master_Out(300) <= \<const0>\;
  LOCKSTEP_Master_Out(301) <= \<const0>\;
  LOCKSTEP_Master_Out(302) <= \<const0>\;
  LOCKSTEP_Master_Out(303) <= \<const0>\;
  LOCKSTEP_Master_Out(304) <= \<const0>\;
  LOCKSTEP_Master_Out(305) <= \<const0>\;
  LOCKSTEP_Master_Out(306) <= \<const0>\;
  LOCKSTEP_Master_Out(307) <= \<const0>\;
  LOCKSTEP_Master_Out(308) <= \<const0>\;
  LOCKSTEP_Master_Out(309) <= \<const0>\;
  LOCKSTEP_Master_Out(310) <= \<const0>\;
  LOCKSTEP_Master_Out(311) <= \<const0>\;
  LOCKSTEP_Master_Out(312) <= \<const0>\;
  LOCKSTEP_Master_Out(313) <= \<const0>\;
  LOCKSTEP_Master_Out(314) <= \<const0>\;
  LOCKSTEP_Master_Out(315) <= \<const0>\;
  LOCKSTEP_Master_Out(316) <= \<const0>\;
  LOCKSTEP_Master_Out(317) <= \<const0>\;
  LOCKSTEP_Master_Out(318) <= \<const0>\;
  LOCKSTEP_Master_Out(319) <= \<const0>\;
  LOCKSTEP_Master_Out(320) <= \<const0>\;
  LOCKSTEP_Master_Out(321) <= \<const0>\;
  LOCKSTEP_Master_Out(322) <= \<const0>\;
  LOCKSTEP_Master_Out(323) <= \<const0>\;
  LOCKSTEP_Master_Out(324) <= \<const0>\;
  LOCKSTEP_Master_Out(325) <= \<const0>\;
  LOCKSTEP_Master_Out(326) <= \<const0>\;
  LOCKSTEP_Master_Out(327) <= \<const0>\;
  LOCKSTEP_Master_Out(328) <= \<const0>\;
  LOCKSTEP_Master_Out(329) <= \<const0>\;
  LOCKSTEP_Master_Out(330) <= \<const0>\;
  LOCKSTEP_Master_Out(331) <= \<const0>\;
  LOCKSTEP_Master_Out(332) <= \<const0>\;
  LOCKSTEP_Master_Out(333) <= \<const0>\;
  LOCKSTEP_Master_Out(334) <= \<const0>\;
  LOCKSTEP_Master_Out(335) <= \<const0>\;
  LOCKSTEP_Master_Out(336) <= \<const0>\;
  LOCKSTEP_Master_Out(337) <= \<const0>\;
  LOCKSTEP_Master_Out(338) <= \<const0>\;
  LOCKSTEP_Master_Out(339) <= \<const0>\;
  LOCKSTEP_Master_Out(340) <= \<const0>\;
  LOCKSTEP_Master_Out(341) <= \<const0>\;
  LOCKSTEP_Master_Out(342) <= \<const0>\;
  LOCKSTEP_Master_Out(343) <= \<const0>\;
  LOCKSTEP_Master_Out(344) <= \<const0>\;
  LOCKSTEP_Master_Out(345) <= \<const0>\;
  LOCKSTEP_Master_Out(346) <= \<const0>\;
  LOCKSTEP_Master_Out(347) <= \<const0>\;
  LOCKSTEP_Master_Out(348) <= \<const0>\;
  LOCKSTEP_Master_Out(349) <= \<const0>\;
  LOCKSTEP_Master_Out(350) <= \<const0>\;
  LOCKSTEP_Master_Out(351) <= \<const0>\;
  LOCKSTEP_Master_Out(352) <= \<const0>\;
  LOCKSTEP_Master_Out(353) <= \<const0>\;
  LOCKSTEP_Master_Out(354) <= \<const0>\;
  LOCKSTEP_Master_Out(355) <= \<const0>\;
  LOCKSTEP_Master_Out(356) <= \<const0>\;
  LOCKSTEP_Master_Out(357) <= \<const0>\;
  LOCKSTEP_Master_Out(358) <= \<const0>\;
  LOCKSTEP_Master_Out(359) <= \<const0>\;
  LOCKSTEP_Master_Out(360) <= \<const0>\;
  LOCKSTEP_Master_Out(361) <= \<const0>\;
  LOCKSTEP_Master_Out(362) <= \<const0>\;
  LOCKSTEP_Master_Out(363) <= \<const0>\;
  LOCKSTEP_Master_Out(364) <= \<const0>\;
  LOCKSTEP_Master_Out(365) <= \<const0>\;
  LOCKSTEP_Master_Out(366) <= \<const0>\;
  LOCKSTEP_Master_Out(367) <= \<const0>\;
  LOCKSTEP_Master_Out(368) <= \<const0>\;
  LOCKSTEP_Master_Out(369) <= \<const0>\;
  LOCKSTEP_Master_Out(370) <= \<const0>\;
  LOCKSTEP_Master_Out(371) <= \<const0>\;
  LOCKSTEP_Master_Out(372) <= \<const0>\;
  LOCKSTEP_Master_Out(373) <= \<const0>\;
  LOCKSTEP_Master_Out(374) <= \<const0>\;
  LOCKSTEP_Master_Out(375) <= \<const0>\;
  LOCKSTEP_Master_Out(376) <= \<const0>\;
  LOCKSTEP_Master_Out(377) <= \<const0>\;
  LOCKSTEP_Master_Out(378) <= \<const0>\;
  LOCKSTEP_Master_Out(379) <= \<const0>\;
  LOCKSTEP_Master_Out(380) <= \<const0>\;
  LOCKSTEP_Master_Out(381) <= \<const0>\;
  LOCKSTEP_Master_Out(382) <= \<const0>\;
  LOCKSTEP_Master_Out(383) <= \<const0>\;
  LOCKSTEP_Master_Out(384) <= \<const0>\;
  LOCKSTEP_Master_Out(385) <= \<const0>\;
  LOCKSTEP_Master_Out(386) <= \<const0>\;
  LOCKSTEP_Master_Out(387) <= \<const0>\;
  LOCKSTEP_Master_Out(388) <= \<const0>\;
  LOCKSTEP_Master_Out(389) <= \<const0>\;
  LOCKSTEP_Master_Out(390) <= \<const0>\;
  LOCKSTEP_Master_Out(391) <= \<const0>\;
  LOCKSTEP_Master_Out(392) <= \<const0>\;
  LOCKSTEP_Master_Out(393) <= \<const0>\;
  LOCKSTEP_Master_Out(394) <= \<const0>\;
  LOCKSTEP_Master_Out(395) <= \<const0>\;
  LOCKSTEP_Master_Out(396) <= \<const0>\;
  LOCKSTEP_Master_Out(397) <= \<const0>\;
  LOCKSTEP_Master_Out(398) <= \<const0>\;
  LOCKSTEP_Master_Out(399) <= \<const0>\;
  LOCKSTEP_Master_Out(400) <= \<const0>\;
  LOCKSTEP_Master_Out(401) <= \<const0>\;
  LOCKSTEP_Master_Out(402) <= \<const0>\;
  LOCKSTEP_Master_Out(403) <= \<const0>\;
  LOCKSTEP_Master_Out(404) <= \<const0>\;
  LOCKSTEP_Master_Out(405) <= \<const0>\;
  LOCKSTEP_Master_Out(406) <= \<const0>\;
  LOCKSTEP_Master_Out(407) <= \<const0>\;
  LOCKSTEP_Master_Out(408) <= \<const0>\;
  LOCKSTEP_Master_Out(409) <= \<const0>\;
  LOCKSTEP_Master_Out(410) <= \<const0>\;
  LOCKSTEP_Master_Out(411) <= \<const0>\;
  LOCKSTEP_Master_Out(412) <= \<const0>\;
  LOCKSTEP_Master_Out(413) <= \<const0>\;
  LOCKSTEP_Master_Out(414) <= \<const0>\;
  LOCKSTEP_Master_Out(415) <= \<const0>\;
  LOCKSTEP_Master_Out(416) <= \<const0>\;
  LOCKSTEP_Master_Out(417) <= \<const0>\;
  LOCKSTEP_Master_Out(418) <= \<const0>\;
  LOCKSTEP_Master_Out(419) <= \<const0>\;
  LOCKSTEP_Master_Out(420) <= \<const0>\;
  LOCKSTEP_Master_Out(421) <= \<const0>\;
  LOCKSTEP_Master_Out(422) <= \<const0>\;
  LOCKSTEP_Master_Out(423) <= \<const0>\;
  LOCKSTEP_Master_Out(424) <= \<const0>\;
  LOCKSTEP_Master_Out(425) <= \<const0>\;
  LOCKSTEP_Master_Out(426) <= \<const0>\;
  LOCKSTEP_Master_Out(427) <= \<const0>\;
  LOCKSTEP_Master_Out(428) <= \<const0>\;
  LOCKSTEP_Master_Out(429) <= \<const0>\;
  LOCKSTEP_Master_Out(430) <= \<const0>\;
  LOCKSTEP_Master_Out(431) <= \<const0>\;
  LOCKSTEP_Master_Out(432) <= \<const0>\;
  LOCKSTEP_Master_Out(433) <= \<const0>\;
  LOCKSTEP_Master_Out(434) <= \<const0>\;
  LOCKSTEP_Master_Out(435) <= \<const0>\;
  LOCKSTEP_Master_Out(436) <= \<const0>\;
  LOCKSTEP_Master_Out(437) <= \<const0>\;
  LOCKSTEP_Master_Out(438) <= \<const0>\;
  LOCKSTEP_Master_Out(439) <= \<const0>\;
  LOCKSTEP_Master_Out(440) <= \<const0>\;
  LOCKSTEP_Master_Out(441) <= \<const0>\;
  LOCKSTEP_Master_Out(442) <= \<const0>\;
  LOCKSTEP_Master_Out(443) <= \<const0>\;
  LOCKSTEP_Master_Out(444) <= \<const0>\;
  LOCKSTEP_Master_Out(445) <= \<const0>\;
  LOCKSTEP_Master_Out(446) <= \<const0>\;
  LOCKSTEP_Master_Out(447) <= \<const0>\;
  LOCKSTEP_Master_Out(448) <= \<const0>\;
  LOCKSTEP_Master_Out(449) <= \<const0>\;
  LOCKSTEP_Master_Out(450) <= \<const0>\;
  LOCKSTEP_Master_Out(451) <= \<const0>\;
  LOCKSTEP_Master_Out(452) <= \<const0>\;
  LOCKSTEP_Master_Out(453) <= \<const0>\;
  LOCKSTEP_Master_Out(454) <= \<const0>\;
  LOCKSTEP_Master_Out(455) <= \<const0>\;
  LOCKSTEP_Master_Out(456) <= \<const0>\;
  LOCKSTEP_Master_Out(457) <= \<const0>\;
  LOCKSTEP_Master_Out(458) <= \<const0>\;
  LOCKSTEP_Master_Out(459) <= \<const0>\;
  LOCKSTEP_Master_Out(460) <= \<const0>\;
  LOCKSTEP_Master_Out(461) <= \<const0>\;
  LOCKSTEP_Master_Out(462) <= \<const0>\;
  LOCKSTEP_Master_Out(463) <= \<const0>\;
  LOCKSTEP_Master_Out(464) <= \<const0>\;
  LOCKSTEP_Master_Out(465) <= \<const0>\;
  LOCKSTEP_Master_Out(466) <= \<const0>\;
  LOCKSTEP_Master_Out(467) <= \<const0>\;
  LOCKSTEP_Master_Out(468) <= \<const0>\;
  LOCKSTEP_Master_Out(469) <= \<const0>\;
  LOCKSTEP_Master_Out(470) <= \<const0>\;
  LOCKSTEP_Master_Out(471) <= \<const0>\;
  LOCKSTEP_Master_Out(472) <= \<const0>\;
  LOCKSTEP_Master_Out(473) <= \<const0>\;
  LOCKSTEP_Master_Out(474) <= \<const0>\;
  LOCKSTEP_Master_Out(475) <= \<const0>\;
  LOCKSTEP_Master_Out(476) <= \<const0>\;
  LOCKSTEP_Master_Out(477) <= \<const0>\;
  LOCKSTEP_Master_Out(478) <= \<const0>\;
  LOCKSTEP_Master_Out(479) <= \<const0>\;
  LOCKSTEP_Master_Out(480) <= \<const0>\;
  LOCKSTEP_Master_Out(481) <= \<const0>\;
  LOCKSTEP_Master_Out(482) <= \<const0>\;
  LOCKSTEP_Master_Out(483) <= \<const0>\;
  LOCKSTEP_Master_Out(484) <= \<const0>\;
  LOCKSTEP_Master_Out(485) <= \<const0>\;
  LOCKSTEP_Master_Out(486) <= \<const0>\;
  LOCKSTEP_Master_Out(487) <= \<const0>\;
  LOCKSTEP_Master_Out(488) <= \<const0>\;
  LOCKSTEP_Master_Out(489) <= \<const0>\;
  LOCKSTEP_Master_Out(490) <= \<const0>\;
  LOCKSTEP_Master_Out(491) <= \<const0>\;
  LOCKSTEP_Master_Out(492) <= \<const0>\;
  LOCKSTEP_Master_Out(493) <= \<const0>\;
  LOCKSTEP_Master_Out(494) <= \<const0>\;
  LOCKSTEP_Master_Out(495) <= \<const0>\;
  LOCKSTEP_Master_Out(496) <= \<const0>\;
  LOCKSTEP_Master_Out(497) <= \<const0>\;
  LOCKSTEP_Master_Out(498) <= \<const0>\;
  LOCKSTEP_Master_Out(499) <= \<const0>\;
  LOCKSTEP_Master_Out(500) <= \<const0>\;
  LOCKSTEP_Master_Out(501) <= \<const0>\;
  LOCKSTEP_Master_Out(502) <= \<const0>\;
  LOCKSTEP_Master_Out(503) <= \<const0>\;
  LOCKSTEP_Master_Out(504) <= \<const0>\;
  LOCKSTEP_Master_Out(505) <= \<const0>\;
  LOCKSTEP_Master_Out(506) <= \<const0>\;
  LOCKSTEP_Master_Out(507) <= \<const0>\;
  LOCKSTEP_Master_Out(508) <= \<const0>\;
  LOCKSTEP_Master_Out(509) <= \<const0>\;
  LOCKSTEP_Master_Out(510) <= \<const0>\;
  LOCKSTEP_Master_Out(511) <= \<const0>\;
  LOCKSTEP_Master_Out(512) <= \<const0>\;
  LOCKSTEP_Master_Out(513) <= \<const0>\;
  LOCKSTEP_Master_Out(514) <= \<const0>\;
  LOCKSTEP_Master_Out(515) <= \<const0>\;
  LOCKSTEP_Master_Out(516) <= \<const0>\;
  LOCKSTEP_Master_Out(517) <= \<const0>\;
  LOCKSTEP_Master_Out(518) <= \<const0>\;
  LOCKSTEP_Master_Out(519) <= \<const0>\;
  LOCKSTEP_Master_Out(520) <= \<const0>\;
  LOCKSTEP_Master_Out(521) <= \<const0>\;
  LOCKSTEP_Master_Out(522) <= \<const0>\;
  LOCKSTEP_Master_Out(523) <= \<const0>\;
  LOCKSTEP_Master_Out(524) <= \<const0>\;
  LOCKSTEP_Master_Out(525) <= \<const0>\;
  LOCKSTEP_Master_Out(526) <= \<const0>\;
  LOCKSTEP_Master_Out(527) <= \<const0>\;
  LOCKSTEP_Master_Out(528) <= \<const0>\;
  LOCKSTEP_Master_Out(529) <= \<const0>\;
  LOCKSTEP_Master_Out(530) <= \<const0>\;
  LOCKSTEP_Master_Out(531) <= \<const0>\;
  LOCKSTEP_Master_Out(532) <= \<const0>\;
  LOCKSTEP_Master_Out(533) <= \<const0>\;
  LOCKSTEP_Master_Out(534) <= \<const0>\;
  LOCKSTEP_Master_Out(535) <= \<const0>\;
  LOCKSTEP_Master_Out(536) <= \<const0>\;
  LOCKSTEP_Master_Out(537) <= \<const0>\;
  LOCKSTEP_Master_Out(538) <= \<const0>\;
  LOCKSTEP_Master_Out(539) <= \<const0>\;
  LOCKSTEP_Master_Out(540) <= \<const0>\;
  LOCKSTEP_Master_Out(541) <= \<const0>\;
  LOCKSTEP_Master_Out(542) <= \<const0>\;
  LOCKSTEP_Master_Out(543) <= \<const0>\;
  LOCKSTEP_Master_Out(544) <= \<const0>\;
  LOCKSTEP_Master_Out(545) <= \<const0>\;
  LOCKSTEP_Master_Out(546) <= \<const0>\;
  LOCKSTEP_Master_Out(547) <= \<const0>\;
  LOCKSTEP_Master_Out(548) <= \<const0>\;
  LOCKSTEP_Master_Out(549) <= \<const0>\;
  LOCKSTEP_Master_Out(550) <= \<const0>\;
  LOCKSTEP_Master_Out(551) <= \<const0>\;
  LOCKSTEP_Master_Out(552) <= \<const0>\;
  LOCKSTEP_Master_Out(553) <= \<const0>\;
  LOCKSTEP_Master_Out(554) <= \<const0>\;
  LOCKSTEP_Master_Out(555) <= \<const0>\;
  LOCKSTEP_Master_Out(556) <= \<const0>\;
  LOCKSTEP_Master_Out(557) <= \<const0>\;
  LOCKSTEP_Master_Out(558) <= \<const0>\;
  LOCKSTEP_Master_Out(559) <= \<const0>\;
  LOCKSTEP_Master_Out(560) <= \<const0>\;
  LOCKSTEP_Master_Out(561) <= \<const0>\;
  LOCKSTEP_Master_Out(562) <= \<const0>\;
  LOCKSTEP_Master_Out(563) <= \<const0>\;
  LOCKSTEP_Master_Out(564) <= \<const0>\;
  LOCKSTEP_Master_Out(565) <= \<const0>\;
  LOCKSTEP_Master_Out(566) <= \<const0>\;
  LOCKSTEP_Master_Out(567) <= \<const0>\;
  LOCKSTEP_Master_Out(568) <= \<const0>\;
  LOCKSTEP_Master_Out(569) <= \<const0>\;
  LOCKSTEP_Master_Out(570) <= \<const0>\;
  LOCKSTEP_Master_Out(571) <= \<const0>\;
  LOCKSTEP_Master_Out(572) <= \<const0>\;
  LOCKSTEP_Master_Out(573) <= \<const0>\;
  LOCKSTEP_Master_Out(574) <= \<const0>\;
  LOCKSTEP_Master_Out(575) <= \<const0>\;
  LOCKSTEP_Master_Out(576) <= \<const0>\;
  LOCKSTEP_Master_Out(577) <= \<const0>\;
  LOCKSTEP_Master_Out(578) <= \<const0>\;
  LOCKSTEP_Master_Out(579) <= \<const0>\;
  LOCKSTEP_Master_Out(580) <= \<const0>\;
  LOCKSTEP_Master_Out(581) <= \<const0>\;
  LOCKSTEP_Master_Out(582) <= \<const0>\;
  LOCKSTEP_Master_Out(583) <= \<const0>\;
  LOCKSTEP_Master_Out(584) <= \<const0>\;
  LOCKSTEP_Master_Out(585) <= \<const0>\;
  LOCKSTEP_Master_Out(586) <= \<const0>\;
  LOCKSTEP_Master_Out(587) <= \<const0>\;
  LOCKSTEP_Master_Out(588) <= \<const0>\;
  LOCKSTEP_Master_Out(589) <= \<const0>\;
  LOCKSTEP_Master_Out(590) <= \<const0>\;
  LOCKSTEP_Master_Out(591) <= \<const0>\;
  LOCKSTEP_Master_Out(592) <= \<const0>\;
  LOCKSTEP_Master_Out(593) <= \<const0>\;
  LOCKSTEP_Master_Out(594) <= \<const0>\;
  LOCKSTEP_Master_Out(595) <= \<const0>\;
  LOCKSTEP_Master_Out(596) <= \<const0>\;
  LOCKSTEP_Master_Out(597) <= \<const0>\;
  LOCKSTEP_Master_Out(598) <= \<const0>\;
  LOCKSTEP_Master_Out(599) <= \<const0>\;
  LOCKSTEP_Master_Out(600) <= \<const0>\;
  LOCKSTEP_Master_Out(601) <= \<const0>\;
  LOCKSTEP_Master_Out(602) <= \<const0>\;
  LOCKSTEP_Master_Out(603) <= \<const0>\;
  LOCKSTEP_Master_Out(604) <= \<const0>\;
  LOCKSTEP_Master_Out(605) <= \<const0>\;
  LOCKSTEP_Master_Out(606) <= \<const0>\;
  LOCKSTEP_Master_Out(607) <= \<const0>\;
  LOCKSTEP_Master_Out(608) <= \<const0>\;
  LOCKSTEP_Master_Out(609) <= \<const0>\;
  LOCKSTEP_Master_Out(610) <= \<const0>\;
  LOCKSTEP_Master_Out(611) <= \<const0>\;
  LOCKSTEP_Master_Out(612) <= \<const0>\;
  LOCKSTEP_Master_Out(613) <= \<const0>\;
  LOCKSTEP_Master_Out(614) <= \<const0>\;
  LOCKSTEP_Master_Out(615) <= \<const0>\;
  LOCKSTEP_Master_Out(616) <= \<const0>\;
  LOCKSTEP_Master_Out(617) <= \<const0>\;
  LOCKSTEP_Master_Out(618) <= \<const0>\;
  LOCKSTEP_Master_Out(619) <= \<const0>\;
  LOCKSTEP_Master_Out(620) <= \<const0>\;
  LOCKSTEP_Master_Out(621) <= \<const0>\;
  LOCKSTEP_Master_Out(622) <= \<const0>\;
  LOCKSTEP_Master_Out(623) <= \<const0>\;
  LOCKSTEP_Master_Out(624) <= \<const0>\;
  LOCKSTEP_Master_Out(625) <= \<const0>\;
  LOCKSTEP_Master_Out(626) <= \<const0>\;
  LOCKSTEP_Master_Out(627) <= \<const0>\;
  LOCKSTEP_Master_Out(628) <= \<const0>\;
  LOCKSTEP_Master_Out(629) <= \<const0>\;
  LOCKSTEP_Master_Out(630) <= \<const0>\;
  LOCKSTEP_Master_Out(631) <= \<const0>\;
  LOCKSTEP_Master_Out(632) <= \<const0>\;
  LOCKSTEP_Master_Out(633) <= \<const0>\;
  LOCKSTEP_Master_Out(634) <= \<const0>\;
  LOCKSTEP_Master_Out(635) <= \<const0>\;
  LOCKSTEP_Master_Out(636) <= \<const0>\;
  LOCKSTEP_Master_Out(637) <= \<const0>\;
  LOCKSTEP_Master_Out(638) <= \<const0>\;
  LOCKSTEP_Master_Out(639) <= \<const0>\;
  LOCKSTEP_Master_Out(640) <= \<const0>\;
  LOCKSTEP_Master_Out(641) <= \<const0>\;
  LOCKSTEP_Master_Out(642) <= \<const0>\;
  LOCKSTEP_Master_Out(643) <= \<const0>\;
  LOCKSTEP_Master_Out(644) <= \<const0>\;
  LOCKSTEP_Master_Out(645) <= \<const0>\;
  LOCKSTEP_Master_Out(646) <= \<const0>\;
  LOCKSTEP_Master_Out(647) <= \<const0>\;
  LOCKSTEP_Master_Out(648) <= \<const0>\;
  LOCKSTEP_Master_Out(649) <= \<const0>\;
  LOCKSTEP_Master_Out(650) <= \<const0>\;
  LOCKSTEP_Master_Out(651) <= \<const0>\;
  LOCKSTEP_Master_Out(652) <= \<const0>\;
  LOCKSTEP_Master_Out(653) <= \<const0>\;
  LOCKSTEP_Master_Out(654) <= \<const0>\;
  LOCKSTEP_Master_Out(655) <= \<const0>\;
  LOCKSTEP_Master_Out(656) <= \<const0>\;
  LOCKSTEP_Master_Out(657) <= \<const0>\;
  LOCKSTEP_Master_Out(658) <= \<const0>\;
  LOCKSTEP_Master_Out(659) <= \<const0>\;
  LOCKSTEP_Master_Out(660) <= \<const0>\;
  LOCKSTEP_Master_Out(661) <= \<const0>\;
  LOCKSTEP_Master_Out(662) <= \<const0>\;
  LOCKSTEP_Master_Out(663) <= \<const0>\;
  LOCKSTEP_Master_Out(664) <= \<const0>\;
  LOCKSTEP_Master_Out(665) <= \<const0>\;
  LOCKSTEP_Master_Out(666) <= \<const0>\;
  LOCKSTEP_Master_Out(667) <= \<const0>\;
  LOCKSTEP_Master_Out(668) <= \<const0>\;
  LOCKSTEP_Master_Out(669) <= \<const0>\;
  LOCKSTEP_Master_Out(670) <= \<const0>\;
  LOCKSTEP_Master_Out(671) <= \<const0>\;
  LOCKSTEP_Master_Out(672) <= \<const0>\;
  LOCKSTEP_Master_Out(673) <= \<const0>\;
  LOCKSTEP_Master_Out(674) <= \<const0>\;
  LOCKSTEP_Master_Out(675) <= \<const0>\;
  LOCKSTEP_Master_Out(676) <= \<const0>\;
  LOCKSTEP_Master_Out(677) <= \<const0>\;
  LOCKSTEP_Master_Out(678) <= \<const0>\;
  LOCKSTEP_Master_Out(679) <= \<const0>\;
  LOCKSTEP_Master_Out(680) <= \<const0>\;
  LOCKSTEP_Master_Out(681) <= \<const0>\;
  LOCKSTEP_Master_Out(682) <= \<const0>\;
  LOCKSTEP_Master_Out(683) <= \<const0>\;
  LOCKSTEP_Master_Out(684) <= \<const0>\;
  LOCKSTEP_Master_Out(685) <= \<const0>\;
  LOCKSTEP_Master_Out(686) <= \<const0>\;
  LOCKSTEP_Master_Out(687) <= \<const0>\;
  LOCKSTEP_Master_Out(688) <= \<const0>\;
  LOCKSTEP_Master_Out(689) <= \<const0>\;
  LOCKSTEP_Master_Out(690) <= \<const0>\;
  LOCKSTEP_Master_Out(691) <= \<const0>\;
  LOCKSTEP_Master_Out(692) <= \<const0>\;
  LOCKSTEP_Master_Out(693) <= \<const0>\;
  LOCKSTEP_Master_Out(694) <= \<const0>\;
  LOCKSTEP_Master_Out(695) <= \<const0>\;
  LOCKSTEP_Master_Out(696) <= \<const0>\;
  LOCKSTEP_Master_Out(697) <= \<const0>\;
  LOCKSTEP_Master_Out(698) <= \<const0>\;
  LOCKSTEP_Master_Out(699) <= \<const0>\;
  LOCKSTEP_Master_Out(700) <= \<const0>\;
  LOCKSTEP_Master_Out(701) <= \<const0>\;
  LOCKSTEP_Master_Out(702) <= \<const0>\;
  LOCKSTEP_Master_Out(703) <= \<const0>\;
  LOCKSTEP_Master_Out(704) <= \<const0>\;
  LOCKSTEP_Master_Out(705) <= \<const0>\;
  LOCKSTEP_Master_Out(706) <= \<const0>\;
  LOCKSTEP_Master_Out(707) <= \<const0>\;
  LOCKSTEP_Master_Out(708) <= \<const0>\;
  LOCKSTEP_Master_Out(709) <= \<const0>\;
  LOCKSTEP_Master_Out(710) <= \<const0>\;
  LOCKSTEP_Master_Out(711) <= \<const0>\;
  LOCKSTEP_Master_Out(712) <= \<const0>\;
  LOCKSTEP_Master_Out(713) <= \<const0>\;
  LOCKSTEP_Master_Out(714) <= \<const0>\;
  LOCKSTEP_Master_Out(715) <= \<const0>\;
  LOCKSTEP_Master_Out(716) <= \<const0>\;
  LOCKSTEP_Master_Out(717) <= \<const0>\;
  LOCKSTEP_Master_Out(718) <= \<const0>\;
  LOCKSTEP_Master_Out(719) <= \<const0>\;
  LOCKSTEP_Master_Out(720) <= \<const0>\;
  LOCKSTEP_Master_Out(721) <= \<const0>\;
  LOCKSTEP_Master_Out(722) <= \<const0>\;
  LOCKSTEP_Master_Out(723) <= \<const0>\;
  LOCKSTEP_Master_Out(724) <= \<const0>\;
  LOCKSTEP_Master_Out(725) <= \<const0>\;
  LOCKSTEP_Master_Out(726) <= \<const0>\;
  LOCKSTEP_Master_Out(727) <= \<const0>\;
  LOCKSTEP_Master_Out(728) <= \<const0>\;
  LOCKSTEP_Master_Out(729) <= \<const0>\;
  LOCKSTEP_Master_Out(730) <= \<const0>\;
  LOCKSTEP_Master_Out(731) <= \<const0>\;
  LOCKSTEP_Master_Out(732) <= \<const0>\;
  LOCKSTEP_Master_Out(733) <= \<const0>\;
  LOCKSTEP_Master_Out(734) <= \<const0>\;
  LOCKSTEP_Master_Out(735) <= \<const0>\;
  LOCKSTEP_Master_Out(736) <= \<const0>\;
  LOCKSTEP_Master_Out(737) <= \<const0>\;
  LOCKSTEP_Master_Out(738) <= \<const0>\;
  LOCKSTEP_Master_Out(739) <= \<const0>\;
  LOCKSTEP_Master_Out(740) <= \<const0>\;
  LOCKSTEP_Master_Out(741) <= \<const0>\;
  LOCKSTEP_Master_Out(742) <= \<const0>\;
  LOCKSTEP_Master_Out(743) <= \<const0>\;
  LOCKSTEP_Master_Out(744) <= \<const0>\;
  LOCKSTEP_Master_Out(745) <= \<const0>\;
  LOCKSTEP_Master_Out(746) <= \<const0>\;
  LOCKSTEP_Master_Out(747) <= \<const0>\;
  LOCKSTEP_Master_Out(748) <= \<const0>\;
  LOCKSTEP_Master_Out(749) <= \<const0>\;
  LOCKSTEP_Master_Out(750) <= \<const0>\;
  LOCKSTEP_Master_Out(751) <= \<const0>\;
  LOCKSTEP_Master_Out(752) <= \<const0>\;
  LOCKSTEP_Master_Out(753) <= \<const0>\;
  LOCKSTEP_Master_Out(754) <= \<const0>\;
  LOCKSTEP_Master_Out(755) <= \<const0>\;
  LOCKSTEP_Master_Out(756) <= \<const0>\;
  LOCKSTEP_Master_Out(757) <= \<const0>\;
  LOCKSTEP_Master_Out(758) <= \<const0>\;
  LOCKSTEP_Master_Out(759) <= \<const0>\;
  LOCKSTEP_Master_Out(760) <= \<const0>\;
  LOCKSTEP_Master_Out(761) <= \<const0>\;
  LOCKSTEP_Master_Out(762) <= \<const0>\;
  LOCKSTEP_Master_Out(763) <= \<const0>\;
  LOCKSTEP_Master_Out(764) <= \<const0>\;
  LOCKSTEP_Master_Out(765) <= \<const0>\;
  LOCKSTEP_Master_Out(766) <= \<const0>\;
  LOCKSTEP_Master_Out(767) <= \<const0>\;
  LOCKSTEP_Master_Out(768) <= \<const0>\;
  LOCKSTEP_Master_Out(769) <= \<const0>\;
  LOCKSTEP_Master_Out(770) <= \<const0>\;
  LOCKSTEP_Master_Out(771) <= \<const0>\;
  LOCKSTEP_Master_Out(772) <= \<const0>\;
  LOCKSTEP_Master_Out(773) <= \<const0>\;
  LOCKSTEP_Master_Out(774) <= \<const0>\;
  LOCKSTEP_Master_Out(775) <= \<const0>\;
  LOCKSTEP_Master_Out(776) <= \<const0>\;
  LOCKSTEP_Master_Out(777) <= \<const0>\;
  LOCKSTEP_Master_Out(778) <= \<const0>\;
  LOCKSTEP_Master_Out(779) <= \<const0>\;
  LOCKSTEP_Master_Out(780) <= \<const0>\;
  LOCKSTEP_Master_Out(781) <= \<const0>\;
  LOCKSTEP_Master_Out(782) <= \<const0>\;
  LOCKSTEP_Master_Out(783) <= \<const0>\;
  LOCKSTEP_Master_Out(784) <= \<const0>\;
  LOCKSTEP_Master_Out(785) <= \<const0>\;
  LOCKSTEP_Master_Out(786) <= \<const0>\;
  LOCKSTEP_Master_Out(787) <= \<const0>\;
  LOCKSTEP_Master_Out(788) <= \<const0>\;
  LOCKSTEP_Master_Out(789) <= \<const0>\;
  LOCKSTEP_Master_Out(790) <= \<const0>\;
  LOCKSTEP_Master_Out(791) <= \<const0>\;
  LOCKSTEP_Master_Out(792) <= \<const0>\;
  LOCKSTEP_Master_Out(793) <= \<const0>\;
  LOCKSTEP_Master_Out(794) <= \<const0>\;
  LOCKSTEP_Master_Out(795) <= \<const0>\;
  LOCKSTEP_Master_Out(796) <= \<const0>\;
  LOCKSTEP_Master_Out(797) <= \<const0>\;
  LOCKSTEP_Master_Out(798) <= \<const0>\;
  LOCKSTEP_Master_Out(799) <= \<const0>\;
  LOCKSTEP_Master_Out(800) <= \<const0>\;
  LOCKSTEP_Master_Out(801) <= \<const0>\;
  LOCKSTEP_Master_Out(802) <= \<const0>\;
  LOCKSTEP_Master_Out(803) <= \<const0>\;
  LOCKSTEP_Master_Out(804) <= \<const0>\;
  LOCKSTEP_Master_Out(805) <= \<const0>\;
  LOCKSTEP_Master_Out(806) <= \<const0>\;
  LOCKSTEP_Master_Out(807) <= \<const0>\;
  LOCKSTEP_Master_Out(808) <= \<const0>\;
  LOCKSTEP_Master_Out(809) <= \<const0>\;
  LOCKSTEP_Master_Out(810) <= \<const0>\;
  LOCKSTEP_Master_Out(811) <= \<const0>\;
  LOCKSTEP_Master_Out(812) <= \<const0>\;
  LOCKSTEP_Master_Out(813) <= \<const0>\;
  LOCKSTEP_Master_Out(814) <= \<const0>\;
  LOCKSTEP_Master_Out(815) <= \<const0>\;
  LOCKSTEP_Master_Out(816) <= \<const0>\;
  LOCKSTEP_Master_Out(817) <= \<const0>\;
  LOCKSTEP_Master_Out(818) <= \<const0>\;
  LOCKSTEP_Master_Out(819) <= \<const0>\;
  LOCKSTEP_Master_Out(820) <= \<const0>\;
  LOCKSTEP_Master_Out(821) <= \<const0>\;
  LOCKSTEP_Master_Out(822) <= \<const0>\;
  LOCKSTEP_Master_Out(823) <= \<const0>\;
  LOCKSTEP_Master_Out(824) <= \<const0>\;
  LOCKSTEP_Master_Out(825) <= \<const0>\;
  LOCKSTEP_Master_Out(826) <= \<const0>\;
  LOCKSTEP_Master_Out(827) <= \<const0>\;
  LOCKSTEP_Master_Out(828) <= \<const0>\;
  LOCKSTEP_Master_Out(829) <= \<const0>\;
  LOCKSTEP_Master_Out(830) <= \<const0>\;
  LOCKSTEP_Master_Out(831) <= \<const0>\;
  LOCKSTEP_Master_Out(832) <= \<const0>\;
  LOCKSTEP_Master_Out(833) <= \<const0>\;
  LOCKSTEP_Master_Out(834) <= \<const0>\;
  LOCKSTEP_Master_Out(835) <= \<const0>\;
  LOCKSTEP_Master_Out(836) <= \<const0>\;
  LOCKSTEP_Master_Out(837) <= \<const0>\;
  LOCKSTEP_Master_Out(838) <= \<const0>\;
  LOCKSTEP_Master_Out(839) <= \<const0>\;
  LOCKSTEP_Master_Out(840) <= \<const0>\;
  LOCKSTEP_Master_Out(841) <= \<const0>\;
  LOCKSTEP_Master_Out(842) <= \<const0>\;
  LOCKSTEP_Master_Out(843) <= \<const0>\;
  LOCKSTEP_Master_Out(844) <= \<const0>\;
  LOCKSTEP_Master_Out(845) <= \<const0>\;
  LOCKSTEP_Master_Out(846) <= \<const0>\;
  LOCKSTEP_Master_Out(847) <= \<const0>\;
  LOCKSTEP_Master_Out(848) <= \<const0>\;
  LOCKSTEP_Master_Out(849) <= \<const0>\;
  LOCKSTEP_Master_Out(850) <= \<const0>\;
  LOCKSTEP_Master_Out(851) <= \<const0>\;
  LOCKSTEP_Master_Out(852) <= \<const0>\;
  LOCKSTEP_Master_Out(853) <= \<const0>\;
  LOCKSTEP_Master_Out(854) <= \<const0>\;
  LOCKSTEP_Master_Out(855) <= \<const0>\;
  LOCKSTEP_Master_Out(856) <= \<const0>\;
  LOCKSTEP_Master_Out(857) <= \<const0>\;
  LOCKSTEP_Master_Out(858) <= \<const0>\;
  LOCKSTEP_Master_Out(859) <= \<const0>\;
  LOCKSTEP_Master_Out(860) <= \<const0>\;
  LOCKSTEP_Master_Out(861) <= \<const0>\;
  LOCKSTEP_Master_Out(862) <= \<const0>\;
  LOCKSTEP_Master_Out(863) <= \<const0>\;
  LOCKSTEP_Master_Out(864) <= \<const0>\;
  LOCKSTEP_Master_Out(865) <= \<const0>\;
  LOCKSTEP_Master_Out(866) <= \<const0>\;
  LOCKSTEP_Master_Out(867) <= \<const0>\;
  LOCKSTEP_Master_Out(868) <= \<const0>\;
  LOCKSTEP_Master_Out(869) <= \<const0>\;
  LOCKSTEP_Master_Out(870) <= \<const0>\;
  LOCKSTEP_Master_Out(871) <= \<const0>\;
  LOCKSTEP_Master_Out(872) <= \<const0>\;
  LOCKSTEP_Master_Out(873) <= \<const0>\;
  LOCKSTEP_Master_Out(874) <= \<const0>\;
  LOCKSTEP_Master_Out(875) <= \<const0>\;
  LOCKSTEP_Master_Out(876) <= \<const0>\;
  LOCKSTEP_Master_Out(877) <= \<const0>\;
  LOCKSTEP_Master_Out(878) <= \<const0>\;
  LOCKSTEP_Master_Out(879) <= \<const0>\;
  LOCKSTEP_Master_Out(880) <= \<const0>\;
  LOCKSTEP_Master_Out(881) <= \<const0>\;
  LOCKSTEP_Master_Out(882) <= \<const0>\;
  LOCKSTEP_Master_Out(883) <= \<const0>\;
  LOCKSTEP_Master_Out(884) <= \<const0>\;
  LOCKSTEP_Master_Out(885) <= \<const0>\;
  LOCKSTEP_Master_Out(886) <= \<const0>\;
  LOCKSTEP_Master_Out(887) <= \<const0>\;
  LOCKSTEP_Master_Out(888) <= \<const0>\;
  LOCKSTEP_Master_Out(889) <= \<const0>\;
  LOCKSTEP_Master_Out(890) <= \<const0>\;
  LOCKSTEP_Master_Out(891) <= \<const0>\;
  LOCKSTEP_Master_Out(892) <= \<const0>\;
  LOCKSTEP_Master_Out(893) <= \<const0>\;
  LOCKSTEP_Master_Out(894) <= \<const0>\;
  LOCKSTEP_Master_Out(895) <= \<const0>\;
  LOCKSTEP_Master_Out(896) <= \<const0>\;
  LOCKSTEP_Master_Out(897) <= \<const0>\;
  LOCKSTEP_Master_Out(898) <= \<const0>\;
  LOCKSTEP_Master_Out(899) <= \<const0>\;
  LOCKSTEP_Master_Out(900) <= \<const0>\;
  LOCKSTEP_Master_Out(901) <= \<const0>\;
  LOCKSTEP_Master_Out(902) <= \<const0>\;
  LOCKSTEP_Master_Out(903) <= \<const0>\;
  LOCKSTEP_Master_Out(904) <= \<const0>\;
  LOCKSTEP_Master_Out(905) <= \<const0>\;
  LOCKSTEP_Master_Out(906) <= \<const0>\;
  LOCKSTEP_Master_Out(907) <= \<const0>\;
  LOCKSTEP_Master_Out(908) <= \<const0>\;
  LOCKSTEP_Master_Out(909) <= \<const0>\;
  LOCKSTEP_Master_Out(910) <= \<const0>\;
  LOCKSTEP_Master_Out(911) <= \<const0>\;
  LOCKSTEP_Master_Out(912) <= \<const0>\;
  LOCKSTEP_Master_Out(913) <= \<const0>\;
  LOCKSTEP_Master_Out(914) <= \<const0>\;
  LOCKSTEP_Master_Out(915) <= \<const0>\;
  LOCKSTEP_Master_Out(916) <= \<const0>\;
  LOCKSTEP_Master_Out(917) <= \<const0>\;
  LOCKSTEP_Master_Out(918) <= \<const0>\;
  LOCKSTEP_Master_Out(919) <= \<const0>\;
  LOCKSTEP_Master_Out(920) <= \<const0>\;
  LOCKSTEP_Master_Out(921) <= \<const0>\;
  LOCKSTEP_Master_Out(922) <= \<const0>\;
  LOCKSTEP_Master_Out(923) <= \<const0>\;
  LOCKSTEP_Master_Out(924) <= \<const0>\;
  LOCKSTEP_Master_Out(925) <= \<const0>\;
  LOCKSTEP_Master_Out(926) <= \<const0>\;
  LOCKSTEP_Master_Out(927) <= \<const0>\;
  LOCKSTEP_Master_Out(928) <= \<const0>\;
  LOCKSTEP_Master_Out(929) <= \<const0>\;
  LOCKSTEP_Master_Out(930) <= \<const0>\;
  LOCKSTEP_Master_Out(931) <= \<const0>\;
  LOCKSTEP_Master_Out(932) <= \<const0>\;
  LOCKSTEP_Master_Out(933) <= \<const0>\;
  LOCKSTEP_Master_Out(934) <= \<const0>\;
  LOCKSTEP_Master_Out(935) <= \<const0>\;
  LOCKSTEP_Master_Out(936) <= \<const0>\;
  LOCKSTEP_Master_Out(937) <= \<const0>\;
  LOCKSTEP_Master_Out(938) <= \<const0>\;
  LOCKSTEP_Master_Out(939) <= \<const0>\;
  LOCKSTEP_Master_Out(940) <= \<const0>\;
  LOCKSTEP_Master_Out(941) <= \<const0>\;
  LOCKSTEP_Master_Out(942) <= \<const0>\;
  LOCKSTEP_Master_Out(943) <= \<const0>\;
  LOCKSTEP_Master_Out(944) <= \<const0>\;
  LOCKSTEP_Master_Out(945) <= \<const0>\;
  LOCKSTEP_Master_Out(946) <= \<const0>\;
  LOCKSTEP_Master_Out(947) <= \<const0>\;
  LOCKSTEP_Master_Out(948) <= \<const0>\;
  LOCKSTEP_Master_Out(949) <= \<const0>\;
  LOCKSTEP_Master_Out(950) <= \<const0>\;
  LOCKSTEP_Master_Out(951) <= \<const0>\;
  LOCKSTEP_Master_Out(952) <= \<const0>\;
  LOCKSTEP_Master_Out(953) <= \<const0>\;
  LOCKSTEP_Master_Out(954) <= \<const0>\;
  LOCKSTEP_Master_Out(955) <= \<const0>\;
  LOCKSTEP_Master_Out(956) <= \<const0>\;
  LOCKSTEP_Master_Out(957) <= \<const0>\;
  LOCKSTEP_Master_Out(958) <= \<const0>\;
  LOCKSTEP_Master_Out(959) <= \<const0>\;
  LOCKSTEP_Master_Out(960) <= \<const0>\;
  LOCKSTEP_Master_Out(961) <= \<const0>\;
  LOCKSTEP_Master_Out(962) <= \<const0>\;
  LOCKSTEP_Master_Out(963) <= \<const0>\;
  LOCKSTEP_Master_Out(964) <= \<const0>\;
  LOCKSTEP_Master_Out(965) <= \<const0>\;
  LOCKSTEP_Master_Out(966) <= \<const0>\;
  LOCKSTEP_Master_Out(967) <= \<const0>\;
  LOCKSTEP_Master_Out(968) <= \<const0>\;
  LOCKSTEP_Master_Out(969) <= \<const0>\;
  LOCKSTEP_Master_Out(970) <= \<const0>\;
  LOCKSTEP_Master_Out(971) <= \<const0>\;
  LOCKSTEP_Master_Out(972) <= \<const0>\;
  LOCKSTEP_Master_Out(973) <= \<const0>\;
  LOCKSTEP_Master_Out(974) <= \<const0>\;
  LOCKSTEP_Master_Out(975) <= \<const0>\;
  LOCKSTEP_Master_Out(976) <= \<const0>\;
  LOCKSTEP_Master_Out(977) <= \<const0>\;
  LOCKSTEP_Master_Out(978) <= \<const0>\;
  LOCKSTEP_Master_Out(979) <= \<const0>\;
  LOCKSTEP_Master_Out(980) <= \<const0>\;
  LOCKSTEP_Master_Out(981) <= \<const0>\;
  LOCKSTEP_Master_Out(982) <= \<const0>\;
  LOCKSTEP_Master_Out(983) <= \<const0>\;
  LOCKSTEP_Master_Out(984) <= \<const0>\;
  LOCKSTEP_Master_Out(985) <= \<const0>\;
  LOCKSTEP_Master_Out(986) <= \<const0>\;
  LOCKSTEP_Master_Out(987) <= \<const0>\;
  LOCKSTEP_Master_Out(988) <= \<const0>\;
  LOCKSTEP_Master_Out(989) <= \<const0>\;
  LOCKSTEP_Master_Out(990) <= \<const0>\;
  LOCKSTEP_Master_Out(991) <= \<const0>\;
  LOCKSTEP_Master_Out(992) <= \<const0>\;
  LOCKSTEP_Master_Out(993) <= \<const0>\;
  LOCKSTEP_Master_Out(994) <= \<const0>\;
  LOCKSTEP_Master_Out(995) <= \<const0>\;
  LOCKSTEP_Master_Out(996) <= \<const0>\;
  LOCKSTEP_Master_Out(997) <= \<const0>\;
  LOCKSTEP_Master_Out(998) <= \<const0>\;
  LOCKSTEP_Master_Out(999) <= \<const0>\;
  LOCKSTEP_Master_Out(1000) <= \<const0>\;
  LOCKSTEP_Master_Out(1001) <= \<const0>\;
  LOCKSTEP_Master_Out(1002) <= \<const0>\;
  LOCKSTEP_Master_Out(1003) <= \<const0>\;
  LOCKSTEP_Master_Out(1004) <= \<const0>\;
  LOCKSTEP_Master_Out(1005) <= \<const0>\;
  LOCKSTEP_Master_Out(1006) <= \<const0>\;
  LOCKSTEP_Master_Out(1007) <= \<const0>\;
  LOCKSTEP_Master_Out(1008) <= \<const0>\;
  LOCKSTEP_Master_Out(1009) <= \<const0>\;
  LOCKSTEP_Master_Out(1010) <= \<const0>\;
  LOCKSTEP_Master_Out(1011) <= \<const0>\;
  LOCKSTEP_Master_Out(1012) <= \<const0>\;
  LOCKSTEP_Master_Out(1013) <= \<const0>\;
  LOCKSTEP_Master_Out(1014) <= \<const0>\;
  LOCKSTEP_Master_Out(1015) <= \<const0>\;
  LOCKSTEP_Master_Out(1016) <= \<const0>\;
  LOCKSTEP_Master_Out(1017) <= \<const0>\;
  LOCKSTEP_Master_Out(1018) <= \<const0>\;
  LOCKSTEP_Master_Out(1019) <= \<const0>\;
  LOCKSTEP_Master_Out(1020) <= \<const0>\;
  LOCKSTEP_Master_Out(1021) <= \<const0>\;
  LOCKSTEP_Master_Out(1022) <= \<const0>\;
  LOCKSTEP_Master_Out(1023) <= \<const0>\;
  LOCKSTEP_Master_Out(1024) <= \<const0>\;
  LOCKSTEP_Master_Out(1025) <= \<const0>\;
  LOCKSTEP_Master_Out(1026) <= \<const0>\;
  LOCKSTEP_Master_Out(1027) <= \<const0>\;
  LOCKSTEP_Master_Out(1028) <= \<const0>\;
  LOCKSTEP_Master_Out(1029) <= \<const0>\;
  LOCKSTEP_Master_Out(1030) <= \<const0>\;
  LOCKSTEP_Master_Out(1031) <= \<const0>\;
  LOCKSTEP_Master_Out(1032) <= \<const0>\;
  LOCKSTEP_Master_Out(1033) <= \<const0>\;
  LOCKSTEP_Master_Out(1034) <= \<const0>\;
  LOCKSTEP_Master_Out(1035) <= \<const0>\;
  LOCKSTEP_Master_Out(1036) <= \<const0>\;
  LOCKSTEP_Master_Out(1037) <= \<const0>\;
  LOCKSTEP_Master_Out(1038) <= \<const0>\;
  LOCKSTEP_Master_Out(1039) <= \<const0>\;
  LOCKSTEP_Master_Out(1040) <= \<const0>\;
  LOCKSTEP_Master_Out(1041) <= \<const0>\;
  LOCKSTEP_Master_Out(1042) <= \<const0>\;
  LOCKSTEP_Master_Out(1043) <= \<const0>\;
  LOCKSTEP_Master_Out(1044) <= \<const0>\;
  LOCKSTEP_Master_Out(1045) <= \<const0>\;
  LOCKSTEP_Master_Out(1046) <= \<const0>\;
  LOCKSTEP_Master_Out(1047) <= \<const0>\;
  LOCKSTEP_Master_Out(1048) <= \<const0>\;
  LOCKSTEP_Master_Out(1049) <= \<const0>\;
  LOCKSTEP_Master_Out(1050) <= \<const0>\;
  LOCKSTEP_Master_Out(1051) <= \<const0>\;
  LOCKSTEP_Master_Out(1052) <= \<const0>\;
  LOCKSTEP_Master_Out(1053) <= \<const0>\;
  LOCKSTEP_Master_Out(1054) <= \<const0>\;
  LOCKSTEP_Master_Out(1055) <= \<const0>\;
  LOCKSTEP_Master_Out(1056) <= \<const0>\;
  LOCKSTEP_Master_Out(1057) <= \<const0>\;
  LOCKSTEP_Master_Out(1058) <= \<const0>\;
  LOCKSTEP_Master_Out(1059) <= \<const0>\;
  LOCKSTEP_Master_Out(1060) <= \<const0>\;
  LOCKSTEP_Master_Out(1061) <= \<const0>\;
  LOCKSTEP_Master_Out(1062) <= \<const0>\;
  LOCKSTEP_Master_Out(1063) <= \<const0>\;
  LOCKSTEP_Master_Out(1064) <= \<const0>\;
  LOCKSTEP_Master_Out(1065) <= \<const0>\;
  LOCKSTEP_Master_Out(1066) <= \<const0>\;
  LOCKSTEP_Master_Out(1067) <= \<const0>\;
  LOCKSTEP_Master_Out(1068) <= \<const0>\;
  LOCKSTEP_Master_Out(1069) <= \<const0>\;
  LOCKSTEP_Master_Out(1070) <= \<const0>\;
  LOCKSTEP_Master_Out(1071) <= \<const0>\;
  LOCKSTEP_Master_Out(1072) <= \<const0>\;
  LOCKSTEP_Master_Out(1073) <= \<const0>\;
  LOCKSTEP_Master_Out(1074) <= \<const0>\;
  LOCKSTEP_Master_Out(1075) <= \<const0>\;
  LOCKSTEP_Master_Out(1076) <= \<const0>\;
  LOCKSTEP_Master_Out(1077) <= \<const0>\;
  LOCKSTEP_Master_Out(1078) <= \<const0>\;
  LOCKSTEP_Master_Out(1079) <= \<const0>\;
  LOCKSTEP_Master_Out(1080) <= \<const0>\;
  LOCKSTEP_Master_Out(1081) <= \<const0>\;
  LOCKSTEP_Master_Out(1082) <= \<const0>\;
  LOCKSTEP_Master_Out(1083) <= \<const0>\;
  LOCKSTEP_Master_Out(1084) <= \<const0>\;
  LOCKSTEP_Master_Out(1085) <= \<const0>\;
  LOCKSTEP_Master_Out(1086) <= \<const0>\;
  LOCKSTEP_Master_Out(1087) <= \<const0>\;
  LOCKSTEP_Master_Out(1088) <= \<const0>\;
  LOCKSTEP_Master_Out(1089) <= \<const0>\;
  LOCKSTEP_Master_Out(1090) <= \<const0>\;
  LOCKSTEP_Master_Out(1091) <= \<const0>\;
  LOCKSTEP_Master_Out(1092) <= \<const0>\;
  LOCKSTEP_Master_Out(1093) <= \<const0>\;
  LOCKSTEP_Master_Out(1094) <= \<const0>\;
  LOCKSTEP_Master_Out(1095) <= \<const0>\;
  LOCKSTEP_Master_Out(1096) <= \<const0>\;
  LOCKSTEP_Master_Out(1097) <= \<const0>\;
  LOCKSTEP_Master_Out(1098) <= \<const0>\;
  LOCKSTEP_Master_Out(1099) <= \<const0>\;
  LOCKSTEP_Master_Out(1100) <= \<const0>\;
  LOCKSTEP_Master_Out(1101) <= \<const0>\;
  LOCKSTEP_Master_Out(1102) <= \<const0>\;
  LOCKSTEP_Master_Out(1103) <= \<const0>\;
  LOCKSTEP_Master_Out(1104) <= \<const0>\;
  LOCKSTEP_Master_Out(1105) <= \<const0>\;
  LOCKSTEP_Master_Out(1106) <= \<const0>\;
  LOCKSTEP_Master_Out(1107) <= \<const0>\;
  LOCKSTEP_Master_Out(1108) <= \<const0>\;
  LOCKSTEP_Master_Out(1109) <= \<const0>\;
  LOCKSTEP_Master_Out(1110) <= \<const0>\;
  LOCKSTEP_Master_Out(1111) <= \<const0>\;
  LOCKSTEP_Master_Out(1112) <= \<const0>\;
  LOCKSTEP_Master_Out(1113) <= \<const0>\;
  LOCKSTEP_Master_Out(1114) <= \<const0>\;
  LOCKSTEP_Master_Out(1115) <= \<const0>\;
  LOCKSTEP_Master_Out(1116) <= \<const0>\;
  LOCKSTEP_Master_Out(1117) <= \<const0>\;
  LOCKSTEP_Master_Out(1118) <= \<const0>\;
  LOCKSTEP_Master_Out(1119) <= \<const0>\;
  LOCKSTEP_Master_Out(1120) <= \<const0>\;
  LOCKSTEP_Master_Out(1121) <= \<const0>\;
  LOCKSTEP_Master_Out(1122) <= \<const0>\;
  LOCKSTEP_Master_Out(1123) <= \<const0>\;
  LOCKSTEP_Master_Out(1124) <= \<const0>\;
  LOCKSTEP_Master_Out(1125) <= \<const0>\;
  LOCKSTEP_Master_Out(1126) <= \<const0>\;
  LOCKSTEP_Master_Out(1127) <= \<const0>\;
  LOCKSTEP_Master_Out(1128) <= \<const0>\;
  LOCKSTEP_Master_Out(1129) <= \<const0>\;
  LOCKSTEP_Master_Out(1130) <= \<const0>\;
  LOCKSTEP_Master_Out(1131) <= \<const0>\;
  LOCKSTEP_Master_Out(1132) <= \<const0>\;
  LOCKSTEP_Master_Out(1133) <= \<const0>\;
  LOCKSTEP_Master_Out(1134) <= \<const0>\;
  LOCKSTEP_Master_Out(1135) <= \<const0>\;
  LOCKSTEP_Master_Out(1136) <= \<const0>\;
  LOCKSTEP_Master_Out(1137) <= \<const0>\;
  LOCKSTEP_Master_Out(1138) <= \<const0>\;
  LOCKSTEP_Master_Out(1139) <= \<const0>\;
  LOCKSTEP_Master_Out(1140) <= \<const0>\;
  LOCKSTEP_Master_Out(1141) <= \<const0>\;
  LOCKSTEP_Master_Out(1142) <= \<const0>\;
  LOCKSTEP_Master_Out(1143) <= \<const0>\;
  LOCKSTEP_Master_Out(1144) <= \<const0>\;
  LOCKSTEP_Master_Out(1145) <= \<const0>\;
  LOCKSTEP_Master_Out(1146) <= \<const0>\;
  LOCKSTEP_Master_Out(1147) <= \<const0>\;
  LOCKSTEP_Master_Out(1148) <= \<const0>\;
  LOCKSTEP_Master_Out(1149) <= \<const0>\;
  LOCKSTEP_Master_Out(1150) <= \<const0>\;
  LOCKSTEP_Master_Out(1151) <= \<const0>\;
  LOCKSTEP_Master_Out(1152) <= \<const0>\;
  LOCKSTEP_Master_Out(1153) <= \<const0>\;
  LOCKSTEP_Master_Out(1154) <= \<const0>\;
  LOCKSTEP_Master_Out(1155) <= \<const0>\;
  LOCKSTEP_Master_Out(1156) <= \<const0>\;
  LOCKSTEP_Master_Out(1157) <= \<const0>\;
  LOCKSTEP_Master_Out(1158) <= \<const0>\;
  LOCKSTEP_Master_Out(1159) <= \<const0>\;
  LOCKSTEP_Master_Out(1160) <= \<const0>\;
  LOCKSTEP_Master_Out(1161) <= \<const0>\;
  LOCKSTEP_Master_Out(1162) <= \<const0>\;
  LOCKSTEP_Master_Out(1163) <= \<const0>\;
  LOCKSTEP_Master_Out(1164) <= \<const0>\;
  LOCKSTEP_Master_Out(1165) <= \<const0>\;
  LOCKSTEP_Master_Out(1166) <= \<const0>\;
  LOCKSTEP_Master_Out(1167) <= \<const0>\;
  LOCKSTEP_Master_Out(1168) <= \<const0>\;
  LOCKSTEP_Master_Out(1169) <= \<const0>\;
  LOCKSTEP_Master_Out(1170) <= \<const0>\;
  LOCKSTEP_Master_Out(1171) <= \<const0>\;
  LOCKSTEP_Master_Out(1172) <= \<const0>\;
  LOCKSTEP_Master_Out(1173) <= \<const0>\;
  LOCKSTEP_Master_Out(1174) <= \<const0>\;
  LOCKSTEP_Master_Out(1175) <= \<const0>\;
  LOCKSTEP_Master_Out(1176) <= \<const0>\;
  LOCKSTEP_Master_Out(1177) <= \<const0>\;
  LOCKSTEP_Master_Out(1178) <= \<const0>\;
  LOCKSTEP_Master_Out(1179) <= \<const0>\;
  LOCKSTEP_Master_Out(1180) <= \<const0>\;
  LOCKSTEP_Master_Out(1181) <= \<const0>\;
  LOCKSTEP_Master_Out(1182) <= \<const0>\;
  LOCKSTEP_Master_Out(1183) <= \<const0>\;
  LOCKSTEP_Master_Out(1184) <= \<const0>\;
  LOCKSTEP_Master_Out(1185) <= \<const0>\;
  LOCKSTEP_Master_Out(1186) <= \<const0>\;
  LOCKSTEP_Master_Out(1187) <= \<const0>\;
  LOCKSTEP_Master_Out(1188) <= \<const0>\;
  LOCKSTEP_Master_Out(1189) <= \<const0>\;
  LOCKSTEP_Master_Out(1190) <= \<const0>\;
  LOCKSTEP_Master_Out(1191) <= \<const0>\;
  LOCKSTEP_Master_Out(1192) <= \<const0>\;
  LOCKSTEP_Master_Out(1193) <= \<const0>\;
  LOCKSTEP_Master_Out(1194) <= \<const0>\;
  LOCKSTEP_Master_Out(1195) <= \<const0>\;
  LOCKSTEP_Master_Out(1196) <= \<const0>\;
  LOCKSTEP_Master_Out(1197) <= \<const0>\;
  LOCKSTEP_Master_Out(1198) <= \<const0>\;
  LOCKSTEP_Master_Out(1199) <= \<const0>\;
  LOCKSTEP_Master_Out(1200) <= \<const0>\;
  LOCKSTEP_Master_Out(1201) <= \<const0>\;
  LOCKSTEP_Master_Out(1202) <= \<const0>\;
  LOCKSTEP_Master_Out(1203) <= \<const0>\;
  LOCKSTEP_Master_Out(1204) <= \<const0>\;
  LOCKSTEP_Master_Out(1205) <= \<const0>\;
  LOCKSTEP_Master_Out(1206) <= \<const0>\;
  LOCKSTEP_Master_Out(1207) <= \<const0>\;
  LOCKSTEP_Master_Out(1208) <= \<const0>\;
  LOCKSTEP_Master_Out(1209) <= \<const0>\;
  LOCKSTEP_Master_Out(1210) <= \<const0>\;
  LOCKSTEP_Master_Out(1211) <= \<const0>\;
  LOCKSTEP_Master_Out(1212) <= \<const0>\;
  LOCKSTEP_Master_Out(1213) <= \<const0>\;
  LOCKSTEP_Master_Out(1214) <= \<const0>\;
  LOCKSTEP_Master_Out(1215) <= \<const0>\;
  LOCKSTEP_Master_Out(1216) <= \<const0>\;
  LOCKSTEP_Master_Out(1217) <= \<const0>\;
  LOCKSTEP_Master_Out(1218) <= \<const0>\;
  LOCKSTEP_Master_Out(1219) <= \<const0>\;
  LOCKSTEP_Master_Out(1220) <= \<const0>\;
  LOCKSTEP_Master_Out(1221) <= \<const0>\;
  LOCKSTEP_Master_Out(1222) <= \<const0>\;
  LOCKSTEP_Master_Out(1223) <= \<const0>\;
  LOCKSTEP_Master_Out(1224) <= \<const0>\;
  LOCKSTEP_Master_Out(1225) <= \<const0>\;
  LOCKSTEP_Master_Out(1226) <= \<const0>\;
  LOCKSTEP_Master_Out(1227) <= \<const0>\;
  LOCKSTEP_Master_Out(1228) <= \<const0>\;
  LOCKSTEP_Master_Out(1229) <= \<const0>\;
  LOCKSTEP_Master_Out(1230) <= \<const0>\;
  LOCKSTEP_Master_Out(1231) <= \<const0>\;
  LOCKSTEP_Master_Out(1232) <= \<const0>\;
  LOCKSTEP_Master_Out(1233) <= \<const0>\;
  LOCKSTEP_Master_Out(1234) <= \<const0>\;
  LOCKSTEP_Master_Out(1235) <= \<const0>\;
  LOCKSTEP_Master_Out(1236) <= \<const0>\;
  LOCKSTEP_Master_Out(1237) <= \<const0>\;
  LOCKSTEP_Master_Out(1238) <= \<const0>\;
  LOCKSTEP_Master_Out(1239) <= \<const0>\;
  LOCKSTEP_Master_Out(1240) <= \<const0>\;
  LOCKSTEP_Master_Out(1241) <= \<const0>\;
  LOCKSTEP_Master_Out(1242) <= \<const0>\;
  LOCKSTEP_Master_Out(1243) <= \<const0>\;
  LOCKSTEP_Master_Out(1244) <= \<const0>\;
  LOCKSTEP_Master_Out(1245) <= \<const0>\;
  LOCKSTEP_Master_Out(1246) <= \<const0>\;
  LOCKSTEP_Master_Out(1247) <= \<const0>\;
  LOCKSTEP_Master_Out(1248) <= \<const0>\;
  LOCKSTEP_Master_Out(1249) <= \<const0>\;
  LOCKSTEP_Master_Out(1250) <= \<const0>\;
  LOCKSTEP_Master_Out(1251) <= \<const0>\;
  LOCKSTEP_Master_Out(1252) <= \<const0>\;
  LOCKSTEP_Master_Out(1253) <= \<const0>\;
  LOCKSTEP_Master_Out(1254) <= \<const0>\;
  LOCKSTEP_Master_Out(1255) <= \<const0>\;
  LOCKSTEP_Master_Out(1256) <= \<const0>\;
  LOCKSTEP_Master_Out(1257) <= \<const0>\;
  LOCKSTEP_Master_Out(1258) <= \<const0>\;
  LOCKSTEP_Master_Out(1259) <= \<const0>\;
  LOCKSTEP_Master_Out(1260) <= \<const0>\;
  LOCKSTEP_Master_Out(1261) <= \<const0>\;
  LOCKSTEP_Master_Out(1262) <= \<const0>\;
  LOCKSTEP_Master_Out(1263) <= \<const0>\;
  LOCKSTEP_Master_Out(1264) <= \<const0>\;
  LOCKSTEP_Master_Out(1265) <= \<const0>\;
  LOCKSTEP_Master_Out(1266) <= \<const0>\;
  LOCKSTEP_Master_Out(1267) <= \<const0>\;
  LOCKSTEP_Master_Out(1268) <= \<const0>\;
  LOCKSTEP_Master_Out(1269) <= \<const0>\;
  LOCKSTEP_Master_Out(1270) <= \<const0>\;
  LOCKSTEP_Master_Out(1271) <= \<const0>\;
  LOCKSTEP_Master_Out(1272) <= \<const0>\;
  LOCKSTEP_Master_Out(1273) <= \<const0>\;
  LOCKSTEP_Master_Out(1274) <= \<const0>\;
  LOCKSTEP_Master_Out(1275) <= \<const0>\;
  LOCKSTEP_Master_Out(1276) <= \<const0>\;
  LOCKSTEP_Master_Out(1277) <= \<const0>\;
  LOCKSTEP_Master_Out(1278) <= \<const0>\;
  LOCKSTEP_Master_Out(1279) <= \<const0>\;
  LOCKSTEP_Master_Out(1280) <= \<const0>\;
  LOCKSTEP_Master_Out(1281) <= \<const0>\;
  LOCKSTEP_Master_Out(1282) <= \<const0>\;
  LOCKSTEP_Master_Out(1283) <= \<const0>\;
  LOCKSTEP_Master_Out(1284) <= \<const0>\;
  LOCKSTEP_Master_Out(1285) <= \<const0>\;
  LOCKSTEP_Master_Out(1286) <= \<const0>\;
  LOCKSTEP_Master_Out(1287) <= \<const0>\;
  LOCKSTEP_Master_Out(1288) <= \<const0>\;
  LOCKSTEP_Master_Out(1289) <= \<const0>\;
  LOCKSTEP_Master_Out(1290) <= \<const0>\;
  LOCKSTEP_Master_Out(1291) <= \<const0>\;
  LOCKSTEP_Master_Out(1292) <= \<const0>\;
  LOCKSTEP_Master_Out(1293) <= \<const0>\;
  LOCKSTEP_Master_Out(1294) <= \<const0>\;
  LOCKSTEP_Master_Out(1295) <= \<const0>\;
  LOCKSTEP_Master_Out(1296) <= \<const0>\;
  LOCKSTEP_Master_Out(1297) <= \<const0>\;
  LOCKSTEP_Master_Out(1298) <= \<const0>\;
  LOCKSTEP_Master_Out(1299) <= \<const0>\;
  LOCKSTEP_Master_Out(1300) <= \<const0>\;
  LOCKSTEP_Master_Out(1301) <= \<const0>\;
  LOCKSTEP_Master_Out(1302) <= \<const0>\;
  LOCKSTEP_Master_Out(1303) <= \<const0>\;
  LOCKSTEP_Master_Out(1304) <= \<const0>\;
  LOCKSTEP_Master_Out(1305) <= \<const0>\;
  LOCKSTEP_Master_Out(1306) <= \<const0>\;
  LOCKSTEP_Master_Out(1307) <= \<const0>\;
  LOCKSTEP_Master_Out(1308) <= \<const0>\;
  LOCKSTEP_Master_Out(1309) <= \<const0>\;
  LOCKSTEP_Master_Out(1310) <= \<const0>\;
  LOCKSTEP_Master_Out(1311) <= \<const0>\;
  LOCKSTEP_Master_Out(1312) <= \<const0>\;
  LOCKSTEP_Master_Out(1313) <= \<const0>\;
  LOCKSTEP_Master_Out(1314) <= \<const0>\;
  LOCKSTEP_Master_Out(1315) <= \<const0>\;
  LOCKSTEP_Master_Out(1316) <= \<const0>\;
  LOCKSTEP_Master_Out(1317) <= \<const0>\;
  LOCKSTEP_Master_Out(1318) <= \<const0>\;
  LOCKSTEP_Master_Out(1319) <= \<const0>\;
  LOCKSTEP_Master_Out(1320) <= \<const0>\;
  LOCKSTEP_Master_Out(1321) <= \<const0>\;
  LOCKSTEP_Master_Out(1322) <= \<const0>\;
  LOCKSTEP_Master_Out(1323) <= \<const0>\;
  LOCKSTEP_Master_Out(1324) <= \<const0>\;
  LOCKSTEP_Master_Out(1325) <= \<const0>\;
  LOCKSTEP_Master_Out(1326) <= \<const0>\;
  LOCKSTEP_Master_Out(1327) <= \<const0>\;
  LOCKSTEP_Master_Out(1328) <= \<const0>\;
  LOCKSTEP_Master_Out(1329) <= \<const0>\;
  LOCKSTEP_Master_Out(1330) <= \<const0>\;
  LOCKSTEP_Master_Out(1331) <= \<const0>\;
  LOCKSTEP_Master_Out(1332) <= \<const0>\;
  LOCKSTEP_Master_Out(1333) <= \<const0>\;
  LOCKSTEP_Master_Out(1334) <= \<const0>\;
  LOCKSTEP_Master_Out(1335) <= \<const0>\;
  LOCKSTEP_Master_Out(1336) <= \<const0>\;
  LOCKSTEP_Master_Out(1337) <= \<const0>\;
  LOCKSTEP_Master_Out(1338) <= \<const0>\;
  LOCKSTEP_Master_Out(1339) <= \<const0>\;
  LOCKSTEP_Master_Out(1340) <= \<const0>\;
  LOCKSTEP_Master_Out(1341) <= \<const0>\;
  LOCKSTEP_Master_Out(1342) <= \<const0>\;
  LOCKSTEP_Master_Out(1343) <= \<const0>\;
  LOCKSTEP_Master_Out(1344) <= \<const0>\;
  LOCKSTEP_Master_Out(1345) <= \<const0>\;
  LOCKSTEP_Master_Out(1346) <= \<const0>\;
  LOCKSTEP_Master_Out(1347) <= \<const0>\;
  LOCKSTEP_Master_Out(1348) <= \<const0>\;
  LOCKSTEP_Master_Out(1349) <= \<const0>\;
  LOCKSTEP_Master_Out(1350) <= \<const0>\;
  LOCKSTEP_Master_Out(1351) <= \<const0>\;
  LOCKSTEP_Master_Out(1352) <= \<const0>\;
  LOCKSTEP_Master_Out(1353) <= \<const0>\;
  LOCKSTEP_Master_Out(1354) <= \<const0>\;
  LOCKSTEP_Master_Out(1355) <= \<const0>\;
  LOCKSTEP_Master_Out(1356) <= \<const0>\;
  LOCKSTEP_Master_Out(1357) <= \<const0>\;
  LOCKSTEP_Master_Out(1358) <= \<const0>\;
  LOCKSTEP_Master_Out(1359) <= \<const0>\;
  LOCKSTEP_Master_Out(1360) <= \<const0>\;
  LOCKSTEP_Master_Out(1361) <= \<const0>\;
  LOCKSTEP_Master_Out(1362) <= \<const0>\;
  LOCKSTEP_Master_Out(1363) <= \<const0>\;
  LOCKSTEP_Master_Out(1364) <= \<const0>\;
  LOCKSTEP_Master_Out(1365) <= \<const0>\;
  LOCKSTEP_Master_Out(1366) <= \<const0>\;
  LOCKSTEP_Master_Out(1367) <= \<const0>\;
  LOCKSTEP_Master_Out(1368) <= \<const0>\;
  LOCKSTEP_Master_Out(1369) <= \<const0>\;
  LOCKSTEP_Master_Out(1370) <= \<const0>\;
  LOCKSTEP_Master_Out(1371) <= \<const0>\;
  LOCKSTEP_Master_Out(1372) <= \<const0>\;
  LOCKSTEP_Master_Out(1373) <= \<const0>\;
  LOCKSTEP_Master_Out(1374) <= \<const0>\;
  LOCKSTEP_Master_Out(1375) <= \<const0>\;
  LOCKSTEP_Master_Out(1376) <= \<const0>\;
  LOCKSTEP_Master_Out(1377) <= \<const0>\;
  LOCKSTEP_Master_Out(1378) <= \<const0>\;
  LOCKSTEP_Master_Out(1379) <= \<const0>\;
  LOCKSTEP_Master_Out(1380) <= \<const0>\;
  LOCKSTEP_Master_Out(1381) <= \<const0>\;
  LOCKSTEP_Master_Out(1382) <= \<const0>\;
  LOCKSTEP_Master_Out(1383) <= \<const0>\;
  LOCKSTEP_Master_Out(1384) <= \<const0>\;
  LOCKSTEP_Master_Out(1385) <= \<const0>\;
  LOCKSTEP_Master_Out(1386) <= \<const0>\;
  LOCKSTEP_Master_Out(1387) <= \<const0>\;
  LOCKSTEP_Master_Out(1388) <= \<const0>\;
  LOCKSTEP_Master_Out(1389) <= \<const0>\;
  LOCKSTEP_Master_Out(1390) <= \<const0>\;
  LOCKSTEP_Master_Out(1391) <= \<const0>\;
  LOCKSTEP_Master_Out(1392) <= \<const0>\;
  LOCKSTEP_Master_Out(1393) <= \<const0>\;
  LOCKSTEP_Master_Out(1394) <= \<const0>\;
  LOCKSTEP_Master_Out(1395) <= \<const0>\;
  LOCKSTEP_Master_Out(1396) <= \<const0>\;
  LOCKSTEP_Master_Out(1397) <= \<const0>\;
  LOCKSTEP_Master_Out(1398) <= \<const0>\;
  LOCKSTEP_Master_Out(1399) <= \<const0>\;
  LOCKSTEP_Master_Out(1400) <= \<const0>\;
  LOCKSTEP_Master_Out(1401) <= \<const0>\;
  LOCKSTEP_Master_Out(1402) <= \<const0>\;
  LOCKSTEP_Master_Out(1403) <= \<const0>\;
  LOCKSTEP_Master_Out(1404) <= \<const0>\;
  LOCKSTEP_Master_Out(1405) <= \<const0>\;
  LOCKSTEP_Master_Out(1406) <= \<const0>\;
  LOCKSTEP_Master_Out(1407) <= \<const0>\;
  LOCKSTEP_Master_Out(1408) <= \<const0>\;
  LOCKSTEP_Master_Out(1409) <= \<const0>\;
  LOCKSTEP_Master_Out(1410) <= \<const0>\;
  LOCKSTEP_Master_Out(1411) <= \<const0>\;
  LOCKSTEP_Master_Out(1412) <= \<const0>\;
  LOCKSTEP_Master_Out(1413) <= \<const0>\;
  LOCKSTEP_Master_Out(1414) <= \<const0>\;
  LOCKSTEP_Master_Out(1415) <= \<const0>\;
  LOCKSTEP_Master_Out(1416) <= \<const0>\;
  LOCKSTEP_Master_Out(1417) <= \<const0>\;
  LOCKSTEP_Master_Out(1418) <= \<const0>\;
  LOCKSTEP_Master_Out(1419) <= \<const0>\;
  LOCKSTEP_Master_Out(1420) <= \<const0>\;
  LOCKSTEP_Master_Out(1421) <= \<const0>\;
  LOCKSTEP_Master_Out(1422) <= \<const0>\;
  LOCKSTEP_Master_Out(1423) <= \<const0>\;
  LOCKSTEP_Master_Out(1424) <= \<const0>\;
  LOCKSTEP_Master_Out(1425) <= \<const0>\;
  LOCKSTEP_Master_Out(1426) <= \<const0>\;
  LOCKSTEP_Master_Out(1427) <= \<const0>\;
  LOCKSTEP_Master_Out(1428) <= \<const0>\;
  LOCKSTEP_Master_Out(1429) <= \<const0>\;
  LOCKSTEP_Master_Out(1430) <= \<const0>\;
  LOCKSTEP_Master_Out(1431) <= \<const0>\;
  LOCKSTEP_Master_Out(1432) <= \<const0>\;
  LOCKSTEP_Master_Out(1433) <= \<const0>\;
  LOCKSTEP_Master_Out(1434) <= \<const0>\;
  LOCKSTEP_Master_Out(1435) <= \<const0>\;
  LOCKSTEP_Master_Out(1436) <= \<const0>\;
  LOCKSTEP_Master_Out(1437) <= \<const0>\;
  LOCKSTEP_Master_Out(1438) <= \<const0>\;
  LOCKSTEP_Master_Out(1439) <= \<const0>\;
  LOCKSTEP_Master_Out(1440) <= \<const0>\;
  LOCKSTEP_Master_Out(1441) <= \<const0>\;
  LOCKSTEP_Master_Out(1442) <= \<const0>\;
  LOCKSTEP_Master_Out(1443) <= \<const0>\;
  LOCKSTEP_Master_Out(1444) <= \<const0>\;
  LOCKSTEP_Master_Out(1445) <= \<const0>\;
  LOCKSTEP_Master_Out(1446) <= \<const0>\;
  LOCKSTEP_Master_Out(1447) <= \<const0>\;
  LOCKSTEP_Master_Out(1448) <= \<const0>\;
  LOCKSTEP_Master_Out(1449) <= \<const0>\;
  LOCKSTEP_Master_Out(1450) <= \<const0>\;
  LOCKSTEP_Master_Out(1451) <= \<const0>\;
  LOCKSTEP_Master_Out(1452) <= \<const0>\;
  LOCKSTEP_Master_Out(1453) <= \<const0>\;
  LOCKSTEP_Master_Out(1454) <= \<const0>\;
  LOCKSTEP_Master_Out(1455) <= \<const0>\;
  LOCKSTEP_Master_Out(1456) <= \<const0>\;
  LOCKSTEP_Master_Out(1457) <= \<const0>\;
  LOCKSTEP_Master_Out(1458) <= \<const0>\;
  LOCKSTEP_Master_Out(1459) <= \<const0>\;
  LOCKSTEP_Master_Out(1460) <= \<const0>\;
  LOCKSTEP_Master_Out(1461) <= \<const0>\;
  LOCKSTEP_Master_Out(1462) <= \<const0>\;
  LOCKSTEP_Master_Out(1463) <= \<const0>\;
  LOCKSTEP_Master_Out(1464) <= \<const0>\;
  LOCKSTEP_Master_Out(1465) <= \<const0>\;
  LOCKSTEP_Master_Out(1466) <= \<const0>\;
  LOCKSTEP_Master_Out(1467) <= \<const0>\;
  LOCKSTEP_Master_Out(1468) <= \<const0>\;
  LOCKSTEP_Master_Out(1469) <= \<const0>\;
  LOCKSTEP_Master_Out(1470) <= \<const0>\;
  LOCKSTEP_Master_Out(1471) <= \<const0>\;
  LOCKSTEP_Master_Out(1472) <= \<const0>\;
  LOCKSTEP_Master_Out(1473) <= \<const0>\;
  LOCKSTEP_Master_Out(1474) <= \<const0>\;
  LOCKSTEP_Master_Out(1475) <= \<const0>\;
  LOCKSTEP_Master_Out(1476) <= \<const0>\;
  LOCKSTEP_Master_Out(1477) <= \<const0>\;
  LOCKSTEP_Master_Out(1478) <= \<const0>\;
  LOCKSTEP_Master_Out(1479) <= \<const0>\;
  LOCKSTEP_Master_Out(1480) <= \<const0>\;
  LOCKSTEP_Master_Out(1481) <= \<const0>\;
  LOCKSTEP_Master_Out(1482) <= \<const0>\;
  LOCKSTEP_Master_Out(1483) <= \<const0>\;
  LOCKSTEP_Master_Out(1484) <= \<const0>\;
  LOCKSTEP_Master_Out(1485) <= \<const0>\;
  LOCKSTEP_Master_Out(1486) <= \<const0>\;
  LOCKSTEP_Master_Out(1487) <= \<const0>\;
  LOCKSTEP_Master_Out(1488) <= \<const0>\;
  LOCKSTEP_Master_Out(1489) <= \<const0>\;
  LOCKSTEP_Master_Out(1490) <= \<const0>\;
  LOCKSTEP_Master_Out(1491) <= \<const0>\;
  LOCKSTEP_Master_Out(1492) <= \<const0>\;
  LOCKSTEP_Master_Out(1493) <= \<const0>\;
  LOCKSTEP_Master_Out(1494) <= \<const0>\;
  LOCKSTEP_Master_Out(1495) <= \<const0>\;
  LOCKSTEP_Master_Out(1496) <= \<const0>\;
  LOCKSTEP_Master_Out(1497) <= \<const0>\;
  LOCKSTEP_Master_Out(1498) <= \<const0>\;
  LOCKSTEP_Master_Out(1499) <= \<const0>\;
  LOCKSTEP_Master_Out(1500) <= \<const0>\;
  LOCKSTEP_Master_Out(1501) <= \<const0>\;
  LOCKSTEP_Master_Out(1502) <= \<const0>\;
  LOCKSTEP_Master_Out(1503) <= \<const0>\;
  LOCKSTEP_Master_Out(1504) <= \<const0>\;
  LOCKSTEP_Master_Out(1505) <= \<const0>\;
  LOCKSTEP_Master_Out(1506) <= \<const0>\;
  LOCKSTEP_Master_Out(1507) <= \<const0>\;
  LOCKSTEP_Master_Out(1508) <= \<const0>\;
  LOCKSTEP_Master_Out(1509) <= \<const0>\;
  LOCKSTEP_Master_Out(1510) <= \<const0>\;
  LOCKSTEP_Master_Out(1511) <= \<const0>\;
  LOCKSTEP_Master_Out(1512) <= \<const0>\;
  LOCKSTEP_Master_Out(1513) <= \<const0>\;
  LOCKSTEP_Master_Out(1514) <= \<const0>\;
  LOCKSTEP_Master_Out(1515) <= \<const0>\;
  LOCKSTEP_Master_Out(1516) <= \<const0>\;
  LOCKSTEP_Master_Out(1517) <= \<const0>\;
  LOCKSTEP_Master_Out(1518) <= \<const0>\;
  LOCKSTEP_Master_Out(1519) <= \<const0>\;
  LOCKSTEP_Master_Out(1520) <= \<const0>\;
  LOCKSTEP_Master_Out(1521) <= \<const0>\;
  LOCKSTEP_Master_Out(1522) <= \<const0>\;
  LOCKSTEP_Master_Out(1523) <= \<const0>\;
  LOCKSTEP_Master_Out(1524) <= \<const0>\;
  LOCKSTEP_Master_Out(1525) <= \<const0>\;
  LOCKSTEP_Master_Out(1526) <= \<const0>\;
  LOCKSTEP_Master_Out(1527) <= \<const0>\;
  LOCKSTEP_Master_Out(1528) <= \<const0>\;
  LOCKSTEP_Master_Out(1529) <= \<const0>\;
  LOCKSTEP_Master_Out(1530) <= \<const0>\;
  LOCKSTEP_Master_Out(1531) <= \<const0>\;
  LOCKSTEP_Master_Out(1532) <= \<const0>\;
  LOCKSTEP_Master_Out(1533) <= \<const0>\;
  LOCKSTEP_Master_Out(1534) <= \<const0>\;
  LOCKSTEP_Master_Out(1535) <= \<const0>\;
  LOCKSTEP_Master_Out(1536) <= \<const0>\;
  LOCKSTEP_Master_Out(1537) <= \<const0>\;
  LOCKSTEP_Master_Out(1538) <= \<const0>\;
  LOCKSTEP_Master_Out(1539) <= \<const0>\;
  LOCKSTEP_Master_Out(1540) <= \<const0>\;
  LOCKSTEP_Master_Out(1541) <= \<const0>\;
  LOCKSTEP_Master_Out(1542) <= \<const0>\;
  LOCKSTEP_Master_Out(1543) <= \<const0>\;
  LOCKSTEP_Master_Out(1544) <= \<const0>\;
  LOCKSTEP_Master_Out(1545) <= \<const0>\;
  LOCKSTEP_Master_Out(1546) <= \<const0>\;
  LOCKSTEP_Master_Out(1547) <= \<const0>\;
  LOCKSTEP_Master_Out(1548) <= \<const0>\;
  LOCKSTEP_Master_Out(1549) <= \<const0>\;
  LOCKSTEP_Master_Out(1550) <= \<const0>\;
  LOCKSTEP_Master_Out(1551) <= \<const0>\;
  LOCKSTEP_Master_Out(1552) <= \<const0>\;
  LOCKSTEP_Master_Out(1553) <= \<const0>\;
  LOCKSTEP_Master_Out(1554) <= \<const0>\;
  LOCKSTEP_Master_Out(1555) <= \<const0>\;
  LOCKSTEP_Master_Out(1556) <= \<const0>\;
  LOCKSTEP_Master_Out(1557) <= \<const0>\;
  LOCKSTEP_Master_Out(1558) <= \<const0>\;
  LOCKSTEP_Master_Out(1559) <= \<const0>\;
  LOCKSTEP_Master_Out(1560) <= \<const0>\;
  LOCKSTEP_Master_Out(1561) <= \<const0>\;
  LOCKSTEP_Master_Out(1562) <= \<const0>\;
  LOCKSTEP_Master_Out(1563) <= \<const0>\;
  LOCKSTEP_Master_Out(1564) <= \<const0>\;
  LOCKSTEP_Master_Out(1565) <= \<const0>\;
  LOCKSTEP_Master_Out(1566) <= \<const0>\;
  LOCKSTEP_Master_Out(1567) <= \<const0>\;
  LOCKSTEP_Master_Out(1568) <= \<const0>\;
  LOCKSTEP_Master_Out(1569) <= \<const0>\;
  LOCKSTEP_Master_Out(1570) <= \<const0>\;
  LOCKSTEP_Master_Out(1571) <= \<const0>\;
  LOCKSTEP_Master_Out(1572) <= \<const0>\;
  LOCKSTEP_Master_Out(1573) <= \<const0>\;
  LOCKSTEP_Master_Out(1574) <= \<const0>\;
  LOCKSTEP_Master_Out(1575) <= \<const0>\;
  LOCKSTEP_Master_Out(1576) <= \<const0>\;
  LOCKSTEP_Master_Out(1577) <= \<const0>\;
  LOCKSTEP_Master_Out(1578) <= \<const0>\;
  LOCKSTEP_Master_Out(1579) <= \<const0>\;
  LOCKSTEP_Master_Out(1580) <= \<const0>\;
  LOCKSTEP_Master_Out(1581) <= \<const0>\;
  LOCKSTEP_Master_Out(1582) <= \<const0>\;
  LOCKSTEP_Master_Out(1583) <= \<const0>\;
  LOCKSTEP_Master_Out(1584) <= \<const0>\;
  LOCKSTEP_Master_Out(1585) <= \<const0>\;
  LOCKSTEP_Master_Out(1586) <= \<const0>\;
  LOCKSTEP_Master_Out(1587) <= \<const0>\;
  LOCKSTEP_Master_Out(1588) <= \<const0>\;
  LOCKSTEP_Master_Out(1589) <= \<const0>\;
  LOCKSTEP_Master_Out(1590) <= \<const0>\;
  LOCKSTEP_Master_Out(1591) <= \<const0>\;
  LOCKSTEP_Master_Out(1592) <= \<const0>\;
  LOCKSTEP_Master_Out(1593) <= \<const0>\;
  LOCKSTEP_Master_Out(1594) <= \<const0>\;
  LOCKSTEP_Master_Out(1595) <= \<const0>\;
  LOCKSTEP_Master_Out(1596) <= \<const0>\;
  LOCKSTEP_Master_Out(1597) <= \<const0>\;
  LOCKSTEP_Master_Out(1598) <= \<const0>\;
  LOCKSTEP_Master_Out(1599) <= \<const0>\;
  LOCKSTEP_Master_Out(1600) <= \<const0>\;
  LOCKSTEP_Master_Out(1601) <= \<const0>\;
  LOCKSTEP_Master_Out(1602) <= \<const0>\;
  LOCKSTEP_Master_Out(1603) <= \<const0>\;
  LOCKSTEP_Master_Out(1604) <= \<const0>\;
  LOCKSTEP_Master_Out(1605) <= \<const0>\;
  LOCKSTEP_Master_Out(1606) <= \<const0>\;
  LOCKSTEP_Master_Out(1607) <= \<const0>\;
  LOCKSTEP_Master_Out(1608) <= \<const0>\;
  LOCKSTEP_Master_Out(1609) <= \<const0>\;
  LOCKSTEP_Master_Out(1610) <= \<const0>\;
  LOCKSTEP_Master_Out(1611) <= \<const0>\;
  LOCKSTEP_Master_Out(1612) <= \<const0>\;
  LOCKSTEP_Master_Out(1613) <= \<const0>\;
  LOCKSTEP_Master_Out(1614) <= \<const0>\;
  LOCKSTEP_Master_Out(1615) <= \<const0>\;
  LOCKSTEP_Master_Out(1616) <= \<const0>\;
  LOCKSTEP_Master_Out(1617) <= \<const0>\;
  LOCKSTEP_Master_Out(1618) <= \<const0>\;
  LOCKSTEP_Master_Out(1619) <= \<const0>\;
  LOCKSTEP_Master_Out(1620) <= \<const0>\;
  LOCKSTEP_Master_Out(1621) <= \<const0>\;
  LOCKSTEP_Master_Out(1622) <= \<const0>\;
  LOCKSTEP_Master_Out(1623) <= \<const0>\;
  LOCKSTEP_Master_Out(1624) <= \<const0>\;
  LOCKSTEP_Master_Out(1625) <= \<const0>\;
  LOCKSTEP_Master_Out(1626) <= \<const0>\;
  LOCKSTEP_Master_Out(1627) <= \<const0>\;
  LOCKSTEP_Master_Out(1628) <= \<const0>\;
  LOCKSTEP_Master_Out(1629) <= \<const0>\;
  LOCKSTEP_Master_Out(1630) <= \<const0>\;
  LOCKSTEP_Master_Out(1631) <= \<const0>\;
  LOCKSTEP_Master_Out(1632) <= \<const0>\;
  LOCKSTEP_Master_Out(1633) <= \<const0>\;
  LOCKSTEP_Master_Out(1634) <= \<const0>\;
  LOCKSTEP_Master_Out(1635) <= \<const0>\;
  LOCKSTEP_Master_Out(1636) <= \<const0>\;
  LOCKSTEP_Master_Out(1637) <= \<const0>\;
  LOCKSTEP_Master_Out(1638) <= \<const0>\;
  LOCKSTEP_Master_Out(1639) <= \<const0>\;
  LOCKSTEP_Master_Out(1640) <= \<const0>\;
  LOCKSTEP_Master_Out(1641) <= \<const0>\;
  LOCKSTEP_Master_Out(1642) <= \<const0>\;
  LOCKSTEP_Master_Out(1643) <= \<const0>\;
  LOCKSTEP_Master_Out(1644) <= \<const0>\;
  LOCKSTEP_Master_Out(1645) <= \<const0>\;
  LOCKSTEP_Master_Out(1646) <= \<const0>\;
  LOCKSTEP_Master_Out(1647) <= \<const0>\;
  LOCKSTEP_Master_Out(1648) <= \<const0>\;
  LOCKSTEP_Master_Out(1649) <= \<const0>\;
  LOCKSTEP_Master_Out(1650) <= \<const0>\;
  LOCKSTEP_Master_Out(1651) <= \<const0>\;
  LOCKSTEP_Master_Out(1652) <= \<const0>\;
  LOCKSTEP_Master_Out(1653) <= \<const0>\;
  LOCKSTEP_Master_Out(1654) <= \<const0>\;
  LOCKSTEP_Master_Out(1655) <= \<const0>\;
  LOCKSTEP_Master_Out(1656) <= \<const0>\;
  LOCKSTEP_Master_Out(1657) <= \<const0>\;
  LOCKSTEP_Master_Out(1658) <= \<const0>\;
  LOCKSTEP_Master_Out(1659) <= \<const0>\;
  LOCKSTEP_Master_Out(1660) <= \<const0>\;
  LOCKSTEP_Master_Out(1661) <= \<const0>\;
  LOCKSTEP_Master_Out(1662) <= \<const0>\;
  LOCKSTEP_Master_Out(1663) <= \<const0>\;
  LOCKSTEP_Master_Out(1664) <= \<const0>\;
  LOCKSTEP_Master_Out(1665) <= \<const0>\;
  LOCKSTEP_Master_Out(1666) <= \<const0>\;
  LOCKSTEP_Master_Out(1667) <= \<const0>\;
  LOCKSTEP_Master_Out(1668) <= \<const0>\;
  LOCKSTEP_Master_Out(1669) <= \<const0>\;
  LOCKSTEP_Master_Out(1670) <= \<const0>\;
  LOCKSTEP_Master_Out(1671) <= \<const0>\;
  LOCKSTEP_Master_Out(1672) <= \<const0>\;
  LOCKSTEP_Master_Out(1673) <= \<const0>\;
  LOCKSTEP_Master_Out(1674) <= \<const0>\;
  LOCKSTEP_Master_Out(1675) <= \<const0>\;
  LOCKSTEP_Master_Out(1676) <= \<const0>\;
  LOCKSTEP_Master_Out(1677) <= \<const0>\;
  LOCKSTEP_Master_Out(1678) <= \<const0>\;
  LOCKSTEP_Master_Out(1679) <= \<const0>\;
  LOCKSTEP_Master_Out(1680) <= \<const0>\;
  LOCKSTEP_Master_Out(1681) <= \<const0>\;
  LOCKSTEP_Master_Out(1682) <= \<const0>\;
  LOCKSTEP_Master_Out(1683) <= \<const0>\;
  LOCKSTEP_Master_Out(1684) <= \<const0>\;
  LOCKSTEP_Master_Out(1685) <= \<const0>\;
  LOCKSTEP_Master_Out(1686) <= \<const0>\;
  LOCKSTEP_Master_Out(1687) <= \<const0>\;
  LOCKSTEP_Master_Out(1688) <= \<const0>\;
  LOCKSTEP_Master_Out(1689) <= \<const0>\;
  LOCKSTEP_Master_Out(1690) <= \<const0>\;
  LOCKSTEP_Master_Out(1691) <= \<const0>\;
  LOCKSTEP_Master_Out(1692) <= \<const0>\;
  LOCKSTEP_Master_Out(1693) <= \<const0>\;
  LOCKSTEP_Master_Out(1694) <= \<const0>\;
  LOCKSTEP_Master_Out(1695) <= \<const0>\;
  LOCKSTEP_Master_Out(1696) <= \<const0>\;
  LOCKSTEP_Master_Out(1697) <= \<const0>\;
  LOCKSTEP_Master_Out(1698) <= \<const0>\;
  LOCKSTEP_Master_Out(1699) <= \<const0>\;
  LOCKSTEP_Master_Out(1700) <= \<const0>\;
  LOCKSTEP_Master_Out(1701) <= \<const0>\;
  LOCKSTEP_Master_Out(1702) <= \<const0>\;
  LOCKSTEP_Master_Out(1703) <= \<const0>\;
  LOCKSTEP_Master_Out(1704) <= \<const0>\;
  LOCKSTEP_Master_Out(1705) <= \<const0>\;
  LOCKSTEP_Master_Out(1706) <= \<const0>\;
  LOCKSTEP_Master_Out(1707) <= \<const0>\;
  LOCKSTEP_Master_Out(1708) <= \<const0>\;
  LOCKSTEP_Master_Out(1709) <= \<const0>\;
  LOCKSTEP_Master_Out(1710) <= \<const0>\;
  LOCKSTEP_Master_Out(1711) <= \<const0>\;
  LOCKSTEP_Master_Out(1712) <= \<const0>\;
  LOCKSTEP_Master_Out(1713) <= \<const0>\;
  LOCKSTEP_Master_Out(1714) <= \<const0>\;
  LOCKSTEP_Master_Out(1715) <= \<const0>\;
  LOCKSTEP_Master_Out(1716) <= \<const0>\;
  LOCKSTEP_Master_Out(1717) <= \<const0>\;
  LOCKSTEP_Master_Out(1718) <= \<const0>\;
  LOCKSTEP_Master_Out(1719) <= \<const0>\;
  LOCKSTEP_Master_Out(1720) <= \<const0>\;
  LOCKSTEP_Master_Out(1721) <= \<const0>\;
  LOCKSTEP_Master_Out(1722) <= \<const0>\;
  LOCKSTEP_Master_Out(1723) <= \<const0>\;
  LOCKSTEP_Master_Out(1724) <= \<const0>\;
  LOCKSTEP_Master_Out(1725) <= \<const0>\;
  LOCKSTEP_Master_Out(1726) <= \<const0>\;
  LOCKSTEP_Master_Out(1727) <= \<const0>\;
  LOCKSTEP_Master_Out(1728) <= \<const0>\;
  LOCKSTEP_Master_Out(1729) <= \<const0>\;
  LOCKSTEP_Master_Out(1730) <= \<const0>\;
  LOCKSTEP_Master_Out(1731) <= \<const0>\;
  LOCKSTEP_Master_Out(1732) <= \<const0>\;
  LOCKSTEP_Master_Out(1733) <= \<const0>\;
  LOCKSTEP_Master_Out(1734) <= \<const0>\;
  LOCKSTEP_Master_Out(1735) <= \<const0>\;
  LOCKSTEP_Master_Out(1736) <= \<const0>\;
  LOCKSTEP_Master_Out(1737) <= \<const0>\;
  LOCKSTEP_Master_Out(1738) <= \<const0>\;
  LOCKSTEP_Master_Out(1739) <= \<const0>\;
  LOCKSTEP_Master_Out(1740) <= \<const0>\;
  LOCKSTEP_Master_Out(1741) <= \<const0>\;
  LOCKSTEP_Master_Out(1742) <= \<const0>\;
  LOCKSTEP_Master_Out(1743) <= \<const0>\;
  LOCKSTEP_Master_Out(1744) <= \<const0>\;
  LOCKSTEP_Master_Out(1745) <= \<const0>\;
  LOCKSTEP_Master_Out(1746) <= \<const0>\;
  LOCKSTEP_Master_Out(1747) <= \<const0>\;
  LOCKSTEP_Master_Out(1748) <= \<const0>\;
  LOCKSTEP_Master_Out(1749) <= \<const0>\;
  LOCKSTEP_Master_Out(1750) <= \<const0>\;
  LOCKSTEP_Master_Out(1751) <= \<const0>\;
  LOCKSTEP_Master_Out(1752) <= \<const0>\;
  LOCKSTEP_Master_Out(1753) <= \<const0>\;
  LOCKSTEP_Master_Out(1754) <= \<const0>\;
  LOCKSTEP_Master_Out(1755) <= \<const0>\;
  LOCKSTEP_Master_Out(1756) <= \<const0>\;
  LOCKSTEP_Master_Out(1757) <= \<const0>\;
  LOCKSTEP_Master_Out(1758) <= \<const0>\;
  LOCKSTEP_Master_Out(1759) <= \<const0>\;
  LOCKSTEP_Master_Out(1760) <= \<const0>\;
  LOCKSTEP_Master_Out(1761) <= \<const0>\;
  LOCKSTEP_Master_Out(1762) <= \<const0>\;
  LOCKSTEP_Master_Out(1763) <= \<const0>\;
  LOCKSTEP_Master_Out(1764) <= \<const0>\;
  LOCKSTEP_Master_Out(1765) <= \<const0>\;
  LOCKSTEP_Master_Out(1766) <= \<const0>\;
  LOCKSTEP_Master_Out(1767) <= \<const0>\;
  LOCKSTEP_Master_Out(1768) <= \<const0>\;
  LOCKSTEP_Master_Out(1769) <= \<const0>\;
  LOCKSTEP_Master_Out(1770) <= \<const0>\;
  LOCKSTEP_Master_Out(1771) <= \<const0>\;
  LOCKSTEP_Master_Out(1772) <= \<const0>\;
  LOCKSTEP_Master_Out(1773) <= \<const0>\;
  LOCKSTEP_Master_Out(1774) <= \<const0>\;
  LOCKSTEP_Master_Out(1775) <= \<const0>\;
  LOCKSTEP_Master_Out(1776) <= \<const0>\;
  LOCKSTEP_Master_Out(1777) <= \<const0>\;
  LOCKSTEP_Master_Out(1778) <= \<const0>\;
  LOCKSTEP_Master_Out(1779) <= \<const0>\;
  LOCKSTEP_Master_Out(1780) <= \<const0>\;
  LOCKSTEP_Master_Out(1781) <= \<const0>\;
  LOCKSTEP_Master_Out(1782) <= \<const0>\;
  LOCKSTEP_Master_Out(1783) <= \<const0>\;
  LOCKSTEP_Master_Out(1784) <= \<const0>\;
  LOCKSTEP_Master_Out(1785) <= \<const0>\;
  LOCKSTEP_Master_Out(1786) <= \<const0>\;
  LOCKSTEP_Master_Out(1787) <= \<const0>\;
  LOCKSTEP_Master_Out(1788) <= \<const0>\;
  LOCKSTEP_Master_Out(1789) <= \<const0>\;
  LOCKSTEP_Master_Out(1790) <= \<const0>\;
  LOCKSTEP_Master_Out(1791) <= \<const0>\;
  LOCKSTEP_Master_Out(1792) <= \<const0>\;
  LOCKSTEP_Master_Out(1793) <= \<const0>\;
  LOCKSTEP_Master_Out(1794) <= \<const0>\;
  LOCKSTEP_Master_Out(1795) <= \<const0>\;
  LOCKSTEP_Master_Out(1796) <= \<const0>\;
  LOCKSTEP_Master_Out(1797) <= \<const0>\;
  LOCKSTEP_Master_Out(1798) <= \<const0>\;
  LOCKSTEP_Master_Out(1799) <= \<const0>\;
  LOCKSTEP_Master_Out(1800) <= \<const0>\;
  LOCKSTEP_Master_Out(1801) <= \<const0>\;
  LOCKSTEP_Master_Out(1802) <= \<const0>\;
  LOCKSTEP_Master_Out(1803) <= \<const0>\;
  LOCKSTEP_Master_Out(1804) <= \<const0>\;
  LOCKSTEP_Master_Out(1805) <= \<const0>\;
  LOCKSTEP_Master_Out(1806) <= \<const0>\;
  LOCKSTEP_Master_Out(1807) <= \<const0>\;
  LOCKSTEP_Master_Out(1808) <= \<const0>\;
  LOCKSTEP_Master_Out(1809) <= \<const0>\;
  LOCKSTEP_Master_Out(1810) <= \<const0>\;
  LOCKSTEP_Master_Out(1811) <= \<const0>\;
  LOCKSTEP_Master_Out(1812) <= \<const0>\;
  LOCKSTEP_Master_Out(1813) <= \<const0>\;
  LOCKSTEP_Master_Out(1814) <= \<const0>\;
  LOCKSTEP_Master_Out(1815) <= \<const0>\;
  LOCKSTEP_Master_Out(1816) <= \<const0>\;
  LOCKSTEP_Master_Out(1817) <= \<const0>\;
  LOCKSTEP_Master_Out(1818) <= \<const0>\;
  LOCKSTEP_Master_Out(1819) <= \<const0>\;
  LOCKSTEP_Master_Out(1820) <= \<const0>\;
  LOCKSTEP_Master_Out(1821) <= \<const0>\;
  LOCKSTEP_Master_Out(1822) <= \<const0>\;
  LOCKSTEP_Master_Out(1823) <= \<const0>\;
  LOCKSTEP_Master_Out(1824) <= \<const0>\;
  LOCKSTEP_Master_Out(1825) <= \<const0>\;
  LOCKSTEP_Master_Out(1826) <= \<const0>\;
  LOCKSTEP_Master_Out(1827) <= \<const0>\;
  LOCKSTEP_Master_Out(1828) <= \<const0>\;
  LOCKSTEP_Master_Out(1829) <= \<const0>\;
  LOCKSTEP_Master_Out(1830) <= \<const0>\;
  LOCKSTEP_Master_Out(1831) <= \<const0>\;
  LOCKSTEP_Master_Out(1832) <= \<const0>\;
  LOCKSTEP_Master_Out(1833) <= \<const0>\;
  LOCKSTEP_Master_Out(1834) <= \<const0>\;
  LOCKSTEP_Master_Out(1835) <= \<const0>\;
  LOCKSTEP_Master_Out(1836) <= \<const0>\;
  LOCKSTEP_Master_Out(1837) <= \<const0>\;
  LOCKSTEP_Master_Out(1838) <= \<const0>\;
  LOCKSTEP_Master_Out(1839) <= \<const0>\;
  LOCKSTEP_Master_Out(1840) <= \<const0>\;
  LOCKSTEP_Master_Out(1841) <= \<const0>\;
  LOCKSTEP_Master_Out(1842) <= \<const0>\;
  LOCKSTEP_Master_Out(1843) <= \<const0>\;
  LOCKSTEP_Master_Out(1844) <= \<const0>\;
  LOCKSTEP_Master_Out(1845) <= \<const0>\;
  LOCKSTEP_Master_Out(1846) <= \<const0>\;
  LOCKSTEP_Master_Out(1847) <= \<const0>\;
  LOCKSTEP_Master_Out(1848) <= \<const0>\;
  LOCKSTEP_Master_Out(1849) <= \<const0>\;
  LOCKSTEP_Master_Out(1850) <= \<const0>\;
  LOCKSTEP_Master_Out(1851) <= \<const0>\;
  LOCKSTEP_Master_Out(1852) <= \<const0>\;
  LOCKSTEP_Master_Out(1853) <= \<const0>\;
  LOCKSTEP_Master_Out(1854) <= \<const0>\;
  LOCKSTEP_Master_Out(1855) <= \<const0>\;
  LOCKSTEP_Master_Out(1856) <= \<const0>\;
  LOCKSTEP_Master_Out(1857) <= \<const0>\;
  LOCKSTEP_Master_Out(1858) <= \<const0>\;
  LOCKSTEP_Master_Out(1859) <= \<const0>\;
  LOCKSTEP_Master_Out(1860) <= \<const0>\;
  LOCKSTEP_Master_Out(1861) <= \<const0>\;
  LOCKSTEP_Master_Out(1862) <= \<const0>\;
  LOCKSTEP_Master_Out(1863) <= \<const0>\;
  LOCKSTEP_Master_Out(1864) <= \<const0>\;
  LOCKSTEP_Master_Out(1865) <= \<const0>\;
  LOCKSTEP_Master_Out(1866) <= \<const0>\;
  LOCKSTEP_Master_Out(1867) <= \<const0>\;
  LOCKSTEP_Master_Out(1868) <= \<const0>\;
  LOCKSTEP_Master_Out(1869) <= \<const0>\;
  LOCKSTEP_Master_Out(1870) <= \<const0>\;
  LOCKSTEP_Master_Out(1871) <= \<const0>\;
  LOCKSTEP_Master_Out(1872) <= \<const0>\;
  LOCKSTEP_Master_Out(1873) <= \<const0>\;
  LOCKSTEP_Master_Out(1874) <= \<const0>\;
  LOCKSTEP_Master_Out(1875) <= \<const0>\;
  LOCKSTEP_Master_Out(1876) <= \<const0>\;
  LOCKSTEP_Master_Out(1877) <= \<const0>\;
  LOCKSTEP_Master_Out(1878) <= \<const0>\;
  LOCKSTEP_Master_Out(1879) <= \<const0>\;
  LOCKSTEP_Master_Out(1880) <= \<const0>\;
  LOCKSTEP_Master_Out(1881) <= \<const0>\;
  LOCKSTEP_Master_Out(1882) <= \<const0>\;
  LOCKSTEP_Master_Out(1883) <= \<const0>\;
  LOCKSTEP_Master_Out(1884) <= \<const0>\;
  LOCKSTEP_Master_Out(1885) <= \<const0>\;
  LOCKSTEP_Master_Out(1886) <= \<const0>\;
  LOCKSTEP_Master_Out(1887) <= \<const0>\;
  LOCKSTEP_Master_Out(1888) <= \<const0>\;
  LOCKSTEP_Master_Out(1889) <= \<const0>\;
  LOCKSTEP_Master_Out(1890) <= \<const0>\;
  LOCKSTEP_Master_Out(1891) <= \<const0>\;
  LOCKSTEP_Master_Out(1892) <= \<const0>\;
  LOCKSTEP_Master_Out(1893) <= \<const0>\;
  LOCKSTEP_Master_Out(1894) <= \<const0>\;
  LOCKSTEP_Master_Out(1895) <= \<const0>\;
  LOCKSTEP_Master_Out(1896) <= \<const0>\;
  LOCKSTEP_Master_Out(1897) <= \<const0>\;
  LOCKSTEP_Master_Out(1898) <= \<const0>\;
  LOCKSTEP_Master_Out(1899) <= \<const0>\;
  LOCKSTEP_Master_Out(1900) <= \<const0>\;
  LOCKSTEP_Master_Out(1901) <= \<const0>\;
  LOCKSTEP_Master_Out(1902) <= \<const0>\;
  LOCKSTEP_Master_Out(1903) <= \<const0>\;
  LOCKSTEP_Master_Out(1904) <= \<const0>\;
  LOCKSTEP_Master_Out(1905) <= \<const0>\;
  LOCKSTEP_Master_Out(1906) <= \<const0>\;
  LOCKSTEP_Master_Out(1907) <= \<const0>\;
  LOCKSTEP_Master_Out(1908) <= \<const0>\;
  LOCKSTEP_Master_Out(1909) <= \<const0>\;
  LOCKSTEP_Master_Out(1910) <= \<const0>\;
  LOCKSTEP_Master_Out(1911) <= \<const0>\;
  LOCKSTEP_Master_Out(1912) <= \<const0>\;
  LOCKSTEP_Master_Out(1913) <= \<const0>\;
  LOCKSTEP_Master_Out(1914) <= \<const0>\;
  LOCKSTEP_Master_Out(1915) <= \<const0>\;
  LOCKSTEP_Master_Out(1916) <= \<const0>\;
  LOCKSTEP_Master_Out(1917) <= \<const0>\;
  LOCKSTEP_Master_Out(1918) <= \<const0>\;
  LOCKSTEP_Master_Out(1919) <= \<const0>\;
  LOCKSTEP_Master_Out(1920) <= \<const0>\;
  LOCKSTEP_Master_Out(1921) <= \<const0>\;
  LOCKSTEP_Master_Out(1922) <= \<const0>\;
  LOCKSTEP_Master_Out(1923) <= \<const0>\;
  LOCKSTEP_Master_Out(1924) <= \<const0>\;
  LOCKSTEP_Master_Out(1925) <= \<const0>\;
  LOCKSTEP_Master_Out(1926) <= \<const0>\;
  LOCKSTEP_Master_Out(1927) <= \<const0>\;
  LOCKSTEP_Master_Out(1928) <= \<const0>\;
  LOCKSTEP_Master_Out(1929) <= \<const0>\;
  LOCKSTEP_Master_Out(1930) <= \<const0>\;
  LOCKSTEP_Master_Out(1931) <= \<const0>\;
  LOCKSTEP_Master_Out(1932) <= \<const0>\;
  LOCKSTEP_Master_Out(1933) <= \<const0>\;
  LOCKSTEP_Master_Out(1934) <= \<const0>\;
  LOCKSTEP_Master_Out(1935) <= \<const0>\;
  LOCKSTEP_Master_Out(1936) <= \<const0>\;
  LOCKSTEP_Master_Out(1937) <= \<const0>\;
  LOCKSTEP_Master_Out(1938) <= \<const0>\;
  LOCKSTEP_Master_Out(1939) <= \<const0>\;
  LOCKSTEP_Master_Out(1940) <= \<const0>\;
  LOCKSTEP_Master_Out(1941) <= \<const0>\;
  LOCKSTEP_Master_Out(1942) <= \<const0>\;
  LOCKSTEP_Master_Out(1943) <= \<const0>\;
  LOCKSTEP_Master_Out(1944) <= \<const0>\;
  LOCKSTEP_Master_Out(1945) <= \<const0>\;
  LOCKSTEP_Master_Out(1946) <= \<const0>\;
  LOCKSTEP_Master_Out(1947) <= \<const0>\;
  LOCKSTEP_Master_Out(1948) <= \<const0>\;
  LOCKSTEP_Master_Out(1949) <= \<const0>\;
  LOCKSTEP_Master_Out(1950) <= \<const0>\;
  LOCKSTEP_Master_Out(1951) <= \<const0>\;
  LOCKSTEP_Master_Out(1952) <= \<const0>\;
  LOCKSTEP_Master_Out(1953) <= \<const0>\;
  LOCKSTEP_Master_Out(1954) <= \<const0>\;
  LOCKSTEP_Master_Out(1955) <= \<const0>\;
  LOCKSTEP_Master_Out(1956) <= \<const0>\;
  LOCKSTEP_Master_Out(1957) <= \<const0>\;
  LOCKSTEP_Master_Out(1958) <= \<const0>\;
  LOCKSTEP_Master_Out(1959) <= \<const0>\;
  LOCKSTEP_Master_Out(1960) <= \<const0>\;
  LOCKSTEP_Master_Out(1961) <= \<const0>\;
  LOCKSTEP_Master_Out(1962) <= \<const0>\;
  LOCKSTEP_Master_Out(1963) <= \<const0>\;
  LOCKSTEP_Master_Out(1964) <= \<const0>\;
  LOCKSTEP_Master_Out(1965) <= \<const0>\;
  LOCKSTEP_Master_Out(1966) <= \<const0>\;
  LOCKSTEP_Master_Out(1967) <= \<const0>\;
  LOCKSTEP_Master_Out(1968) <= \<const0>\;
  LOCKSTEP_Master_Out(1969) <= \<const0>\;
  LOCKSTEP_Master_Out(1970) <= \<const0>\;
  LOCKSTEP_Master_Out(1971) <= \<const0>\;
  LOCKSTEP_Master_Out(1972) <= \<const0>\;
  LOCKSTEP_Master_Out(1973) <= \<const0>\;
  LOCKSTEP_Master_Out(1974) <= \<const0>\;
  LOCKSTEP_Master_Out(1975) <= \<const0>\;
  LOCKSTEP_Master_Out(1976) <= \<const0>\;
  LOCKSTEP_Master_Out(1977) <= \<const0>\;
  LOCKSTEP_Master_Out(1978) <= \<const0>\;
  LOCKSTEP_Master_Out(1979) <= \<const0>\;
  LOCKSTEP_Master_Out(1980) <= \<const0>\;
  LOCKSTEP_Master_Out(1981) <= \<const0>\;
  LOCKSTEP_Master_Out(1982) <= \<const0>\;
  LOCKSTEP_Master_Out(1983) <= \<const0>\;
  LOCKSTEP_Master_Out(1984) <= \<const0>\;
  LOCKSTEP_Master_Out(1985) <= \<const0>\;
  LOCKSTEP_Master_Out(1986) <= \<const0>\;
  LOCKSTEP_Master_Out(1987) <= \<const0>\;
  LOCKSTEP_Master_Out(1988) <= \<const0>\;
  LOCKSTEP_Master_Out(1989) <= \<const0>\;
  LOCKSTEP_Master_Out(1990) <= \<const0>\;
  LOCKSTEP_Master_Out(1991) <= \<const0>\;
  LOCKSTEP_Master_Out(1992) <= \<const0>\;
  LOCKSTEP_Master_Out(1993) <= \<const0>\;
  LOCKSTEP_Master_Out(1994) <= \<const0>\;
  LOCKSTEP_Master_Out(1995) <= \<const0>\;
  LOCKSTEP_Master_Out(1996) <= \<const0>\;
  LOCKSTEP_Master_Out(1997) <= \<const0>\;
  LOCKSTEP_Master_Out(1998) <= \<const0>\;
  LOCKSTEP_Master_Out(1999) <= \<const0>\;
  LOCKSTEP_Master_Out(2000) <= \<const0>\;
  LOCKSTEP_Master_Out(2001) <= \<const0>\;
  LOCKSTEP_Master_Out(2002) <= \<const0>\;
  LOCKSTEP_Master_Out(2003) <= \<const0>\;
  LOCKSTEP_Master_Out(2004) <= \<const0>\;
  LOCKSTEP_Master_Out(2005) <= \<const0>\;
  LOCKSTEP_Master_Out(2006) <= \<const0>\;
  LOCKSTEP_Master_Out(2007) <= \<const0>\;
  LOCKSTEP_Master_Out(2008) <= \<const0>\;
  LOCKSTEP_Master_Out(2009) <= \<const0>\;
  LOCKSTEP_Master_Out(2010) <= \<const0>\;
  LOCKSTEP_Master_Out(2011) <= \<const0>\;
  LOCKSTEP_Master_Out(2012) <= \<const0>\;
  LOCKSTEP_Master_Out(2013) <= \<const0>\;
  LOCKSTEP_Master_Out(2014) <= \<const0>\;
  LOCKSTEP_Master_Out(2015) <= \<const0>\;
  LOCKSTEP_Master_Out(2016) <= \<const0>\;
  LOCKSTEP_Master_Out(2017) <= \<const0>\;
  LOCKSTEP_Master_Out(2018) <= \<const0>\;
  LOCKSTEP_Master_Out(2019) <= \<const0>\;
  LOCKSTEP_Master_Out(2020) <= \<const0>\;
  LOCKSTEP_Master_Out(2021) <= \<const0>\;
  LOCKSTEP_Master_Out(2022) <= \<const0>\;
  LOCKSTEP_Master_Out(2023) <= \<const0>\;
  LOCKSTEP_Master_Out(2024) <= \<const0>\;
  LOCKSTEP_Master_Out(2025) <= \<const0>\;
  LOCKSTEP_Master_Out(2026) <= \<const0>\;
  LOCKSTEP_Master_Out(2027) <= \<const0>\;
  LOCKSTEP_Master_Out(2028) <= \<const0>\;
  LOCKSTEP_Master_Out(2029) <= \<const0>\;
  LOCKSTEP_Master_Out(2030) <= \<const0>\;
  LOCKSTEP_Master_Out(2031) <= \<const0>\;
  LOCKSTEP_Master_Out(2032) <= \<const0>\;
  LOCKSTEP_Master_Out(2033) <= \<const0>\;
  LOCKSTEP_Master_Out(2034) <= \<const0>\;
  LOCKSTEP_Master_Out(2035) <= \<const0>\;
  LOCKSTEP_Master_Out(2036) <= \<const0>\;
  LOCKSTEP_Master_Out(2037) <= \<const0>\;
  LOCKSTEP_Master_Out(2038) <= \<const0>\;
  LOCKSTEP_Master_Out(2039) <= \<const0>\;
  LOCKSTEP_Master_Out(2040) <= \<const0>\;
  LOCKSTEP_Master_Out(2041) <= \<const0>\;
  LOCKSTEP_Master_Out(2042) <= \<const0>\;
  LOCKSTEP_Master_Out(2043) <= \<const0>\;
  LOCKSTEP_Master_Out(2044) <= \<const0>\;
  LOCKSTEP_Master_Out(2045) <= \<const0>\;
  LOCKSTEP_Master_Out(2046) <= \<const0>\;
  LOCKSTEP_Master_Out(2047) <= \<const0>\;
  LOCKSTEP_Master_Out(2048) <= \<const0>\;
  LOCKSTEP_Master_Out(2049) <= \<const0>\;
  LOCKSTEP_Master_Out(2050) <= \<const0>\;
  LOCKSTEP_Master_Out(2051) <= \<const0>\;
  LOCKSTEP_Master_Out(2052) <= \<const0>\;
  LOCKSTEP_Master_Out(2053) <= \<const0>\;
  LOCKSTEP_Master_Out(2054) <= \<const0>\;
  LOCKSTEP_Master_Out(2055) <= \<const0>\;
  LOCKSTEP_Master_Out(2056) <= \<const0>\;
  LOCKSTEP_Master_Out(2057) <= \<const0>\;
  LOCKSTEP_Master_Out(2058) <= \<const0>\;
  LOCKSTEP_Master_Out(2059) <= \<const0>\;
  LOCKSTEP_Master_Out(2060) <= \<const0>\;
  LOCKSTEP_Master_Out(2061) <= \<const0>\;
  LOCKSTEP_Master_Out(2062) <= \<const0>\;
  LOCKSTEP_Master_Out(2063) <= \<const0>\;
  LOCKSTEP_Master_Out(2064) <= \<const0>\;
  LOCKSTEP_Master_Out(2065) <= \<const0>\;
  LOCKSTEP_Master_Out(2066) <= \<const0>\;
  LOCKSTEP_Master_Out(2067) <= \<const0>\;
  LOCKSTEP_Master_Out(2068) <= \<const0>\;
  LOCKSTEP_Master_Out(2069) <= \<const0>\;
  LOCKSTEP_Master_Out(2070) <= \<const0>\;
  LOCKSTEP_Master_Out(2071) <= \<const0>\;
  LOCKSTEP_Master_Out(2072) <= \<const0>\;
  LOCKSTEP_Master_Out(2073) <= \<const0>\;
  LOCKSTEP_Master_Out(2074) <= \<const0>\;
  LOCKSTEP_Master_Out(2075) <= \<const0>\;
  LOCKSTEP_Master_Out(2076) <= \<const0>\;
  LOCKSTEP_Master_Out(2077) <= \<const0>\;
  LOCKSTEP_Master_Out(2078) <= \<const0>\;
  LOCKSTEP_Master_Out(2079) <= \<const0>\;
  LOCKSTEP_Master_Out(2080) <= \<const0>\;
  LOCKSTEP_Master_Out(2081) <= \<const0>\;
  LOCKSTEP_Master_Out(2082) <= \<const0>\;
  LOCKSTEP_Master_Out(2083) <= \<const0>\;
  LOCKSTEP_Master_Out(2084) <= \<const0>\;
  LOCKSTEP_Master_Out(2085) <= \<const0>\;
  LOCKSTEP_Master_Out(2086) <= \<const0>\;
  LOCKSTEP_Master_Out(2087) <= \<const0>\;
  LOCKSTEP_Master_Out(2088) <= \<const0>\;
  LOCKSTEP_Master_Out(2089) <= \<const0>\;
  LOCKSTEP_Master_Out(2090) <= \<const0>\;
  LOCKSTEP_Master_Out(2091) <= \<const0>\;
  LOCKSTEP_Master_Out(2092) <= \<const0>\;
  LOCKSTEP_Master_Out(2093) <= \<const0>\;
  LOCKSTEP_Master_Out(2094) <= \<const0>\;
  LOCKSTEP_Master_Out(2095) <= \<const0>\;
  LOCKSTEP_Master_Out(2096) <= \<const0>\;
  LOCKSTEP_Master_Out(2097) <= \<const0>\;
  LOCKSTEP_Master_Out(2098) <= \<const0>\;
  LOCKSTEP_Master_Out(2099) <= \<const0>\;
  LOCKSTEP_Master_Out(2100) <= \<const0>\;
  LOCKSTEP_Master_Out(2101) <= \<const0>\;
  LOCKSTEP_Master_Out(2102) <= \<const0>\;
  LOCKSTEP_Master_Out(2103) <= \<const0>\;
  LOCKSTEP_Master_Out(2104) <= \<const0>\;
  LOCKSTEP_Master_Out(2105) <= \<const0>\;
  LOCKSTEP_Master_Out(2106) <= \<const0>\;
  LOCKSTEP_Master_Out(2107) <= \<const0>\;
  LOCKSTEP_Master_Out(2108) <= \<const0>\;
  LOCKSTEP_Master_Out(2109) <= \<const0>\;
  LOCKSTEP_Master_Out(2110) <= \<const0>\;
  LOCKSTEP_Master_Out(2111) <= \<const0>\;
  LOCKSTEP_Master_Out(2112) <= \<const0>\;
  LOCKSTEP_Master_Out(2113) <= \<const0>\;
  LOCKSTEP_Master_Out(2114) <= \<const0>\;
  LOCKSTEP_Master_Out(2115) <= \<const0>\;
  LOCKSTEP_Master_Out(2116) <= \<const0>\;
  LOCKSTEP_Master_Out(2117) <= \<const0>\;
  LOCKSTEP_Master_Out(2118) <= \<const0>\;
  LOCKSTEP_Master_Out(2119) <= \<const0>\;
  LOCKSTEP_Master_Out(2120) <= \<const0>\;
  LOCKSTEP_Master_Out(2121) <= \<const0>\;
  LOCKSTEP_Master_Out(2122) <= \<const0>\;
  LOCKSTEP_Master_Out(2123) <= \<const0>\;
  LOCKSTEP_Master_Out(2124) <= \<const0>\;
  LOCKSTEP_Master_Out(2125) <= \<const0>\;
  LOCKSTEP_Master_Out(2126) <= \<const0>\;
  LOCKSTEP_Master_Out(2127) <= \<const0>\;
  LOCKSTEP_Master_Out(2128) <= \<const0>\;
  LOCKSTEP_Master_Out(2129) <= \<const0>\;
  LOCKSTEP_Master_Out(2130) <= \<const0>\;
  LOCKSTEP_Master_Out(2131) <= \<const0>\;
  LOCKSTEP_Master_Out(2132) <= \<const0>\;
  LOCKSTEP_Master_Out(2133) <= \<const0>\;
  LOCKSTEP_Master_Out(2134) <= \<const0>\;
  LOCKSTEP_Master_Out(2135) <= \<const0>\;
  LOCKSTEP_Master_Out(2136) <= \<const0>\;
  LOCKSTEP_Master_Out(2137) <= \<const0>\;
  LOCKSTEP_Master_Out(2138) <= \<const0>\;
  LOCKSTEP_Master_Out(2139) <= \<const0>\;
  LOCKSTEP_Master_Out(2140) <= \<const0>\;
  LOCKSTEP_Master_Out(2141) <= \<const0>\;
  LOCKSTEP_Master_Out(2142) <= \<const0>\;
  LOCKSTEP_Master_Out(2143) <= \<const0>\;
  LOCKSTEP_Master_Out(2144) <= \<const0>\;
  LOCKSTEP_Master_Out(2145) <= \<const0>\;
  LOCKSTEP_Master_Out(2146) <= \<const0>\;
  LOCKSTEP_Master_Out(2147) <= \<const0>\;
  LOCKSTEP_Master_Out(2148) <= \<const0>\;
  LOCKSTEP_Master_Out(2149) <= \<const0>\;
  LOCKSTEP_Master_Out(2150) <= \<const0>\;
  LOCKSTEP_Master_Out(2151) <= \<const0>\;
  LOCKSTEP_Master_Out(2152) <= \<const0>\;
  LOCKSTEP_Master_Out(2153) <= \<const0>\;
  LOCKSTEP_Master_Out(2154) <= \<const0>\;
  LOCKSTEP_Master_Out(2155) <= \<const0>\;
  LOCKSTEP_Master_Out(2156) <= \<const0>\;
  LOCKSTEP_Master_Out(2157) <= \<const0>\;
  LOCKSTEP_Master_Out(2158) <= \<const0>\;
  LOCKSTEP_Master_Out(2159) <= \<const0>\;
  LOCKSTEP_Master_Out(2160) <= \<const0>\;
  LOCKSTEP_Master_Out(2161) <= \<const0>\;
  LOCKSTEP_Master_Out(2162) <= \<const0>\;
  LOCKSTEP_Master_Out(2163) <= \<const0>\;
  LOCKSTEP_Master_Out(2164) <= \<const0>\;
  LOCKSTEP_Master_Out(2165) <= \<const0>\;
  LOCKSTEP_Master_Out(2166) <= \<const0>\;
  LOCKSTEP_Master_Out(2167) <= \<const0>\;
  LOCKSTEP_Master_Out(2168) <= \<const0>\;
  LOCKSTEP_Master_Out(2169) <= \<const0>\;
  LOCKSTEP_Master_Out(2170) <= \<const0>\;
  LOCKSTEP_Master_Out(2171) <= \<const0>\;
  LOCKSTEP_Master_Out(2172) <= \<const0>\;
  LOCKSTEP_Master_Out(2173) <= \<const0>\;
  LOCKSTEP_Master_Out(2174) <= \<const0>\;
  LOCKSTEP_Master_Out(2175) <= \<const0>\;
  LOCKSTEP_Master_Out(2176) <= \<const0>\;
  LOCKSTEP_Master_Out(2177) <= \<const0>\;
  LOCKSTEP_Master_Out(2178) <= \<const0>\;
  LOCKSTEP_Master_Out(2179) <= \<const0>\;
  LOCKSTEP_Master_Out(2180) <= \<const0>\;
  LOCKSTEP_Master_Out(2181) <= \<const0>\;
  LOCKSTEP_Master_Out(2182) <= \<const0>\;
  LOCKSTEP_Master_Out(2183) <= \<const0>\;
  LOCKSTEP_Master_Out(2184) <= \<const0>\;
  LOCKSTEP_Master_Out(2185) <= \<const0>\;
  LOCKSTEP_Master_Out(2186) <= \<const0>\;
  LOCKSTEP_Master_Out(2187) <= \<const0>\;
  LOCKSTEP_Master_Out(2188) <= \<const0>\;
  LOCKSTEP_Master_Out(2189) <= \<const0>\;
  LOCKSTEP_Master_Out(2190) <= \<const0>\;
  LOCKSTEP_Master_Out(2191) <= \<const0>\;
  LOCKSTEP_Master_Out(2192) <= \<const0>\;
  LOCKSTEP_Master_Out(2193) <= \<const0>\;
  LOCKSTEP_Master_Out(2194) <= \<const0>\;
  LOCKSTEP_Master_Out(2195) <= \<const0>\;
  LOCKSTEP_Master_Out(2196) <= \<const0>\;
  LOCKSTEP_Master_Out(2197) <= \<const0>\;
  LOCKSTEP_Master_Out(2198) <= \<const0>\;
  LOCKSTEP_Master_Out(2199) <= \<const0>\;
  LOCKSTEP_Master_Out(2200) <= \<const0>\;
  LOCKSTEP_Master_Out(2201) <= \<const0>\;
  LOCKSTEP_Master_Out(2202) <= \<const0>\;
  LOCKSTEP_Master_Out(2203) <= \<const0>\;
  LOCKSTEP_Master_Out(2204) <= \<const0>\;
  LOCKSTEP_Master_Out(2205) <= \<const0>\;
  LOCKSTEP_Master_Out(2206) <= \<const0>\;
  LOCKSTEP_Master_Out(2207) <= \<const0>\;
  LOCKSTEP_Master_Out(2208) <= \<const0>\;
  LOCKSTEP_Master_Out(2209) <= \<const0>\;
  LOCKSTEP_Master_Out(2210) <= \<const0>\;
  LOCKSTEP_Master_Out(2211) <= \<const0>\;
  LOCKSTEP_Master_Out(2212) <= \<const0>\;
  LOCKSTEP_Master_Out(2213) <= \<const0>\;
  LOCKSTEP_Master_Out(2214) <= \<const0>\;
  LOCKSTEP_Master_Out(2215) <= \<const0>\;
  LOCKSTEP_Master_Out(2216) <= \<const0>\;
  LOCKSTEP_Master_Out(2217) <= \<const0>\;
  LOCKSTEP_Master_Out(2218) <= \<const0>\;
  LOCKSTEP_Master_Out(2219) <= \<const0>\;
  LOCKSTEP_Master_Out(2220) <= \<const0>\;
  LOCKSTEP_Master_Out(2221) <= \<const0>\;
  LOCKSTEP_Master_Out(2222) <= \<const0>\;
  LOCKSTEP_Master_Out(2223) <= \<const0>\;
  LOCKSTEP_Master_Out(2224) <= \<const0>\;
  LOCKSTEP_Master_Out(2225) <= \<const0>\;
  LOCKSTEP_Master_Out(2226) <= \<const0>\;
  LOCKSTEP_Master_Out(2227) <= \<const0>\;
  LOCKSTEP_Master_Out(2228) <= \<const0>\;
  LOCKSTEP_Master_Out(2229) <= \<const0>\;
  LOCKSTEP_Master_Out(2230) <= \<const0>\;
  LOCKSTEP_Master_Out(2231) <= \<const0>\;
  LOCKSTEP_Master_Out(2232) <= \<const0>\;
  LOCKSTEP_Master_Out(2233) <= \<const0>\;
  LOCKSTEP_Master_Out(2234) <= \<const0>\;
  LOCKSTEP_Master_Out(2235) <= \<const0>\;
  LOCKSTEP_Master_Out(2236) <= \<const0>\;
  LOCKSTEP_Master_Out(2237) <= \<const0>\;
  LOCKSTEP_Master_Out(2238) <= \<const0>\;
  LOCKSTEP_Master_Out(2239) <= \<const0>\;
  LOCKSTEP_Master_Out(2240) <= \<const0>\;
  LOCKSTEP_Master_Out(2241) <= \<const0>\;
  LOCKSTEP_Master_Out(2242) <= \<const0>\;
  LOCKSTEP_Master_Out(2243) <= \<const0>\;
  LOCKSTEP_Master_Out(2244) <= \<const0>\;
  LOCKSTEP_Master_Out(2245) <= \<const0>\;
  LOCKSTEP_Master_Out(2246) <= \<const0>\;
  LOCKSTEP_Master_Out(2247) <= \<const0>\;
  LOCKSTEP_Master_Out(2248) <= \<const0>\;
  LOCKSTEP_Master_Out(2249) <= \<const0>\;
  LOCKSTEP_Master_Out(2250) <= \<const0>\;
  LOCKSTEP_Master_Out(2251) <= \<const0>\;
  LOCKSTEP_Master_Out(2252) <= \<const0>\;
  LOCKSTEP_Master_Out(2253) <= \<const0>\;
  LOCKSTEP_Master_Out(2254) <= \<const0>\;
  LOCKSTEP_Master_Out(2255) <= \<const0>\;
  LOCKSTEP_Master_Out(2256) <= \<const0>\;
  LOCKSTEP_Master_Out(2257) <= \<const0>\;
  LOCKSTEP_Master_Out(2258) <= \<const0>\;
  LOCKSTEP_Master_Out(2259) <= \<const0>\;
  LOCKSTEP_Master_Out(2260) <= \<const0>\;
  LOCKSTEP_Master_Out(2261) <= \<const0>\;
  LOCKSTEP_Master_Out(2262) <= \<const0>\;
  LOCKSTEP_Master_Out(2263) <= \<const0>\;
  LOCKSTEP_Master_Out(2264) <= \<const0>\;
  LOCKSTEP_Master_Out(2265) <= \<const0>\;
  LOCKSTEP_Master_Out(2266) <= \<const0>\;
  LOCKSTEP_Master_Out(2267) <= \<const0>\;
  LOCKSTEP_Master_Out(2268) <= \<const0>\;
  LOCKSTEP_Master_Out(2269) <= \<const0>\;
  LOCKSTEP_Master_Out(2270) <= \<const0>\;
  LOCKSTEP_Master_Out(2271) <= \<const0>\;
  LOCKSTEP_Master_Out(2272) <= \<const0>\;
  LOCKSTEP_Master_Out(2273) <= \<const0>\;
  LOCKSTEP_Master_Out(2274) <= \<const0>\;
  LOCKSTEP_Master_Out(2275) <= \<const0>\;
  LOCKSTEP_Master_Out(2276) <= \<const0>\;
  LOCKSTEP_Master_Out(2277) <= \<const0>\;
  LOCKSTEP_Master_Out(2278) <= \<const0>\;
  LOCKSTEP_Master_Out(2279) <= \<const0>\;
  LOCKSTEP_Master_Out(2280) <= \<const0>\;
  LOCKSTEP_Master_Out(2281) <= \<const0>\;
  LOCKSTEP_Master_Out(2282) <= \<const0>\;
  LOCKSTEP_Master_Out(2283) <= \<const0>\;
  LOCKSTEP_Master_Out(2284) <= \<const0>\;
  LOCKSTEP_Master_Out(2285) <= \<const0>\;
  LOCKSTEP_Master_Out(2286) <= \<const0>\;
  LOCKSTEP_Master_Out(2287) <= \<const0>\;
  LOCKSTEP_Master_Out(2288) <= \<const0>\;
  LOCKSTEP_Master_Out(2289) <= \<const0>\;
  LOCKSTEP_Master_Out(2290) <= \<const0>\;
  LOCKSTEP_Master_Out(2291) <= \<const0>\;
  LOCKSTEP_Master_Out(2292) <= \<const0>\;
  LOCKSTEP_Master_Out(2293) <= \<const0>\;
  LOCKSTEP_Master_Out(2294) <= \<const0>\;
  LOCKSTEP_Master_Out(2295) <= \<const0>\;
  LOCKSTEP_Master_Out(2296) <= \<const0>\;
  LOCKSTEP_Master_Out(2297) <= \<const0>\;
  LOCKSTEP_Master_Out(2298) <= \<const0>\;
  LOCKSTEP_Master_Out(2299) <= \<const0>\;
  LOCKSTEP_Master_Out(2300) <= \<const0>\;
  LOCKSTEP_Master_Out(2301) <= \<const0>\;
  LOCKSTEP_Master_Out(2302) <= \<const0>\;
  LOCKSTEP_Master_Out(2303) <= \<const0>\;
  LOCKSTEP_Master_Out(2304) <= \<const0>\;
  LOCKSTEP_Master_Out(2305) <= \<const0>\;
  LOCKSTEP_Master_Out(2306) <= \<const0>\;
  LOCKSTEP_Master_Out(2307) <= \<const0>\;
  LOCKSTEP_Master_Out(2308) <= \<const0>\;
  LOCKSTEP_Master_Out(2309) <= \<const0>\;
  LOCKSTEP_Master_Out(2310) <= \<const0>\;
  LOCKSTEP_Master_Out(2311) <= \<const0>\;
  LOCKSTEP_Master_Out(2312) <= \<const0>\;
  LOCKSTEP_Master_Out(2313) <= \<const0>\;
  LOCKSTEP_Master_Out(2314) <= \<const0>\;
  LOCKSTEP_Master_Out(2315) <= \<const0>\;
  LOCKSTEP_Master_Out(2316) <= \<const0>\;
  LOCKSTEP_Master_Out(2317) <= \<const0>\;
  LOCKSTEP_Master_Out(2318) <= \<const0>\;
  LOCKSTEP_Master_Out(2319) <= \<const0>\;
  LOCKSTEP_Master_Out(2320) <= \<const0>\;
  LOCKSTEP_Master_Out(2321) <= \<const0>\;
  LOCKSTEP_Master_Out(2322) <= \<const0>\;
  LOCKSTEP_Master_Out(2323) <= \<const0>\;
  LOCKSTEP_Master_Out(2324) <= \<const0>\;
  LOCKSTEP_Master_Out(2325) <= \<const0>\;
  LOCKSTEP_Master_Out(2326) <= \<const0>\;
  LOCKSTEP_Master_Out(2327) <= \<const0>\;
  LOCKSTEP_Master_Out(2328) <= \<const0>\;
  LOCKSTEP_Master_Out(2329) <= \<const0>\;
  LOCKSTEP_Master_Out(2330) <= \<const0>\;
  LOCKSTEP_Master_Out(2331) <= \<const0>\;
  LOCKSTEP_Master_Out(2332) <= \<const0>\;
  LOCKSTEP_Master_Out(2333) <= \<const0>\;
  LOCKSTEP_Master_Out(2334) <= \<const0>\;
  LOCKSTEP_Master_Out(2335) <= \<const0>\;
  LOCKSTEP_Master_Out(2336) <= \<const0>\;
  LOCKSTEP_Master_Out(2337) <= \<const0>\;
  LOCKSTEP_Master_Out(2338) <= \<const0>\;
  LOCKSTEP_Master_Out(2339) <= \<const0>\;
  LOCKSTEP_Master_Out(2340) <= \<const0>\;
  LOCKSTEP_Master_Out(2341) <= \<const0>\;
  LOCKSTEP_Master_Out(2342) <= \<const0>\;
  LOCKSTEP_Master_Out(2343) <= \<const0>\;
  LOCKSTEP_Master_Out(2344) <= \<const0>\;
  LOCKSTEP_Master_Out(2345) <= \<const0>\;
  LOCKSTEP_Master_Out(2346) <= \<const0>\;
  LOCKSTEP_Master_Out(2347) <= \<const0>\;
  LOCKSTEP_Master_Out(2348) <= \<const0>\;
  LOCKSTEP_Master_Out(2349) <= \<const0>\;
  LOCKSTEP_Master_Out(2350) <= \<const0>\;
  LOCKSTEP_Master_Out(2351) <= \<const0>\;
  LOCKSTEP_Master_Out(2352) <= \<const0>\;
  LOCKSTEP_Master_Out(2353) <= \<const0>\;
  LOCKSTEP_Master_Out(2354) <= \<const0>\;
  LOCKSTEP_Master_Out(2355) <= \<const0>\;
  LOCKSTEP_Master_Out(2356) <= \<const0>\;
  LOCKSTEP_Master_Out(2357) <= \<const0>\;
  LOCKSTEP_Master_Out(2358) <= \<const0>\;
  LOCKSTEP_Master_Out(2359) <= \<const0>\;
  LOCKSTEP_Master_Out(2360) <= \<const0>\;
  LOCKSTEP_Master_Out(2361) <= \<const0>\;
  LOCKSTEP_Master_Out(2362) <= \<const0>\;
  LOCKSTEP_Master_Out(2363) <= \<const0>\;
  LOCKSTEP_Master_Out(2364) <= \<const0>\;
  LOCKSTEP_Master_Out(2365) <= \<const0>\;
  LOCKSTEP_Master_Out(2366) <= \<const0>\;
  LOCKSTEP_Master_Out(2367) <= \<const0>\;
  LOCKSTEP_Master_Out(2368) <= \<const0>\;
  LOCKSTEP_Master_Out(2369) <= \<const0>\;
  LOCKSTEP_Master_Out(2370) <= \<const0>\;
  LOCKSTEP_Master_Out(2371) <= \<const0>\;
  LOCKSTEP_Master_Out(2372) <= \<const0>\;
  LOCKSTEP_Master_Out(2373) <= \<const0>\;
  LOCKSTEP_Master_Out(2374) <= \<const0>\;
  LOCKSTEP_Master_Out(2375) <= \<const0>\;
  LOCKSTEP_Master_Out(2376) <= \<const0>\;
  LOCKSTEP_Master_Out(2377) <= \<const0>\;
  LOCKSTEP_Master_Out(2378) <= \<const0>\;
  LOCKSTEP_Master_Out(2379) <= \<const0>\;
  LOCKSTEP_Master_Out(2380) <= \<const0>\;
  LOCKSTEP_Master_Out(2381) <= \<const0>\;
  LOCKSTEP_Master_Out(2382) <= \<const0>\;
  LOCKSTEP_Master_Out(2383) <= \<const0>\;
  LOCKSTEP_Master_Out(2384) <= \<const0>\;
  LOCKSTEP_Master_Out(2385) <= \<const0>\;
  LOCKSTEP_Master_Out(2386) <= \<const0>\;
  LOCKSTEP_Master_Out(2387) <= \<const0>\;
  LOCKSTEP_Master_Out(2388) <= \<const0>\;
  LOCKSTEP_Master_Out(2389) <= \<const0>\;
  LOCKSTEP_Master_Out(2390) <= \<const0>\;
  LOCKSTEP_Master_Out(2391) <= \<const0>\;
  LOCKSTEP_Master_Out(2392) <= \<const0>\;
  LOCKSTEP_Master_Out(2393) <= \<const0>\;
  LOCKSTEP_Master_Out(2394) <= \<const0>\;
  LOCKSTEP_Master_Out(2395) <= \<const0>\;
  LOCKSTEP_Master_Out(2396) <= \<const0>\;
  LOCKSTEP_Master_Out(2397) <= \<const0>\;
  LOCKSTEP_Master_Out(2398) <= \<const0>\;
  LOCKSTEP_Master_Out(2399) <= \<const0>\;
  LOCKSTEP_Master_Out(2400) <= \<const0>\;
  LOCKSTEP_Master_Out(2401) <= \<const0>\;
  LOCKSTEP_Master_Out(2402) <= \<const0>\;
  LOCKSTEP_Master_Out(2403) <= \<const0>\;
  LOCKSTEP_Master_Out(2404) <= \<const0>\;
  LOCKSTEP_Master_Out(2405) <= \<const0>\;
  LOCKSTEP_Master_Out(2406) <= \<const0>\;
  LOCKSTEP_Master_Out(2407) <= \<const0>\;
  LOCKSTEP_Master_Out(2408) <= \<const0>\;
  LOCKSTEP_Master_Out(2409) <= \<const0>\;
  LOCKSTEP_Master_Out(2410) <= \<const0>\;
  LOCKSTEP_Master_Out(2411) <= \<const0>\;
  LOCKSTEP_Master_Out(2412) <= \<const0>\;
  LOCKSTEP_Master_Out(2413) <= \<const0>\;
  LOCKSTEP_Master_Out(2414) <= \<const0>\;
  LOCKSTEP_Master_Out(2415) <= \<const0>\;
  LOCKSTEP_Master_Out(2416) <= \<const0>\;
  LOCKSTEP_Master_Out(2417) <= \<const0>\;
  LOCKSTEP_Master_Out(2418) <= \<const0>\;
  LOCKSTEP_Master_Out(2419) <= \<const0>\;
  LOCKSTEP_Master_Out(2420) <= \<const0>\;
  LOCKSTEP_Master_Out(2421) <= \<const0>\;
  LOCKSTEP_Master_Out(2422) <= \<const0>\;
  LOCKSTEP_Master_Out(2423) <= \<const0>\;
  LOCKSTEP_Master_Out(2424) <= \<const0>\;
  LOCKSTEP_Master_Out(2425) <= \<const0>\;
  LOCKSTEP_Master_Out(2426) <= \<const0>\;
  LOCKSTEP_Master_Out(2427) <= \<const0>\;
  LOCKSTEP_Master_Out(2428) <= \<const0>\;
  LOCKSTEP_Master_Out(2429) <= \<const0>\;
  LOCKSTEP_Master_Out(2430) <= \<const0>\;
  LOCKSTEP_Master_Out(2431) <= \<const0>\;
  LOCKSTEP_Master_Out(2432) <= \<const0>\;
  LOCKSTEP_Master_Out(2433) <= \<const0>\;
  LOCKSTEP_Master_Out(2434) <= \<const0>\;
  LOCKSTEP_Master_Out(2435) <= \<const0>\;
  LOCKSTEP_Master_Out(2436) <= \<const0>\;
  LOCKSTEP_Master_Out(2437) <= \<const0>\;
  LOCKSTEP_Master_Out(2438) <= \<const0>\;
  LOCKSTEP_Master_Out(2439) <= \<const0>\;
  LOCKSTEP_Master_Out(2440) <= \<const0>\;
  LOCKSTEP_Master_Out(2441) <= \<const0>\;
  LOCKSTEP_Master_Out(2442) <= \<const0>\;
  LOCKSTEP_Master_Out(2443) <= \<const0>\;
  LOCKSTEP_Master_Out(2444) <= \<const0>\;
  LOCKSTEP_Master_Out(2445) <= \<const0>\;
  LOCKSTEP_Master_Out(2446) <= \<const0>\;
  LOCKSTEP_Master_Out(2447) <= \<const0>\;
  LOCKSTEP_Master_Out(2448) <= \<const0>\;
  LOCKSTEP_Master_Out(2449) <= \<const0>\;
  LOCKSTEP_Master_Out(2450) <= \<const0>\;
  LOCKSTEP_Master_Out(2451) <= \<const0>\;
  LOCKSTEP_Master_Out(2452) <= \<const0>\;
  LOCKSTEP_Master_Out(2453) <= \<const0>\;
  LOCKSTEP_Master_Out(2454) <= \<const0>\;
  LOCKSTEP_Master_Out(2455) <= \<const0>\;
  LOCKSTEP_Master_Out(2456) <= \<const0>\;
  LOCKSTEP_Master_Out(2457) <= \<const0>\;
  LOCKSTEP_Master_Out(2458) <= \<const0>\;
  LOCKSTEP_Master_Out(2459) <= \<const0>\;
  LOCKSTEP_Master_Out(2460) <= \<const0>\;
  LOCKSTEP_Master_Out(2461) <= \<const0>\;
  LOCKSTEP_Master_Out(2462) <= \<const0>\;
  LOCKSTEP_Master_Out(2463) <= \<const0>\;
  LOCKSTEP_Master_Out(2464) <= \<const0>\;
  LOCKSTEP_Master_Out(2465) <= \<const0>\;
  LOCKSTEP_Master_Out(2466) <= \<const0>\;
  LOCKSTEP_Master_Out(2467) <= \<const0>\;
  LOCKSTEP_Master_Out(2468) <= \<const0>\;
  LOCKSTEP_Master_Out(2469) <= \<const0>\;
  LOCKSTEP_Master_Out(2470) <= \<const0>\;
  LOCKSTEP_Master_Out(2471) <= \<const0>\;
  LOCKSTEP_Master_Out(2472) <= \<const0>\;
  LOCKSTEP_Master_Out(2473) <= \<const0>\;
  LOCKSTEP_Master_Out(2474) <= \<const0>\;
  LOCKSTEP_Master_Out(2475) <= \<const0>\;
  LOCKSTEP_Master_Out(2476) <= \<const0>\;
  LOCKSTEP_Master_Out(2477) <= \<const0>\;
  LOCKSTEP_Master_Out(2478) <= \<const0>\;
  LOCKSTEP_Master_Out(2479) <= \<const0>\;
  LOCKSTEP_Master_Out(2480) <= \<const0>\;
  LOCKSTEP_Master_Out(2481) <= \<const0>\;
  LOCKSTEP_Master_Out(2482) <= \<const0>\;
  LOCKSTEP_Master_Out(2483) <= \<const0>\;
  LOCKSTEP_Master_Out(2484) <= \<const0>\;
  LOCKSTEP_Master_Out(2485) <= \<const0>\;
  LOCKSTEP_Master_Out(2486) <= \<const0>\;
  LOCKSTEP_Master_Out(2487) <= \<const0>\;
  LOCKSTEP_Master_Out(2488) <= \<const0>\;
  LOCKSTEP_Master_Out(2489) <= \<const0>\;
  LOCKSTEP_Master_Out(2490) <= \<const0>\;
  LOCKSTEP_Master_Out(2491) <= \<const0>\;
  LOCKSTEP_Master_Out(2492) <= \<const0>\;
  LOCKSTEP_Master_Out(2493) <= \<const0>\;
  LOCKSTEP_Master_Out(2494) <= \<const0>\;
  LOCKSTEP_Master_Out(2495) <= \<const0>\;
  LOCKSTEP_Master_Out(2496) <= \<const0>\;
  LOCKSTEP_Master_Out(2497) <= \<const0>\;
  LOCKSTEP_Master_Out(2498) <= \<const0>\;
  LOCKSTEP_Master_Out(2499) <= \<const0>\;
  LOCKSTEP_Master_Out(2500) <= \<const0>\;
  LOCKSTEP_Master_Out(2501) <= \<const0>\;
  LOCKSTEP_Master_Out(2502) <= \<const0>\;
  LOCKSTEP_Master_Out(2503) <= \<const0>\;
  LOCKSTEP_Master_Out(2504) <= \<const0>\;
  LOCKSTEP_Master_Out(2505) <= \<const0>\;
  LOCKSTEP_Master_Out(2506) <= \<const0>\;
  LOCKSTEP_Master_Out(2507) <= \<const0>\;
  LOCKSTEP_Master_Out(2508) <= \<const0>\;
  LOCKSTEP_Master_Out(2509) <= \<const0>\;
  LOCKSTEP_Master_Out(2510) <= \<const0>\;
  LOCKSTEP_Master_Out(2511) <= \<const0>\;
  LOCKSTEP_Master_Out(2512) <= \<const0>\;
  LOCKSTEP_Master_Out(2513) <= \<const0>\;
  LOCKSTEP_Master_Out(2514) <= \<const0>\;
  LOCKSTEP_Master_Out(2515) <= \<const0>\;
  LOCKSTEP_Master_Out(2516) <= \<const0>\;
  LOCKSTEP_Master_Out(2517) <= \<const0>\;
  LOCKSTEP_Master_Out(2518) <= \<const0>\;
  LOCKSTEP_Master_Out(2519) <= \<const0>\;
  LOCKSTEP_Master_Out(2520) <= \<const0>\;
  LOCKSTEP_Master_Out(2521) <= \<const0>\;
  LOCKSTEP_Master_Out(2522) <= \<const0>\;
  LOCKSTEP_Master_Out(2523) <= \<const0>\;
  LOCKSTEP_Master_Out(2524) <= \<const0>\;
  LOCKSTEP_Master_Out(2525) <= \<const0>\;
  LOCKSTEP_Master_Out(2526) <= \<const0>\;
  LOCKSTEP_Master_Out(2527) <= \<const0>\;
  LOCKSTEP_Master_Out(2528) <= \<const0>\;
  LOCKSTEP_Master_Out(2529) <= \<const0>\;
  LOCKSTEP_Master_Out(2530) <= \<const0>\;
  LOCKSTEP_Master_Out(2531) <= \<const0>\;
  LOCKSTEP_Master_Out(2532) <= \<const0>\;
  LOCKSTEP_Master_Out(2533) <= \<const0>\;
  LOCKSTEP_Master_Out(2534) <= \<const0>\;
  LOCKSTEP_Master_Out(2535) <= \<const0>\;
  LOCKSTEP_Master_Out(2536) <= \<const0>\;
  LOCKSTEP_Master_Out(2537) <= \<const0>\;
  LOCKSTEP_Master_Out(2538) <= \<const0>\;
  LOCKSTEP_Master_Out(2539) <= \<const0>\;
  LOCKSTEP_Master_Out(2540) <= \<const0>\;
  LOCKSTEP_Master_Out(2541) <= \<const0>\;
  LOCKSTEP_Master_Out(2542) <= \<const0>\;
  LOCKSTEP_Master_Out(2543) <= \<const0>\;
  LOCKSTEP_Master_Out(2544) <= \<const0>\;
  LOCKSTEP_Master_Out(2545) <= \<const0>\;
  LOCKSTEP_Master_Out(2546) <= \<const0>\;
  LOCKSTEP_Master_Out(2547) <= \<const0>\;
  LOCKSTEP_Master_Out(2548) <= \<const0>\;
  LOCKSTEP_Master_Out(2549) <= \<const0>\;
  LOCKSTEP_Master_Out(2550) <= \<const0>\;
  LOCKSTEP_Master_Out(2551) <= \<const0>\;
  LOCKSTEP_Master_Out(2552) <= \<const0>\;
  LOCKSTEP_Master_Out(2553) <= \<const0>\;
  LOCKSTEP_Master_Out(2554) <= \<const0>\;
  LOCKSTEP_Master_Out(2555) <= \<const0>\;
  LOCKSTEP_Master_Out(2556) <= \<const0>\;
  LOCKSTEP_Master_Out(2557) <= \<const0>\;
  LOCKSTEP_Master_Out(2558) <= \<const0>\;
  LOCKSTEP_Master_Out(2559) <= \<const0>\;
  LOCKSTEP_Master_Out(2560) <= \<const0>\;
  LOCKSTEP_Master_Out(2561) <= \<const0>\;
  LOCKSTEP_Master_Out(2562) <= \<const0>\;
  LOCKSTEP_Master_Out(2563) <= \<const0>\;
  LOCKSTEP_Master_Out(2564) <= \<const0>\;
  LOCKSTEP_Master_Out(2565) <= \<const0>\;
  LOCKSTEP_Master_Out(2566) <= \<const0>\;
  LOCKSTEP_Master_Out(2567) <= \<const0>\;
  LOCKSTEP_Master_Out(2568) <= \<const0>\;
  LOCKSTEP_Master_Out(2569) <= \<const0>\;
  LOCKSTEP_Master_Out(2570) <= \<const0>\;
  LOCKSTEP_Master_Out(2571) <= \<const0>\;
  LOCKSTEP_Master_Out(2572) <= \<const0>\;
  LOCKSTEP_Master_Out(2573) <= \<const0>\;
  LOCKSTEP_Master_Out(2574) <= \<const0>\;
  LOCKSTEP_Master_Out(2575) <= \<const0>\;
  LOCKSTEP_Master_Out(2576) <= \<const0>\;
  LOCKSTEP_Master_Out(2577) <= \<const0>\;
  LOCKSTEP_Master_Out(2578) <= \<const0>\;
  LOCKSTEP_Master_Out(2579) <= \<const0>\;
  LOCKSTEP_Master_Out(2580) <= \<const0>\;
  LOCKSTEP_Master_Out(2581) <= \<const0>\;
  LOCKSTEP_Master_Out(2582) <= \<const0>\;
  LOCKSTEP_Master_Out(2583) <= \<const0>\;
  LOCKSTEP_Master_Out(2584) <= \<const0>\;
  LOCKSTEP_Master_Out(2585) <= \<const0>\;
  LOCKSTEP_Master_Out(2586) <= \<const0>\;
  LOCKSTEP_Master_Out(2587) <= \<const0>\;
  LOCKSTEP_Master_Out(2588) <= \<const0>\;
  LOCKSTEP_Master_Out(2589) <= \<const0>\;
  LOCKSTEP_Master_Out(2590) <= \<const0>\;
  LOCKSTEP_Master_Out(2591) <= \<const0>\;
  LOCKSTEP_Master_Out(2592) <= \<const0>\;
  LOCKSTEP_Master_Out(2593) <= \<const0>\;
  LOCKSTEP_Master_Out(2594) <= \<const0>\;
  LOCKSTEP_Master_Out(2595) <= \<const0>\;
  LOCKSTEP_Master_Out(2596) <= \<const0>\;
  LOCKSTEP_Master_Out(2597) <= \<const0>\;
  LOCKSTEP_Master_Out(2598) <= \<const0>\;
  LOCKSTEP_Master_Out(2599) <= \<const0>\;
  LOCKSTEP_Master_Out(2600) <= \<const0>\;
  LOCKSTEP_Master_Out(2601) <= \<const0>\;
  LOCKSTEP_Master_Out(2602) <= \<const0>\;
  LOCKSTEP_Master_Out(2603) <= \<const0>\;
  LOCKSTEP_Master_Out(2604) <= \<const0>\;
  LOCKSTEP_Master_Out(2605) <= \<const0>\;
  LOCKSTEP_Master_Out(2606) <= \<const0>\;
  LOCKSTEP_Master_Out(2607) <= \<const0>\;
  LOCKSTEP_Master_Out(2608) <= \<const0>\;
  LOCKSTEP_Master_Out(2609) <= \<const0>\;
  LOCKSTEP_Master_Out(2610) <= \<const0>\;
  LOCKSTEP_Master_Out(2611) <= \<const0>\;
  LOCKSTEP_Master_Out(2612) <= \<const0>\;
  LOCKSTEP_Master_Out(2613) <= \<const0>\;
  LOCKSTEP_Master_Out(2614) <= \<const0>\;
  LOCKSTEP_Master_Out(2615) <= \<const0>\;
  LOCKSTEP_Master_Out(2616) <= \<const0>\;
  LOCKSTEP_Master_Out(2617) <= \<const0>\;
  LOCKSTEP_Master_Out(2618) <= \<const0>\;
  LOCKSTEP_Master_Out(2619) <= \<const0>\;
  LOCKSTEP_Master_Out(2620) <= \<const0>\;
  LOCKSTEP_Master_Out(2621) <= \<const0>\;
  LOCKSTEP_Master_Out(2622) <= \<const0>\;
  LOCKSTEP_Master_Out(2623) <= \<const0>\;
  LOCKSTEP_Master_Out(2624) <= \<const0>\;
  LOCKSTEP_Master_Out(2625) <= \<const0>\;
  LOCKSTEP_Master_Out(2626) <= \<const0>\;
  LOCKSTEP_Master_Out(2627) <= \<const0>\;
  LOCKSTEP_Master_Out(2628) <= \<const0>\;
  LOCKSTEP_Master_Out(2629) <= \<const0>\;
  LOCKSTEP_Master_Out(2630) <= \<const0>\;
  LOCKSTEP_Master_Out(2631) <= \<const0>\;
  LOCKSTEP_Master_Out(2632) <= \<const0>\;
  LOCKSTEP_Master_Out(2633) <= \<const0>\;
  LOCKSTEP_Master_Out(2634) <= \<const0>\;
  LOCKSTEP_Master_Out(2635) <= \<const0>\;
  LOCKSTEP_Master_Out(2636) <= \<const0>\;
  LOCKSTEP_Master_Out(2637) <= \<const0>\;
  LOCKSTEP_Master_Out(2638) <= \<const0>\;
  LOCKSTEP_Master_Out(2639) <= \<const0>\;
  LOCKSTEP_Master_Out(2640) <= \<const0>\;
  LOCKSTEP_Master_Out(2641) <= \<const0>\;
  LOCKSTEP_Master_Out(2642) <= \<const0>\;
  LOCKSTEP_Master_Out(2643) <= \<const0>\;
  LOCKSTEP_Master_Out(2644) <= \<const0>\;
  LOCKSTEP_Master_Out(2645) <= \<const0>\;
  LOCKSTEP_Master_Out(2646) <= \<const0>\;
  LOCKSTEP_Master_Out(2647) <= \<const0>\;
  LOCKSTEP_Master_Out(2648) <= \<const0>\;
  LOCKSTEP_Master_Out(2649) <= \<const0>\;
  LOCKSTEP_Master_Out(2650) <= \<const0>\;
  LOCKSTEP_Master_Out(2651) <= \<const0>\;
  LOCKSTEP_Master_Out(2652) <= \<const0>\;
  LOCKSTEP_Master_Out(2653) <= \<const0>\;
  LOCKSTEP_Master_Out(2654) <= \<const0>\;
  LOCKSTEP_Master_Out(2655) <= \<const0>\;
  LOCKSTEP_Master_Out(2656) <= \<const0>\;
  LOCKSTEP_Master_Out(2657) <= \<const0>\;
  LOCKSTEP_Master_Out(2658) <= \<const0>\;
  LOCKSTEP_Master_Out(2659) <= \<const0>\;
  LOCKSTEP_Master_Out(2660) <= \<const0>\;
  LOCKSTEP_Master_Out(2661) <= \<const0>\;
  LOCKSTEP_Master_Out(2662) <= \<const0>\;
  LOCKSTEP_Master_Out(2663) <= \<const0>\;
  LOCKSTEP_Master_Out(2664) <= \<const0>\;
  LOCKSTEP_Master_Out(2665) <= \<const0>\;
  LOCKSTEP_Master_Out(2666) <= \<const0>\;
  LOCKSTEP_Master_Out(2667) <= \<const0>\;
  LOCKSTEP_Master_Out(2668) <= \<const0>\;
  LOCKSTEP_Master_Out(2669) <= \<const0>\;
  LOCKSTEP_Master_Out(2670) <= \<const0>\;
  LOCKSTEP_Master_Out(2671) <= \<const0>\;
  LOCKSTEP_Master_Out(2672) <= \<const0>\;
  LOCKSTEP_Master_Out(2673) <= \<const0>\;
  LOCKSTEP_Master_Out(2674) <= \<const0>\;
  LOCKSTEP_Master_Out(2675) <= \<const0>\;
  LOCKSTEP_Master_Out(2676) <= \<const0>\;
  LOCKSTEP_Master_Out(2677) <= \<const0>\;
  LOCKSTEP_Master_Out(2678) <= \<const0>\;
  LOCKSTEP_Master_Out(2679) <= \<const0>\;
  LOCKSTEP_Master_Out(2680) <= \<const0>\;
  LOCKSTEP_Master_Out(2681) <= \<const0>\;
  LOCKSTEP_Master_Out(2682) <= \<const0>\;
  LOCKSTEP_Master_Out(2683) <= \<const0>\;
  LOCKSTEP_Master_Out(2684) <= \<const0>\;
  LOCKSTEP_Master_Out(2685) <= \<const0>\;
  LOCKSTEP_Master_Out(2686) <= \<const0>\;
  LOCKSTEP_Master_Out(2687) <= \<const0>\;
  LOCKSTEP_Master_Out(2688) <= \<const0>\;
  LOCKSTEP_Master_Out(2689) <= \<const0>\;
  LOCKSTEP_Master_Out(2690) <= \<const0>\;
  LOCKSTEP_Master_Out(2691) <= \<const0>\;
  LOCKSTEP_Master_Out(2692) <= \<const0>\;
  LOCKSTEP_Master_Out(2693) <= \<const0>\;
  LOCKSTEP_Master_Out(2694) <= \<const0>\;
  LOCKSTEP_Master_Out(2695) <= \<const0>\;
  LOCKSTEP_Master_Out(2696) <= \<const0>\;
  LOCKSTEP_Master_Out(2697) <= \<const0>\;
  LOCKSTEP_Master_Out(2698) <= \<const0>\;
  LOCKSTEP_Master_Out(2699) <= \<const0>\;
  LOCKSTEP_Master_Out(2700) <= \<const0>\;
  LOCKSTEP_Master_Out(2701) <= \<const0>\;
  LOCKSTEP_Master_Out(2702) <= \<const0>\;
  LOCKSTEP_Master_Out(2703) <= \<const0>\;
  LOCKSTEP_Master_Out(2704) <= \<const0>\;
  LOCKSTEP_Master_Out(2705) <= \<const0>\;
  LOCKSTEP_Master_Out(2706) <= \<const0>\;
  LOCKSTEP_Master_Out(2707) <= \<const0>\;
  LOCKSTEP_Master_Out(2708) <= \<const0>\;
  LOCKSTEP_Master_Out(2709) <= \<const0>\;
  LOCKSTEP_Master_Out(2710) <= \<const0>\;
  LOCKSTEP_Master_Out(2711) <= \<const0>\;
  LOCKSTEP_Master_Out(2712) <= \<const0>\;
  LOCKSTEP_Master_Out(2713) <= \<const0>\;
  LOCKSTEP_Master_Out(2714) <= \<const0>\;
  LOCKSTEP_Master_Out(2715) <= \<const0>\;
  LOCKSTEP_Master_Out(2716) <= \<const0>\;
  LOCKSTEP_Master_Out(2717) <= \<const0>\;
  LOCKSTEP_Master_Out(2718) <= \<const0>\;
  LOCKSTEP_Master_Out(2719) <= \<const0>\;
  LOCKSTEP_Master_Out(2720) <= \<const0>\;
  LOCKSTEP_Master_Out(2721) <= \<const0>\;
  LOCKSTEP_Master_Out(2722) <= \<const0>\;
  LOCKSTEP_Master_Out(2723) <= \<const0>\;
  LOCKSTEP_Master_Out(2724) <= \<const0>\;
  LOCKSTEP_Master_Out(2725) <= \<const0>\;
  LOCKSTEP_Master_Out(2726) <= \<const0>\;
  LOCKSTEP_Master_Out(2727) <= \<const0>\;
  LOCKSTEP_Master_Out(2728) <= \<const0>\;
  LOCKSTEP_Master_Out(2729) <= \<const0>\;
  LOCKSTEP_Master_Out(2730) <= \<const0>\;
  LOCKSTEP_Master_Out(2731) <= \<const0>\;
  LOCKSTEP_Master_Out(2732) <= \<const0>\;
  LOCKSTEP_Master_Out(2733) <= \<const0>\;
  LOCKSTEP_Master_Out(2734) <= \<const0>\;
  LOCKSTEP_Master_Out(2735) <= \<const0>\;
  LOCKSTEP_Master_Out(2736) <= \<const0>\;
  LOCKSTEP_Master_Out(2737) <= \<const0>\;
  LOCKSTEP_Master_Out(2738) <= \<const0>\;
  LOCKSTEP_Master_Out(2739) <= \<const0>\;
  LOCKSTEP_Master_Out(2740) <= \<const0>\;
  LOCKSTEP_Master_Out(2741) <= \<const0>\;
  LOCKSTEP_Master_Out(2742) <= \<const0>\;
  LOCKSTEP_Master_Out(2743) <= \<const0>\;
  LOCKSTEP_Master_Out(2744) <= \<const0>\;
  LOCKSTEP_Master_Out(2745) <= \<const0>\;
  LOCKSTEP_Master_Out(2746) <= \<const0>\;
  LOCKSTEP_Master_Out(2747) <= \<const0>\;
  LOCKSTEP_Master_Out(2748) <= \<const0>\;
  LOCKSTEP_Master_Out(2749) <= \<const0>\;
  LOCKSTEP_Master_Out(2750) <= \<const0>\;
  LOCKSTEP_Master_Out(2751) <= \<const0>\;
  LOCKSTEP_Master_Out(2752) <= \<const0>\;
  LOCKSTEP_Master_Out(2753) <= \<const0>\;
  LOCKSTEP_Master_Out(2754) <= \<const0>\;
  LOCKSTEP_Master_Out(2755) <= \<const0>\;
  LOCKSTEP_Master_Out(2756) <= \<const0>\;
  LOCKSTEP_Master_Out(2757) <= \<const0>\;
  LOCKSTEP_Master_Out(2758) <= \<const0>\;
  LOCKSTEP_Master_Out(2759) <= \<const0>\;
  LOCKSTEP_Master_Out(2760) <= \<const0>\;
  LOCKSTEP_Master_Out(2761) <= \<const0>\;
  LOCKSTEP_Master_Out(2762) <= \<const0>\;
  LOCKSTEP_Master_Out(2763) <= \<const0>\;
  LOCKSTEP_Master_Out(2764) <= \<const0>\;
  LOCKSTEP_Master_Out(2765) <= \<const0>\;
  LOCKSTEP_Master_Out(2766) <= \<const0>\;
  LOCKSTEP_Master_Out(2767) <= \<const0>\;
  LOCKSTEP_Master_Out(2768) <= \<const0>\;
  LOCKSTEP_Master_Out(2769) <= \<const0>\;
  LOCKSTEP_Master_Out(2770) <= \<const0>\;
  LOCKSTEP_Master_Out(2771) <= \<const0>\;
  LOCKSTEP_Master_Out(2772) <= \<const0>\;
  LOCKSTEP_Master_Out(2773) <= \<const0>\;
  LOCKSTEP_Master_Out(2774) <= \<const0>\;
  LOCKSTEP_Master_Out(2775) <= \<const0>\;
  LOCKSTEP_Master_Out(2776) <= \<const0>\;
  LOCKSTEP_Master_Out(2777) <= \<const0>\;
  LOCKSTEP_Master_Out(2778) <= \<const0>\;
  LOCKSTEP_Master_Out(2779) <= \<const0>\;
  LOCKSTEP_Master_Out(2780) <= \<const0>\;
  LOCKSTEP_Master_Out(2781) <= \<const0>\;
  LOCKSTEP_Master_Out(2782) <= \<const0>\;
  LOCKSTEP_Master_Out(2783) <= \<const0>\;
  LOCKSTEP_Master_Out(2784) <= \<const0>\;
  LOCKSTEP_Master_Out(2785) <= \<const0>\;
  LOCKSTEP_Master_Out(2786) <= \<const0>\;
  LOCKSTEP_Master_Out(2787) <= \<const0>\;
  LOCKSTEP_Master_Out(2788) <= \<const0>\;
  LOCKSTEP_Master_Out(2789) <= \<const0>\;
  LOCKSTEP_Master_Out(2790) <= \<const0>\;
  LOCKSTEP_Master_Out(2791) <= \<const0>\;
  LOCKSTEP_Master_Out(2792) <= \<const0>\;
  LOCKSTEP_Master_Out(2793) <= \<const0>\;
  LOCKSTEP_Master_Out(2794) <= \<const0>\;
  LOCKSTEP_Master_Out(2795) <= \<const0>\;
  LOCKSTEP_Master_Out(2796) <= \<const0>\;
  LOCKSTEP_Master_Out(2797) <= \<const0>\;
  LOCKSTEP_Master_Out(2798) <= \<const0>\;
  LOCKSTEP_Master_Out(2799) <= \<const0>\;
  LOCKSTEP_Master_Out(2800) <= \<const0>\;
  LOCKSTEP_Master_Out(2801) <= \<const0>\;
  LOCKSTEP_Master_Out(2802) <= \<const0>\;
  LOCKSTEP_Master_Out(2803) <= \<const0>\;
  LOCKSTEP_Master_Out(2804) <= \<const0>\;
  LOCKSTEP_Master_Out(2805) <= \<const0>\;
  LOCKSTEP_Master_Out(2806) <= \<const0>\;
  LOCKSTEP_Master_Out(2807) <= \<const0>\;
  LOCKSTEP_Master_Out(2808) <= \<const0>\;
  LOCKSTEP_Master_Out(2809) <= \<const0>\;
  LOCKSTEP_Master_Out(2810) <= \<const0>\;
  LOCKSTEP_Master_Out(2811) <= \<const0>\;
  LOCKSTEP_Master_Out(2812) <= \<const0>\;
  LOCKSTEP_Master_Out(2813) <= \<const0>\;
  LOCKSTEP_Master_Out(2814) <= \<const0>\;
  LOCKSTEP_Master_Out(2815) <= \<const0>\;
  LOCKSTEP_Master_Out(2816) <= \<const0>\;
  LOCKSTEP_Master_Out(2817) <= \<const0>\;
  LOCKSTEP_Master_Out(2818) <= \<const0>\;
  LOCKSTEP_Master_Out(2819) <= \<const0>\;
  LOCKSTEP_Master_Out(2820) <= \<const0>\;
  LOCKSTEP_Master_Out(2821) <= \<const0>\;
  LOCKSTEP_Master_Out(2822) <= \<const0>\;
  LOCKSTEP_Master_Out(2823) <= \<const0>\;
  LOCKSTEP_Master_Out(2824) <= \<const0>\;
  LOCKSTEP_Master_Out(2825) <= \<const0>\;
  LOCKSTEP_Master_Out(2826) <= \<const0>\;
  LOCKSTEP_Master_Out(2827) <= \<const0>\;
  LOCKSTEP_Master_Out(2828) <= \<const0>\;
  LOCKSTEP_Master_Out(2829) <= \<const0>\;
  LOCKSTEP_Master_Out(2830) <= \<const0>\;
  LOCKSTEP_Master_Out(2831) <= \<const0>\;
  LOCKSTEP_Master_Out(2832) <= \<const0>\;
  LOCKSTEP_Master_Out(2833) <= \<const0>\;
  LOCKSTEP_Master_Out(2834) <= \<const0>\;
  LOCKSTEP_Master_Out(2835) <= \<const0>\;
  LOCKSTEP_Master_Out(2836) <= \<const0>\;
  LOCKSTEP_Master_Out(2837) <= \<const0>\;
  LOCKSTEP_Master_Out(2838) <= \<const0>\;
  LOCKSTEP_Master_Out(2839) <= \<const0>\;
  LOCKSTEP_Master_Out(2840) <= \<const0>\;
  LOCKSTEP_Master_Out(2841) <= \<const0>\;
  LOCKSTEP_Master_Out(2842) <= \<const0>\;
  LOCKSTEP_Master_Out(2843) <= \<const0>\;
  LOCKSTEP_Master_Out(2844) <= \<const0>\;
  LOCKSTEP_Master_Out(2845) <= \<const0>\;
  LOCKSTEP_Master_Out(2846) <= \<const0>\;
  LOCKSTEP_Master_Out(2847) <= \<const0>\;
  LOCKSTEP_Master_Out(2848) <= \<const0>\;
  LOCKSTEP_Master_Out(2849) <= \<const0>\;
  LOCKSTEP_Master_Out(2850) <= \<const0>\;
  LOCKSTEP_Master_Out(2851) <= \<const0>\;
  LOCKSTEP_Master_Out(2852) <= \<const0>\;
  LOCKSTEP_Master_Out(2853) <= \<const0>\;
  LOCKSTEP_Master_Out(2854) <= \<const0>\;
  LOCKSTEP_Master_Out(2855) <= \<const0>\;
  LOCKSTEP_Master_Out(2856) <= \<const0>\;
  LOCKSTEP_Master_Out(2857) <= \<const0>\;
  LOCKSTEP_Master_Out(2858) <= \<const0>\;
  LOCKSTEP_Master_Out(2859) <= \<const0>\;
  LOCKSTEP_Master_Out(2860) <= \<const0>\;
  LOCKSTEP_Master_Out(2861) <= \<const0>\;
  LOCKSTEP_Master_Out(2862) <= \<const0>\;
  LOCKSTEP_Master_Out(2863) <= \<const0>\;
  LOCKSTEP_Master_Out(2864) <= \<const0>\;
  LOCKSTEP_Master_Out(2865) <= \<const0>\;
  LOCKSTEP_Master_Out(2866) <= \<const0>\;
  LOCKSTEP_Master_Out(2867) <= \<const0>\;
  LOCKSTEP_Master_Out(2868) <= \<const0>\;
  LOCKSTEP_Master_Out(2869) <= \<const0>\;
  LOCKSTEP_Master_Out(2870) <= \<const0>\;
  LOCKSTEP_Master_Out(2871) <= \<const0>\;
  LOCKSTEP_Master_Out(2872) <= \<const0>\;
  LOCKSTEP_Master_Out(2873) <= \<const0>\;
  LOCKSTEP_Master_Out(2874) <= \<const0>\;
  LOCKSTEP_Master_Out(2875) <= \<const0>\;
  LOCKSTEP_Master_Out(2876) <= \<const0>\;
  LOCKSTEP_Master_Out(2877) <= \<const0>\;
  LOCKSTEP_Master_Out(2878) <= \<const0>\;
  LOCKSTEP_Master_Out(2879) <= \<const0>\;
  LOCKSTEP_Master_Out(2880) <= \<const0>\;
  LOCKSTEP_Master_Out(2881) <= \<const0>\;
  LOCKSTEP_Master_Out(2882) <= \<const0>\;
  LOCKSTEP_Master_Out(2883) <= \<const0>\;
  LOCKSTEP_Master_Out(2884) <= \<const0>\;
  LOCKSTEP_Master_Out(2885) <= \<const0>\;
  LOCKSTEP_Master_Out(2886) <= \<const0>\;
  LOCKSTEP_Master_Out(2887) <= \<const0>\;
  LOCKSTEP_Master_Out(2888) <= \<const0>\;
  LOCKSTEP_Master_Out(2889) <= \<const0>\;
  LOCKSTEP_Master_Out(2890) <= \<const0>\;
  LOCKSTEP_Master_Out(2891) <= \<const0>\;
  LOCKSTEP_Master_Out(2892) <= \<const0>\;
  LOCKSTEP_Master_Out(2893) <= \<const0>\;
  LOCKSTEP_Master_Out(2894) <= \<const0>\;
  LOCKSTEP_Master_Out(2895) <= \<const0>\;
  LOCKSTEP_Master_Out(2896) <= \<const0>\;
  LOCKSTEP_Master_Out(2897) <= \<const0>\;
  LOCKSTEP_Master_Out(2898) <= \<const0>\;
  LOCKSTEP_Master_Out(2899) <= \<const0>\;
  LOCKSTEP_Master_Out(2900) <= \<const0>\;
  LOCKSTEP_Master_Out(2901) <= \<const0>\;
  LOCKSTEP_Master_Out(2902) <= \<const0>\;
  LOCKSTEP_Master_Out(2903) <= \<const0>\;
  LOCKSTEP_Master_Out(2904) <= \<const0>\;
  LOCKSTEP_Master_Out(2905) <= \<const0>\;
  LOCKSTEP_Master_Out(2906) <= \<const0>\;
  LOCKSTEP_Master_Out(2907) <= \<const0>\;
  LOCKSTEP_Master_Out(2908) <= \<const0>\;
  LOCKSTEP_Master_Out(2909) <= \<const0>\;
  LOCKSTEP_Master_Out(2910) <= \<const0>\;
  LOCKSTEP_Master_Out(2911) <= \<const0>\;
  LOCKSTEP_Master_Out(2912) <= \<const0>\;
  LOCKSTEP_Master_Out(2913) <= \<const0>\;
  LOCKSTEP_Master_Out(2914) <= \<const0>\;
  LOCKSTEP_Master_Out(2915) <= \<const0>\;
  LOCKSTEP_Master_Out(2916) <= \<const0>\;
  LOCKSTEP_Master_Out(2917) <= \<const0>\;
  LOCKSTEP_Master_Out(2918) <= \<const0>\;
  LOCKSTEP_Master_Out(2919) <= \<const0>\;
  LOCKSTEP_Master_Out(2920) <= \<const0>\;
  LOCKSTEP_Master_Out(2921) <= \<const0>\;
  LOCKSTEP_Master_Out(2922) <= \<const0>\;
  LOCKSTEP_Master_Out(2923) <= \<const0>\;
  LOCKSTEP_Master_Out(2924) <= \<const0>\;
  LOCKSTEP_Master_Out(2925) <= \<const0>\;
  LOCKSTEP_Master_Out(2926) <= \<const0>\;
  LOCKSTEP_Master_Out(2927) <= \<const0>\;
  LOCKSTEP_Master_Out(2928) <= \<const0>\;
  LOCKSTEP_Master_Out(2929) <= \<const0>\;
  LOCKSTEP_Master_Out(2930) <= \<const0>\;
  LOCKSTEP_Master_Out(2931) <= \<const0>\;
  LOCKSTEP_Master_Out(2932) <= \<const0>\;
  LOCKSTEP_Master_Out(2933) <= \<const0>\;
  LOCKSTEP_Master_Out(2934) <= \<const0>\;
  LOCKSTEP_Master_Out(2935) <= \<const0>\;
  LOCKSTEP_Master_Out(2936) <= \<const0>\;
  LOCKSTEP_Master_Out(2937) <= \<const0>\;
  LOCKSTEP_Master_Out(2938) <= \<const0>\;
  LOCKSTEP_Master_Out(2939) <= \<const0>\;
  LOCKSTEP_Master_Out(2940) <= \<const0>\;
  LOCKSTEP_Master_Out(2941) <= \<const0>\;
  LOCKSTEP_Master_Out(2942) <= \<const0>\;
  LOCKSTEP_Master_Out(2943) <= \<const0>\;
  LOCKSTEP_Master_Out(2944) <= \<const0>\;
  LOCKSTEP_Master_Out(2945) <= \<const0>\;
  LOCKSTEP_Master_Out(2946) <= \<const0>\;
  LOCKSTEP_Master_Out(2947) <= \<const0>\;
  LOCKSTEP_Master_Out(2948) <= \<const0>\;
  LOCKSTEP_Master_Out(2949) <= \<const0>\;
  LOCKSTEP_Master_Out(2950) <= \<const0>\;
  LOCKSTEP_Master_Out(2951) <= \<const0>\;
  LOCKSTEP_Master_Out(2952) <= \<const0>\;
  LOCKSTEP_Master_Out(2953) <= \<const0>\;
  LOCKSTEP_Master_Out(2954) <= \<const0>\;
  LOCKSTEP_Master_Out(2955) <= \<const0>\;
  LOCKSTEP_Master_Out(2956) <= \<const0>\;
  LOCKSTEP_Master_Out(2957) <= \<const0>\;
  LOCKSTEP_Master_Out(2958) <= \<const0>\;
  LOCKSTEP_Master_Out(2959) <= \<const0>\;
  LOCKSTEP_Master_Out(2960) <= \<const0>\;
  LOCKSTEP_Master_Out(2961) <= \<const0>\;
  LOCKSTEP_Master_Out(2962) <= \<const0>\;
  LOCKSTEP_Master_Out(2963) <= \<const0>\;
  LOCKSTEP_Master_Out(2964) <= \<const0>\;
  LOCKSTEP_Master_Out(2965) <= \<const0>\;
  LOCKSTEP_Master_Out(2966) <= \<const0>\;
  LOCKSTEP_Master_Out(2967) <= \<const0>\;
  LOCKSTEP_Master_Out(2968) <= \<const0>\;
  LOCKSTEP_Master_Out(2969) <= \<const0>\;
  LOCKSTEP_Master_Out(2970) <= \<const0>\;
  LOCKSTEP_Master_Out(2971) <= \<const0>\;
  LOCKSTEP_Master_Out(2972) <= \<const0>\;
  LOCKSTEP_Master_Out(2973) <= \<const0>\;
  LOCKSTEP_Master_Out(2974) <= \<const0>\;
  LOCKSTEP_Master_Out(2975) <= \<const0>\;
  LOCKSTEP_Master_Out(2976) <= \<const0>\;
  LOCKSTEP_Master_Out(2977) <= \<const0>\;
  LOCKSTEP_Master_Out(2978) <= \<const0>\;
  LOCKSTEP_Master_Out(2979) <= \<const0>\;
  LOCKSTEP_Master_Out(2980) <= \<const0>\;
  LOCKSTEP_Master_Out(2981) <= \<const0>\;
  LOCKSTEP_Master_Out(2982) <= \<const0>\;
  LOCKSTEP_Master_Out(2983) <= \<const0>\;
  LOCKSTEP_Master_Out(2984) <= \<const0>\;
  LOCKSTEP_Master_Out(2985) <= \<const0>\;
  LOCKSTEP_Master_Out(2986) <= \<const0>\;
  LOCKSTEP_Master_Out(2987) <= \<const0>\;
  LOCKSTEP_Master_Out(2988) <= \<const0>\;
  LOCKSTEP_Master_Out(2989) <= \<const0>\;
  LOCKSTEP_Master_Out(2990) <= \<const0>\;
  LOCKSTEP_Master_Out(2991) <= \<const0>\;
  LOCKSTEP_Master_Out(2992) <= \<const0>\;
  LOCKSTEP_Master_Out(2993) <= \<const0>\;
  LOCKSTEP_Master_Out(2994) <= \<const0>\;
  LOCKSTEP_Master_Out(2995) <= \<const0>\;
  LOCKSTEP_Master_Out(2996) <= \<const0>\;
  LOCKSTEP_Master_Out(2997) <= \<const0>\;
  LOCKSTEP_Master_Out(2998) <= \<const0>\;
  LOCKSTEP_Master_Out(2999) <= \<const0>\;
  LOCKSTEP_Master_Out(3000) <= \<const0>\;
  LOCKSTEP_Master_Out(3001) <= \<const0>\;
  LOCKSTEP_Master_Out(3002) <= \<const0>\;
  LOCKSTEP_Master_Out(3003) <= \<const0>\;
  LOCKSTEP_Master_Out(3004) <= \<const0>\;
  LOCKSTEP_Master_Out(3005) <= \<const0>\;
  LOCKSTEP_Master_Out(3006) <= \<const0>\;
  LOCKSTEP_Master_Out(3007) <= \<const0>\;
  LOCKSTEP_Master_Out(3008) <= \<const0>\;
  LOCKSTEP_Master_Out(3009) <= \<const0>\;
  LOCKSTEP_Master_Out(3010) <= \<const0>\;
  LOCKSTEP_Master_Out(3011) <= \<const0>\;
  LOCKSTEP_Master_Out(3012) <= \<const0>\;
  LOCKSTEP_Master_Out(3013) <= \<const0>\;
  LOCKSTEP_Master_Out(3014) <= \<const0>\;
  LOCKSTEP_Master_Out(3015) <= \<const0>\;
  LOCKSTEP_Master_Out(3016) <= \<const0>\;
  LOCKSTEP_Master_Out(3017) <= \<const0>\;
  LOCKSTEP_Master_Out(3018) <= \<const0>\;
  LOCKSTEP_Master_Out(3019) <= \<const0>\;
  LOCKSTEP_Master_Out(3020) <= \<const0>\;
  LOCKSTEP_Master_Out(3021) <= \<const0>\;
  LOCKSTEP_Master_Out(3022) <= \<const0>\;
  LOCKSTEP_Master_Out(3023) <= \<const0>\;
  LOCKSTEP_Master_Out(3024) <= \<const0>\;
  LOCKSTEP_Master_Out(3025) <= \<const0>\;
  LOCKSTEP_Master_Out(3026) <= \<const0>\;
  LOCKSTEP_Master_Out(3027) <= \<const0>\;
  LOCKSTEP_Master_Out(3028) <= \<const0>\;
  LOCKSTEP_Master_Out(3029) <= \<const0>\;
  LOCKSTEP_Master_Out(3030) <= \<const0>\;
  LOCKSTEP_Master_Out(3031) <= \<const0>\;
  LOCKSTEP_Master_Out(3032) <= \<const0>\;
  LOCKSTEP_Master_Out(3033) <= \<const0>\;
  LOCKSTEP_Master_Out(3034) <= \<const0>\;
  LOCKSTEP_Master_Out(3035) <= \<const0>\;
  LOCKSTEP_Master_Out(3036) <= \<const0>\;
  LOCKSTEP_Master_Out(3037) <= \<const0>\;
  LOCKSTEP_Master_Out(3038) <= \<const0>\;
  LOCKSTEP_Master_Out(3039) <= \<const0>\;
  LOCKSTEP_Master_Out(3040) <= \<const0>\;
  LOCKSTEP_Master_Out(3041) <= \<const0>\;
  LOCKSTEP_Master_Out(3042) <= \<const0>\;
  LOCKSTEP_Master_Out(3043) <= \<const0>\;
  LOCKSTEP_Master_Out(3044) <= \<const0>\;
  LOCKSTEP_Master_Out(3045) <= \<const0>\;
  LOCKSTEP_Master_Out(3046) <= \<const0>\;
  LOCKSTEP_Master_Out(3047) <= \<const0>\;
  LOCKSTEP_Master_Out(3048) <= \<const0>\;
  LOCKSTEP_Master_Out(3049) <= \<const0>\;
  LOCKSTEP_Master_Out(3050) <= \<const0>\;
  LOCKSTEP_Master_Out(3051) <= \<const0>\;
  LOCKSTEP_Master_Out(3052) <= \<const0>\;
  LOCKSTEP_Master_Out(3053) <= \<const0>\;
  LOCKSTEP_Master_Out(3054) <= \<const0>\;
  LOCKSTEP_Master_Out(3055) <= \<const0>\;
  LOCKSTEP_Master_Out(3056) <= \<const0>\;
  LOCKSTEP_Master_Out(3057) <= \<const0>\;
  LOCKSTEP_Master_Out(3058) <= \<const0>\;
  LOCKSTEP_Master_Out(3059) <= \<const0>\;
  LOCKSTEP_Master_Out(3060) <= \<const0>\;
  LOCKSTEP_Master_Out(3061) <= \<const0>\;
  LOCKSTEP_Master_Out(3062) <= \<const0>\;
  LOCKSTEP_Master_Out(3063) <= \<const0>\;
  LOCKSTEP_Master_Out(3064) <= \<const0>\;
  LOCKSTEP_Master_Out(3065) <= \<const0>\;
  LOCKSTEP_Master_Out(3066) <= \<const0>\;
  LOCKSTEP_Master_Out(3067) <= \<const0>\;
  LOCKSTEP_Master_Out(3068) <= \<const0>\;
  LOCKSTEP_Master_Out(3069) <= \<const0>\;
  LOCKSTEP_Master_Out(3070) <= \<const0>\;
  LOCKSTEP_Master_Out(3071) <= \<const0>\;
  LOCKSTEP_Master_Out(3072) <= \<const0>\;
  LOCKSTEP_Master_Out(3073) <= \<const0>\;
  LOCKSTEP_Master_Out(3074) <= \<const0>\;
  LOCKSTEP_Master_Out(3075) <= \<const0>\;
  LOCKSTEP_Master_Out(3076) <= \<const0>\;
  LOCKSTEP_Master_Out(3077) <= \<const0>\;
  LOCKSTEP_Master_Out(3078) <= \<const0>\;
  LOCKSTEP_Master_Out(3079) <= \<const0>\;
  LOCKSTEP_Master_Out(3080) <= \<const0>\;
  LOCKSTEP_Master_Out(3081) <= \<const0>\;
  LOCKSTEP_Master_Out(3082) <= \<const0>\;
  LOCKSTEP_Master_Out(3083) <= \<const0>\;
  LOCKSTEP_Master_Out(3084) <= \<const0>\;
  LOCKSTEP_Master_Out(3085) <= \<const0>\;
  LOCKSTEP_Master_Out(3086) <= \<const0>\;
  LOCKSTEP_Master_Out(3087) <= \<const0>\;
  LOCKSTEP_Master_Out(3088) <= \<const0>\;
  LOCKSTEP_Master_Out(3089) <= \<const0>\;
  LOCKSTEP_Master_Out(3090) <= \<const0>\;
  LOCKSTEP_Master_Out(3091) <= \<const0>\;
  LOCKSTEP_Master_Out(3092) <= \<const0>\;
  LOCKSTEP_Master_Out(3093) <= \<const0>\;
  LOCKSTEP_Master_Out(3094) <= \<const0>\;
  LOCKSTEP_Master_Out(3095) <= \<const0>\;
  LOCKSTEP_Master_Out(3096) <= \<const0>\;
  LOCKSTEP_Master_Out(3097) <= \<const0>\;
  LOCKSTEP_Master_Out(3098) <= \<const0>\;
  LOCKSTEP_Master_Out(3099) <= \<const0>\;
  LOCKSTEP_Master_Out(3100) <= \<const0>\;
  LOCKSTEP_Master_Out(3101) <= \<const0>\;
  LOCKSTEP_Master_Out(3102) <= \<const0>\;
  LOCKSTEP_Master_Out(3103) <= \<const0>\;
  LOCKSTEP_Master_Out(3104) <= \<const0>\;
  LOCKSTEP_Master_Out(3105) <= \<const0>\;
  LOCKSTEP_Master_Out(3106) <= \<const0>\;
  LOCKSTEP_Master_Out(3107) <= \<const0>\;
  LOCKSTEP_Master_Out(3108) <= \<const0>\;
  LOCKSTEP_Master_Out(3109) <= \<const0>\;
  LOCKSTEP_Master_Out(3110) <= \<const0>\;
  LOCKSTEP_Master_Out(3111) <= \<const0>\;
  LOCKSTEP_Master_Out(3112) <= \<const0>\;
  LOCKSTEP_Master_Out(3113) <= \<const0>\;
  LOCKSTEP_Master_Out(3114) <= \<const0>\;
  LOCKSTEP_Master_Out(3115) <= \<const0>\;
  LOCKSTEP_Master_Out(3116) <= \<const0>\;
  LOCKSTEP_Master_Out(3117) <= \<const0>\;
  LOCKSTEP_Master_Out(3118) <= \<const0>\;
  LOCKSTEP_Master_Out(3119) <= \<const0>\;
  LOCKSTEP_Master_Out(3120) <= \<const0>\;
  LOCKSTEP_Master_Out(3121) <= \<const0>\;
  LOCKSTEP_Master_Out(3122) <= \<const0>\;
  LOCKSTEP_Master_Out(3123) <= \<const0>\;
  LOCKSTEP_Master_Out(3124) <= \<const0>\;
  LOCKSTEP_Master_Out(3125) <= \<const0>\;
  LOCKSTEP_Master_Out(3126) <= \<const0>\;
  LOCKSTEP_Master_Out(3127) <= \<const0>\;
  LOCKSTEP_Master_Out(3128) <= \<const0>\;
  LOCKSTEP_Master_Out(3129) <= \<const0>\;
  LOCKSTEP_Master_Out(3130) <= \<const0>\;
  LOCKSTEP_Master_Out(3131) <= \<const0>\;
  LOCKSTEP_Master_Out(3132) <= \<const0>\;
  LOCKSTEP_Master_Out(3133) <= \<const0>\;
  LOCKSTEP_Master_Out(3134) <= \<const0>\;
  LOCKSTEP_Master_Out(3135) <= \<const0>\;
  LOCKSTEP_Master_Out(3136) <= \<const0>\;
  LOCKSTEP_Master_Out(3137) <= \<const0>\;
  LOCKSTEP_Master_Out(3138) <= \<const0>\;
  LOCKSTEP_Master_Out(3139) <= \<const0>\;
  LOCKSTEP_Master_Out(3140) <= \<const0>\;
  LOCKSTEP_Master_Out(3141) <= \<const0>\;
  LOCKSTEP_Master_Out(3142) <= \<const0>\;
  LOCKSTEP_Master_Out(3143) <= \<const0>\;
  LOCKSTEP_Master_Out(3144) <= \<const0>\;
  LOCKSTEP_Master_Out(3145) <= \<const0>\;
  LOCKSTEP_Master_Out(3146) <= \<const0>\;
  LOCKSTEP_Master_Out(3147) <= \<const0>\;
  LOCKSTEP_Master_Out(3148) <= \<const0>\;
  LOCKSTEP_Master_Out(3149) <= \<const0>\;
  LOCKSTEP_Master_Out(3150) <= \<const0>\;
  LOCKSTEP_Master_Out(3151) <= \<const0>\;
  LOCKSTEP_Master_Out(3152) <= \<const0>\;
  LOCKSTEP_Master_Out(3153) <= \<const0>\;
  LOCKSTEP_Master_Out(3154) <= \<const0>\;
  LOCKSTEP_Master_Out(3155) <= \<const0>\;
  LOCKSTEP_Master_Out(3156) <= \<const0>\;
  LOCKSTEP_Master_Out(3157) <= \<const0>\;
  LOCKSTEP_Master_Out(3158) <= \<const0>\;
  LOCKSTEP_Master_Out(3159) <= \<const0>\;
  LOCKSTEP_Master_Out(3160) <= \<const0>\;
  LOCKSTEP_Master_Out(3161) <= \<const0>\;
  LOCKSTEP_Master_Out(3162) <= \<const0>\;
  LOCKSTEP_Master_Out(3163) <= \<const0>\;
  LOCKSTEP_Master_Out(3164) <= \<const0>\;
  LOCKSTEP_Master_Out(3165) <= \<const0>\;
  LOCKSTEP_Master_Out(3166) <= \<const0>\;
  LOCKSTEP_Master_Out(3167) <= \<const0>\;
  LOCKSTEP_Master_Out(3168) <= \<const0>\;
  LOCKSTEP_Master_Out(3169) <= \<const0>\;
  LOCKSTEP_Master_Out(3170) <= \<const0>\;
  LOCKSTEP_Master_Out(3171) <= \<const0>\;
  LOCKSTEP_Master_Out(3172) <= \<const0>\;
  LOCKSTEP_Master_Out(3173) <= \<const0>\;
  LOCKSTEP_Master_Out(3174) <= \<const0>\;
  LOCKSTEP_Master_Out(3175) <= \<const0>\;
  LOCKSTEP_Master_Out(3176) <= \<const0>\;
  LOCKSTEP_Master_Out(3177) <= \<const0>\;
  LOCKSTEP_Master_Out(3178) <= \<const0>\;
  LOCKSTEP_Master_Out(3179) <= \<const0>\;
  LOCKSTEP_Master_Out(3180) <= \<const0>\;
  LOCKSTEP_Master_Out(3181) <= \<const0>\;
  LOCKSTEP_Master_Out(3182) <= \<const0>\;
  LOCKSTEP_Master_Out(3183) <= \<const0>\;
  LOCKSTEP_Master_Out(3184) <= \<const0>\;
  LOCKSTEP_Master_Out(3185) <= \<const0>\;
  LOCKSTEP_Master_Out(3186) <= \<const0>\;
  LOCKSTEP_Master_Out(3187) <= \<const0>\;
  LOCKSTEP_Master_Out(3188) <= \<const0>\;
  LOCKSTEP_Master_Out(3189) <= \<const0>\;
  LOCKSTEP_Master_Out(3190) <= \<const0>\;
  LOCKSTEP_Master_Out(3191) <= \<const0>\;
  LOCKSTEP_Master_Out(3192) <= \<const0>\;
  LOCKSTEP_Master_Out(3193) <= \<const0>\;
  LOCKSTEP_Master_Out(3194) <= \<const0>\;
  LOCKSTEP_Master_Out(3195) <= \<const0>\;
  LOCKSTEP_Master_Out(3196) <= \<const0>\;
  LOCKSTEP_Master_Out(3197) <= \<const0>\;
  LOCKSTEP_Master_Out(3198) <= \<const0>\;
  LOCKSTEP_Master_Out(3199) <= \<const0>\;
  LOCKSTEP_Master_Out(3200) <= \<const0>\;
  LOCKSTEP_Master_Out(3201) <= \<const0>\;
  LOCKSTEP_Master_Out(3202) <= \<const0>\;
  LOCKSTEP_Master_Out(3203) <= \<const0>\;
  LOCKSTEP_Master_Out(3204) <= \<const0>\;
  LOCKSTEP_Master_Out(3205) <= \<const0>\;
  LOCKSTEP_Master_Out(3206) <= \<const0>\;
  LOCKSTEP_Master_Out(3207) <= \<const0>\;
  LOCKSTEP_Master_Out(3208) <= \<const0>\;
  LOCKSTEP_Master_Out(3209) <= \<const0>\;
  LOCKSTEP_Master_Out(3210) <= \<const0>\;
  LOCKSTEP_Master_Out(3211) <= \<const0>\;
  LOCKSTEP_Master_Out(3212) <= \<const0>\;
  LOCKSTEP_Master_Out(3213) <= \<const0>\;
  LOCKSTEP_Master_Out(3214) <= \<const0>\;
  LOCKSTEP_Master_Out(3215) <= \<const0>\;
  LOCKSTEP_Master_Out(3216) <= \<const0>\;
  LOCKSTEP_Master_Out(3217) <= \<const0>\;
  LOCKSTEP_Master_Out(3218) <= \<const0>\;
  LOCKSTEP_Master_Out(3219) <= \<const0>\;
  LOCKSTEP_Master_Out(3220) <= \<const0>\;
  LOCKSTEP_Master_Out(3221) <= \<const0>\;
  LOCKSTEP_Master_Out(3222) <= \<const0>\;
  LOCKSTEP_Master_Out(3223) <= \<const0>\;
  LOCKSTEP_Master_Out(3224) <= \<const0>\;
  LOCKSTEP_Master_Out(3225) <= \<const0>\;
  LOCKSTEP_Master_Out(3226) <= \<const0>\;
  LOCKSTEP_Master_Out(3227) <= \<const0>\;
  LOCKSTEP_Master_Out(3228) <= \<const0>\;
  LOCKSTEP_Master_Out(3229) <= \<const0>\;
  LOCKSTEP_Master_Out(3230) <= \<const0>\;
  LOCKSTEP_Master_Out(3231) <= \<const0>\;
  LOCKSTEP_Master_Out(3232) <= \<const0>\;
  LOCKSTEP_Master_Out(3233) <= \<const0>\;
  LOCKSTEP_Master_Out(3234) <= \<const0>\;
  LOCKSTEP_Master_Out(3235) <= \<const0>\;
  LOCKSTEP_Master_Out(3236) <= \<const0>\;
  LOCKSTEP_Master_Out(3237) <= \<const0>\;
  LOCKSTEP_Master_Out(3238) <= \<const0>\;
  LOCKSTEP_Master_Out(3239) <= \<const0>\;
  LOCKSTEP_Master_Out(3240) <= \<const0>\;
  LOCKSTEP_Master_Out(3241) <= \<const0>\;
  LOCKSTEP_Master_Out(3242) <= \<const0>\;
  LOCKSTEP_Master_Out(3243) <= \<const0>\;
  LOCKSTEP_Master_Out(3244) <= \<const0>\;
  LOCKSTEP_Master_Out(3245) <= \<const0>\;
  LOCKSTEP_Master_Out(3246) <= \<const0>\;
  LOCKSTEP_Master_Out(3247) <= \<const0>\;
  LOCKSTEP_Master_Out(3248) <= \<const0>\;
  LOCKSTEP_Master_Out(3249) <= \<const0>\;
  LOCKSTEP_Master_Out(3250) <= \<const0>\;
  LOCKSTEP_Master_Out(3251) <= \<const0>\;
  LOCKSTEP_Master_Out(3252) <= \<const0>\;
  LOCKSTEP_Master_Out(3253) <= \<const0>\;
  LOCKSTEP_Master_Out(3254) <= \<const0>\;
  LOCKSTEP_Master_Out(3255) <= \<const0>\;
  LOCKSTEP_Master_Out(3256) <= \<const0>\;
  LOCKSTEP_Master_Out(3257) <= \<const0>\;
  LOCKSTEP_Master_Out(3258) <= \<const0>\;
  LOCKSTEP_Master_Out(3259) <= \<const0>\;
  LOCKSTEP_Master_Out(3260) <= \<const0>\;
  LOCKSTEP_Master_Out(3261) <= \<const0>\;
  LOCKSTEP_Master_Out(3262) <= \<const0>\;
  LOCKSTEP_Master_Out(3263) <= \<const0>\;
  LOCKSTEP_Master_Out(3264) <= \<const0>\;
  LOCKSTEP_Master_Out(3265) <= \<const0>\;
  LOCKSTEP_Master_Out(3266) <= \<const0>\;
  LOCKSTEP_Master_Out(3267) <= \<const0>\;
  LOCKSTEP_Master_Out(3268) <= \<const0>\;
  LOCKSTEP_Master_Out(3269) <= \<const0>\;
  LOCKSTEP_Master_Out(3270) <= \<const0>\;
  LOCKSTEP_Master_Out(3271) <= \<const0>\;
  LOCKSTEP_Master_Out(3272) <= \<const0>\;
  LOCKSTEP_Master_Out(3273) <= \<const0>\;
  LOCKSTEP_Master_Out(3274) <= \<const0>\;
  LOCKSTEP_Master_Out(3275) <= \<const0>\;
  LOCKSTEP_Master_Out(3276) <= \<const0>\;
  LOCKSTEP_Master_Out(3277) <= \<const0>\;
  LOCKSTEP_Master_Out(3278) <= \<const0>\;
  LOCKSTEP_Master_Out(3279) <= \<const0>\;
  LOCKSTEP_Master_Out(3280) <= \<const0>\;
  LOCKSTEP_Master_Out(3281) <= \<const0>\;
  LOCKSTEP_Master_Out(3282) <= \<const0>\;
  LOCKSTEP_Master_Out(3283) <= \<const0>\;
  LOCKSTEP_Master_Out(3284) <= \<const0>\;
  LOCKSTEP_Master_Out(3285) <= \<const0>\;
  LOCKSTEP_Master_Out(3286) <= \<const0>\;
  LOCKSTEP_Master_Out(3287) <= \<const0>\;
  LOCKSTEP_Master_Out(3288) <= \<const0>\;
  LOCKSTEP_Master_Out(3289) <= \<const0>\;
  LOCKSTEP_Master_Out(3290) <= \<const0>\;
  LOCKSTEP_Master_Out(3291) <= \<const0>\;
  LOCKSTEP_Master_Out(3292) <= \<const0>\;
  LOCKSTEP_Master_Out(3293) <= \<const0>\;
  LOCKSTEP_Master_Out(3294) <= \<const0>\;
  LOCKSTEP_Master_Out(3295) <= \<const0>\;
  LOCKSTEP_Master_Out(3296) <= \<const0>\;
  LOCKSTEP_Master_Out(3297) <= \<const0>\;
  LOCKSTEP_Master_Out(3298) <= \<const0>\;
  LOCKSTEP_Master_Out(3299) <= \<const0>\;
  LOCKSTEP_Master_Out(3300) <= \<const0>\;
  LOCKSTEP_Master_Out(3301) <= \<const0>\;
  LOCKSTEP_Master_Out(3302) <= \<const0>\;
  LOCKSTEP_Master_Out(3303) <= \<const0>\;
  LOCKSTEP_Master_Out(3304) <= \<const0>\;
  LOCKSTEP_Master_Out(3305) <= \<const0>\;
  LOCKSTEP_Master_Out(3306) <= \<const0>\;
  LOCKSTEP_Master_Out(3307) <= \<const0>\;
  LOCKSTEP_Master_Out(3308) <= \<const0>\;
  LOCKSTEP_Master_Out(3309) <= \<const0>\;
  LOCKSTEP_Master_Out(3310) <= \<const0>\;
  LOCKSTEP_Master_Out(3311) <= \<const0>\;
  LOCKSTEP_Master_Out(3312) <= \<const0>\;
  LOCKSTEP_Master_Out(3313) <= \<const0>\;
  LOCKSTEP_Master_Out(3314) <= \<const0>\;
  LOCKSTEP_Master_Out(3315) <= \<const0>\;
  LOCKSTEP_Master_Out(3316) <= \<const0>\;
  LOCKSTEP_Master_Out(3317) <= \<const0>\;
  LOCKSTEP_Master_Out(3318) <= \<const0>\;
  LOCKSTEP_Master_Out(3319) <= \<const0>\;
  LOCKSTEP_Master_Out(3320) <= \<const0>\;
  LOCKSTEP_Master_Out(3321) <= \<const0>\;
  LOCKSTEP_Master_Out(3322) <= \<const0>\;
  LOCKSTEP_Master_Out(3323) <= \<const0>\;
  LOCKSTEP_Master_Out(3324) <= \<const0>\;
  LOCKSTEP_Master_Out(3325) <= \<const0>\;
  LOCKSTEP_Master_Out(3326) <= \<const0>\;
  LOCKSTEP_Master_Out(3327) <= \<const0>\;
  LOCKSTEP_Master_Out(3328) <= \<const0>\;
  LOCKSTEP_Master_Out(3329) <= \<const0>\;
  LOCKSTEP_Master_Out(3330) <= \<const0>\;
  LOCKSTEP_Master_Out(3331) <= \<const0>\;
  LOCKSTEP_Master_Out(3332) <= \<const0>\;
  LOCKSTEP_Master_Out(3333) <= \<const0>\;
  LOCKSTEP_Master_Out(3334) <= \<const0>\;
  LOCKSTEP_Master_Out(3335) <= \<const0>\;
  LOCKSTEP_Master_Out(3336) <= \<const0>\;
  LOCKSTEP_Master_Out(3337) <= \<const0>\;
  LOCKSTEP_Master_Out(3338) <= \<const0>\;
  LOCKSTEP_Master_Out(3339) <= \<const0>\;
  LOCKSTEP_Master_Out(3340) <= \<const0>\;
  LOCKSTEP_Master_Out(3341) <= \<const0>\;
  LOCKSTEP_Master_Out(3342) <= \<const0>\;
  LOCKSTEP_Master_Out(3343) <= \<const0>\;
  LOCKSTEP_Master_Out(3344) <= \<const0>\;
  LOCKSTEP_Master_Out(3345) <= \<const0>\;
  LOCKSTEP_Master_Out(3346) <= \<const0>\;
  LOCKSTEP_Master_Out(3347) <= \<const0>\;
  LOCKSTEP_Master_Out(3348) <= \<const0>\;
  LOCKSTEP_Master_Out(3349) <= \<const0>\;
  LOCKSTEP_Master_Out(3350) <= \<const0>\;
  LOCKSTEP_Master_Out(3351) <= \<const0>\;
  LOCKSTEP_Master_Out(3352) <= \<const0>\;
  LOCKSTEP_Master_Out(3353) <= \<const0>\;
  LOCKSTEP_Master_Out(3354) <= \<const0>\;
  LOCKSTEP_Master_Out(3355) <= \<const0>\;
  LOCKSTEP_Master_Out(3356) <= \<const0>\;
  LOCKSTEP_Master_Out(3357) <= \<const0>\;
  LOCKSTEP_Master_Out(3358) <= \<const0>\;
  LOCKSTEP_Master_Out(3359) <= \<const0>\;
  LOCKSTEP_Master_Out(3360) <= \<const0>\;
  LOCKSTEP_Master_Out(3361) <= \<const0>\;
  LOCKSTEP_Master_Out(3362) <= \<const0>\;
  LOCKSTEP_Master_Out(3363) <= \<const0>\;
  LOCKSTEP_Master_Out(3364) <= \<const0>\;
  LOCKSTEP_Master_Out(3365) <= \<const0>\;
  LOCKSTEP_Master_Out(3366) <= \<const0>\;
  LOCKSTEP_Master_Out(3367) <= \<const0>\;
  LOCKSTEP_Master_Out(3368) <= \<const0>\;
  LOCKSTEP_Master_Out(3369) <= \<const0>\;
  LOCKSTEP_Master_Out(3370) <= \<const0>\;
  LOCKSTEP_Master_Out(3371) <= \<const0>\;
  LOCKSTEP_Master_Out(3372) <= \<const0>\;
  LOCKSTEP_Master_Out(3373) <= \<const0>\;
  LOCKSTEP_Master_Out(3374) <= \<const0>\;
  LOCKSTEP_Master_Out(3375) <= \<const0>\;
  LOCKSTEP_Master_Out(3376) <= \<const0>\;
  LOCKSTEP_Master_Out(3377) <= \<const0>\;
  LOCKSTEP_Master_Out(3378) <= \<const0>\;
  LOCKSTEP_Master_Out(3379) <= \<const0>\;
  LOCKSTEP_Master_Out(3380) <= \<const0>\;
  LOCKSTEP_Master_Out(3381) <= \<const0>\;
  LOCKSTEP_Master_Out(3382) <= \<const0>\;
  LOCKSTEP_Master_Out(3383) <= \<const0>\;
  LOCKSTEP_Master_Out(3384) <= \<const0>\;
  LOCKSTEP_Master_Out(3385) <= \<const0>\;
  LOCKSTEP_Master_Out(3386) <= \<const0>\;
  LOCKSTEP_Master_Out(3387) <= \<const0>\;
  LOCKSTEP_Master_Out(3388) <= \<const0>\;
  LOCKSTEP_Master_Out(3389) <= \<const0>\;
  LOCKSTEP_Master_Out(3390) <= \<const0>\;
  LOCKSTEP_Master_Out(3391) <= \<const0>\;
  LOCKSTEP_Master_Out(3392) <= \<const0>\;
  LOCKSTEP_Master_Out(3393) <= \<const0>\;
  LOCKSTEP_Master_Out(3394) <= \<const0>\;
  LOCKSTEP_Master_Out(3395) <= \<const0>\;
  LOCKSTEP_Master_Out(3396) <= \<const0>\;
  LOCKSTEP_Master_Out(3397) <= \<const0>\;
  LOCKSTEP_Master_Out(3398) <= \<const0>\;
  LOCKSTEP_Master_Out(3399) <= \<const0>\;
  LOCKSTEP_Master_Out(3400) <= \<const0>\;
  LOCKSTEP_Master_Out(3401) <= \<const0>\;
  LOCKSTEP_Master_Out(3402) <= \<const0>\;
  LOCKSTEP_Master_Out(3403) <= \<const0>\;
  LOCKSTEP_Master_Out(3404) <= \<const0>\;
  LOCKSTEP_Master_Out(3405) <= \<const0>\;
  LOCKSTEP_Master_Out(3406) <= \<const0>\;
  LOCKSTEP_Master_Out(3407) <= \<const0>\;
  LOCKSTEP_Master_Out(3408) <= \<const0>\;
  LOCKSTEP_Master_Out(3409) <= \<const0>\;
  LOCKSTEP_Master_Out(3410) <= \<const0>\;
  LOCKSTEP_Master_Out(3411) <= \<const0>\;
  LOCKSTEP_Master_Out(3412) <= \<const0>\;
  LOCKSTEP_Master_Out(3413) <= \<const0>\;
  LOCKSTEP_Master_Out(3414) <= \<const0>\;
  LOCKSTEP_Master_Out(3415) <= \<const0>\;
  LOCKSTEP_Master_Out(3416) <= \<const0>\;
  LOCKSTEP_Master_Out(3417) <= \<const0>\;
  LOCKSTEP_Master_Out(3418) <= \<const0>\;
  LOCKSTEP_Master_Out(3419) <= \<const0>\;
  LOCKSTEP_Master_Out(3420) <= \<const0>\;
  LOCKSTEP_Master_Out(3421) <= \<const0>\;
  LOCKSTEP_Master_Out(3422) <= \<const0>\;
  LOCKSTEP_Master_Out(3423) <= \<const0>\;
  LOCKSTEP_Master_Out(3424) <= \<const0>\;
  LOCKSTEP_Master_Out(3425) <= \<const0>\;
  LOCKSTEP_Master_Out(3426) <= \<const0>\;
  LOCKSTEP_Master_Out(3427) <= \<const0>\;
  LOCKSTEP_Master_Out(3428) <= \<const0>\;
  LOCKSTEP_Master_Out(3429) <= \<const0>\;
  LOCKSTEP_Master_Out(3430) <= \<const0>\;
  LOCKSTEP_Master_Out(3431) <= \<const0>\;
  LOCKSTEP_Master_Out(3432) <= \<const0>\;
  LOCKSTEP_Master_Out(3433) <= \<const0>\;
  LOCKSTEP_Master_Out(3434) <= \<const0>\;
  LOCKSTEP_Master_Out(3435) <= \<const0>\;
  LOCKSTEP_Master_Out(3436) <= \<const0>\;
  LOCKSTEP_Master_Out(3437) <= \<const0>\;
  LOCKSTEP_Master_Out(3438) <= \<const0>\;
  LOCKSTEP_Master_Out(3439) <= \<const0>\;
  LOCKSTEP_Master_Out(3440) <= \<const0>\;
  LOCKSTEP_Master_Out(3441) <= \<const0>\;
  LOCKSTEP_Master_Out(3442) <= \<const0>\;
  LOCKSTEP_Master_Out(3443) <= \<const0>\;
  LOCKSTEP_Master_Out(3444) <= \<const0>\;
  LOCKSTEP_Master_Out(3445) <= \<const0>\;
  LOCKSTEP_Master_Out(3446) <= \<const0>\;
  LOCKSTEP_Master_Out(3447) <= \<const0>\;
  LOCKSTEP_Master_Out(3448) <= \<const0>\;
  LOCKSTEP_Master_Out(3449) <= \<const0>\;
  LOCKSTEP_Master_Out(3450) <= \<const0>\;
  LOCKSTEP_Master_Out(3451) <= \<const0>\;
  LOCKSTEP_Master_Out(3452) <= \<const0>\;
  LOCKSTEP_Master_Out(3453) <= \<const0>\;
  LOCKSTEP_Master_Out(3454) <= \<const0>\;
  LOCKSTEP_Master_Out(3455) <= \<const0>\;
  LOCKSTEP_Master_Out(3456) <= \<const0>\;
  LOCKSTEP_Master_Out(3457) <= \<const0>\;
  LOCKSTEP_Master_Out(3458) <= \<const0>\;
  LOCKSTEP_Master_Out(3459) <= \<const0>\;
  LOCKSTEP_Master_Out(3460) <= \<const0>\;
  LOCKSTEP_Master_Out(3461) <= \<const0>\;
  LOCKSTEP_Master_Out(3462) <= \<const0>\;
  LOCKSTEP_Master_Out(3463) <= \<const0>\;
  LOCKSTEP_Master_Out(3464) <= \<const0>\;
  LOCKSTEP_Master_Out(3465) <= \<const0>\;
  LOCKSTEP_Master_Out(3466) <= \<const0>\;
  LOCKSTEP_Master_Out(3467) <= \<const0>\;
  LOCKSTEP_Master_Out(3468) <= \<const0>\;
  LOCKSTEP_Master_Out(3469) <= \<const0>\;
  LOCKSTEP_Master_Out(3470) <= \<const0>\;
  LOCKSTEP_Master_Out(3471) <= \<const0>\;
  LOCKSTEP_Master_Out(3472) <= \<const0>\;
  LOCKSTEP_Master_Out(3473) <= \<const0>\;
  LOCKSTEP_Master_Out(3474) <= \<const0>\;
  LOCKSTEP_Master_Out(3475) <= \<const0>\;
  LOCKSTEP_Master_Out(3476) <= \<const0>\;
  LOCKSTEP_Master_Out(3477) <= \<const0>\;
  LOCKSTEP_Master_Out(3478) <= \<const0>\;
  LOCKSTEP_Master_Out(3479) <= \<const0>\;
  LOCKSTEP_Master_Out(3480) <= \<const0>\;
  LOCKSTEP_Master_Out(3481) <= \<const0>\;
  LOCKSTEP_Master_Out(3482) <= \<const0>\;
  LOCKSTEP_Master_Out(3483) <= \<const0>\;
  LOCKSTEP_Master_Out(3484) <= \<const0>\;
  LOCKSTEP_Master_Out(3485) <= \<const0>\;
  LOCKSTEP_Master_Out(3486) <= \<const0>\;
  LOCKSTEP_Master_Out(3487) <= \<const0>\;
  LOCKSTEP_Master_Out(3488) <= \<const0>\;
  LOCKSTEP_Master_Out(3489) <= \<const0>\;
  LOCKSTEP_Master_Out(3490) <= \<const0>\;
  LOCKSTEP_Master_Out(3491) <= \<const0>\;
  LOCKSTEP_Master_Out(3492) <= \<const0>\;
  LOCKSTEP_Master_Out(3493) <= \<const0>\;
  LOCKSTEP_Master_Out(3494) <= \<const0>\;
  LOCKSTEP_Master_Out(3495) <= \<const0>\;
  LOCKSTEP_Master_Out(3496) <= \<const0>\;
  LOCKSTEP_Master_Out(3497) <= \<const0>\;
  LOCKSTEP_Master_Out(3498) <= \<const0>\;
  LOCKSTEP_Master_Out(3499) <= \<const0>\;
  LOCKSTEP_Master_Out(3500) <= \<const0>\;
  LOCKSTEP_Master_Out(3501) <= \<const0>\;
  LOCKSTEP_Master_Out(3502) <= \<const0>\;
  LOCKSTEP_Master_Out(3503) <= \<const0>\;
  LOCKSTEP_Master_Out(3504) <= \<const0>\;
  LOCKSTEP_Master_Out(3505) <= \<const0>\;
  LOCKSTEP_Master_Out(3506) <= \<const0>\;
  LOCKSTEP_Master_Out(3507) <= \<const0>\;
  LOCKSTEP_Master_Out(3508) <= \<const0>\;
  LOCKSTEP_Master_Out(3509) <= \<const0>\;
  LOCKSTEP_Master_Out(3510) <= \<const0>\;
  LOCKSTEP_Master_Out(3511) <= \<const0>\;
  LOCKSTEP_Master_Out(3512) <= \<const0>\;
  LOCKSTEP_Master_Out(3513) <= \<const0>\;
  LOCKSTEP_Master_Out(3514) <= \<const0>\;
  LOCKSTEP_Master_Out(3515) <= \<const0>\;
  LOCKSTEP_Master_Out(3516) <= \<const0>\;
  LOCKSTEP_Master_Out(3517) <= \<const0>\;
  LOCKSTEP_Master_Out(3518) <= \<const0>\;
  LOCKSTEP_Master_Out(3519) <= \<const0>\;
  LOCKSTEP_Master_Out(3520) <= \<const0>\;
  LOCKSTEP_Master_Out(3521) <= \<const0>\;
  LOCKSTEP_Master_Out(3522) <= \<const0>\;
  LOCKSTEP_Master_Out(3523) <= \<const0>\;
  LOCKSTEP_Master_Out(3524) <= \<const0>\;
  LOCKSTEP_Master_Out(3525) <= \<const0>\;
  LOCKSTEP_Master_Out(3526) <= \<const0>\;
  LOCKSTEP_Master_Out(3527) <= \<const0>\;
  LOCKSTEP_Master_Out(3528) <= \<const0>\;
  LOCKSTEP_Master_Out(3529) <= \<const0>\;
  LOCKSTEP_Master_Out(3530) <= \<const0>\;
  LOCKSTEP_Master_Out(3531) <= \<const0>\;
  LOCKSTEP_Master_Out(3532) <= \<const0>\;
  LOCKSTEP_Master_Out(3533) <= \<const0>\;
  LOCKSTEP_Master_Out(3534) <= \<const0>\;
  LOCKSTEP_Master_Out(3535) <= \<const0>\;
  LOCKSTEP_Master_Out(3536) <= \<const0>\;
  LOCKSTEP_Master_Out(3537) <= \<const0>\;
  LOCKSTEP_Master_Out(3538) <= \<const0>\;
  LOCKSTEP_Master_Out(3539) <= \<const0>\;
  LOCKSTEP_Master_Out(3540) <= \<const0>\;
  LOCKSTEP_Master_Out(3541) <= \<const0>\;
  LOCKSTEP_Master_Out(3542) <= \<const0>\;
  LOCKSTEP_Master_Out(3543) <= \<const0>\;
  LOCKSTEP_Master_Out(3544) <= \<const0>\;
  LOCKSTEP_Master_Out(3545) <= \<const0>\;
  LOCKSTEP_Master_Out(3546) <= \<const0>\;
  LOCKSTEP_Master_Out(3547) <= \<const0>\;
  LOCKSTEP_Master_Out(3548) <= \<const0>\;
  LOCKSTEP_Master_Out(3549) <= \<const0>\;
  LOCKSTEP_Master_Out(3550) <= \<const0>\;
  LOCKSTEP_Master_Out(3551) <= \<const0>\;
  LOCKSTEP_Master_Out(3552) <= \<const0>\;
  LOCKSTEP_Master_Out(3553) <= \<const0>\;
  LOCKSTEP_Master_Out(3554) <= \<const0>\;
  LOCKSTEP_Master_Out(3555) <= \<const0>\;
  LOCKSTEP_Master_Out(3556) <= \<const0>\;
  LOCKSTEP_Master_Out(3557) <= \<const0>\;
  LOCKSTEP_Master_Out(3558) <= \<const0>\;
  LOCKSTEP_Master_Out(3559) <= \<const0>\;
  LOCKSTEP_Master_Out(3560) <= \<const0>\;
  LOCKSTEP_Master_Out(3561) <= \<const0>\;
  LOCKSTEP_Master_Out(3562) <= \<const0>\;
  LOCKSTEP_Master_Out(3563) <= \<const0>\;
  LOCKSTEP_Master_Out(3564) <= \<const0>\;
  LOCKSTEP_Master_Out(3565) <= \<const0>\;
  LOCKSTEP_Master_Out(3566) <= \<const0>\;
  LOCKSTEP_Master_Out(3567) <= \<const0>\;
  LOCKSTEP_Master_Out(3568) <= \<const0>\;
  LOCKSTEP_Master_Out(3569) <= \<const0>\;
  LOCKSTEP_Master_Out(3570) <= \<const0>\;
  LOCKSTEP_Master_Out(3571) <= \<const0>\;
  LOCKSTEP_Master_Out(3572) <= \<const0>\;
  LOCKSTEP_Master_Out(3573) <= \<const0>\;
  LOCKSTEP_Master_Out(3574) <= \<const0>\;
  LOCKSTEP_Master_Out(3575) <= \<const0>\;
  LOCKSTEP_Master_Out(3576) <= \<const0>\;
  LOCKSTEP_Master_Out(3577) <= \<const0>\;
  LOCKSTEP_Master_Out(3578) <= \<const0>\;
  LOCKSTEP_Master_Out(3579) <= \<const0>\;
  LOCKSTEP_Master_Out(3580) <= \<const0>\;
  LOCKSTEP_Master_Out(3581) <= \<const0>\;
  LOCKSTEP_Master_Out(3582) <= \<const0>\;
  LOCKSTEP_Master_Out(3583) <= \<const0>\;
  LOCKSTEP_Master_Out(3584) <= \<const0>\;
  LOCKSTEP_Master_Out(3585) <= \<const0>\;
  LOCKSTEP_Master_Out(3586) <= \<const0>\;
  LOCKSTEP_Master_Out(3587) <= \<const0>\;
  LOCKSTEP_Master_Out(3588) <= \<const0>\;
  LOCKSTEP_Master_Out(3589) <= \<const0>\;
  LOCKSTEP_Master_Out(3590) <= \<const0>\;
  LOCKSTEP_Master_Out(3591) <= \<const0>\;
  LOCKSTEP_Master_Out(3592) <= \<const0>\;
  LOCKSTEP_Master_Out(3593) <= \<const0>\;
  LOCKSTEP_Master_Out(3594) <= \<const0>\;
  LOCKSTEP_Master_Out(3595) <= \<const0>\;
  LOCKSTEP_Master_Out(3596) <= \<const0>\;
  LOCKSTEP_Master_Out(3597) <= \<const0>\;
  LOCKSTEP_Master_Out(3598) <= \<const0>\;
  LOCKSTEP_Master_Out(3599) <= \<const0>\;
  LOCKSTEP_Master_Out(3600) <= \<const0>\;
  LOCKSTEP_Master_Out(3601) <= \<const0>\;
  LOCKSTEP_Master_Out(3602) <= \<const0>\;
  LOCKSTEP_Master_Out(3603) <= \<const0>\;
  LOCKSTEP_Master_Out(3604) <= \<const0>\;
  LOCKSTEP_Master_Out(3605) <= \<const0>\;
  LOCKSTEP_Master_Out(3606) <= \<const0>\;
  LOCKSTEP_Master_Out(3607) <= \<const0>\;
  LOCKSTEP_Master_Out(3608) <= \<const0>\;
  LOCKSTEP_Master_Out(3609) <= \<const0>\;
  LOCKSTEP_Master_Out(3610) <= \<const0>\;
  LOCKSTEP_Master_Out(3611) <= \<const0>\;
  LOCKSTEP_Master_Out(3612) <= \<const0>\;
  LOCKSTEP_Master_Out(3613) <= \<const0>\;
  LOCKSTEP_Master_Out(3614) <= \<const0>\;
  LOCKSTEP_Master_Out(3615) <= \<const0>\;
  LOCKSTEP_Master_Out(3616) <= \<const0>\;
  LOCKSTEP_Master_Out(3617) <= \<const0>\;
  LOCKSTEP_Master_Out(3618) <= \<const0>\;
  LOCKSTEP_Master_Out(3619) <= \<const0>\;
  LOCKSTEP_Master_Out(3620) <= \<const0>\;
  LOCKSTEP_Master_Out(3621) <= \<const0>\;
  LOCKSTEP_Master_Out(3622) <= \<const0>\;
  LOCKSTEP_Master_Out(3623) <= \<const0>\;
  LOCKSTEP_Master_Out(3624) <= \<const0>\;
  LOCKSTEP_Master_Out(3625) <= \<const0>\;
  LOCKSTEP_Master_Out(3626) <= \<const0>\;
  LOCKSTEP_Master_Out(3627) <= \<const0>\;
  LOCKSTEP_Master_Out(3628) <= \<const0>\;
  LOCKSTEP_Master_Out(3629) <= \<const0>\;
  LOCKSTEP_Master_Out(3630) <= \<const0>\;
  LOCKSTEP_Master_Out(3631) <= \<const0>\;
  LOCKSTEP_Master_Out(3632) <= \<const0>\;
  LOCKSTEP_Master_Out(3633) <= \<const0>\;
  LOCKSTEP_Master_Out(3634) <= \<const0>\;
  LOCKSTEP_Master_Out(3635) <= \<const0>\;
  LOCKSTEP_Master_Out(3636) <= \<const0>\;
  LOCKSTEP_Master_Out(3637) <= \<const0>\;
  LOCKSTEP_Master_Out(3638) <= \<const0>\;
  LOCKSTEP_Master_Out(3639) <= \<const0>\;
  LOCKSTEP_Master_Out(3640) <= \<const0>\;
  LOCKSTEP_Master_Out(3641) <= \<const0>\;
  LOCKSTEP_Master_Out(3642) <= \<const0>\;
  LOCKSTEP_Master_Out(3643) <= \<const0>\;
  LOCKSTEP_Master_Out(3644) <= \<const0>\;
  LOCKSTEP_Master_Out(3645) <= \<const0>\;
  LOCKSTEP_Master_Out(3646) <= \<const0>\;
  LOCKSTEP_Master_Out(3647) <= \<const0>\;
  LOCKSTEP_Master_Out(3648) <= \<const0>\;
  LOCKSTEP_Master_Out(3649) <= \<const0>\;
  LOCKSTEP_Master_Out(3650) <= \<const0>\;
  LOCKSTEP_Master_Out(3651) <= \<const0>\;
  LOCKSTEP_Master_Out(3652) <= \<const0>\;
  LOCKSTEP_Master_Out(3653) <= \<const0>\;
  LOCKSTEP_Master_Out(3654) <= \<const0>\;
  LOCKSTEP_Master_Out(3655) <= \<const0>\;
  LOCKSTEP_Master_Out(3656) <= \<const0>\;
  LOCKSTEP_Master_Out(3657) <= \<const0>\;
  LOCKSTEP_Master_Out(3658) <= \<const0>\;
  LOCKSTEP_Master_Out(3659) <= \<const0>\;
  LOCKSTEP_Master_Out(3660) <= \<const0>\;
  LOCKSTEP_Master_Out(3661) <= \<const0>\;
  LOCKSTEP_Master_Out(3662) <= \<const0>\;
  LOCKSTEP_Master_Out(3663) <= \<const0>\;
  LOCKSTEP_Master_Out(3664) <= \<const0>\;
  LOCKSTEP_Master_Out(3665) <= \<const0>\;
  LOCKSTEP_Master_Out(3666) <= \<const0>\;
  LOCKSTEP_Master_Out(3667) <= \<const0>\;
  LOCKSTEP_Master_Out(3668) <= \<const0>\;
  LOCKSTEP_Master_Out(3669) <= \<const0>\;
  LOCKSTEP_Master_Out(3670) <= \<const0>\;
  LOCKSTEP_Master_Out(3671) <= \<const0>\;
  LOCKSTEP_Master_Out(3672) <= \<const0>\;
  LOCKSTEP_Master_Out(3673) <= \<const0>\;
  LOCKSTEP_Master_Out(3674) <= \<const0>\;
  LOCKSTEP_Master_Out(3675) <= \<const0>\;
  LOCKSTEP_Master_Out(3676) <= \<const0>\;
  LOCKSTEP_Master_Out(3677) <= \<const0>\;
  LOCKSTEP_Master_Out(3678) <= \<const0>\;
  LOCKSTEP_Master_Out(3679) <= \<const0>\;
  LOCKSTEP_Master_Out(3680) <= \<const0>\;
  LOCKSTEP_Master_Out(3681) <= \<const0>\;
  LOCKSTEP_Master_Out(3682) <= \<const0>\;
  LOCKSTEP_Master_Out(3683) <= \<const0>\;
  LOCKSTEP_Master_Out(3684) <= \<const0>\;
  LOCKSTEP_Master_Out(3685) <= \<const0>\;
  LOCKSTEP_Master_Out(3686) <= \<const0>\;
  LOCKSTEP_Master_Out(3687) <= \<const0>\;
  LOCKSTEP_Master_Out(3688) <= \<const0>\;
  LOCKSTEP_Master_Out(3689) <= \<const0>\;
  LOCKSTEP_Master_Out(3690) <= \<const0>\;
  LOCKSTEP_Master_Out(3691) <= \<const0>\;
  LOCKSTEP_Master_Out(3692) <= \<const0>\;
  LOCKSTEP_Master_Out(3693) <= \<const0>\;
  LOCKSTEP_Master_Out(3694) <= \<const0>\;
  LOCKSTEP_Master_Out(3695) <= \<const0>\;
  LOCKSTEP_Master_Out(3696) <= \<const0>\;
  LOCKSTEP_Master_Out(3697) <= \<const0>\;
  LOCKSTEP_Master_Out(3698) <= \<const0>\;
  LOCKSTEP_Master_Out(3699) <= \<const0>\;
  LOCKSTEP_Master_Out(3700) <= \<const0>\;
  LOCKSTEP_Master_Out(3701) <= \<const0>\;
  LOCKSTEP_Master_Out(3702) <= \<const0>\;
  LOCKSTEP_Master_Out(3703) <= \<const0>\;
  LOCKSTEP_Master_Out(3704) <= \<const0>\;
  LOCKSTEP_Master_Out(3705) <= \<const0>\;
  LOCKSTEP_Master_Out(3706) <= \<const0>\;
  LOCKSTEP_Master_Out(3707) <= \<const0>\;
  LOCKSTEP_Master_Out(3708) <= \<const0>\;
  LOCKSTEP_Master_Out(3709) <= \<const0>\;
  LOCKSTEP_Master_Out(3710) <= \<const0>\;
  LOCKSTEP_Master_Out(3711) <= \<const0>\;
  LOCKSTEP_Master_Out(3712) <= \<const0>\;
  LOCKSTEP_Master_Out(3713) <= \<const0>\;
  LOCKSTEP_Master_Out(3714) <= \<const0>\;
  LOCKSTEP_Master_Out(3715) <= \<const0>\;
  LOCKSTEP_Master_Out(3716) <= \<const0>\;
  LOCKSTEP_Master_Out(3717) <= \<const0>\;
  LOCKSTEP_Master_Out(3718) <= \<const0>\;
  LOCKSTEP_Master_Out(3719) <= \<const0>\;
  LOCKSTEP_Master_Out(3720) <= \<const0>\;
  LOCKSTEP_Master_Out(3721) <= \<const0>\;
  LOCKSTEP_Master_Out(3722) <= \<const0>\;
  LOCKSTEP_Master_Out(3723) <= \<const0>\;
  LOCKSTEP_Master_Out(3724) <= \<const0>\;
  LOCKSTEP_Master_Out(3725) <= \<const0>\;
  LOCKSTEP_Master_Out(3726) <= \<const0>\;
  LOCKSTEP_Master_Out(3727) <= \<const0>\;
  LOCKSTEP_Master_Out(3728) <= \<const0>\;
  LOCKSTEP_Master_Out(3729) <= \<const0>\;
  LOCKSTEP_Master_Out(3730) <= \<const0>\;
  LOCKSTEP_Master_Out(3731) <= \<const0>\;
  LOCKSTEP_Master_Out(3732) <= \<const0>\;
  LOCKSTEP_Master_Out(3733) <= \<const0>\;
  LOCKSTEP_Master_Out(3734) <= \<const0>\;
  LOCKSTEP_Master_Out(3735) <= \<const0>\;
  LOCKSTEP_Master_Out(3736) <= \<const0>\;
  LOCKSTEP_Master_Out(3737) <= \<const0>\;
  LOCKSTEP_Master_Out(3738) <= \<const0>\;
  LOCKSTEP_Master_Out(3739) <= \<const0>\;
  LOCKSTEP_Master_Out(3740) <= \<const0>\;
  LOCKSTEP_Master_Out(3741) <= \<const0>\;
  LOCKSTEP_Master_Out(3742) <= \<const0>\;
  LOCKSTEP_Master_Out(3743) <= \<const0>\;
  LOCKSTEP_Master_Out(3744) <= \<const0>\;
  LOCKSTEP_Master_Out(3745) <= \<const0>\;
  LOCKSTEP_Master_Out(3746) <= \<const0>\;
  LOCKSTEP_Master_Out(3747) <= \<const0>\;
  LOCKSTEP_Master_Out(3748) <= \<const0>\;
  LOCKSTEP_Master_Out(3749) <= \<const0>\;
  LOCKSTEP_Master_Out(3750) <= \<const0>\;
  LOCKSTEP_Master_Out(3751) <= \<const0>\;
  LOCKSTEP_Master_Out(3752) <= \<const0>\;
  LOCKSTEP_Master_Out(3753) <= \<const0>\;
  LOCKSTEP_Master_Out(3754) <= \<const0>\;
  LOCKSTEP_Master_Out(3755) <= \<const0>\;
  LOCKSTEP_Master_Out(3756) <= \<const0>\;
  LOCKSTEP_Master_Out(3757) <= \<const0>\;
  LOCKSTEP_Master_Out(3758) <= \<const0>\;
  LOCKSTEP_Master_Out(3759) <= \<const0>\;
  LOCKSTEP_Master_Out(3760) <= \<const0>\;
  LOCKSTEP_Master_Out(3761) <= \<const0>\;
  LOCKSTEP_Master_Out(3762) <= \<const0>\;
  LOCKSTEP_Master_Out(3763) <= \<const0>\;
  LOCKSTEP_Master_Out(3764) <= \<const0>\;
  LOCKSTEP_Master_Out(3765) <= \<const0>\;
  LOCKSTEP_Master_Out(3766) <= \<const0>\;
  LOCKSTEP_Master_Out(3767) <= \<const0>\;
  LOCKSTEP_Master_Out(3768) <= \<const0>\;
  LOCKSTEP_Master_Out(3769) <= \<const0>\;
  LOCKSTEP_Master_Out(3770) <= \<const0>\;
  LOCKSTEP_Master_Out(3771) <= \<const0>\;
  LOCKSTEP_Master_Out(3772) <= \<const0>\;
  LOCKSTEP_Master_Out(3773) <= \<const0>\;
  LOCKSTEP_Master_Out(3774) <= \<const0>\;
  LOCKSTEP_Master_Out(3775) <= \<const0>\;
  LOCKSTEP_Master_Out(3776) <= \<const0>\;
  LOCKSTEP_Master_Out(3777) <= \<const0>\;
  LOCKSTEP_Master_Out(3778) <= \<const0>\;
  LOCKSTEP_Master_Out(3779) <= \<const0>\;
  LOCKSTEP_Master_Out(3780) <= \<const0>\;
  LOCKSTEP_Master_Out(3781) <= \<const0>\;
  LOCKSTEP_Master_Out(3782) <= \<const0>\;
  LOCKSTEP_Master_Out(3783) <= \<const0>\;
  LOCKSTEP_Master_Out(3784) <= \<const0>\;
  LOCKSTEP_Master_Out(3785) <= \<const0>\;
  LOCKSTEP_Master_Out(3786) <= \<const0>\;
  LOCKSTEP_Master_Out(3787) <= \<const0>\;
  LOCKSTEP_Master_Out(3788) <= \<const0>\;
  LOCKSTEP_Master_Out(3789) <= \<const0>\;
  LOCKSTEP_Master_Out(3790) <= \<const0>\;
  LOCKSTEP_Master_Out(3791) <= \<const0>\;
  LOCKSTEP_Master_Out(3792) <= \<const0>\;
  LOCKSTEP_Master_Out(3793) <= \<const0>\;
  LOCKSTEP_Master_Out(3794) <= \<const0>\;
  LOCKSTEP_Master_Out(3795) <= \<const0>\;
  LOCKSTEP_Master_Out(3796) <= \<const0>\;
  LOCKSTEP_Master_Out(3797) <= \<const0>\;
  LOCKSTEP_Master_Out(3798) <= \<const0>\;
  LOCKSTEP_Master_Out(3799) <= \<const0>\;
  LOCKSTEP_Master_Out(3800) <= \<const0>\;
  LOCKSTEP_Master_Out(3801) <= \<const0>\;
  LOCKSTEP_Master_Out(3802) <= \<const0>\;
  LOCKSTEP_Master_Out(3803) <= \<const0>\;
  LOCKSTEP_Master_Out(3804) <= \<const0>\;
  LOCKSTEP_Master_Out(3805) <= \<const0>\;
  LOCKSTEP_Master_Out(3806) <= \<const0>\;
  LOCKSTEP_Master_Out(3807) <= \<const0>\;
  LOCKSTEP_Master_Out(3808) <= \<const0>\;
  LOCKSTEP_Master_Out(3809) <= \<const0>\;
  LOCKSTEP_Master_Out(3810) <= \<const0>\;
  LOCKSTEP_Master_Out(3811) <= \<const0>\;
  LOCKSTEP_Master_Out(3812) <= \<const0>\;
  LOCKSTEP_Master_Out(3813) <= \<const0>\;
  LOCKSTEP_Master_Out(3814) <= \<const0>\;
  LOCKSTEP_Master_Out(3815) <= \<const0>\;
  LOCKSTEP_Master_Out(3816) <= \<const0>\;
  LOCKSTEP_Master_Out(3817) <= \<const0>\;
  LOCKSTEP_Master_Out(3818) <= \<const0>\;
  LOCKSTEP_Master_Out(3819) <= \<const0>\;
  LOCKSTEP_Master_Out(3820) <= \<const0>\;
  LOCKSTEP_Master_Out(3821) <= \<const0>\;
  LOCKSTEP_Master_Out(3822) <= \<const0>\;
  LOCKSTEP_Master_Out(3823) <= \<const0>\;
  LOCKSTEP_Master_Out(3824) <= \<const0>\;
  LOCKSTEP_Master_Out(3825) <= \<const0>\;
  LOCKSTEP_Master_Out(3826) <= \<const0>\;
  LOCKSTEP_Master_Out(3827) <= \<const0>\;
  LOCKSTEP_Master_Out(3828) <= \<const0>\;
  LOCKSTEP_Master_Out(3829) <= \<const0>\;
  LOCKSTEP_Master_Out(3830) <= \<const0>\;
  LOCKSTEP_Master_Out(3831) <= \<const0>\;
  LOCKSTEP_Master_Out(3832) <= \<const0>\;
  LOCKSTEP_Master_Out(3833) <= \<const0>\;
  LOCKSTEP_Master_Out(3834) <= \<const0>\;
  LOCKSTEP_Master_Out(3835) <= \<const0>\;
  LOCKSTEP_Master_Out(3836) <= \<const0>\;
  LOCKSTEP_Master_Out(3837) <= \<const0>\;
  LOCKSTEP_Master_Out(3838) <= \<const0>\;
  LOCKSTEP_Master_Out(3839) <= \<const0>\;
  LOCKSTEP_Master_Out(3840) <= \<const0>\;
  LOCKSTEP_Master_Out(3841) <= \<const0>\;
  LOCKSTEP_Master_Out(3842) <= \<const0>\;
  LOCKSTEP_Master_Out(3843) <= \<const0>\;
  LOCKSTEP_Master_Out(3844) <= \<const0>\;
  LOCKSTEP_Master_Out(3845) <= \<const0>\;
  LOCKSTEP_Master_Out(3846) <= \<const0>\;
  LOCKSTEP_Master_Out(3847) <= \<const0>\;
  LOCKSTEP_Master_Out(3848) <= \<const0>\;
  LOCKSTEP_Master_Out(3849) <= \<const0>\;
  LOCKSTEP_Master_Out(3850) <= \<const0>\;
  LOCKSTEP_Master_Out(3851) <= \<const0>\;
  LOCKSTEP_Master_Out(3852) <= \<const0>\;
  LOCKSTEP_Master_Out(3853) <= \<const0>\;
  LOCKSTEP_Master_Out(3854) <= \<const0>\;
  LOCKSTEP_Master_Out(3855) <= \<const0>\;
  LOCKSTEP_Master_Out(3856) <= \<const0>\;
  LOCKSTEP_Master_Out(3857) <= \<const0>\;
  LOCKSTEP_Master_Out(3858) <= \<const0>\;
  LOCKSTEP_Master_Out(3859) <= \<const0>\;
  LOCKSTEP_Master_Out(3860) <= \<const0>\;
  LOCKSTEP_Master_Out(3861) <= \<const0>\;
  LOCKSTEP_Master_Out(3862) <= \<const0>\;
  LOCKSTEP_Master_Out(3863) <= \<const0>\;
  LOCKSTEP_Master_Out(3864) <= \<const0>\;
  LOCKSTEP_Master_Out(3865) <= \<const0>\;
  LOCKSTEP_Master_Out(3866) <= \<const0>\;
  LOCKSTEP_Master_Out(3867) <= \<const0>\;
  LOCKSTEP_Master_Out(3868) <= \<const0>\;
  LOCKSTEP_Master_Out(3869) <= \<const0>\;
  LOCKSTEP_Master_Out(3870) <= \<const0>\;
  LOCKSTEP_Master_Out(3871) <= \<const0>\;
  LOCKSTEP_Master_Out(3872) <= \<const0>\;
  LOCKSTEP_Master_Out(3873) <= \<const0>\;
  LOCKSTEP_Master_Out(3874) <= \<const0>\;
  LOCKSTEP_Master_Out(3875) <= \<const0>\;
  LOCKSTEP_Master_Out(3876) <= \<const0>\;
  LOCKSTEP_Master_Out(3877) <= \<const0>\;
  LOCKSTEP_Master_Out(3878) <= \<const0>\;
  LOCKSTEP_Master_Out(3879) <= \<const0>\;
  LOCKSTEP_Master_Out(3880) <= \<const0>\;
  LOCKSTEP_Master_Out(3881) <= \<const0>\;
  LOCKSTEP_Master_Out(3882) <= \<const0>\;
  LOCKSTEP_Master_Out(3883) <= \<const0>\;
  LOCKSTEP_Master_Out(3884) <= \<const0>\;
  LOCKSTEP_Master_Out(3885) <= \<const0>\;
  LOCKSTEP_Master_Out(3886) <= \<const0>\;
  LOCKSTEP_Master_Out(3887) <= \<const0>\;
  LOCKSTEP_Master_Out(3888) <= \<const0>\;
  LOCKSTEP_Master_Out(3889) <= \<const0>\;
  LOCKSTEP_Master_Out(3890) <= \<const0>\;
  LOCKSTEP_Master_Out(3891) <= \<const0>\;
  LOCKSTEP_Master_Out(3892) <= \<const0>\;
  LOCKSTEP_Master_Out(3893) <= \<const0>\;
  LOCKSTEP_Master_Out(3894) <= \<const0>\;
  LOCKSTEP_Master_Out(3895) <= \<const0>\;
  LOCKSTEP_Master_Out(3896) <= \<const0>\;
  LOCKSTEP_Master_Out(3897) <= \<const0>\;
  LOCKSTEP_Master_Out(3898) <= \<const0>\;
  LOCKSTEP_Master_Out(3899) <= \<const0>\;
  LOCKSTEP_Master_Out(3900) <= \<const0>\;
  LOCKSTEP_Master_Out(3901) <= \<const0>\;
  LOCKSTEP_Master_Out(3902) <= \<const0>\;
  LOCKSTEP_Master_Out(3903) <= \<const0>\;
  LOCKSTEP_Master_Out(3904) <= \<const0>\;
  LOCKSTEP_Master_Out(3905) <= \<const0>\;
  LOCKSTEP_Master_Out(3906) <= \<const0>\;
  LOCKSTEP_Master_Out(3907) <= \<const0>\;
  LOCKSTEP_Master_Out(3908) <= \<const0>\;
  LOCKSTEP_Master_Out(3909) <= \<const0>\;
  LOCKSTEP_Master_Out(3910) <= \<const0>\;
  LOCKSTEP_Master_Out(3911) <= \<const0>\;
  LOCKSTEP_Master_Out(3912) <= \<const0>\;
  LOCKSTEP_Master_Out(3913) <= \<const0>\;
  LOCKSTEP_Master_Out(3914) <= \<const0>\;
  LOCKSTEP_Master_Out(3915) <= \<const0>\;
  LOCKSTEP_Master_Out(3916) <= \<const0>\;
  LOCKSTEP_Master_Out(3917) <= \<const0>\;
  LOCKSTEP_Master_Out(3918) <= \<const0>\;
  LOCKSTEP_Master_Out(3919) <= \<const0>\;
  LOCKSTEP_Master_Out(3920) <= \<const0>\;
  LOCKSTEP_Master_Out(3921) <= \<const0>\;
  LOCKSTEP_Master_Out(3922) <= \<const0>\;
  LOCKSTEP_Master_Out(3923) <= \<const0>\;
  LOCKSTEP_Master_Out(3924) <= \<const0>\;
  LOCKSTEP_Master_Out(3925) <= \<const0>\;
  LOCKSTEP_Master_Out(3926) <= \<const0>\;
  LOCKSTEP_Master_Out(3927) <= \<const0>\;
  LOCKSTEP_Master_Out(3928) <= \<const0>\;
  LOCKSTEP_Master_Out(3929) <= \<const0>\;
  LOCKSTEP_Master_Out(3930) <= \<const0>\;
  LOCKSTEP_Master_Out(3931) <= \<const0>\;
  LOCKSTEP_Master_Out(3932) <= \<const0>\;
  LOCKSTEP_Master_Out(3933) <= \<const0>\;
  LOCKSTEP_Master_Out(3934) <= \<const0>\;
  LOCKSTEP_Master_Out(3935) <= \<const0>\;
  LOCKSTEP_Master_Out(3936) <= \<const0>\;
  LOCKSTEP_Master_Out(3937) <= \<const0>\;
  LOCKSTEP_Master_Out(3938) <= \<const0>\;
  LOCKSTEP_Master_Out(3939) <= \<const0>\;
  LOCKSTEP_Master_Out(3940) <= \<const0>\;
  LOCKSTEP_Master_Out(3941) <= \<const0>\;
  LOCKSTEP_Master_Out(3942) <= \<const0>\;
  LOCKSTEP_Master_Out(3943) <= \<const0>\;
  LOCKSTEP_Master_Out(3944) <= \<const0>\;
  LOCKSTEP_Master_Out(3945) <= \<const0>\;
  LOCKSTEP_Master_Out(3946) <= \<const0>\;
  LOCKSTEP_Master_Out(3947) <= \<const0>\;
  LOCKSTEP_Master_Out(3948) <= \<const0>\;
  LOCKSTEP_Master_Out(3949) <= \<const0>\;
  LOCKSTEP_Master_Out(3950) <= \<const0>\;
  LOCKSTEP_Master_Out(3951) <= \<const0>\;
  LOCKSTEP_Master_Out(3952) <= \<const0>\;
  LOCKSTEP_Master_Out(3953) <= \<const0>\;
  LOCKSTEP_Master_Out(3954) <= \<const0>\;
  LOCKSTEP_Master_Out(3955) <= \<const0>\;
  LOCKSTEP_Master_Out(3956) <= \<const0>\;
  LOCKSTEP_Master_Out(3957) <= \<const0>\;
  LOCKSTEP_Master_Out(3958) <= \<const0>\;
  LOCKSTEP_Master_Out(3959) <= \<const0>\;
  LOCKSTEP_Master_Out(3960) <= \<const0>\;
  LOCKSTEP_Master_Out(3961) <= \<const0>\;
  LOCKSTEP_Master_Out(3962) <= \<const0>\;
  LOCKSTEP_Master_Out(3963) <= \<const0>\;
  LOCKSTEP_Master_Out(3964) <= \<const0>\;
  LOCKSTEP_Master_Out(3965) <= \<const0>\;
  LOCKSTEP_Master_Out(3966) <= \<const0>\;
  LOCKSTEP_Master_Out(3967) <= \<const0>\;
  LOCKSTEP_Master_Out(3968) <= \<const0>\;
  LOCKSTEP_Master_Out(3969) <= \<const0>\;
  LOCKSTEP_Master_Out(3970) <= \<const0>\;
  LOCKSTEP_Master_Out(3971) <= \<const0>\;
  LOCKSTEP_Master_Out(3972) <= \<const0>\;
  LOCKSTEP_Master_Out(3973) <= \<const0>\;
  LOCKSTEP_Master_Out(3974) <= \<const0>\;
  LOCKSTEP_Master_Out(3975) <= \<const0>\;
  LOCKSTEP_Master_Out(3976) <= \<const0>\;
  LOCKSTEP_Master_Out(3977) <= \<const0>\;
  LOCKSTEP_Master_Out(3978) <= \<const0>\;
  LOCKSTEP_Master_Out(3979) <= \<const0>\;
  LOCKSTEP_Master_Out(3980) <= \<const0>\;
  LOCKSTEP_Master_Out(3981) <= \<const0>\;
  LOCKSTEP_Master_Out(3982) <= \<const0>\;
  LOCKSTEP_Master_Out(3983) <= \<const0>\;
  LOCKSTEP_Master_Out(3984) <= \<const0>\;
  LOCKSTEP_Master_Out(3985) <= \<const0>\;
  LOCKSTEP_Master_Out(3986) <= \<const0>\;
  LOCKSTEP_Master_Out(3987) <= \<const0>\;
  LOCKSTEP_Master_Out(3988) <= \<const0>\;
  LOCKSTEP_Master_Out(3989) <= \<const0>\;
  LOCKSTEP_Master_Out(3990) <= \<const0>\;
  LOCKSTEP_Master_Out(3991) <= \<const0>\;
  LOCKSTEP_Master_Out(3992) <= \<const0>\;
  LOCKSTEP_Master_Out(3993) <= \<const0>\;
  LOCKSTEP_Master_Out(3994) <= \<const0>\;
  LOCKSTEP_Master_Out(3995) <= \<const0>\;
  LOCKSTEP_Master_Out(3996) <= \<const0>\;
  LOCKSTEP_Master_Out(3997) <= \<const0>\;
  LOCKSTEP_Master_Out(3998) <= \<const0>\;
  LOCKSTEP_Master_Out(3999) <= \<const0>\;
  LOCKSTEP_Master_Out(4000) <= \<const0>\;
  LOCKSTEP_Master_Out(4001) <= \<const0>\;
  LOCKSTEP_Master_Out(4002) <= \<const0>\;
  LOCKSTEP_Master_Out(4003) <= \<const0>\;
  LOCKSTEP_Master_Out(4004) <= \<const0>\;
  LOCKSTEP_Master_Out(4005) <= \<const0>\;
  LOCKSTEP_Master_Out(4006) <= \<const0>\;
  LOCKSTEP_Master_Out(4007) <= \<const0>\;
  LOCKSTEP_Master_Out(4008) <= \<const0>\;
  LOCKSTEP_Master_Out(4009) <= \<const0>\;
  LOCKSTEP_Master_Out(4010) <= \<const0>\;
  LOCKSTEP_Master_Out(4011) <= \<const0>\;
  LOCKSTEP_Master_Out(4012) <= \<const0>\;
  LOCKSTEP_Master_Out(4013) <= \<const0>\;
  LOCKSTEP_Master_Out(4014) <= \<const0>\;
  LOCKSTEP_Master_Out(4015) <= \<const0>\;
  LOCKSTEP_Master_Out(4016) <= \<const0>\;
  LOCKSTEP_Master_Out(4017) <= \<const0>\;
  LOCKSTEP_Master_Out(4018) <= \<const0>\;
  LOCKSTEP_Master_Out(4019) <= \<const0>\;
  LOCKSTEP_Master_Out(4020) <= \<const0>\;
  LOCKSTEP_Master_Out(4021) <= \<const0>\;
  LOCKSTEP_Master_Out(4022) <= \<const0>\;
  LOCKSTEP_Master_Out(4023) <= \<const0>\;
  LOCKSTEP_Master_Out(4024) <= \<const0>\;
  LOCKSTEP_Master_Out(4025) <= \<const0>\;
  LOCKSTEP_Master_Out(4026) <= \<const0>\;
  LOCKSTEP_Master_Out(4027) <= \<const0>\;
  LOCKSTEP_Master_Out(4028) <= \<const0>\;
  LOCKSTEP_Master_Out(4029) <= \<const0>\;
  LOCKSTEP_Master_Out(4030) <= \<const0>\;
  LOCKSTEP_Master_Out(4031) <= \<const0>\;
  LOCKSTEP_Master_Out(4032) <= \<const0>\;
  LOCKSTEP_Master_Out(4033) <= \<const0>\;
  LOCKSTEP_Master_Out(4034) <= \<const0>\;
  LOCKSTEP_Master_Out(4035) <= \<const0>\;
  LOCKSTEP_Master_Out(4036) <= \<const0>\;
  LOCKSTEP_Master_Out(4037) <= \<const0>\;
  LOCKSTEP_Master_Out(4038) <= \<const0>\;
  LOCKSTEP_Master_Out(4039) <= \<const0>\;
  LOCKSTEP_Master_Out(4040) <= \<const0>\;
  LOCKSTEP_Master_Out(4041) <= \<const0>\;
  LOCKSTEP_Master_Out(4042) <= \<const0>\;
  LOCKSTEP_Master_Out(4043) <= \<const0>\;
  LOCKSTEP_Master_Out(4044) <= \<const0>\;
  LOCKSTEP_Master_Out(4045) <= \<const0>\;
  LOCKSTEP_Master_Out(4046) <= \<const0>\;
  LOCKSTEP_Master_Out(4047) <= \<const0>\;
  LOCKSTEP_Master_Out(4048) <= \<const0>\;
  LOCKSTEP_Master_Out(4049) <= \<const0>\;
  LOCKSTEP_Master_Out(4050) <= \<const0>\;
  LOCKSTEP_Master_Out(4051) <= \<const0>\;
  LOCKSTEP_Master_Out(4052) <= \<const0>\;
  LOCKSTEP_Master_Out(4053) <= \<const0>\;
  LOCKSTEP_Master_Out(4054) <= \<const0>\;
  LOCKSTEP_Master_Out(4055) <= \<const0>\;
  LOCKSTEP_Master_Out(4056) <= \<const0>\;
  LOCKSTEP_Master_Out(4057) <= \<const0>\;
  LOCKSTEP_Master_Out(4058) <= \<const0>\;
  LOCKSTEP_Master_Out(4059) <= \<const0>\;
  LOCKSTEP_Master_Out(4060) <= \<const0>\;
  LOCKSTEP_Master_Out(4061) <= \<const0>\;
  LOCKSTEP_Master_Out(4062) <= \<const0>\;
  LOCKSTEP_Master_Out(4063) <= \<const0>\;
  LOCKSTEP_Master_Out(4064) <= \<const0>\;
  LOCKSTEP_Master_Out(4065) <= \<const0>\;
  LOCKSTEP_Master_Out(4066) <= \<const0>\;
  LOCKSTEP_Master_Out(4067) <= \<const0>\;
  LOCKSTEP_Master_Out(4068) <= \<const0>\;
  LOCKSTEP_Master_Out(4069) <= \<const0>\;
  LOCKSTEP_Master_Out(4070) <= \<const0>\;
  LOCKSTEP_Master_Out(4071) <= \<const0>\;
  LOCKSTEP_Master_Out(4072) <= \<const0>\;
  LOCKSTEP_Master_Out(4073) <= \<const0>\;
  LOCKSTEP_Master_Out(4074) <= \<const0>\;
  LOCKSTEP_Master_Out(4075) <= \<const0>\;
  LOCKSTEP_Master_Out(4076) <= \<const0>\;
  LOCKSTEP_Master_Out(4077) <= \<const0>\;
  LOCKSTEP_Master_Out(4078) <= \<const0>\;
  LOCKSTEP_Master_Out(4079) <= \<const0>\;
  LOCKSTEP_Master_Out(4080) <= \<const0>\;
  LOCKSTEP_Master_Out(4081) <= \<const0>\;
  LOCKSTEP_Master_Out(4082) <= \<const0>\;
  LOCKSTEP_Master_Out(4083) <= \<const0>\;
  LOCKSTEP_Master_Out(4084) <= \<const0>\;
  LOCKSTEP_Master_Out(4085) <= \<const0>\;
  LOCKSTEP_Master_Out(4086) <= \<const0>\;
  LOCKSTEP_Master_Out(4087) <= \<const0>\;
  LOCKSTEP_Master_Out(4088) <= \<const0>\;
  LOCKSTEP_Master_Out(4089) <= \<const0>\;
  LOCKSTEP_Master_Out(4090) <= \<const0>\;
  LOCKSTEP_Master_Out(4091) <= \<const0>\;
  LOCKSTEP_Master_Out(4092) <= \<const0>\;
  LOCKSTEP_Master_Out(4093) <= \<const0>\;
  LOCKSTEP_Master_Out(4094) <= \<const0>\;
  LOCKSTEP_Master_Out(4095) <= \<const0>\;
  LOCKSTEP_Out(0) <= \^lockstep_out\(3228);
  LOCKSTEP_Out(1) <= \<const0>\;
  LOCKSTEP_Out(2 to 35) <= \^lockstep_out\(2 to 35);
  LOCKSTEP_Out(36) <= \<const0>\;
  LOCKSTEP_Out(37) <= \<const0>\;
  LOCKSTEP_Out(38) <= \<const0>\;
  LOCKSTEP_Out(39) <= \<const0>\;
  LOCKSTEP_Out(40) <= \<const0>\;
  LOCKSTEP_Out(41) <= \<const0>\;
  LOCKSTEP_Out(42) <= \<const0>\;
  LOCKSTEP_Out(43) <= \<const0>\;
  LOCKSTEP_Out(44) <= \<const0>\;
  LOCKSTEP_Out(45) <= \<const0>\;
  LOCKSTEP_Out(46) <= \<const0>\;
  LOCKSTEP_Out(47) <= \<const0>\;
  LOCKSTEP_Out(48) <= \<const0>\;
  LOCKSTEP_Out(49) <= \<const0>\;
  LOCKSTEP_Out(50) <= \<const0>\;
  LOCKSTEP_Out(51) <= \<const0>\;
  LOCKSTEP_Out(52) <= \<const0>\;
  LOCKSTEP_Out(53) <= \<const0>\;
  LOCKSTEP_Out(54) <= \<const0>\;
  LOCKSTEP_Out(55) <= \<const0>\;
  LOCKSTEP_Out(56) <= \<const0>\;
  LOCKSTEP_Out(57) <= \<const0>\;
  LOCKSTEP_Out(58) <= \<const0>\;
  LOCKSTEP_Out(59) <= \<const0>\;
  LOCKSTEP_Out(60) <= \<const0>\;
  LOCKSTEP_Out(61) <= \<const0>\;
  LOCKSTEP_Out(62) <= \<const0>\;
  LOCKSTEP_Out(63) <= \<const0>\;
  LOCKSTEP_Out(64) <= \<const0>\;
  LOCKSTEP_Out(65) <= \<const0>\;
  LOCKSTEP_Out(66) <= \<const0>\;
  LOCKSTEP_Out(67) <= \<const0>\;
  LOCKSTEP_Out(68 to 99) <= \^lockstep_out\(68 to 99);
  LOCKSTEP_Out(100) <= \<const0>\;
  LOCKSTEP_Out(101) <= \<const0>\;
  LOCKSTEP_Out(102) <= \<const0>\;
  LOCKSTEP_Out(103) <= \<const0>\;
  LOCKSTEP_Out(104) <= \<const0>\;
  LOCKSTEP_Out(105) <= \<const0>\;
  LOCKSTEP_Out(106) <= \<const0>\;
  LOCKSTEP_Out(107) <= \<const0>\;
  LOCKSTEP_Out(108) <= \<const0>\;
  LOCKSTEP_Out(109) <= \<const0>\;
  LOCKSTEP_Out(110) <= \<const0>\;
  LOCKSTEP_Out(111) <= \<const0>\;
  LOCKSTEP_Out(112) <= \<const0>\;
  LOCKSTEP_Out(113) <= \<const0>\;
  LOCKSTEP_Out(114) <= \<const0>\;
  LOCKSTEP_Out(115) <= \<const0>\;
  LOCKSTEP_Out(116) <= \<const0>\;
  LOCKSTEP_Out(117) <= \<const0>\;
  LOCKSTEP_Out(118) <= \<const0>\;
  LOCKSTEP_Out(119) <= \<const0>\;
  LOCKSTEP_Out(120) <= \<const0>\;
  LOCKSTEP_Out(121) <= \<const0>\;
  LOCKSTEP_Out(122) <= \<const0>\;
  LOCKSTEP_Out(123) <= \<const0>\;
  LOCKSTEP_Out(124) <= \<const0>\;
  LOCKSTEP_Out(125) <= \<const0>\;
  LOCKSTEP_Out(126) <= \<const0>\;
  LOCKSTEP_Out(127) <= \<const0>\;
  LOCKSTEP_Out(128) <= \<const0>\;
  LOCKSTEP_Out(129) <= \<const0>\;
  LOCKSTEP_Out(130) <= \<const0>\;
  LOCKSTEP_Out(131) <= \<const0>\;
  LOCKSTEP_Out(132 to 163) <= \^lockstep_out\(132 to 163);
  LOCKSTEP_Out(164) <= \<const0>\;
  LOCKSTEP_Out(165) <= \<const0>\;
  LOCKSTEP_Out(166) <= \<const0>\;
  LOCKSTEP_Out(167) <= \<const0>\;
  LOCKSTEP_Out(168) <= \<const0>\;
  LOCKSTEP_Out(169) <= \<const0>\;
  LOCKSTEP_Out(170) <= \<const0>\;
  LOCKSTEP_Out(171) <= \<const0>\;
  LOCKSTEP_Out(172) <= \<const0>\;
  LOCKSTEP_Out(173) <= \<const0>\;
  LOCKSTEP_Out(174) <= \<const0>\;
  LOCKSTEP_Out(175) <= \<const0>\;
  LOCKSTEP_Out(176) <= \<const0>\;
  LOCKSTEP_Out(177) <= \<const0>\;
  LOCKSTEP_Out(178) <= \<const0>\;
  LOCKSTEP_Out(179) <= \<const0>\;
  LOCKSTEP_Out(180) <= \<const0>\;
  LOCKSTEP_Out(181) <= \<const0>\;
  LOCKSTEP_Out(182) <= \<const0>\;
  LOCKSTEP_Out(183) <= \<const0>\;
  LOCKSTEP_Out(184) <= \<const0>\;
  LOCKSTEP_Out(185) <= \<const0>\;
  LOCKSTEP_Out(186) <= \<const0>\;
  LOCKSTEP_Out(187) <= \<const0>\;
  LOCKSTEP_Out(188) <= \<const0>\;
  LOCKSTEP_Out(189) <= \<const0>\;
  LOCKSTEP_Out(190) <= \<const0>\;
  LOCKSTEP_Out(191) <= \<const0>\;
  LOCKSTEP_Out(192) <= \<const0>\;
  LOCKSTEP_Out(193) <= \<const0>\;
  LOCKSTEP_Out(194) <= \<const0>\;
  LOCKSTEP_Out(195) <= \<const0>\;
  LOCKSTEP_Out(196 to 202) <= \^lockstep_out\(196 to 202);
  LOCKSTEP_Out(203) <= \<const0>\;
  LOCKSTEP_Out(204) <= \<const0>\;
  LOCKSTEP_Out(205) <= \<const0>\;
  LOCKSTEP_Out(206) <= \<const0>\;
  LOCKSTEP_Out(207) <= \<const0>\;
  LOCKSTEP_Out(208) <= \<const0>\;
  LOCKSTEP_Out(209) <= \<const0>\;
  LOCKSTEP_Out(210) <= \<const0>\;
  LOCKSTEP_Out(211) <= \<const0>\;
  LOCKSTEP_Out(212) <= \<const0>\;
  LOCKSTEP_Out(213) <= \<const0>\;
  LOCKSTEP_Out(214) <= \<const0>\;
  LOCKSTEP_Out(215) <= \<const0>\;
  LOCKSTEP_Out(216) <= \<const0>\;
  LOCKSTEP_Out(217) <= \<const0>\;
  LOCKSTEP_Out(218) <= \<const0>\;
  LOCKSTEP_Out(219) <= \<const0>\;
  LOCKSTEP_Out(220) <= \<const0>\;
  LOCKSTEP_Out(221) <= \<const0>\;
  LOCKSTEP_Out(222) <= \<const0>\;
  LOCKSTEP_Out(223) <= \<const0>\;
  LOCKSTEP_Out(224) <= \<const0>\;
  LOCKSTEP_Out(225) <= \<const0>\;
  LOCKSTEP_Out(226) <= \<const0>\;
  LOCKSTEP_Out(227) <= \<const0>\;
  LOCKSTEP_Out(228) <= \<const0>\;
  LOCKSTEP_Out(229) <= \<const0>\;
  LOCKSTEP_Out(230) <= \<const0>\;
  LOCKSTEP_Out(231) <= \<const0>\;
  LOCKSTEP_Out(232) <= \<const0>\;
  LOCKSTEP_Out(233) <= \<const0>\;
  LOCKSTEP_Out(234) <= \<const0>\;
  LOCKSTEP_Out(235) <= \<const0>\;
  LOCKSTEP_Out(236) <= \<const0>\;
  LOCKSTEP_Out(237) <= \<const0>\;
  LOCKSTEP_Out(238) <= \<const0>\;
  LOCKSTEP_Out(239) <= \<const0>\;
  LOCKSTEP_Out(240) <= \<const0>\;
  LOCKSTEP_Out(241) <= \<const0>\;
  LOCKSTEP_Out(242) <= \<const0>\;
  LOCKSTEP_Out(243) <= \<const0>\;
  LOCKSTEP_Out(244) <= \<const0>\;
  LOCKSTEP_Out(245) <= \<const0>\;
  LOCKSTEP_Out(246) <= \<const0>\;
  LOCKSTEP_Out(247) <= \<const0>\;
  LOCKSTEP_Out(248) <= \<const0>\;
  LOCKSTEP_Out(249) <= \<const0>\;
  LOCKSTEP_Out(250) <= \<const0>\;
  LOCKSTEP_Out(251) <= \<const0>\;
  LOCKSTEP_Out(252) <= \<const0>\;
  LOCKSTEP_Out(253) <= \<const0>\;
  LOCKSTEP_Out(254) <= \<const0>\;
  LOCKSTEP_Out(255) <= \<const0>\;
  LOCKSTEP_Out(256) <= \<const0>\;
  LOCKSTEP_Out(257) <= \<const0>\;
  LOCKSTEP_Out(258) <= \<const0>\;
  LOCKSTEP_Out(259) <= \<const0>\;
  LOCKSTEP_Out(260) <= \<const0>\;
  LOCKSTEP_Out(261) <= \<const0>\;
  LOCKSTEP_Out(262) <= \<const0>\;
  LOCKSTEP_Out(263) <= \<const0>\;
  LOCKSTEP_Out(264) <= \<const0>\;
  LOCKSTEP_Out(265) <= \<const0>\;
  LOCKSTEP_Out(266) <= \<const0>\;
  LOCKSTEP_Out(267) <= \<const0>\;
  LOCKSTEP_Out(268) <= \<const0>\;
  LOCKSTEP_Out(269) <= \<const0>\;
  LOCKSTEP_Out(270) <= \<const0>\;
  LOCKSTEP_Out(271) <= \<const0>\;
  LOCKSTEP_Out(272) <= \<const0>\;
  LOCKSTEP_Out(273) <= \<const0>\;
  LOCKSTEP_Out(274) <= \<const0>\;
  LOCKSTEP_Out(275) <= \<const0>\;
  LOCKSTEP_Out(276) <= \<const0>\;
  LOCKSTEP_Out(277) <= \<const0>\;
  LOCKSTEP_Out(278) <= \<const0>\;
  LOCKSTEP_Out(279) <= \<const0>\;
  LOCKSTEP_Out(280) <= \<const0>\;
  LOCKSTEP_Out(281) <= \<const0>\;
  LOCKSTEP_Out(282) <= \<const0>\;
  LOCKSTEP_Out(283) <= \<const0>\;
  LOCKSTEP_Out(284) <= \<const0>\;
  LOCKSTEP_Out(285) <= \<const0>\;
  LOCKSTEP_Out(286) <= \<const0>\;
  LOCKSTEP_Out(287) <= \<const0>\;
  LOCKSTEP_Out(288) <= \<const0>\;
  LOCKSTEP_Out(289) <= \<const0>\;
  LOCKSTEP_Out(290) <= \<const0>\;
  LOCKSTEP_Out(291) <= \<const0>\;
  LOCKSTEP_Out(292) <= \<const0>\;
  LOCKSTEP_Out(293) <= \<const0>\;
  LOCKSTEP_Out(294) <= \<const0>\;
  LOCKSTEP_Out(295) <= \<const0>\;
  LOCKSTEP_Out(296) <= \<const0>\;
  LOCKSTEP_Out(297) <= \<const0>\;
  LOCKSTEP_Out(298) <= \<const0>\;
  LOCKSTEP_Out(299) <= \<const0>\;
  LOCKSTEP_Out(300) <= \<const0>\;
  LOCKSTEP_Out(301) <= \<const0>\;
  LOCKSTEP_Out(302) <= \<const0>\;
  LOCKSTEP_Out(303) <= \<const0>\;
  LOCKSTEP_Out(304) <= \<const0>\;
  LOCKSTEP_Out(305) <= \<const0>\;
  LOCKSTEP_Out(306) <= \<const0>\;
  LOCKSTEP_Out(307) <= \<const0>\;
  LOCKSTEP_Out(308) <= \<const0>\;
  LOCKSTEP_Out(309) <= \<const0>\;
  LOCKSTEP_Out(310) <= \<const0>\;
  LOCKSTEP_Out(311) <= \<const0>\;
  LOCKSTEP_Out(312) <= \<const0>\;
  LOCKSTEP_Out(313) <= \<const0>\;
  LOCKSTEP_Out(314) <= \<const0>\;
  LOCKSTEP_Out(315) <= \<const0>\;
  LOCKSTEP_Out(316) <= \<const0>\;
  LOCKSTEP_Out(317) <= \<const0>\;
  LOCKSTEP_Out(318) <= \<const0>\;
  LOCKSTEP_Out(319) <= \<const0>\;
  LOCKSTEP_Out(320) <= \<const0>\;
  LOCKSTEP_Out(321) <= \<const0>\;
  LOCKSTEP_Out(322) <= \<const0>\;
  LOCKSTEP_Out(323) <= \<const0>\;
  LOCKSTEP_Out(324) <= \<const0>\;
  LOCKSTEP_Out(325) <= \<const0>\;
  LOCKSTEP_Out(326) <= \<const0>\;
  LOCKSTEP_Out(327) <= \<const0>\;
  LOCKSTEP_Out(328) <= \<const0>\;
  LOCKSTEP_Out(329) <= \<const0>\;
  LOCKSTEP_Out(330) <= \<const0>\;
  LOCKSTEP_Out(331) <= \<const0>\;
  LOCKSTEP_Out(332) <= \<const0>\;
  LOCKSTEP_Out(333) <= \<const0>\;
  LOCKSTEP_Out(334) <= \<const0>\;
  LOCKSTEP_Out(335) <= \<const0>\;
  LOCKSTEP_Out(336) <= \<const0>\;
  LOCKSTEP_Out(337) <= \<const0>\;
  LOCKSTEP_Out(338) <= \<const0>\;
  LOCKSTEP_Out(339) <= \<const0>\;
  LOCKSTEP_Out(340) <= \<const0>\;
  LOCKSTEP_Out(341) <= \<const0>\;
  LOCKSTEP_Out(342) <= \<const0>\;
  LOCKSTEP_Out(343) <= \<const0>\;
  LOCKSTEP_Out(344) <= \<const0>\;
  LOCKSTEP_Out(345) <= \<const0>\;
  LOCKSTEP_Out(346) <= \<const0>\;
  LOCKSTEP_Out(347) <= \<const0>\;
  LOCKSTEP_Out(348) <= \<const0>\;
  LOCKSTEP_Out(349) <= \<const0>\;
  LOCKSTEP_Out(350) <= \<const0>\;
  LOCKSTEP_Out(351) <= \<const0>\;
  LOCKSTEP_Out(352) <= \<const0>\;
  LOCKSTEP_Out(353) <= \<const0>\;
  LOCKSTEP_Out(354) <= \<const0>\;
  LOCKSTEP_Out(355) <= \<const0>\;
  LOCKSTEP_Out(356) <= \<const0>\;
  LOCKSTEP_Out(357) <= \<const0>\;
  LOCKSTEP_Out(358) <= \<const0>\;
  LOCKSTEP_Out(359) <= \<const0>\;
  LOCKSTEP_Out(360) <= \<const0>\;
  LOCKSTEP_Out(361) <= \<const0>\;
  LOCKSTEP_Out(362) <= \<const0>\;
  LOCKSTEP_Out(363) <= \<const0>\;
  LOCKSTEP_Out(364) <= \<const0>\;
  LOCKSTEP_Out(365) <= \<const0>\;
  LOCKSTEP_Out(366) <= \<const0>\;
  LOCKSTEP_Out(367) <= \<const0>\;
  LOCKSTEP_Out(368) <= \<const0>\;
  LOCKSTEP_Out(369) <= \<const0>\;
  LOCKSTEP_Out(370) <= \<const0>\;
  LOCKSTEP_Out(371) <= \<const0>\;
  LOCKSTEP_Out(372) <= \<const0>\;
  LOCKSTEP_Out(373) <= \<const0>\;
  LOCKSTEP_Out(374) <= \<const0>\;
  LOCKSTEP_Out(375) <= \<const0>\;
  LOCKSTEP_Out(376) <= \<const0>\;
  LOCKSTEP_Out(377) <= \<const0>\;
  LOCKSTEP_Out(378) <= \<const0>\;
  LOCKSTEP_Out(379) <= \<const0>\;
  LOCKSTEP_Out(380) <= \<const0>\;
  LOCKSTEP_Out(381) <= \<const0>\;
  LOCKSTEP_Out(382) <= \<const0>\;
  LOCKSTEP_Out(383) <= \<const0>\;
  LOCKSTEP_Out(384) <= \<const0>\;
  LOCKSTEP_Out(385) <= \<const0>\;
  LOCKSTEP_Out(386) <= \<const0>\;
  LOCKSTEP_Out(387) <= \<const0>\;
  LOCKSTEP_Out(388) <= \<const0>\;
  LOCKSTEP_Out(389) <= \<const0>\;
  LOCKSTEP_Out(390) <= \<const0>\;
  LOCKSTEP_Out(391) <= \<const0>\;
  LOCKSTEP_Out(392) <= \<const0>\;
  LOCKSTEP_Out(393) <= \<const0>\;
  LOCKSTEP_Out(394) <= \<const0>\;
  LOCKSTEP_Out(395) <= \<const0>\;
  LOCKSTEP_Out(396) <= \<const0>\;
  LOCKSTEP_Out(397) <= \<const0>\;
  LOCKSTEP_Out(398) <= \<const0>\;
  LOCKSTEP_Out(399) <= \<const0>\;
  LOCKSTEP_Out(400) <= \<const0>\;
  LOCKSTEP_Out(401) <= \<const0>\;
  LOCKSTEP_Out(402) <= \<const0>\;
  LOCKSTEP_Out(403) <= \<const0>\;
  LOCKSTEP_Out(404) <= \<const0>\;
  LOCKSTEP_Out(405) <= \<const0>\;
  LOCKSTEP_Out(406) <= \<const0>\;
  LOCKSTEP_Out(407) <= \<const0>\;
  LOCKSTEP_Out(408) <= \<const0>\;
  LOCKSTEP_Out(409) <= \<const0>\;
  LOCKSTEP_Out(410) <= \<const0>\;
  LOCKSTEP_Out(411) <= \<const0>\;
  LOCKSTEP_Out(412) <= \<const0>\;
  LOCKSTEP_Out(413) <= \<const0>\;
  LOCKSTEP_Out(414) <= \<const0>\;
  LOCKSTEP_Out(415) <= \<const0>\;
  LOCKSTEP_Out(416) <= \<const0>\;
  LOCKSTEP_Out(417) <= \<const0>\;
  LOCKSTEP_Out(418) <= \<const0>\;
  LOCKSTEP_Out(419) <= \<const0>\;
  LOCKSTEP_Out(420) <= \<const0>\;
  LOCKSTEP_Out(421) <= \<const0>\;
  LOCKSTEP_Out(422) <= \<const0>\;
  LOCKSTEP_Out(423) <= \<const0>\;
  LOCKSTEP_Out(424) <= \<const0>\;
  LOCKSTEP_Out(425) <= \<const0>\;
  LOCKSTEP_Out(426) <= \<const0>\;
  LOCKSTEP_Out(427) <= \<const0>\;
  LOCKSTEP_Out(428) <= \<const0>\;
  LOCKSTEP_Out(429) <= \<const0>\;
  LOCKSTEP_Out(430) <= \<const0>\;
  LOCKSTEP_Out(431) <= \<const0>\;
  LOCKSTEP_Out(432) <= \<const0>\;
  LOCKSTEP_Out(433) <= \<const0>\;
  LOCKSTEP_Out(434) <= \<const0>\;
  LOCKSTEP_Out(435) <= \<const0>\;
  LOCKSTEP_Out(436) <= \<const0>\;
  LOCKSTEP_Out(437) <= \<const0>\;
  LOCKSTEP_Out(438) <= \<const0>\;
  LOCKSTEP_Out(439) <= \<const0>\;
  LOCKSTEP_Out(440) <= \<const0>\;
  LOCKSTEP_Out(441) <= \<const0>\;
  LOCKSTEP_Out(442) <= \<const0>\;
  LOCKSTEP_Out(443) <= \<const0>\;
  LOCKSTEP_Out(444) <= \<const0>\;
  LOCKSTEP_Out(445) <= \<const0>\;
  LOCKSTEP_Out(446) <= \<const0>\;
  LOCKSTEP_Out(447) <= \<const0>\;
  LOCKSTEP_Out(448) <= \<const0>\;
  LOCKSTEP_Out(449) <= \<const0>\;
  LOCKSTEP_Out(450) <= \<const0>\;
  LOCKSTEP_Out(451) <= \<const0>\;
  LOCKSTEP_Out(452) <= \<const0>\;
  LOCKSTEP_Out(453) <= \<const0>\;
  LOCKSTEP_Out(454) <= \<const0>\;
  LOCKSTEP_Out(455) <= \<const0>\;
  LOCKSTEP_Out(456) <= \<const0>\;
  LOCKSTEP_Out(457) <= \<const0>\;
  LOCKSTEP_Out(458) <= \<const0>\;
  LOCKSTEP_Out(459) <= \<const0>\;
  LOCKSTEP_Out(460) <= \<const0>\;
  LOCKSTEP_Out(461) <= \<const0>\;
  LOCKSTEP_Out(462) <= \<const0>\;
  LOCKSTEP_Out(463) <= \<const0>\;
  LOCKSTEP_Out(464) <= \<const0>\;
  LOCKSTEP_Out(465) <= \<const0>\;
  LOCKSTEP_Out(466 to 497) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(498) <= \<const0>\;
  LOCKSTEP_Out(499) <= \<const0>\;
  LOCKSTEP_Out(500) <= \<const0>\;
  LOCKSTEP_Out(501) <= \<const0>\;
  LOCKSTEP_Out(502) <= \<const0>\;
  LOCKSTEP_Out(503) <= \<const0>\;
  LOCKSTEP_Out(504) <= \<const0>\;
  LOCKSTEP_Out(505) <= \<const0>\;
  LOCKSTEP_Out(506) <= \<const0>\;
  LOCKSTEP_Out(507) <= \<const0>\;
  LOCKSTEP_Out(508) <= \<const0>\;
  LOCKSTEP_Out(509) <= \<const0>\;
  LOCKSTEP_Out(510) <= \<const0>\;
  LOCKSTEP_Out(511) <= \<const0>\;
  LOCKSTEP_Out(512) <= \<const0>\;
  LOCKSTEP_Out(513) <= \<const0>\;
  LOCKSTEP_Out(514) <= \<const0>\;
  LOCKSTEP_Out(515) <= \<const0>\;
  LOCKSTEP_Out(516) <= \<const0>\;
  LOCKSTEP_Out(517) <= \<const0>\;
  LOCKSTEP_Out(518) <= \<const0>\;
  LOCKSTEP_Out(519) <= \<const0>\;
  LOCKSTEP_Out(520) <= \<const0>\;
  LOCKSTEP_Out(521) <= \<const0>\;
  LOCKSTEP_Out(522) <= \<const0>\;
  LOCKSTEP_Out(523) <= \<const0>\;
  LOCKSTEP_Out(524) <= \<const0>\;
  LOCKSTEP_Out(525) <= \<const0>\;
  LOCKSTEP_Out(526) <= \<const0>\;
  LOCKSTEP_Out(527) <= \<const0>\;
  LOCKSTEP_Out(528) <= \<const0>\;
  LOCKSTEP_Out(529) <= \<const0>\;
  LOCKSTEP_Out(530) <= \<const0>\;
  LOCKSTEP_Out(531) <= \<const0>\;
  LOCKSTEP_Out(532) <= \<const0>\;
  LOCKSTEP_Out(533) <= \<const0>\;
  LOCKSTEP_Out(534) <= \<const0>\;
  LOCKSTEP_Out(535) <= \<const0>\;
  LOCKSTEP_Out(536) <= \<const0>\;
  LOCKSTEP_Out(537) <= \<const0>\;
  LOCKSTEP_Out(538) <= \<const0>\;
  LOCKSTEP_Out(539) <= \^lockstep_out\(542);
  LOCKSTEP_Out(540) <= \<const0>\;
  LOCKSTEP_Out(541) <= \<const0>\;
  LOCKSTEP_Out(542) <= \^lockstep_out\(542);
  LOCKSTEP_Out(543) <= \<const0>\;
  LOCKSTEP_Out(544) <= \<const0>\;
  LOCKSTEP_Out(545) <= \<const0>\;
  LOCKSTEP_Out(546) <= \^lockstep_out\(542);
  LOCKSTEP_Out(547) <= \^lockstep_out\(542);
  LOCKSTEP_Out(548) <= \<const0>\;
  LOCKSTEP_Out(549) <= \<const0>\;
  LOCKSTEP_Out(550) <= \<const0>\;
  LOCKSTEP_Out(551) <= \^lockstep_out\(542);
  LOCKSTEP_Out(552) <= \<const0>\;
  LOCKSTEP_Out(553) <= \<const0>\;
  LOCKSTEP_Out(554) <= \<const0>\;
  LOCKSTEP_Out(555 to 587) <= \^lockstep_out\(555 to 587);
  LOCKSTEP_Out(588) <= \<const0>\;
  LOCKSTEP_Out(589) <= \<const0>\;
  LOCKSTEP_Out(590) <= \<const0>\;
  LOCKSTEP_Out(591) <= \<const0>\;
  LOCKSTEP_Out(592) <= \<const0>\;
  LOCKSTEP_Out(593) <= \<const0>\;
  LOCKSTEP_Out(594) <= \<const0>\;
  LOCKSTEP_Out(595) <= \<const0>\;
  LOCKSTEP_Out(596) <= \<const0>\;
  LOCKSTEP_Out(597) <= \<const0>\;
  LOCKSTEP_Out(598) <= \<const0>\;
  LOCKSTEP_Out(599) <= \<const0>\;
  LOCKSTEP_Out(600) <= \<const0>\;
  LOCKSTEP_Out(601) <= \<const0>\;
  LOCKSTEP_Out(602) <= \<const0>\;
  LOCKSTEP_Out(603) <= \<const0>\;
  LOCKSTEP_Out(604) <= \<const0>\;
  LOCKSTEP_Out(605) <= \<const0>\;
  LOCKSTEP_Out(606) <= \<const0>\;
  LOCKSTEP_Out(607) <= \<const0>\;
  LOCKSTEP_Out(608) <= \<const0>\;
  LOCKSTEP_Out(609) <= \<const0>\;
  LOCKSTEP_Out(610) <= \<const0>\;
  LOCKSTEP_Out(611) <= \<const0>\;
  LOCKSTEP_Out(612) <= \<const0>\;
  LOCKSTEP_Out(613) <= \<const0>\;
  LOCKSTEP_Out(614) <= \<const0>\;
  LOCKSTEP_Out(615) <= \<const0>\;
  LOCKSTEP_Out(616) <= \<const0>\;
  LOCKSTEP_Out(617) <= \<const0>\;
  LOCKSTEP_Out(618) <= \<const0>\;
  LOCKSTEP_Out(619) <= \<const0>\;
  LOCKSTEP_Out(620 to 623) <= \^lockstep_out\(620 to 623);
  LOCKSTEP_Out(624) <= \<const0>\;
  LOCKSTEP_Out(625) <= \<const0>\;
  LOCKSTEP_Out(626) <= \<const0>\;
  LOCKSTEP_Out(627) <= \<const0>\;
  LOCKSTEP_Out(628) <= \^lockstep_out\(542);
  LOCKSTEP_Out(629) <= \^lockstep_out\(629);
  LOCKSTEP_Out(630) <= \^lockstep_out\(542);
  LOCKSTEP_Out(631) <= \<const0>\;
  LOCKSTEP_Out(632 to 663) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(664) <= \<const0>\;
  LOCKSTEP_Out(665) <= \<const0>\;
  LOCKSTEP_Out(666) <= \<const0>\;
  LOCKSTEP_Out(667) <= \<const0>\;
  LOCKSTEP_Out(668) <= \<const0>\;
  LOCKSTEP_Out(669) <= \<const0>\;
  LOCKSTEP_Out(670) <= \<const0>\;
  LOCKSTEP_Out(671) <= \<const0>\;
  LOCKSTEP_Out(672) <= \<const0>\;
  LOCKSTEP_Out(673) <= \<const0>\;
  LOCKSTEP_Out(674) <= \<const0>\;
  LOCKSTEP_Out(675) <= \<const0>\;
  LOCKSTEP_Out(676) <= \<const0>\;
  LOCKSTEP_Out(677) <= \<const0>\;
  LOCKSTEP_Out(678) <= \<const0>\;
  LOCKSTEP_Out(679) <= \<const0>\;
  LOCKSTEP_Out(680) <= \<const0>\;
  LOCKSTEP_Out(681) <= \<const0>\;
  LOCKSTEP_Out(682) <= \<const0>\;
  LOCKSTEP_Out(683) <= \<const0>\;
  LOCKSTEP_Out(684) <= \<const0>\;
  LOCKSTEP_Out(685) <= \<const0>\;
  LOCKSTEP_Out(686) <= \<const0>\;
  LOCKSTEP_Out(687) <= \<const0>\;
  LOCKSTEP_Out(688) <= \<const0>\;
  LOCKSTEP_Out(689) <= \<const0>\;
  LOCKSTEP_Out(690) <= \<const0>\;
  LOCKSTEP_Out(691) <= \<const0>\;
  LOCKSTEP_Out(692) <= \<const0>\;
  LOCKSTEP_Out(693) <= \<const0>\;
  LOCKSTEP_Out(694) <= \<const0>\;
  LOCKSTEP_Out(695) <= \<const0>\;
  LOCKSTEP_Out(696) <= \<const0>\;
  LOCKSTEP_Out(697) <= \<const0>\;
  LOCKSTEP_Out(698) <= \<const0>\;
  LOCKSTEP_Out(699) <= \<const0>\;
  LOCKSTEP_Out(700) <= \<const0>\;
  LOCKSTEP_Out(701) <= \<const0>\;
  LOCKSTEP_Out(702) <= \<const0>\;
  LOCKSTEP_Out(703) <= \<const0>\;
  LOCKSTEP_Out(704) <= \<const0>\;
  LOCKSTEP_Out(705) <= \^lockstep_out\(542);
  LOCKSTEP_Out(706) <= \<const0>\;
  LOCKSTEP_Out(707) <= \<const0>\;
  LOCKSTEP_Out(708) <= \^lockstep_out\(542);
  LOCKSTEP_Out(709) <= \<const0>\;
  LOCKSTEP_Out(710) <= \<const0>\;
  LOCKSTEP_Out(711) <= \<const0>\;
  LOCKSTEP_Out(712) <= \^lockstep_out\(542);
  LOCKSTEP_Out(713) <= \^lockstep_out\(542);
  LOCKSTEP_Out(714) <= \<const0>\;
  LOCKSTEP_Out(715) <= \<const0>\;
  LOCKSTEP_Out(716) <= \<const0>\;
  LOCKSTEP_Out(717) <= \^lockstep_out\(542);
  LOCKSTEP_Out(718) <= \<const0>\;
  LOCKSTEP_Out(719) <= \<const0>\;
  LOCKSTEP_Out(720) <= \<const0>\;
  LOCKSTEP_Out(721) <= \^lockstep_out\(721);
  LOCKSTEP_Out(722) <= \^lockstep_out\(542);
  LOCKSTEP_Out(723) <= \<const0>\;
  LOCKSTEP_Out(724) <= \<const0>\;
  LOCKSTEP_Out(725) <= \<const0>\;
  LOCKSTEP_Out(726) <= \<const0>\;
  LOCKSTEP_Out(727) <= \<const0>\;
  LOCKSTEP_Out(728) <= \<const0>\;
  LOCKSTEP_Out(729) <= \<const0>\;
  LOCKSTEP_Out(730) <= \<const0>\;
  LOCKSTEP_Out(731) <= \<const0>\;
  LOCKSTEP_Out(732) <= \<const0>\;
  LOCKSTEP_Out(733) <= \<const0>\;
  LOCKSTEP_Out(734) <= \<const0>\;
  LOCKSTEP_Out(735) <= \<const0>\;
  LOCKSTEP_Out(736) <= \<const0>\;
  LOCKSTEP_Out(737) <= \<const0>\;
  LOCKSTEP_Out(738) <= \<const0>\;
  LOCKSTEP_Out(739) <= \<const0>\;
  LOCKSTEP_Out(740) <= \<const0>\;
  LOCKSTEP_Out(741) <= \<const0>\;
  LOCKSTEP_Out(742) <= \<const0>\;
  LOCKSTEP_Out(743) <= \<const0>\;
  LOCKSTEP_Out(744) <= \<const0>\;
  LOCKSTEP_Out(745) <= \<const0>\;
  LOCKSTEP_Out(746) <= \<const0>\;
  LOCKSTEP_Out(747) <= \<const0>\;
  LOCKSTEP_Out(748) <= \<const0>\;
  LOCKSTEP_Out(749) <= \<const0>\;
  LOCKSTEP_Out(750) <= \<const0>\;
  LOCKSTEP_Out(751) <= \<const0>\;
  LOCKSTEP_Out(752) <= \<const0>\;
  LOCKSTEP_Out(753) <= \<const0>\;
  LOCKSTEP_Out(754) <= \<const0>\;
  LOCKSTEP_Out(755) <= \<const0>\;
  LOCKSTEP_Out(756) <= \<const0>\;
  LOCKSTEP_Out(757) <= \<const0>\;
  LOCKSTEP_Out(758) <= \<const0>\;
  LOCKSTEP_Out(759) <= \<const0>\;
  LOCKSTEP_Out(760) <= \<const0>\;
  LOCKSTEP_Out(761) <= \<const0>\;
  LOCKSTEP_Out(762) <= \<const0>\;
  LOCKSTEP_Out(763) <= \<const0>\;
  LOCKSTEP_Out(764) <= \<const0>\;
  LOCKSTEP_Out(765) <= \<const0>\;
  LOCKSTEP_Out(766) <= \<const0>\;
  LOCKSTEP_Out(767) <= \<const0>\;
  LOCKSTEP_Out(768) <= \<const0>\;
  LOCKSTEP_Out(769) <= \<const0>\;
  LOCKSTEP_Out(770) <= \<const0>\;
  LOCKSTEP_Out(771) <= \<const0>\;
  LOCKSTEP_Out(772) <= \<const0>\;
  LOCKSTEP_Out(773) <= \<const0>\;
  LOCKSTEP_Out(774) <= \<const0>\;
  LOCKSTEP_Out(775) <= \<const0>\;
  LOCKSTEP_Out(776) <= \<const0>\;
  LOCKSTEP_Out(777) <= \<const0>\;
  LOCKSTEP_Out(778) <= \<const0>\;
  LOCKSTEP_Out(779) <= \<const0>\;
  LOCKSTEP_Out(780) <= \<const0>\;
  LOCKSTEP_Out(781) <= \<const0>\;
  LOCKSTEP_Out(782) <= \<const0>\;
  LOCKSTEP_Out(783) <= \<const0>\;
  LOCKSTEP_Out(784) <= \<const0>\;
  LOCKSTEP_Out(785) <= \<const0>\;
  LOCKSTEP_Out(786) <= \<const0>\;
  LOCKSTEP_Out(787) <= \<const0>\;
  LOCKSTEP_Out(788) <= \<const0>\;
  LOCKSTEP_Out(789) <= \<const0>\;
  LOCKSTEP_Out(790) <= \<const0>\;
  LOCKSTEP_Out(791) <= \<const0>\;
  LOCKSTEP_Out(792) <= \<const0>\;
  LOCKSTEP_Out(793) <= \<const0>\;
  LOCKSTEP_Out(794) <= \<const0>\;
  LOCKSTEP_Out(795) <= \<const0>\;
  LOCKSTEP_Out(796) <= \<const0>\;
  LOCKSTEP_Out(797) <= \<const0>\;
  LOCKSTEP_Out(798) <= \<const0>\;
  LOCKSTEP_Out(799) <= \<const0>\;
  LOCKSTEP_Out(800) <= \<const0>\;
  LOCKSTEP_Out(801) <= \<const0>\;
  LOCKSTEP_Out(802) <= \<const0>\;
  LOCKSTEP_Out(803) <= \<const0>\;
  LOCKSTEP_Out(804) <= \<const0>\;
  LOCKSTEP_Out(805) <= \<const0>\;
  LOCKSTEP_Out(806) <= \<const0>\;
  LOCKSTEP_Out(807) <= \<const0>\;
  LOCKSTEP_Out(808) <= \<const0>\;
  LOCKSTEP_Out(809) <= \<const0>\;
  LOCKSTEP_Out(810) <= \<const0>\;
  LOCKSTEP_Out(811) <= \<const0>\;
  LOCKSTEP_Out(812) <= \<const0>\;
  LOCKSTEP_Out(813) <= \<const0>\;
  LOCKSTEP_Out(814) <= \<const0>\;
  LOCKSTEP_Out(815) <= \<const0>\;
  LOCKSTEP_Out(816) <= \<const0>\;
  LOCKSTEP_Out(817) <= \<const0>\;
  LOCKSTEP_Out(818) <= \<const0>\;
  LOCKSTEP_Out(819) <= \<const0>\;
  LOCKSTEP_Out(820) <= \<const0>\;
  LOCKSTEP_Out(821) <= \<const0>\;
  LOCKSTEP_Out(822) <= \<const0>\;
  LOCKSTEP_Out(823) <= \<const0>\;
  LOCKSTEP_Out(824) <= \<const0>\;
  LOCKSTEP_Out(825) <= \<const0>\;
  LOCKSTEP_Out(826) <= \<const0>\;
  LOCKSTEP_Out(827) <= \<const0>\;
  LOCKSTEP_Out(828) <= \<const0>\;
  LOCKSTEP_Out(829) <= \<const0>\;
  LOCKSTEP_Out(830) <= \<const0>\;
  LOCKSTEP_Out(831) <= \<const0>\;
  LOCKSTEP_Out(832) <= \<const0>\;
  LOCKSTEP_Out(833) <= \<const0>\;
  LOCKSTEP_Out(834) <= \<const0>\;
  LOCKSTEP_Out(835) <= \<const0>\;
  LOCKSTEP_Out(836) <= \<const0>\;
  LOCKSTEP_Out(837) <= \<const0>\;
  LOCKSTEP_Out(838) <= \<const0>\;
  LOCKSTEP_Out(839) <= \<const0>\;
  LOCKSTEP_Out(840) <= \<const0>\;
  LOCKSTEP_Out(841) <= \<const0>\;
  LOCKSTEP_Out(842) <= \<const0>\;
  LOCKSTEP_Out(843) <= \<const0>\;
  LOCKSTEP_Out(844) <= \<const0>\;
  LOCKSTEP_Out(845) <= \<const0>\;
  LOCKSTEP_Out(846) <= \<const0>\;
  LOCKSTEP_Out(847) <= \<const0>\;
  LOCKSTEP_Out(848) <= \<const0>\;
  LOCKSTEP_Out(849) <= \<const0>\;
  LOCKSTEP_Out(850) <= \<const0>\;
  LOCKSTEP_Out(851) <= \<const0>\;
  LOCKSTEP_Out(852) <= \<const0>\;
  LOCKSTEP_Out(853) <= \<const0>\;
  LOCKSTEP_Out(854) <= \<const0>\;
  LOCKSTEP_Out(855) <= \<const0>\;
  LOCKSTEP_Out(856) <= \<const0>\;
  LOCKSTEP_Out(857) <= \<const0>\;
  LOCKSTEP_Out(858) <= \<const0>\;
  LOCKSTEP_Out(859) <= \<const0>\;
  LOCKSTEP_Out(860) <= \<const0>\;
  LOCKSTEP_Out(861) <= \<const0>\;
  LOCKSTEP_Out(862) <= \<const0>\;
  LOCKSTEP_Out(863) <= \<const0>\;
  LOCKSTEP_Out(864) <= \<const0>\;
  LOCKSTEP_Out(865) <= \<const0>\;
  LOCKSTEP_Out(866) <= \<const0>\;
  LOCKSTEP_Out(867) <= \<const0>\;
  LOCKSTEP_Out(868) <= \<const0>\;
  LOCKSTEP_Out(869) <= \<const0>\;
  LOCKSTEP_Out(870) <= \<const0>\;
  LOCKSTEP_Out(871) <= \<const0>\;
  LOCKSTEP_Out(872) <= \<const0>\;
  LOCKSTEP_Out(873) <= \<const0>\;
  LOCKSTEP_Out(874) <= \<const0>\;
  LOCKSTEP_Out(875) <= \<const0>\;
  LOCKSTEP_Out(876) <= \<const0>\;
  LOCKSTEP_Out(877) <= \<const0>\;
  LOCKSTEP_Out(878) <= \<const0>\;
  LOCKSTEP_Out(879) <= \<const0>\;
  LOCKSTEP_Out(880) <= \<const0>\;
  LOCKSTEP_Out(881) <= \<const0>\;
  LOCKSTEP_Out(882) <= \<const0>\;
  LOCKSTEP_Out(883) <= \<const0>\;
  LOCKSTEP_Out(884) <= \<const0>\;
  LOCKSTEP_Out(885) <= \<const0>\;
  LOCKSTEP_Out(886) <= \<const0>\;
  LOCKSTEP_Out(887) <= \<const0>\;
  LOCKSTEP_Out(888) <= \<const0>\;
  LOCKSTEP_Out(889) <= \<const0>\;
  LOCKSTEP_Out(890) <= \<const0>\;
  LOCKSTEP_Out(891) <= \<const0>\;
  LOCKSTEP_Out(892) <= \<const0>\;
  LOCKSTEP_Out(893) <= \<const0>\;
  LOCKSTEP_Out(894) <= \<const0>\;
  LOCKSTEP_Out(895) <= \<const0>\;
  LOCKSTEP_Out(896) <= \<const0>\;
  LOCKSTEP_Out(897) <= \<const0>\;
  LOCKSTEP_Out(898) <= \<const0>\;
  LOCKSTEP_Out(899) <= \<const0>\;
  LOCKSTEP_Out(900) <= \<const0>\;
  LOCKSTEP_Out(901) <= \<const0>\;
  LOCKSTEP_Out(902) <= \<const0>\;
  LOCKSTEP_Out(903) <= \<const0>\;
  LOCKSTEP_Out(904) <= \<const0>\;
  LOCKSTEP_Out(905) <= \<const0>\;
  LOCKSTEP_Out(906) <= \<const0>\;
  LOCKSTEP_Out(907) <= \<const0>\;
  LOCKSTEP_Out(908) <= \<const0>\;
  LOCKSTEP_Out(909) <= \<const0>\;
  LOCKSTEP_Out(910) <= \<const0>\;
  LOCKSTEP_Out(911) <= \<const0>\;
  LOCKSTEP_Out(912) <= \<const0>\;
  LOCKSTEP_Out(913) <= \<const0>\;
  LOCKSTEP_Out(914) <= \<const0>\;
  LOCKSTEP_Out(915) <= \<const0>\;
  LOCKSTEP_Out(916) <= \<const0>\;
  LOCKSTEP_Out(917) <= \<const0>\;
  LOCKSTEP_Out(918) <= \<const0>\;
  LOCKSTEP_Out(919) <= \<const0>\;
  LOCKSTEP_Out(920) <= \<const0>\;
  LOCKSTEP_Out(921) <= \<const0>\;
  LOCKSTEP_Out(922) <= \<const0>\;
  LOCKSTEP_Out(923) <= \<const0>\;
  LOCKSTEP_Out(924) <= \<const0>\;
  LOCKSTEP_Out(925) <= \<const0>\;
  LOCKSTEP_Out(926) <= \<const0>\;
  LOCKSTEP_Out(927) <= \<const0>\;
  LOCKSTEP_Out(928) <= \<const0>\;
  LOCKSTEP_Out(929) <= \<const0>\;
  LOCKSTEP_Out(930) <= \<const0>\;
  LOCKSTEP_Out(931) <= \<const0>\;
  LOCKSTEP_Out(932) <= \<const0>\;
  LOCKSTEP_Out(933) <= \<const0>\;
  LOCKSTEP_Out(934) <= \<const0>\;
  LOCKSTEP_Out(935) <= \<const0>\;
  LOCKSTEP_Out(936) <= \<const0>\;
  LOCKSTEP_Out(937) <= \<const0>\;
  LOCKSTEP_Out(938) <= \<const0>\;
  LOCKSTEP_Out(939) <= \<const0>\;
  LOCKSTEP_Out(940) <= \<const0>\;
  LOCKSTEP_Out(941) <= \<const0>\;
  LOCKSTEP_Out(942) <= \<const0>\;
  LOCKSTEP_Out(943) <= \<const0>\;
  LOCKSTEP_Out(944) <= \<const0>\;
  LOCKSTEP_Out(945) <= \<const0>\;
  LOCKSTEP_Out(946) <= \<const0>\;
  LOCKSTEP_Out(947) <= \<const0>\;
  LOCKSTEP_Out(948) <= \<const0>\;
  LOCKSTEP_Out(949) <= \<const0>\;
  LOCKSTEP_Out(950) <= \<const0>\;
  LOCKSTEP_Out(951) <= \<const0>\;
  LOCKSTEP_Out(952) <= \<const0>\;
  LOCKSTEP_Out(953) <= \<const0>\;
  LOCKSTEP_Out(954) <= \<const0>\;
  LOCKSTEP_Out(955) <= \<const0>\;
  LOCKSTEP_Out(956) <= \<const0>\;
  LOCKSTEP_Out(957) <= \<const0>\;
  LOCKSTEP_Out(958) <= \<const0>\;
  LOCKSTEP_Out(959) <= \<const0>\;
  LOCKSTEP_Out(960) <= \<const0>\;
  LOCKSTEP_Out(961) <= \<const0>\;
  LOCKSTEP_Out(962) <= \<const0>\;
  LOCKSTEP_Out(963) <= \<const0>\;
  LOCKSTEP_Out(964) <= \<const0>\;
  LOCKSTEP_Out(965) <= \<const0>\;
  LOCKSTEP_Out(966) <= \<const0>\;
  LOCKSTEP_Out(967) <= \<const0>\;
  LOCKSTEP_Out(968) <= \<const0>\;
  LOCKSTEP_Out(969) <= \<const0>\;
  LOCKSTEP_Out(970) <= \<const0>\;
  LOCKSTEP_Out(971) <= \<const0>\;
  LOCKSTEP_Out(972) <= \<const0>\;
  LOCKSTEP_Out(973) <= \<const0>\;
  LOCKSTEP_Out(974) <= \<const0>\;
  LOCKSTEP_Out(975) <= \<const0>\;
  LOCKSTEP_Out(976) <= \<const0>\;
  LOCKSTEP_Out(977) <= \<const0>\;
  LOCKSTEP_Out(978) <= \<const0>\;
  LOCKSTEP_Out(979) <= \<const0>\;
  LOCKSTEP_Out(980) <= \<const0>\;
  LOCKSTEP_Out(981) <= \<const0>\;
  LOCKSTEP_Out(982) <= \<const0>\;
  LOCKSTEP_Out(983) <= \<const0>\;
  LOCKSTEP_Out(984) <= \<const0>\;
  LOCKSTEP_Out(985) <= \<const0>\;
  LOCKSTEP_Out(986) <= \<const0>\;
  LOCKSTEP_Out(987) <= \<const0>\;
  LOCKSTEP_Out(988) <= \<const0>\;
  LOCKSTEP_Out(989) <= \<const0>\;
  LOCKSTEP_Out(990) <= \<const0>\;
  LOCKSTEP_Out(991) <= \<const0>\;
  LOCKSTEP_Out(992) <= \<const0>\;
  LOCKSTEP_Out(993) <= \<const0>\;
  LOCKSTEP_Out(994) <= \<const0>\;
  LOCKSTEP_Out(995) <= \<const0>\;
  LOCKSTEP_Out(996) <= \<const0>\;
  LOCKSTEP_Out(997) <= \<const0>\;
  LOCKSTEP_Out(998) <= \<const0>\;
  LOCKSTEP_Out(999) <= \<const0>\;
  LOCKSTEP_Out(1000) <= \<const0>\;
  LOCKSTEP_Out(1001) <= \<const0>\;
  LOCKSTEP_Out(1002) <= \<const0>\;
  LOCKSTEP_Out(1003) <= \<const0>\;
  LOCKSTEP_Out(1004) <= \<const0>\;
  LOCKSTEP_Out(1005) <= \<const0>\;
  LOCKSTEP_Out(1006) <= \<const0>\;
  LOCKSTEP_Out(1007) <= \<const0>\;
  LOCKSTEP_Out(1008) <= \<const0>\;
  LOCKSTEP_Out(1009) <= \<const0>\;
  LOCKSTEP_Out(1010) <= \<const0>\;
  LOCKSTEP_Out(1011) <= \<const0>\;
  LOCKSTEP_Out(1012) <= \<const0>\;
  LOCKSTEP_Out(1013) <= \<const0>\;
  LOCKSTEP_Out(1014) <= \<const0>\;
  LOCKSTEP_Out(1015) <= \<const0>\;
  LOCKSTEP_Out(1016) <= \<const0>\;
  LOCKSTEP_Out(1017) <= \<const0>\;
  LOCKSTEP_Out(1018) <= \<const0>\;
  LOCKSTEP_Out(1019) <= \<const0>\;
  LOCKSTEP_Out(1020) <= \<const0>\;
  LOCKSTEP_Out(1021) <= \<const0>\;
  LOCKSTEP_Out(1022) <= \<const0>\;
  LOCKSTEP_Out(1023) <= \<const0>\;
  LOCKSTEP_Out(1024) <= \<const0>\;
  LOCKSTEP_Out(1025) <= \<const0>\;
  LOCKSTEP_Out(1026) <= \<const0>\;
  LOCKSTEP_Out(1027) <= \<const0>\;
  LOCKSTEP_Out(1028) <= \<const0>\;
  LOCKSTEP_Out(1029) <= \<const0>\;
  LOCKSTEP_Out(1030) <= \<const0>\;
  LOCKSTEP_Out(1031) <= \<const0>\;
  LOCKSTEP_Out(1032) <= \<const0>\;
  LOCKSTEP_Out(1033) <= \<const0>\;
  LOCKSTEP_Out(1034) <= \<const0>\;
  LOCKSTEP_Out(1035) <= \<const0>\;
  LOCKSTEP_Out(1036) <= \<const0>\;
  LOCKSTEP_Out(1037) <= \<const0>\;
  LOCKSTEP_Out(1038) <= \<const0>\;
  LOCKSTEP_Out(1039) <= \<const0>\;
  LOCKSTEP_Out(1040) <= \<const0>\;
  LOCKSTEP_Out(1041) <= \<const0>\;
  LOCKSTEP_Out(1042) <= \<const0>\;
  LOCKSTEP_Out(1043) <= \<const0>\;
  LOCKSTEP_Out(1044) <= \<const0>\;
  LOCKSTEP_Out(1045) <= \<const0>\;
  LOCKSTEP_Out(1046) <= \<const0>\;
  LOCKSTEP_Out(1047) <= \<const0>\;
  LOCKSTEP_Out(1048) <= \<const0>\;
  LOCKSTEP_Out(1049) <= \<const0>\;
  LOCKSTEP_Out(1050) <= \<const0>\;
  LOCKSTEP_Out(1051) <= \<const0>\;
  LOCKSTEP_Out(1052) <= \<const0>\;
  LOCKSTEP_Out(1053) <= \<const0>\;
  LOCKSTEP_Out(1054) <= \<const0>\;
  LOCKSTEP_Out(1055) <= \<const0>\;
  LOCKSTEP_Out(1056) <= \<const0>\;
  LOCKSTEP_Out(1057) <= \<const0>\;
  LOCKSTEP_Out(1058) <= \<const0>\;
  LOCKSTEP_Out(1059) <= \<const0>\;
  LOCKSTEP_Out(1060) <= \<const0>\;
  LOCKSTEP_Out(1061) <= \<const0>\;
  LOCKSTEP_Out(1062) <= \<const0>\;
  LOCKSTEP_Out(1063) <= \<const0>\;
  LOCKSTEP_Out(1064) <= \<const0>\;
  LOCKSTEP_Out(1065) <= \<const0>\;
  LOCKSTEP_Out(1066) <= \<const0>\;
  LOCKSTEP_Out(1067) <= \<const0>\;
  LOCKSTEP_Out(1068) <= \<const0>\;
  LOCKSTEP_Out(1069) <= \<const0>\;
  LOCKSTEP_Out(1070) <= \<const0>\;
  LOCKSTEP_Out(1071) <= \<const0>\;
  LOCKSTEP_Out(1072) <= \<const0>\;
  LOCKSTEP_Out(1073) <= \<const0>\;
  LOCKSTEP_Out(1074) <= \<const0>\;
  LOCKSTEP_Out(1075) <= \<const0>\;
  LOCKSTEP_Out(1076) <= \<const0>\;
  LOCKSTEP_Out(1077) <= \<const0>\;
  LOCKSTEP_Out(1078) <= \<const0>\;
  LOCKSTEP_Out(1079) <= \<const0>\;
  LOCKSTEP_Out(1080) <= \<const0>\;
  LOCKSTEP_Out(1081) <= \<const0>\;
  LOCKSTEP_Out(1082) <= \<const0>\;
  LOCKSTEP_Out(1083) <= \<const0>\;
  LOCKSTEP_Out(1084) <= \<const0>\;
  LOCKSTEP_Out(1085) <= \<const0>\;
  LOCKSTEP_Out(1086) <= \<const0>\;
  LOCKSTEP_Out(1087) <= \<const0>\;
  LOCKSTEP_Out(1088) <= \<const0>\;
  LOCKSTEP_Out(1089) <= \<const0>\;
  LOCKSTEP_Out(1090) <= \<const0>\;
  LOCKSTEP_Out(1091) <= \<const0>\;
  LOCKSTEP_Out(1092) <= \<const0>\;
  LOCKSTEP_Out(1093) <= \<const0>\;
  LOCKSTEP_Out(1094) <= \<const0>\;
  LOCKSTEP_Out(1095) <= \<const0>\;
  LOCKSTEP_Out(1096) <= \<const0>\;
  LOCKSTEP_Out(1097) <= \<const0>\;
  LOCKSTEP_Out(1098) <= \<const0>\;
  LOCKSTEP_Out(1099) <= \<const0>\;
  LOCKSTEP_Out(1100) <= \<const0>\;
  LOCKSTEP_Out(1101) <= \<const0>\;
  LOCKSTEP_Out(1102) <= \<const0>\;
  LOCKSTEP_Out(1103) <= \<const0>\;
  LOCKSTEP_Out(1104) <= \<const0>\;
  LOCKSTEP_Out(1105) <= \<const0>\;
  LOCKSTEP_Out(1106) <= \<const0>\;
  LOCKSTEP_Out(1107) <= \<const0>\;
  LOCKSTEP_Out(1108) <= \<const0>\;
  LOCKSTEP_Out(1109) <= \<const0>\;
  LOCKSTEP_Out(1110) <= \<const0>\;
  LOCKSTEP_Out(1111) <= \<const0>\;
  LOCKSTEP_Out(1112) <= \<const0>\;
  LOCKSTEP_Out(1113) <= \<const0>\;
  LOCKSTEP_Out(1114) <= \<const0>\;
  LOCKSTEP_Out(1115) <= \<const0>\;
  LOCKSTEP_Out(1116) <= \<const0>\;
  LOCKSTEP_Out(1117) <= \<const0>\;
  LOCKSTEP_Out(1118) <= \<const0>\;
  LOCKSTEP_Out(1119) <= \<const0>\;
  LOCKSTEP_Out(1120) <= \<const0>\;
  LOCKSTEP_Out(1121) <= \<const0>\;
  LOCKSTEP_Out(1122) <= \<const0>\;
  LOCKSTEP_Out(1123) <= \<const0>\;
  LOCKSTEP_Out(1124) <= \<const0>\;
  LOCKSTEP_Out(1125) <= \<const0>\;
  LOCKSTEP_Out(1126) <= \<const0>\;
  LOCKSTEP_Out(1127) <= \<const0>\;
  LOCKSTEP_Out(1128) <= \<const0>\;
  LOCKSTEP_Out(1129) <= \<const0>\;
  LOCKSTEP_Out(1130) <= \<const0>\;
  LOCKSTEP_Out(1131) <= \<const0>\;
  LOCKSTEP_Out(1132) <= \<const0>\;
  LOCKSTEP_Out(1133) <= \<const0>\;
  LOCKSTEP_Out(1134) <= \<const0>\;
  LOCKSTEP_Out(1135) <= \<const0>\;
  LOCKSTEP_Out(1136) <= \<const0>\;
  LOCKSTEP_Out(1137) <= \<const0>\;
  LOCKSTEP_Out(1138) <= \<const0>\;
  LOCKSTEP_Out(1139) <= \<const0>\;
  LOCKSTEP_Out(1140) <= \<const0>\;
  LOCKSTEP_Out(1141) <= \<const0>\;
  LOCKSTEP_Out(1142) <= \<const0>\;
  LOCKSTEP_Out(1143) <= \<const0>\;
  LOCKSTEP_Out(1144) <= \<const0>\;
  LOCKSTEP_Out(1145) <= \<const0>\;
  LOCKSTEP_Out(1146) <= \<const0>\;
  LOCKSTEP_Out(1147) <= \<const0>\;
  LOCKSTEP_Out(1148) <= \<const0>\;
  LOCKSTEP_Out(1149) <= \<const0>\;
  LOCKSTEP_Out(1150) <= \<const0>\;
  LOCKSTEP_Out(1151) <= \<const0>\;
  LOCKSTEP_Out(1152) <= \<const0>\;
  LOCKSTEP_Out(1153) <= \<const0>\;
  LOCKSTEP_Out(1154) <= \<const0>\;
  LOCKSTEP_Out(1155) <= \<const0>\;
  LOCKSTEP_Out(1156) <= \<const0>\;
  LOCKSTEP_Out(1157) <= \<const0>\;
  LOCKSTEP_Out(1158) <= \<const0>\;
  LOCKSTEP_Out(1159) <= \<const0>\;
  LOCKSTEP_Out(1160) <= \<const0>\;
  LOCKSTEP_Out(1161) <= \<const0>\;
  LOCKSTEP_Out(1162) <= \<const0>\;
  LOCKSTEP_Out(1163) <= \<const0>\;
  LOCKSTEP_Out(1164) <= \<const0>\;
  LOCKSTEP_Out(1165) <= \<const0>\;
  LOCKSTEP_Out(1166) <= \<const0>\;
  LOCKSTEP_Out(1167) <= \<const0>\;
  LOCKSTEP_Out(1168) <= \<const0>\;
  LOCKSTEP_Out(1169) <= \<const0>\;
  LOCKSTEP_Out(1170) <= \<const0>\;
  LOCKSTEP_Out(1171) <= \<const0>\;
  LOCKSTEP_Out(1172) <= \<const0>\;
  LOCKSTEP_Out(1173) <= \<const0>\;
  LOCKSTEP_Out(1174) <= \<const0>\;
  LOCKSTEP_Out(1175) <= \<const0>\;
  LOCKSTEP_Out(1176) <= \<const0>\;
  LOCKSTEP_Out(1177) <= \<const0>\;
  LOCKSTEP_Out(1178) <= \<const0>\;
  LOCKSTEP_Out(1179) <= \<const0>\;
  LOCKSTEP_Out(1180) <= \<const0>\;
  LOCKSTEP_Out(1181) <= \<const0>\;
  LOCKSTEP_Out(1182) <= \<const0>\;
  LOCKSTEP_Out(1183) <= \<const0>\;
  LOCKSTEP_Out(1184) <= \<const0>\;
  LOCKSTEP_Out(1185) <= \<const0>\;
  LOCKSTEP_Out(1186) <= \<const0>\;
  LOCKSTEP_Out(1187) <= \<const0>\;
  LOCKSTEP_Out(1188) <= \<const0>\;
  LOCKSTEP_Out(1189) <= \<const0>\;
  LOCKSTEP_Out(1190) <= \<const0>\;
  LOCKSTEP_Out(1191) <= \<const0>\;
  LOCKSTEP_Out(1192) <= \<const0>\;
  LOCKSTEP_Out(1193) <= \<const0>\;
  LOCKSTEP_Out(1194) <= \<const0>\;
  LOCKSTEP_Out(1195) <= \<const0>\;
  LOCKSTEP_Out(1196) <= \<const0>\;
  LOCKSTEP_Out(1197) <= \<const0>\;
  LOCKSTEP_Out(1198) <= \<const0>\;
  LOCKSTEP_Out(1199) <= \<const0>\;
  LOCKSTEP_Out(1200) <= \<const0>\;
  LOCKSTEP_Out(1201) <= \<const0>\;
  LOCKSTEP_Out(1202) <= \<const0>\;
  LOCKSTEP_Out(1203) <= \<const0>\;
  LOCKSTEP_Out(1204) <= \<const0>\;
  LOCKSTEP_Out(1205) <= \<const0>\;
  LOCKSTEP_Out(1206) <= \<const0>\;
  LOCKSTEP_Out(1207) <= \<const0>\;
  LOCKSTEP_Out(1208) <= \<const0>\;
  LOCKSTEP_Out(1209) <= \<const0>\;
  LOCKSTEP_Out(1210) <= \<const0>\;
  LOCKSTEP_Out(1211) <= \<const0>\;
  LOCKSTEP_Out(1212) <= \<const0>\;
  LOCKSTEP_Out(1213) <= \<const0>\;
  LOCKSTEP_Out(1214) <= \<const0>\;
  LOCKSTEP_Out(1215) <= \<const0>\;
  LOCKSTEP_Out(1216) <= \<const0>\;
  LOCKSTEP_Out(1217) <= \<const0>\;
  LOCKSTEP_Out(1218) <= \<const0>\;
  LOCKSTEP_Out(1219) <= \<const0>\;
  LOCKSTEP_Out(1220) <= \<const0>\;
  LOCKSTEP_Out(1221) <= \<const0>\;
  LOCKSTEP_Out(1222) <= \<const0>\;
  LOCKSTEP_Out(1223) <= \<const0>\;
  LOCKSTEP_Out(1224) <= \<const0>\;
  LOCKSTEP_Out(1225) <= \<const0>\;
  LOCKSTEP_Out(1226) <= \<const0>\;
  LOCKSTEP_Out(1227) <= \<const0>\;
  LOCKSTEP_Out(1228) <= \<const0>\;
  LOCKSTEP_Out(1229) <= \<const0>\;
  LOCKSTEP_Out(1230) <= \<const0>\;
  LOCKSTEP_Out(1231) <= \<const0>\;
  LOCKSTEP_Out(1232) <= \<const0>\;
  LOCKSTEP_Out(1233) <= \<const0>\;
  LOCKSTEP_Out(1234) <= \<const0>\;
  LOCKSTEP_Out(1235) <= \<const0>\;
  LOCKSTEP_Out(1236) <= \<const0>\;
  LOCKSTEP_Out(1237) <= \<const0>\;
  LOCKSTEP_Out(1238) <= \<const0>\;
  LOCKSTEP_Out(1239) <= \<const0>\;
  LOCKSTEP_Out(1240) <= \<const0>\;
  LOCKSTEP_Out(1241) <= \<const0>\;
  LOCKSTEP_Out(1242) <= \<const0>\;
  LOCKSTEP_Out(1243) <= \<const0>\;
  LOCKSTEP_Out(1244) <= \<const0>\;
  LOCKSTEP_Out(1245) <= \<const0>\;
  LOCKSTEP_Out(1246) <= \<const0>\;
  LOCKSTEP_Out(1247) <= \<const0>\;
  LOCKSTEP_Out(1248) <= \<const0>\;
  LOCKSTEP_Out(1249) <= \<const0>\;
  LOCKSTEP_Out(1250) <= \<const0>\;
  LOCKSTEP_Out(1251) <= \<const0>\;
  LOCKSTEP_Out(1252) <= \<const0>\;
  LOCKSTEP_Out(1253) <= \<const0>\;
  LOCKSTEP_Out(1254) <= \<const0>\;
  LOCKSTEP_Out(1255) <= \<const0>\;
  LOCKSTEP_Out(1256) <= \<const0>\;
  LOCKSTEP_Out(1257) <= \<const0>\;
  LOCKSTEP_Out(1258) <= \<const0>\;
  LOCKSTEP_Out(1259) <= \<const0>\;
  LOCKSTEP_Out(1260) <= \<const0>\;
  LOCKSTEP_Out(1261) <= \<const0>\;
  LOCKSTEP_Out(1262) <= \<const0>\;
  LOCKSTEP_Out(1263) <= \<const0>\;
  LOCKSTEP_Out(1264) <= \<const0>\;
  LOCKSTEP_Out(1265) <= \<const0>\;
  LOCKSTEP_Out(1266) <= \<const0>\;
  LOCKSTEP_Out(1267) <= \<const0>\;
  LOCKSTEP_Out(1268) <= \<const0>\;
  LOCKSTEP_Out(1269) <= \<const0>\;
  LOCKSTEP_Out(1270) <= \<const0>\;
  LOCKSTEP_Out(1271) <= \<const0>\;
  LOCKSTEP_Out(1272) <= \<const0>\;
  LOCKSTEP_Out(1273) <= \<const0>\;
  LOCKSTEP_Out(1274) <= \<const0>\;
  LOCKSTEP_Out(1275) <= \<const0>\;
  LOCKSTEP_Out(1276) <= \<const0>\;
  LOCKSTEP_Out(1277) <= \<const0>\;
  LOCKSTEP_Out(1278) <= \<const0>\;
  LOCKSTEP_Out(1279) <= \<const0>\;
  LOCKSTEP_Out(1280) <= \<const0>\;
  LOCKSTEP_Out(1281) <= \<const0>\;
  LOCKSTEP_Out(1282) <= \<const0>\;
  LOCKSTEP_Out(1283) <= \<const0>\;
  LOCKSTEP_Out(1284) <= \<const0>\;
  LOCKSTEP_Out(1285) <= \<const0>\;
  LOCKSTEP_Out(1286) <= \<const0>\;
  LOCKSTEP_Out(1287) <= \<const0>\;
  LOCKSTEP_Out(1288) <= \<const0>\;
  LOCKSTEP_Out(1289) <= \<const0>\;
  LOCKSTEP_Out(1290) <= \<const0>\;
  LOCKSTEP_Out(1291) <= \<const0>\;
  LOCKSTEP_Out(1292) <= \<const0>\;
  LOCKSTEP_Out(1293) <= \<const0>\;
  LOCKSTEP_Out(1294) <= \<const0>\;
  LOCKSTEP_Out(1295) <= \<const0>\;
  LOCKSTEP_Out(1296) <= \<const0>\;
  LOCKSTEP_Out(1297) <= \<const0>\;
  LOCKSTEP_Out(1298) <= \<const0>\;
  LOCKSTEP_Out(1299) <= \<const0>\;
  LOCKSTEP_Out(1300) <= \<const0>\;
  LOCKSTEP_Out(1301) <= \<const0>\;
  LOCKSTEP_Out(1302) <= \<const0>\;
  LOCKSTEP_Out(1303) <= \<const0>\;
  LOCKSTEP_Out(1304) <= \<const0>\;
  LOCKSTEP_Out(1305) <= \<const0>\;
  LOCKSTEP_Out(1306) <= \<const0>\;
  LOCKSTEP_Out(1307) <= \<const0>\;
  LOCKSTEP_Out(1308) <= \<const0>\;
  LOCKSTEP_Out(1309) <= \<const0>\;
  LOCKSTEP_Out(1310) <= \<const0>\;
  LOCKSTEP_Out(1311) <= \<const0>\;
  LOCKSTEP_Out(1312) <= \<const0>\;
  LOCKSTEP_Out(1313) <= \<const0>\;
  LOCKSTEP_Out(1314) <= \<const0>\;
  LOCKSTEP_Out(1315) <= \<const0>\;
  LOCKSTEP_Out(1316) <= \<const0>\;
  LOCKSTEP_Out(1317) <= \<const0>\;
  LOCKSTEP_Out(1318) <= \<const0>\;
  LOCKSTEP_Out(1319) <= \<const0>\;
  LOCKSTEP_Out(1320) <= \<const0>\;
  LOCKSTEP_Out(1321) <= \<const0>\;
  LOCKSTEP_Out(1322) <= \<const0>\;
  LOCKSTEP_Out(1323) <= \<const0>\;
  LOCKSTEP_Out(1324) <= \<const0>\;
  LOCKSTEP_Out(1325) <= \<const0>\;
  LOCKSTEP_Out(1326) <= \<const0>\;
  LOCKSTEP_Out(1327) <= \<const0>\;
  LOCKSTEP_Out(1328) <= \<const0>\;
  LOCKSTEP_Out(1329) <= \<const0>\;
  LOCKSTEP_Out(1330) <= \<const0>\;
  LOCKSTEP_Out(1331) <= \<const0>\;
  LOCKSTEP_Out(1332) <= \<const0>\;
  LOCKSTEP_Out(1333) <= \<const0>\;
  LOCKSTEP_Out(1334) <= \<const0>\;
  LOCKSTEP_Out(1335) <= \<const0>\;
  LOCKSTEP_Out(1336) <= \<const0>\;
  LOCKSTEP_Out(1337) <= \<const0>\;
  LOCKSTEP_Out(1338) <= \<const0>\;
  LOCKSTEP_Out(1339) <= \<const0>\;
  LOCKSTEP_Out(1340) <= \<const0>\;
  LOCKSTEP_Out(1341) <= \<const0>\;
  LOCKSTEP_Out(1342) <= \<const0>\;
  LOCKSTEP_Out(1343) <= \<const0>\;
  LOCKSTEP_Out(1344) <= \<const0>\;
  LOCKSTEP_Out(1345) <= \<const0>\;
  LOCKSTEP_Out(1346) <= \<const0>\;
  LOCKSTEP_Out(1347) <= \<const0>\;
  LOCKSTEP_Out(1348) <= \<const0>\;
  LOCKSTEP_Out(1349) <= \<const0>\;
  LOCKSTEP_Out(1350) <= \<const0>\;
  LOCKSTEP_Out(1351) <= \<const0>\;
  LOCKSTEP_Out(1352) <= \<const0>\;
  LOCKSTEP_Out(1353) <= \<const0>\;
  LOCKSTEP_Out(1354) <= \<const0>\;
  LOCKSTEP_Out(1355) <= \<const0>\;
  LOCKSTEP_Out(1356) <= \<const0>\;
  LOCKSTEP_Out(1357) <= \<const0>\;
  LOCKSTEP_Out(1358) <= \<const0>\;
  LOCKSTEP_Out(1359) <= \<const0>\;
  LOCKSTEP_Out(1360) <= \<const0>\;
  LOCKSTEP_Out(1361) <= \<const0>\;
  LOCKSTEP_Out(1362) <= \<const0>\;
  LOCKSTEP_Out(1363) <= \<const0>\;
  LOCKSTEP_Out(1364) <= \<const0>\;
  LOCKSTEP_Out(1365) <= \<const0>\;
  LOCKSTEP_Out(1366) <= \<const0>\;
  LOCKSTEP_Out(1367) <= \<const0>\;
  LOCKSTEP_Out(1368) <= \<const0>\;
  LOCKSTEP_Out(1369) <= \<const0>\;
  LOCKSTEP_Out(1370) <= \<const0>\;
  LOCKSTEP_Out(1371) <= \<const0>\;
  LOCKSTEP_Out(1372) <= \<const0>\;
  LOCKSTEP_Out(1373) <= \<const0>\;
  LOCKSTEP_Out(1374) <= \<const0>\;
  LOCKSTEP_Out(1375) <= \<const0>\;
  LOCKSTEP_Out(1376) <= \<const0>\;
  LOCKSTEP_Out(1377) <= \<const0>\;
  LOCKSTEP_Out(1378) <= \<const0>\;
  LOCKSTEP_Out(1379) <= \<const0>\;
  LOCKSTEP_Out(1380) <= \<const0>\;
  LOCKSTEP_Out(1381) <= \<const0>\;
  LOCKSTEP_Out(1382) <= \<const0>\;
  LOCKSTEP_Out(1383) <= \<const0>\;
  LOCKSTEP_Out(1384) <= \<const0>\;
  LOCKSTEP_Out(1385) <= \<const0>\;
  LOCKSTEP_Out(1386) <= \<const0>\;
  LOCKSTEP_Out(1387) <= \<const0>\;
  LOCKSTEP_Out(1388) <= \<const0>\;
  LOCKSTEP_Out(1389) <= \<const0>\;
  LOCKSTEP_Out(1390) <= \<const0>\;
  LOCKSTEP_Out(1391) <= \<const0>\;
  LOCKSTEP_Out(1392) <= \<const0>\;
  LOCKSTEP_Out(1393) <= \<const0>\;
  LOCKSTEP_Out(1394) <= \<const0>\;
  LOCKSTEP_Out(1395) <= \<const0>\;
  LOCKSTEP_Out(1396) <= \<const0>\;
  LOCKSTEP_Out(1397) <= \<const0>\;
  LOCKSTEP_Out(1398) <= \<const0>\;
  LOCKSTEP_Out(1399) <= \<const0>\;
  LOCKSTEP_Out(1400) <= \<const0>\;
  LOCKSTEP_Out(1401) <= \<const0>\;
  LOCKSTEP_Out(1402) <= \<const0>\;
  LOCKSTEP_Out(1403) <= \<const0>\;
  LOCKSTEP_Out(1404) <= \<const0>\;
  LOCKSTEP_Out(1405) <= \<const0>\;
  LOCKSTEP_Out(1406) <= \<const0>\;
  LOCKSTEP_Out(1407) <= \<const0>\;
  LOCKSTEP_Out(1408) <= \<const0>\;
  LOCKSTEP_Out(1409) <= \<const0>\;
  LOCKSTEP_Out(1410) <= \<const0>\;
  LOCKSTEP_Out(1411) <= \<const0>\;
  LOCKSTEP_Out(1412) <= \<const0>\;
  LOCKSTEP_Out(1413) <= \<const0>\;
  LOCKSTEP_Out(1414) <= \<const0>\;
  LOCKSTEP_Out(1415) <= \<const0>\;
  LOCKSTEP_Out(1416) <= \<const0>\;
  LOCKSTEP_Out(1417) <= \<const0>\;
  LOCKSTEP_Out(1418) <= \<const0>\;
  LOCKSTEP_Out(1419) <= \<const0>\;
  LOCKSTEP_Out(1420) <= \<const0>\;
  LOCKSTEP_Out(1421) <= \<const0>\;
  LOCKSTEP_Out(1422) <= \<const0>\;
  LOCKSTEP_Out(1423) <= \<const0>\;
  LOCKSTEP_Out(1424) <= \<const0>\;
  LOCKSTEP_Out(1425) <= \<const0>\;
  LOCKSTEP_Out(1426) <= \<const0>\;
  LOCKSTEP_Out(1427) <= \<const0>\;
  LOCKSTEP_Out(1428) <= \<const0>\;
  LOCKSTEP_Out(1429) <= \<const0>\;
  LOCKSTEP_Out(1430) <= \<const0>\;
  LOCKSTEP_Out(1431) <= \<const0>\;
  LOCKSTEP_Out(1432) <= \<const0>\;
  LOCKSTEP_Out(1433) <= \<const0>\;
  LOCKSTEP_Out(1434) <= \<const0>\;
  LOCKSTEP_Out(1435) <= \<const0>\;
  LOCKSTEP_Out(1436) <= \<const0>\;
  LOCKSTEP_Out(1437) <= \<const0>\;
  LOCKSTEP_Out(1438) <= \<const0>\;
  LOCKSTEP_Out(1439) <= \<const0>\;
  LOCKSTEP_Out(1440) <= \<const0>\;
  LOCKSTEP_Out(1441) <= \<const0>\;
  LOCKSTEP_Out(1442) <= \<const0>\;
  LOCKSTEP_Out(1443) <= \<const0>\;
  LOCKSTEP_Out(1444) <= \<const0>\;
  LOCKSTEP_Out(1445) <= \<const0>\;
  LOCKSTEP_Out(1446) <= \<const0>\;
  LOCKSTEP_Out(1447) <= \<const0>\;
  LOCKSTEP_Out(1448) <= \<const0>\;
  LOCKSTEP_Out(1449) <= \<const0>\;
  LOCKSTEP_Out(1450) <= \<const0>\;
  LOCKSTEP_Out(1451) <= \<const0>\;
  LOCKSTEP_Out(1452) <= \<const0>\;
  LOCKSTEP_Out(1453) <= \<const0>\;
  LOCKSTEP_Out(1454) <= \<const0>\;
  LOCKSTEP_Out(1455) <= \<const0>\;
  LOCKSTEP_Out(1456) <= \<const0>\;
  LOCKSTEP_Out(1457) <= \<const0>\;
  LOCKSTEP_Out(1458) <= \<const0>\;
  LOCKSTEP_Out(1459) <= \<const0>\;
  LOCKSTEP_Out(1460) <= \<const0>\;
  LOCKSTEP_Out(1461) <= \<const0>\;
  LOCKSTEP_Out(1462) <= \<const0>\;
  LOCKSTEP_Out(1463) <= \<const0>\;
  LOCKSTEP_Out(1464) <= \<const0>\;
  LOCKSTEP_Out(1465) <= \<const0>\;
  LOCKSTEP_Out(1466) <= \<const0>\;
  LOCKSTEP_Out(1467) <= \<const0>\;
  LOCKSTEP_Out(1468) <= \<const0>\;
  LOCKSTEP_Out(1469) <= \<const0>\;
  LOCKSTEP_Out(1470) <= \<const0>\;
  LOCKSTEP_Out(1471) <= \<const0>\;
  LOCKSTEP_Out(1472) <= \<const0>\;
  LOCKSTEP_Out(1473) <= \<const0>\;
  LOCKSTEP_Out(1474) <= \<const0>\;
  LOCKSTEP_Out(1475) <= \<const0>\;
  LOCKSTEP_Out(1476) <= \<const0>\;
  LOCKSTEP_Out(1477) <= \<const0>\;
  LOCKSTEP_Out(1478) <= \<const0>\;
  LOCKSTEP_Out(1479) <= \<const0>\;
  LOCKSTEP_Out(1480) <= \<const0>\;
  LOCKSTEP_Out(1481) <= \<const0>\;
  LOCKSTEP_Out(1482) <= \<const0>\;
  LOCKSTEP_Out(1483) <= \<const0>\;
  LOCKSTEP_Out(1484) <= \<const0>\;
  LOCKSTEP_Out(1485) <= \<const0>\;
  LOCKSTEP_Out(1486) <= \<const0>\;
  LOCKSTEP_Out(1487) <= \<const0>\;
  LOCKSTEP_Out(1488) <= \<const0>\;
  LOCKSTEP_Out(1489) <= \<const0>\;
  LOCKSTEP_Out(1490) <= \<const0>\;
  LOCKSTEP_Out(1491) <= \<const0>\;
  LOCKSTEP_Out(1492) <= \<const0>\;
  LOCKSTEP_Out(1493) <= \<const0>\;
  LOCKSTEP_Out(1494) <= \<const0>\;
  LOCKSTEP_Out(1495) <= \<const0>\;
  LOCKSTEP_Out(1496) <= \<const0>\;
  LOCKSTEP_Out(1497) <= \<const0>\;
  LOCKSTEP_Out(1498) <= \<const0>\;
  LOCKSTEP_Out(1499) <= \<const0>\;
  LOCKSTEP_Out(1500) <= \<const0>\;
  LOCKSTEP_Out(1501) <= \<const0>\;
  LOCKSTEP_Out(1502) <= \<const0>\;
  LOCKSTEP_Out(1503) <= \<const0>\;
  LOCKSTEP_Out(1504) <= \<const0>\;
  LOCKSTEP_Out(1505) <= \<const0>\;
  LOCKSTEP_Out(1506) <= \<const0>\;
  LOCKSTEP_Out(1507) <= \<const0>\;
  LOCKSTEP_Out(1508) <= \<const0>\;
  LOCKSTEP_Out(1509) <= \<const0>\;
  LOCKSTEP_Out(1510) <= \<const0>\;
  LOCKSTEP_Out(1511) <= \<const0>\;
  LOCKSTEP_Out(1512) <= \<const0>\;
  LOCKSTEP_Out(1513) <= \<const0>\;
  LOCKSTEP_Out(1514) <= \<const0>\;
  LOCKSTEP_Out(1515) <= \<const0>\;
  LOCKSTEP_Out(1516) <= \<const0>\;
  LOCKSTEP_Out(1517) <= \<const0>\;
  LOCKSTEP_Out(1518) <= \<const0>\;
  LOCKSTEP_Out(1519) <= \<const0>\;
  LOCKSTEP_Out(1520) <= \<const0>\;
  LOCKSTEP_Out(1521) <= \<const0>\;
  LOCKSTEP_Out(1522) <= \<const0>\;
  LOCKSTEP_Out(1523) <= \<const0>\;
  LOCKSTEP_Out(1524) <= \<const0>\;
  LOCKSTEP_Out(1525) <= \<const0>\;
  LOCKSTEP_Out(1526) <= \<const0>\;
  LOCKSTEP_Out(1527) <= \<const0>\;
  LOCKSTEP_Out(1528) <= \<const0>\;
  LOCKSTEP_Out(1529) <= \<const0>\;
  LOCKSTEP_Out(1530) <= \<const0>\;
  LOCKSTEP_Out(1531) <= \<const0>\;
  LOCKSTEP_Out(1532) <= \<const0>\;
  LOCKSTEP_Out(1533) <= \<const0>\;
  LOCKSTEP_Out(1534) <= \<const0>\;
  LOCKSTEP_Out(1535) <= \<const0>\;
  LOCKSTEP_Out(1536) <= \<const0>\;
  LOCKSTEP_Out(1537) <= \<const0>\;
  LOCKSTEP_Out(1538) <= \<const0>\;
  LOCKSTEP_Out(1539) <= \<const0>\;
  LOCKSTEP_Out(1540) <= \<const0>\;
  LOCKSTEP_Out(1541) <= \<const0>\;
  LOCKSTEP_Out(1542) <= \<const0>\;
  LOCKSTEP_Out(1543) <= \<const0>\;
  LOCKSTEP_Out(1544) <= \<const0>\;
  LOCKSTEP_Out(1545) <= \<const0>\;
  LOCKSTEP_Out(1546) <= \<const0>\;
  LOCKSTEP_Out(1547) <= \<const0>\;
  LOCKSTEP_Out(1548) <= \<const0>\;
  LOCKSTEP_Out(1549) <= \<const0>\;
  LOCKSTEP_Out(1550) <= \<const0>\;
  LOCKSTEP_Out(1551) <= \<const0>\;
  LOCKSTEP_Out(1552) <= \<const0>\;
  LOCKSTEP_Out(1553) <= \<const0>\;
  LOCKSTEP_Out(1554) <= \<const0>\;
  LOCKSTEP_Out(1555) <= \<const0>\;
  LOCKSTEP_Out(1556) <= \<const0>\;
  LOCKSTEP_Out(1557) <= \<const0>\;
  LOCKSTEP_Out(1558) <= \<const0>\;
  LOCKSTEP_Out(1559) <= \<const0>\;
  LOCKSTEP_Out(1560) <= \<const0>\;
  LOCKSTEP_Out(1561) <= \<const0>\;
  LOCKSTEP_Out(1562) <= \<const0>\;
  LOCKSTEP_Out(1563) <= \<const0>\;
  LOCKSTEP_Out(1564) <= \<const0>\;
  LOCKSTEP_Out(1565) <= \<const0>\;
  LOCKSTEP_Out(1566) <= \<const0>\;
  LOCKSTEP_Out(1567) <= \<const0>\;
  LOCKSTEP_Out(1568) <= \<const0>\;
  LOCKSTEP_Out(1569) <= \<const0>\;
  LOCKSTEP_Out(1570) <= \<const0>\;
  LOCKSTEP_Out(1571) <= \<const0>\;
  LOCKSTEP_Out(1572) <= \<const0>\;
  LOCKSTEP_Out(1573) <= \<const0>\;
  LOCKSTEP_Out(1574) <= \<const0>\;
  LOCKSTEP_Out(1575) <= \<const0>\;
  LOCKSTEP_Out(1576) <= \<const0>\;
  LOCKSTEP_Out(1577) <= \<const0>\;
  LOCKSTEP_Out(1578) <= \<const0>\;
  LOCKSTEP_Out(1579) <= \<const0>\;
  LOCKSTEP_Out(1580) <= \<const0>\;
  LOCKSTEP_Out(1581) <= \<const0>\;
  LOCKSTEP_Out(1582) <= \<const0>\;
  LOCKSTEP_Out(1583) <= \<const0>\;
  LOCKSTEP_Out(1584) <= \<const0>\;
  LOCKSTEP_Out(1585) <= \<const0>\;
  LOCKSTEP_Out(1586) <= \<const0>\;
  LOCKSTEP_Out(1587) <= \<const0>\;
  LOCKSTEP_Out(1588) <= \<const0>\;
  LOCKSTEP_Out(1589) <= \<const0>\;
  LOCKSTEP_Out(1590) <= \<const0>\;
  LOCKSTEP_Out(1591) <= \<const0>\;
  LOCKSTEP_Out(1592) <= \<const0>\;
  LOCKSTEP_Out(1593) <= \<const0>\;
  LOCKSTEP_Out(1594) <= \<const0>\;
  LOCKSTEP_Out(1595) <= \<const0>\;
  LOCKSTEP_Out(1596) <= \<const0>\;
  LOCKSTEP_Out(1597) <= \<const0>\;
  LOCKSTEP_Out(1598) <= \<const0>\;
  LOCKSTEP_Out(1599) <= \<const0>\;
  LOCKSTEP_Out(1600) <= \<const0>\;
  LOCKSTEP_Out(1601) <= \<const0>\;
  LOCKSTEP_Out(1602) <= \<const0>\;
  LOCKSTEP_Out(1603) <= \<const0>\;
  LOCKSTEP_Out(1604) <= \<const0>\;
  LOCKSTEP_Out(1605) <= \<const0>\;
  LOCKSTEP_Out(1606) <= \<const0>\;
  LOCKSTEP_Out(1607) <= \<const0>\;
  LOCKSTEP_Out(1608) <= \<const0>\;
  LOCKSTEP_Out(1609) <= \<const0>\;
  LOCKSTEP_Out(1610) <= \<const0>\;
  LOCKSTEP_Out(1611) <= \<const0>\;
  LOCKSTEP_Out(1612) <= \<const0>\;
  LOCKSTEP_Out(1613) <= \<const0>\;
  LOCKSTEP_Out(1614) <= \<const0>\;
  LOCKSTEP_Out(1615) <= \<const0>\;
  LOCKSTEP_Out(1616) <= \<const0>\;
  LOCKSTEP_Out(1617) <= \<const0>\;
  LOCKSTEP_Out(1618) <= \<const0>\;
  LOCKSTEP_Out(1619) <= \<const0>\;
  LOCKSTEP_Out(1620) <= \<const0>\;
  LOCKSTEP_Out(1621) <= \<const0>\;
  LOCKSTEP_Out(1622) <= \<const0>\;
  LOCKSTEP_Out(1623) <= \<const0>\;
  LOCKSTEP_Out(1624) <= \<const0>\;
  LOCKSTEP_Out(1625) <= \<const0>\;
  LOCKSTEP_Out(1626) <= \<const0>\;
  LOCKSTEP_Out(1627) <= \<const0>\;
  LOCKSTEP_Out(1628) <= \<const0>\;
  LOCKSTEP_Out(1629) <= \<const0>\;
  LOCKSTEP_Out(1630) <= \<const0>\;
  LOCKSTEP_Out(1631) <= \<const0>\;
  LOCKSTEP_Out(1632) <= \<const0>\;
  LOCKSTEP_Out(1633) <= \<const0>\;
  LOCKSTEP_Out(1634) <= \<const0>\;
  LOCKSTEP_Out(1635) <= \<const0>\;
  LOCKSTEP_Out(1636) <= \<const0>\;
  LOCKSTEP_Out(1637) <= \<const0>\;
  LOCKSTEP_Out(1638) <= \<const0>\;
  LOCKSTEP_Out(1639) <= \<const0>\;
  LOCKSTEP_Out(1640) <= \<const0>\;
  LOCKSTEP_Out(1641) <= \<const0>\;
  LOCKSTEP_Out(1642) <= \<const0>\;
  LOCKSTEP_Out(1643) <= \<const0>\;
  LOCKSTEP_Out(1644) <= \<const0>\;
  LOCKSTEP_Out(1645) <= \<const0>\;
  LOCKSTEP_Out(1646) <= \<const0>\;
  LOCKSTEP_Out(1647) <= \<const0>\;
  LOCKSTEP_Out(1648) <= \<const0>\;
  LOCKSTEP_Out(1649) <= \<const0>\;
  LOCKSTEP_Out(1650) <= \<const0>\;
  LOCKSTEP_Out(1651) <= \<const0>\;
  LOCKSTEP_Out(1652) <= \<const0>\;
  LOCKSTEP_Out(1653) <= \<const0>\;
  LOCKSTEP_Out(1654) <= \<const0>\;
  LOCKSTEP_Out(1655) <= \<const0>\;
  LOCKSTEP_Out(1656) <= \<const0>\;
  LOCKSTEP_Out(1657) <= \<const0>\;
  LOCKSTEP_Out(1658) <= \<const0>\;
  LOCKSTEP_Out(1659) <= \<const0>\;
  LOCKSTEP_Out(1660) <= \<const0>\;
  LOCKSTEP_Out(1661) <= \<const0>\;
  LOCKSTEP_Out(1662) <= \<const0>\;
  LOCKSTEP_Out(1663) <= \<const0>\;
  LOCKSTEP_Out(1664) <= \<const0>\;
  LOCKSTEP_Out(1665) <= \<const0>\;
  LOCKSTEP_Out(1666) <= \<const0>\;
  LOCKSTEP_Out(1667) <= \<const0>\;
  LOCKSTEP_Out(1668) <= \<const0>\;
  LOCKSTEP_Out(1669) <= \<const0>\;
  LOCKSTEP_Out(1670) <= \<const0>\;
  LOCKSTEP_Out(1671) <= \<const0>\;
  LOCKSTEP_Out(1672) <= \<const0>\;
  LOCKSTEP_Out(1673) <= \<const0>\;
  LOCKSTEP_Out(1674) <= \<const0>\;
  LOCKSTEP_Out(1675) <= \<const0>\;
  LOCKSTEP_Out(1676) <= \<const0>\;
  LOCKSTEP_Out(1677) <= \<const0>\;
  LOCKSTEP_Out(1678) <= \<const0>\;
  LOCKSTEP_Out(1679) <= \<const0>\;
  LOCKSTEP_Out(1680) <= \<const0>\;
  LOCKSTEP_Out(1681) <= \<const0>\;
  LOCKSTEP_Out(1682) <= \<const0>\;
  LOCKSTEP_Out(1683) <= \<const0>\;
  LOCKSTEP_Out(1684) <= \<const0>\;
  LOCKSTEP_Out(1685) <= \<const0>\;
  LOCKSTEP_Out(1686) <= \<const0>\;
  LOCKSTEP_Out(1687) <= \<const0>\;
  LOCKSTEP_Out(1688) <= \<const0>\;
  LOCKSTEP_Out(1689) <= \<const0>\;
  LOCKSTEP_Out(1690) <= \<const0>\;
  LOCKSTEP_Out(1691) <= \<const0>\;
  LOCKSTEP_Out(1692) <= \<const0>\;
  LOCKSTEP_Out(1693) <= \<const0>\;
  LOCKSTEP_Out(1694) <= \<const0>\;
  LOCKSTEP_Out(1695) <= \<const0>\;
  LOCKSTEP_Out(1696) <= \<const0>\;
  LOCKSTEP_Out(1697) <= \<const0>\;
  LOCKSTEP_Out(1698) <= \<const0>\;
  LOCKSTEP_Out(1699) <= \<const0>\;
  LOCKSTEP_Out(1700) <= \<const0>\;
  LOCKSTEP_Out(1701) <= \<const0>\;
  LOCKSTEP_Out(1702) <= \<const0>\;
  LOCKSTEP_Out(1703) <= \<const0>\;
  LOCKSTEP_Out(1704) <= \<const0>\;
  LOCKSTEP_Out(1705) <= \<const0>\;
  LOCKSTEP_Out(1706) <= \<const0>\;
  LOCKSTEP_Out(1707) <= \<const0>\;
  LOCKSTEP_Out(1708) <= \<const0>\;
  LOCKSTEP_Out(1709) <= \<const0>\;
  LOCKSTEP_Out(1710) <= \<const0>\;
  LOCKSTEP_Out(1711) <= \<const0>\;
  LOCKSTEP_Out(1712) <= \<const0>\;
  LOCKSTEP_Out(1713) <= \<const0>\;
  LOCKSTEP_Out(1714) <= \<const0>\;
  LOCKSTEP_Out(1715) <= \<const0>\;
  LOCKSTEP_Out(1716) <= \<const0>\;
  LOCKSTEP_Out(1717) <= \<const0>\;
  LOCKSTEP_Out(1718) <= \<const0>\;
  LOCKSTEP_Out(1719) <= \<const0>\;
  LOCKSTEP_Out(1720) <= \<const0>\;
  LOCKSTEP_Out(1721) <= \<const0>\;
  LOCKSTEP_Out(1722) <= \<const0>\;
  LOCKSTEP_Out(1723) <= \<const0>\;
  LOCKSTEP_Out(1724) <= \<const0>\;
  LOCKSTEP_Out(1725) <= \<const0>\;
  LOCKSTEP_Out(1726) <= \<const0>\;
  LOCKSTEP_Out(1727) <= \<const0>\;
  LOCKSTEP_Out(1728) <= \<const0>\;
  LOCKSTEP_Out(1729) <= \<const0>\;
  LOCKSTEP_Out(1730) <= \<const0>\;
  LOCKSTEP_Out(1731) <= \<const0>\;
  LOCKSTEP_Out(1732) <= \<const0>\;
  LOCKSTEP_Out(1733) <= \<const0>\;
  LOCKSTEP_Out(1734) <= \<const0>\;
  LOCKSTEP_Out(1735) <= \<const0>\;
  LOCKSTEP_Out(1736) <= \<const0>\;
  LOCKSTEP_Out(1737) <= \<const0>\;
  LOCKSTEP_Out(1738) <= \<const0>\;
  LOCKSTEP_Out(1739) <= \<const0>\;
  LOCKSTEP_Out(1740) <= \<const0>\;
  LOCKSTEP_Out(1741) <= \<const0>\;
  LOCKSTEP_Out(1742) <= \<const0>\;
  LOCKSTEP_Out(1743) <= \<const0>\;
  LOCKSTEP_Out(1744) <= \<const0>\;
  LOCKSTEP_Out(1745) <= \<const0>\;
  LOCKSTEP_Out(1746) <= \<const0>\;
  LOCKSTEP_Out(1747) <= \<const0>\;
  LOCKSTEP_Out(1748) <= \<const0>\;
  LOCKSTEP_Out(1749) <= \<const0>\;
  LOCKSTEP_Out(1750) <= \<const0>\;
  LOCKSTEP_Out(1751) <= \<const0>\;
  LOCKSTEP_Out(1752) <= \<const0>\;
  LOCKSTEP_Out(1753) <= \<const0>\;
  LOCKSTEP_Out(1754) <= \<const0>\;
  LOCKSTEP_Out(1755) <= \<const0>\;
  LOCKSTEP_Out(1756) <= \<const0>\;
  LOCKSTEP_Out(1757) <= \<const0>\;
  LOCKSTEP_Out(1758) <= \<const0>\;
  LOCKSTEP_Out(1759) <= \<const0>\;
  LOCKSTEP_Out(1760) <= \<const0>\;
  LOCKSTEP_Out(1761) <= \<const0>\;
  LOCKSTEP_Out(1762) <= \<const0>\;
  LOCKSTEP_Out(1763) <= \<const0>\;
  LOCKSTEP_Out(1764) <= \<const0>\;
  LOCKSTEP_Out(1765) <= \<const0>\;
  LOCKSTEP_Out(1766) <= \<const0>\;
  LOCKSTEP_Out(1767) <= \<const0>\;
  LOCKSTEP_Out(1768) <= \<const0>\;
  LOCKSTEP_Out(1769) <= \<const0>\;
  LOCKSTEP_Out(1770) <= \<const0>\;
  LOCKSTEP_Out(1771) <= \<const0>\;
  LOCKSTEP_Out(1772) <= \<const0>\;
  LOCKSTEP_Out(1773) <= \<const0>\;
  LOCKSTEP_Out(1774) <= \<const0>\;
  LOCKSTEP_Out(1775) <= \<const0>\;
  LOCKSTEP_Out(1776) <= \<const0>\;
  LOCKSTEP_Out(1777) <= \<const0>\;
  LOCKSTEP_Out(1778) <= \<const0>\;
  LOCKSTEP_Out(1779) <= \<const0>\;
  LOCKSTEP_Out(1780) <= \<const0>\;
  LOCKSTEP_Out(1781) <= \<const0>\;
  LOCKSTEP_Out(1782) <= \<const0>\;
  LOCKSTEP_Out(1783) <= \<const0>\;
  LOCKSTEP_Out(1784) <= \<const0>\;
  LOCKSTEP_Out(1785) <= \<const0>\;
  LOCKSTEP_Out(1786) <= \<const0>\;
  LOCKSTEP_Out(1787) <= \<const0>\;
  LOCKSTEP_Out(1788) <= \<const0>\;
  LOCKSTEP_Out(1789) <= \<const0>\;
  LOCKSTEP_Out(1790) <= \<const0>\;
  LOCKSTEP_Out(1791) <= \<const0>\;
  LOCKSTEP_Out(1792) <= \<const0>\;
  LOCKSTEP_Out(1793) <= \<const0>\;
  LOCKSTEP_Out(1794) <= \<const0>\;
  LOCKSTEP_Out(1795) <= \<const0>\;
  LOCKSTEP_Out(1796) <= \<const0>\;
  LOCKSTEP_Out(1797) <= \<const0>\;
  LOCKSTEP_Out(1798) <= \<const0>\;
  LOCKSTEP_Out(1799) <= \<const0>\;
  LOCKSTEP_Out(1800) <= \<const0>\;
  LOCKSTEP_Out(1801) <= \<const0>\;
  LOCKSTEP_Out(1802) <= \<const0>\;
  LOCKSTEP_Out(1803) <= \<const0>\;
  LOCKSTEP_Out(1804) <= \<const0>\;
  LOCKSTEP_Out(1805) <= \<const0>\;
  LOCKSTEP_Out(1806) <= \<const0>\;
  LOCKSTEP_Out(1807) <= \<const0>\;
  LOCKSTEP_Out(1808) <= \<const0>\;
  LOCKSTEP_Out(1809) <= \<const0>\;
  LOCKSTEP_Out(1810) <= \<const0>\;
  LOCKSTEP_Out(1811) <= \<const0>\;
  LOCKSTEP_Out(1812) <= \<const0>\;
  LOCKSTEP_Out(1813) <= \<const0>\;
  LOCKSTEP_Out(1814) <= \<const0>\;
  LOCKSTEP_Out(1815) <= \<const0>\;
  LOCKSTEP_Out(1816) <= \<const0>\;
  LOCKSTEP_Out(1817) <= \<const0>\;
  LOCKSTEP_Out(1818) <= \<const0>\;
  LOCKSTEP_Out(1819) <= \<const0>\;
  LOCKSTEP_Out(1820) <= \<const0>\;
  LOCKSTEP_Out(1821) <= \<const0>\;
  LOCKSTEP_Out(1822) <= \<const0>\;
  LOCKSTEP_Out(1823) <= \<const0>\;
  LOCKSTEP_Out(1824) <= \<const0>\;
  LOCKSTEP_Out(1825) <= \<const0>\;
  LOCKSTEP_Out(1826) <= \<const0>\;
  LOCKSTEP_Out(1827) <= \<const0>\;
  LOCKSTEP_Out(1828) <= \<const0>\;
  LOCKSTEP_Out(1829) <= \<const0>\;
  LOCKSTEP_Out(1830) <= \<const0>\;
  LOCKSTEP_Out(1831) <= \<const0>\;
  LOCKSTEP_Out(1832) <= \<const0>\;
  LOCKSTEP_Out(1833) <= \<const0>\;
  LOCKSTEP_Out(1834) <= \<const0>\;
  LOCKSTEP_Out(1835) <= \<const0>\;
  LOCKSTEP_Out(1836) <= \<const0>\;
  LOCKSTEP_Out(1837) <= \<const0>\;
  LOCKSTEP_Out(1838) <= \<const0>\;
  LOCKSTEP_Out(1839) <= \<const0>\;
  LOCKSTEP_Out(1840) <= \<const0>\;
  LOCKSTEP_Out(1841) <= \<const0>\;
  LOCKSTEP_Out(1842) <= \<const0>\;
  LOCKSTEP_Out(1843) <= \<const0>\;
  LOCKSTEP_Out(1844) <= \<const0>\;
  LOCKSTEP_Out(1845) <= \<const0>\;
  LOCKSTEP_Out(1846) <= \<const0>\;
  LOCKSTEP_Out(1847) <= \<const0>\;
  LOCKSTEP_Out(1848) <= \<const0>\;
  LOCKSTEP_Out(1849) <= \<const0>\;
  LOCKSTEP_Out(1850) <= \<const0>\;
  LOCKSTEP_Out(1851) <= \<const0>\;
  LOCKSTEP_Out(1852) <= \<const0>\;
  LOCKSTEP_Out(1853) <= \<const0>\;
  LOCKSTEP_Out(1854) <= \<const0>\;
  LOCKSTEP_Out(1855) <= \<const0>\;
  LOCKSTEP_Out(1856) <= \<const0>\;
  LOCKSTEP_Out(1857) <= \<const0>\;
  LOCKSTEP_Out(1858) <= \<const0>\;
  LOCKSTEP_Out(1859) <= \<const0>\;
  LOCKSTEP_Out(1860) <= \<const0>\;
  LOCKSTEP_Out(1861) <= \<const0>\;
  LOCKSTEP_Out(1862) <= \<const0>\;
  LOCKSTEP_Out(1863) <= \<const0>\;
  LOCKSTEP_Out(1864) <= \<const0>\;
  LOCKSTEP_Out(1865) <= \<const0>\;
  LOCKSTEP_Out(1866) <= \<const0>\;
  LOCKSTEP_Out(1867) <= \<const0>\;
  LOCKSTEP_Out(1868) <= \<const0>\;
  LOCKSTEP_Out(1869) <= \<const0>\;
  LOCKSTEP_Out(1870) <= \<const0>\;
  LOCKSTEP_Out(1871) <= \<const0>\;
  LOCKSTEP_Out(1872) <= \<const0>\;
  LOCKSTEP_Out(1873) <= \<const0>\;
  LOCKSTEP_Out(1874) <= \<const0>\;
  LOCKSTEP_Out(1875) <= \<const0>\;
  LOCKSTEP_Out(1876) <= \<const0>\;
  LOCKSTEP_Out(1877) <= \<const0>\;
  LOCKSTEP_Out(1878) <= \<const0>\;
  LOCKSTEP_Out(1879) <= \<const0>\;
  LOCKSTEP_Out(1880) <= \<const0>\;
  LOCKSTEP_Out(1881) <= \<const0>\;
  LOCKSTEP_Out(1882) <= \<const0>\;
  LOCKSTEP_Out(1883) <= \<const0>\;
  LOCKSTEP_Out(1884) <= \<const0>\;
  LOCKSTEP_Out(1885) <= \<const0>\;
  LOCKSTEP_Out(1886) <= \<const0>\;
  LOCKSTEP_Out(1887) <= \<const0>\;
  LOCKSTEP_Out(1888) <= \<const0>\;
  LOCKSTEP_Out(1889) <= \<const0>\;
  LOCKSTEP_Out(1890) <= \<const0>\;
  LOCKSTEP_Out(1891) <= \<const0>\;
  LOCKSTEP_Out(1892) <= \<const0>\;
  LOCKSTEP_Out(1893) <= \<const0>\;
  LOCKSTEP_Out(1894) <= \<const0>\;
  LOCKSTEP_Out(1895) <= \<const0>\;
  LOCKSTEP_Out(1896) <= \<const0>\;
  LOCKSTEP_Out(1897) <= \<const0>\;
  LOCKSTEP_Out(1898) <= \<const0>\;
  LOCKSTEP_Out(1899) <= \<const0>\;
  LOCKSTEP_Out(1900) <= \<const0>\;
  LOCKSTEP_Out(1901) <= \<const0>\;
  LOCKSTEP_Out(1902) <= \<const0>\;
  LOCKSTEP_Out(1903) <= \<const0>\;
  LOCKSTEP_Out(1904) <= \<const0>\;
  LOCKSTEP_Out(1905) <= \<const0>\;
  LOCKSTEP_Out(1906) <= \<const0>\;
  LOCKSTEP_Out(1907) <= \<const0>\;
  LOCKSTEP_Out(1908) <= \<const0>\;
  LOCKSTEP_Out(1909) <= \<const0>\;
  LOCKSTEP_Out(1910) <= \<const0>\;
  LOCKSTEP_Out(1911) <= \<const0>\;
  LOCKSTEP_Out(1912) <= \<const0>\;
  LOCKSTEP_Out(1913) <= \<const0>\;
  LOCKSTEP_Out(1914) <= \<const0>\;
  LOCKSTEP_Out(1915) <= \<const0>\;
  LOCKSTEP_Out(1916) <= \<const0>\;
  LOCKSTEP_Out(1917) <= \<const0>\;
  LOCKSTEP_Out(1918) <= \<const0>\;
  LOCKSTEP_Out(1919) <= \<const0>\;
  LOCKSTEP_Out(1920) <= \<const0>\;
  LOCKSTEP_Out(1921) <= \<const0>\;
  LOCKSTEP_Out(1922) <= \<const0>\;
  LOCKSTEP_Out(1923) <= \<const0>\;
  LOCKSTEP_Out(1924) <= \<const0>\;
  LOCKSTEP_Out(1925) <= \<const0>\;
  LOCKSTEP_Out(1926) <= \<const0>\;
  LOCKSTEP_Out(1927) <= \<const0>\;
  LOCKSTEP_Out(1928) <= \<const0>\;
  LOCKSTEP_Out(1929) <= \<const0>\;
  LOCKSTEP_Out(1930) <= \<const0>\;
  LOCKSTEP_Out(1931) <= \<const0>\;
  LOCKSTEP_Out(1932) <= \<const0>\;
  LOCKSTEP_Out(1933) <= \<const0>\;
  LOCKSTEP_Out(1934) <= \<const0>\;
  LOCKSTEP_Out(1935) <= \<const0>\;
  LOCKSTEP_Out(1936) <= \<const0>\;
  LOCKSTEP_Out(1937) <= \<const0>\;
  LOCKSTEP_Out(1938) <= \<const0>\;
  LOCKSTEP_Out(1939) <= \<const0>\;
  LOCKSTEP_Out(1940) <= \<const0>\;
  LOCKSTEP_Out(1941) <= \<const0>\;
  LOCKSTEP_Out(1942) <= \<const0>\;
  LOCKSTEP_Out(1943) <= \<const0>\;
  LOCKSTEP_Out(1944) <= \<const0>\;
  LOCKSTEP_Out(1945) <= \<const0>\;
  LOCKSTEP_Out(1946) <= \<const0>\;
  LOCKSTEP_Out(1947) <= \<const0>\;
  LOCKSTEP_Out(1948) <= \<const0>\;
  LOCKSTEP_Out(1949) <= \<const0>\;
  LOCKSTEP_Out(1950) <= \<const0>\;
  LOCKSTEP_Out(1951) <= \<const0>\;
  LOCKSTEP_Out(1952) <= \<const0>\;
  LOCKSTEP_Out(1953) <= \<const0>\;
  LOCKSTEP_Out(1954) <= \<const0>\;
  LOCKSTEP_Out(1955) <= \<const0>\;
  LOCKSTEP_Out(1956) <= \<const0>\;
  LOCKSTEP_Out(1957) <= \<const0>\;
  LOCKSTEP_Out(1958) <= \<const0>\;
  LOCKSTEP_Out(1959) <= \<const0>\;
  LOCKSTEP_Out(1960) <= \<const0>\;
  LOCKSTEP_Out(1961) <= \<const0>\;
  LOCKSTEP_Out(1962) <= \<const0>\;
  LOCKSTEP_Out(1963) <= \<const0>\;
  LOCKSTEP_Out(1964) <= \<const0>\;
  LOCKSTEP_Out(1965) <= \<const0>\;
  LOCKSTEP_Out(1966) <= \<const0>\;
  LOCKSTEP_Out(1967) <= \<const0>\;
  LOCKSTEP_Out(1968) <= \<const0>\;
  LOCKSTEP_Out(1969) <= \<const0>\;
  LOCKSTEP_Out(1970) <= \<const0>\;
  LOCKSTEP_Out(1971) <= \<const0>\;
  LOCKSTEP_Out(1972) <= \<const0>\;
  LOCKSTEP_Out(1973) <= \<const0>\;
  LOCKSTEP_Out(1974) <= \<const0>\;
  LOCKSTEP_Out(1975) <= \<const0>\;
  LOCKSTEP_Out(1976) <= \<const0>\;
  LOCKSTEP_Out(1977) <= \<const0>\;
  LOCKSTEP_Out(1978) <= \<const0>\;
  LOCKSTEP_Out(1979) <= \<const0>\;
  LOCKSTEP_Out(1980) <= \<const0>\;
  LOCKSTEP_Out(1981) <= \<const0>\;
  LOCKSTEP_Out(1982) <= \<const0>\;
  LOCKSTEP_Out(1983) <= \<const0>\;
  LOCKSTEP_Out(1984) <= \<const0>\;
  LOCKSTEP_Out(1985) <= \<const0>\;
  LOCKSTEP_Out(1986) <= \<const0>\;
  LOCKSTEP_Out(1987) <= \<const0>\;
  LOCKSTEP_Out(1988) <= \<const0>\;
  LOCKSTEP_Out(1989) <= \<const0>\;
  LOCKSTEP_Out(1990) <= \<const0>\;
  LOCKSTEP_Out(1991) <= \<const0>\;
  LOCKSTEP_Out(1992) <= \<const0>\;
  LOCKSTEP_Out(1993) <= \<const0>\;
  LOCKSTEP_Out(1994) <= \<const0>\;
  LOCKSTEP_Out(1995) <= \<const0>\;
  LOCKSTEP_Out(1996) <= \<const0>\;
  LOCKSTEP_Out(1997) <= \<const0>\;
  LOCKSTEP_Out(1998) <= \<const0>\;
  LOCKSTEP_Out(1999) <= \<const0>\;
  LOCKSTEP_Out(2000) <= \<const0>\;
  LOCKSTEP_Out(2001) <= \<const0>\;
  LOCKSTEP_Out(2002) <= \<const0>\;
  LOCKSTEP_Out(2003) <= \<const0>\;
  LOCKSTEP_Out(2004) <= \<const0>\;
  LOCKSTEP_Out(2005) <= \<const0>\;
  LOCKSTEP_Out(2006) <= \<const0>\;
  LOCKSTEP_Out(2007) <= \<const0>\;
  LOCKSTEP_Out(2008) <= \<const0>\;
  LOCKSTEP_Out(2009) <= \<const0>\;
  LOCKSTEP_Out(2010) <= \<const0>\;
  LOCKSTEP_Out(2011) <= \<const0>\;
  LOCKSTEP_Out(2012) <= \<const0>\;
  LOCKSTEP_Out(2013) <= \<const0>\;
  LOCKSTEP_Out(2014) <= \<const0>\;
  LOCKSTEP_Out(2015) <= \<const0>\;
  LOCKSTEP_Out(2016) <= \<const0>\;
  LOCKSTEP_Out(2017) <= \<const0>\;
  LOCKSTEP_Out(2018) <= \<const0>\;
  LOCKSTEP_Out(2019) <= \<const0>\;
  LOCKSTEP_Out(2020) <= \<const0>\;
  LOCKSTEP_Out(2021) <= \<const0>\;
  LOCKSTEP_Out(2022) <= \<const0>\;
  LOCKSTEP_Out(2023) <= \<const0>\;
  LOCKSTEP_Out(2024) <= \<const0>\;
  LOCKSTEP_Out(2025) <= \<const0>\;
  LOCKSTEP_Out(2026) <= \<const0>\;
  LOCKSTEP_Out(2027) <= \<const0>\;
  LOCKSTEP_Out(2028) <= \<const0>\;
  LOCKSTEP_Out(2029) <= \<const0>\;
  LOCKSTEP_Out(2030) <= \<const0>\;
  LOCKSTEP_Out(2031) <= \<const0>\;
  LOCKSTEP_Out(2032) <= \<const0>\;
  LOCKSTEP_Out(2033) <= \<const0>\;
  LOCKSTEP_Out(2034) <= \<const0>\;
  LOCKSTEP_Out(2035) <= \<const0>\;
  LOCKSTEP_Out(2036) <= \<const0>\;
  LOCKSTEP_Out(2037) <= \<const0>\;
  LOCKSTEP_Out(2038) <= \<const0>\;
  LOCKSTEP_Out(2039) <= \<const0>\;
  LOCKSTEP_Out(2040) <= \<const0>\;
  LOCKSTEP_Out(2041) <= \<const0>\;
  LOCKSTEP_Out(2042) <= \<const0>\;
  LOCKSTEP_Out(2043) <= \<const0>\;
  LOCKSTEP_Out(2044) <= \<const0>\;
  LOCKSTEP_Out(2045) <= \<const0>\;
  LOCKSTEP_Out(2046) <= \<const0>\;
  LOCKSTEP_Out(2047) <= \<const0>\;
  LOCKSTEP_Out(2048) <= \<const0>\;
  LOCKSTEP_Out(2049) <= \<const0>\;
  LOCKSTEP_Out(2050) <= \<const0>\;
  LOCKSTEP_Out(2051) <= \<const0>\;
  LOCKSTEP_Out(2052) <= \<const0>\;
  LOCKSTEP_Out(2053) <= \<const0>\;
  LOCKSTEP_Out(2054) <= \<const0>\;
  LOCKSTEP_Out(2055) <= \<const0>\;
  LOCKSTEP_Out(2056) <= \<const0>\;
  LOCKSTEP_Out(2057) <= \<const0>\;
  LOCKSTEP_Out(2058) <= \<const0>\;
  LOCKSTEP_Out(2059) <= \<const0>\;
  LOCKSTEP_Out(2060) <= \<const0>\;
  LOCKSTEP_Out(2061) <= \<const0>\;
  LOCKSTEP_Out(2062) <= \<const0>\;
  LOCKSTEP_Out(2063) <= \<const0>\;
  LOCKSTEP_Out(2064) <= \<const0>\;
  LOCKSTEP_Out(2065) <= \<const0>\;
  LOCKSTEP_Out(2066) <= \<const0>\;
  LOCKSTEP_Out(2067) <= \<const0>\;
  LOCKSTEP_Out(2068) <= \<const0>\;
  LOCKSTEP_Out(2069) <= \<const0>\;
  LOCKSTEP_Out(2070) <= \<const0>\;
  LOCKSTEP_Out(2071) <= \<const0>\;
  LOCKSTEP_Out(2072) <= \<const0>\;
  LOCKSTEP_Out(2073) <= \<const0>\;
  LOCKSTEP_Out(2074) <= \<const0>\;
  LOCKSTEP_Out(2075) <= \<const0>\;
  LOCKSTEP_Out(2076) <= \<const0>\;
  LOCKSTEP_Out(2077) <= \<const0>\;
  LOCKSTEP_Out(2078) <= \<const0>\;
  LOCKSTEP_Out(2079) <= \<const0>\;
  LOCKSTEP_Out(2080) <= \<const0>\;
  LOCKSTEP_Out(2081) <= \<const0>\;
  LOCKSTEP_Out(2082) <= \<const0>\;
  LOCKSTEP_Out(2083) <= \<const0>\;
  LOCKSTEP_Out(2084) <= \<const0>\;
  LOCKSTEP_Out(2085) <= \<const0>\;
  LOCKSTEP_Out(2086) <= \<const0>\;
  LOCKSTEP_Out(2087) <= \<const0>\;
  LOCKSTEP_Out(2088) <= \<const0>\;
  LOCKSTEP_Out(2089) <= \<const0>\;
  LOCKSTEP_Out(2090) <= \<const0>\;
  LOCKSTEP_Out(2091) <= \<const0>\;
  LOCKSTEP_Out(2092) <= \<const0>\;
  LOCKSTEP_Out(2093) <= \<const0>\;
  LOCKSTEP_Out(2094) <= \<const0>\;
  LOCKSTEP_Out(2095) <= \<const0>\;
  LOCKSTEP_Out(2096) <= \<const0>\;
  LOCKSTEP_Out(2097) <= \<const0>\;
  LOCKSTEP_Out(2098) <= \<const0>\;
  LOCKSTEP_Out(2099) <= \<const0>\;
  LOCKSTEP_Out(2100) <= \<const0>\;
  LOCKSTEP_Out(2101) <= \<const0>\;
  LOCKSTEP_Out(2102) <= \<const0>\;
  LOCKSTEP_Out(2103) <= \<const0>\;
  LOCKSTEP_Out(2104) <= \<const0>\;
  LOCKSTEP_Out(2105) <= \<const0>\;
  LOCKSTEP_Out(2106) <= \<const0>\;
  LOCKSTEP_Out(2107) <= \<const0>\;
  LOCKSTEP_Out(2108) <= \<const0>\;
  LOCKSTEP_Out(2109) <= \<const0>\;
  LOCKSTEP_Out(2110) <= \<const0>\;
  LOCKSTEP_Out(2111) <= \<const0>\;
  LOCKSTEP_Out(2112) <= \<const0>\;
  LOCKSTEP_Out(2113) <= \<const0>\;
  LOCKSTEP_Out(2114) <= \<const0>\;
  LOCKSTEP_Out(2115) <= \<const0>\;
  LOCKSTEP_Out(2116) <= \<const0>\;
  LOCKSTEP_Out(2117) <= \<const0>\;
  LOCKSTEP_Out(2118) <= \<const0>\;
  LOCKSTEP_Out(2119) <= \<const0>\;
  LOCKSTEP_Out(2120) <= \<const0>\;
  LOCKSTEP_Out(2121) <= \<const0>\;
  LOCKSTEP_Out(2122) <= \<const0>\;
  LOCKSTEP_Out(2123) <= \<const0>\;
  LOCKSTEP_Out(2124) <= \<const0>\;
  LOCKSTEP_Out(2125) <= \<const0>\;
  LOCKSTEP_Out(2126) <= \<const0>\;
  LOCKSTEP_Out(2127) <= \<const0>\;
  LOCKSTEP_Out(2128) <= \<const0>\;
  LOCKSTEP_Out(2129) <= \<const0>\;
  LOCKSTEP_Out(2130) <= \<const0>\;
  LOCKSTEP_Out(2131) <= \<const0>\;
  LOCKSTEP_Out(2132) <= \<const0>\;
  LOCKSTEP_Out(2133) <= \<const0>\;
  LOCKSTEP_Out(2134) <= \<const0>\;
  LOCKSTEP_Out(2135) <= \<const0>\;
  LOCKSTEP_Out(2136) <= \<const0>\;
  LOCKSTEP_Out(2137) <= \<const0>\;
  LOCKSTEP_Out(2138) <= \<const0>\;
  LOCKSTEP_Out(2139) <= \<const0>\;
  LOCKSTEP_Out(2140) <= \<const0>\;
  LOCKSTEP_Out(2141) <= \<const0>\;
  LOCKSTEP_Out(2142) <= \<const0>\;
  LOCKSTEP_Out(2143) <= \<const0>\;
  LOCKSTEP_Out(2144) <= \<const0>\;
  LOCKSTEP_Out(2145) <= \<const0>\;
  LOCKSTEP_Out(2146) <= \<const0>\;
  LOCKSTEP_Out(2147) <= \<const0>\;
  LOCKSTEP_Out(2148) <= \<const0>\;
  LOCKSTEP_Out(2149) <= \<const0>\;
  LOCKSTEP_Out(2150) <= \<const0>\;
  LOCKSTEP_Out(2151) <= \<const0>\;
  LOCKSTEP_Out(2152) <= \<const0>\;
  LOCKSTEP_Out(2153) <= \<const0>\;
  LOCKSTEP_Out(2154) <= \<const0>\;
  LOCKSTEP_Out(2155) <= \<const0>\;
  LOCKSTEP_Out(2156) <= \<const0>\;
  LOCKSTEP_Out(2157) <= \<const0>\;
  LOCKSTEP_Out(2158) <= \<const0>\;
  LOCKSTEP_Out(2159) <= \<const0>\;
  LOCKSTEP_Out(2160) <= \<const0>\;
  LOCKSTEP_Out(2161) <= \<const0>\;
  LOCKSTEP_Out(2162) <= \<const0>\;
  LOCKSTEP_Out(2163) <= \<const0>\;
  LOCKSTEP_Out(2164) <= \<const0>\;
  LOCKSTEP_Out(2165) <= \<const0>\;
  LOCKSTEP_Out(2166) <= \<const0>\;
  LOCKSTEP_Out(2167) <= \<const0>\;
  LOCKSTEP_Out(2168) <= \<const0>\;
  LOCKSTEP_Out(2169) <= \<const0>\;
  LOCKSTEP_Out(2170) <= \<const0>\;
  LOCKSTEP_Out(2171) <= \<const0>\;
  LOCKSTEP_Out(2172) <= \<const0>\;
  LOCKSTEP_Out(2173) <= \<const0>\;
  LOCKSTEP_Out(2174) <= \<const0>\;
  LOCKSTEP_Out(2175) <= \<const0>\;
  LOCKSTEP_Out(2176) <= \<const0>\;
  LOCKSTEP_Out(2177) <= \<const0>\;
  LOCKSTEP_Out(2178) <= \<const0>\;
  LOCKSTEP_Out(2179) <= \<const0>\;
  LOCKSTEP_Out(2180) <= \<const0>\;
  LOCKSTEP_Out(2181) <= \<const0>\;
  LOCKSTEP_Out(2182) <= \<const0>\;
  LOCKSTEP_Out(2183) <= \<const0>\;
  LOCKSTEP_Out(2184) <= \<const0>\;
  LOCKSTEP_Out(2185) <= \<const0>\;
  LOCKSTEP_Out(2186) <= \<const0>\;
  LOCKSTEP_Out(2187) <= \<const0>\;
  LOCKSTEP_Out(2188) <= \<const0>\;
  LOCKSTEP_Out(2189) <= \<const0>\;
  LOCKSTEP_Out(2190) <= \<const0>\;
  LOCKSTEP_Out(2191) <= \<const0>\;
  LOCKSTEP_Out(2192) <= \<const0>\;
  LOCKSTEP_Out(2193) <= \<const0>\;
  LOCKSTEP_Out(2194) <= \<const0>\;
  LOCKSTEP_Out(2195) <= \<const0>\;
  LOCKSTEP_Out(2196) <= \<const0>\;
  LOCKSTEP_Out(2197) <= \<const0>\;
  LOCKSTEP_Out(2198) <= \<const0>\;
  LOCKSTEP_Out(2199) <= \<const0>\;
  LOCKSTEP_Out(2200) <= \<const0>\;
  LOCKSTEP_Out(2201) <= \<const0>\;
  LOCKSTEP_Out(2202) <= \<const0>\;
  LOCKSTEP_Out(2203) <= \<const0>\;
  LOCKSTEP_Out(2204) <= \<const0>\;
  LOCKSTEP_Out(2205) <= \<const0>\;
  LOCKSTEP_Out(2206) <= \<const0>\;
  LOCKSTEP_Out(2207) <= \<const0>\;
  LOCKSTEP_Out(2208) <= \<const0>\;
  LOCKSTEP_Out(2209) <= \<const0>\;
  LOCKSTEP_Out(2210) <= \<const0>\;
  LOCKSTEP_Out(2211) <= \<const0>\;
  LOCKSTEP_Out(2212) <= \<const0>\;
  LOCKSTEP_Out(2213) <= \<const0>\;
  LOCKSTEP_Out(2214) <= \<const0>\;
  LOCKSTEP_Out(2215) <= \<const0>\;
  LOCKSTEP_Out(2216) <= \<const0>\;
  LOCKSTEP_Out(2217) <= \<const0>\;
  LOCKSTEP_Out(2218) <= \<const0>\;
  LOCKSTEP_Out(2219) <= \<const0>\;
  LOCKSTEP_Out(2220) <= \<const0>\;
  LOCKSTEP_Out(2221) <= \<const0>\;
  LOCKSTEP_Out(2222) <= \<const0>\;
  LOCKSTEP_Out(2223) <= \<const0>\;
  LOCKSTEP_Out(2224) <= \<const0>\;
  LOCKSTEP_Out(2225) <= \<const0>\;
  LOCKSTEP_Out(2226) <= \<const0>\;
  LOCKSTEP_Out(2227) <= \<const0>\;
  LOCKSTEP_Out(2228) <= \<const0>\;
  LOCKSTEP_Out(2229) <= \<const0>\;
  LOCKSTEP_Out(2230) <= \<const0>\;
  LOCKSTEP_Out(2231) <= \<const0>\;
  LOCKSTEP_Out(2232) <= \<const0>\;
  LOCKSTEP_Out(2233) <= \<const0>\;
  LOCKSTEP_Out(2234) <= \<const0>\;
  LOCKSTEP_Out(2235) <= \<const0>\;
  LOCKSTEP_Out(2236) <= \<const0>\;
  LOCKSTEP_Out(2237) <= \<const0>\;
  LOCKSTEP_Out(2238) <= \<const0>\;
  LOCKSTEP_Out(2239) <= \<const0>\;
  LOCKSTEP_Out(2240) <= \<const0>\;
  LOCKSTEP_Out(2241) <= \<const0>\;
  LOCKSTEP_Out(2242) <= \<const0>\;
  LOCKSTEP_Out(2243) <= \<const0>\;
  LOCKSTEP_Out(2244) <= \<const0>\;
  LOCKSTEP_Out(2245) <= \<const0>\;
  LOCKSTEP_Out(2246) <= \<const0>\;
  LOCKSTEP_Out(2247) <= \<const0>\;
  LOCKSTEP_Out(2248) <= \<const0>\;
  LOCKSTEP_Out(2249) <= \<const0>\;
  LOCKSTEP_Out(2250) <= \<const0>\;
  LOCKSTEP_Out(2251) <= \<const0>\;
  LOCKSTEP_Out(2252) <= \<const0>\;
  LOCKSTEP_Out(2253) <= \<const0>\;
  LOCKSTEP_Out(2254) <= \<const0>\;
  LOCKSTEP_Out(2255) <= \<const0>\;
  LOCKSTEP_Out(2256) <= \<const0>\;
  LOCKSTEP_Out(2257) <= \<const0>\;
  LOCKSTEP_Out(2258) <= \<const0>\;
  LOCKSTEP_Out(2259) <= \<const0>\;
  LOCKSTEP_Out(2260) <= \<const0>\;
  LOCKSTEP_Out(2261) <= \<const0>\;
  LOCKSTEP_Out(2262) <= \<const0>\;
  LOCKSTEP_Out(2263) <= \<const0>\;
  LOCKSTEP_Out(2264) <= \<const0>\;
  LOCKSTEP_Out(2265) <= \<const0>\;
  LOCKSTEP_Out(2266) <= \<const0>\;
  LOCKSTEP_Out(2267) <= \<const0>\;
  LOCKSTEP_Out(2268) <= \<const0>\;
  LOCKSTEP_Out(2269) <= \<const0>\;
  LOCKSTEP_Out(2270) <= \<const0>\;
  LOCKSTEP_Out(2271) <= \<const0>\;
  LOCKSTEP_Out(2272) <= \<const0>\;
  LOCKSTEP_Out(2273) <= \<const0>\;
  LOCKSTEP_Out(2274) <= \<const0>\;
  LOCKSTEP_Out(2275) <= \<const0>\;
  LOCKSTEP_Out(2276) <= \<const0>\;
  LOCKSTEP_Out(2277) <= \<const0>\;
  LOCKSTEP_Out(2278) <= \<const0>\;
  LOCKSTEP_Out(2279) <= \<const0>\;
  LOCKSTEP_Out(2280) <= \<const0>\;
  LOCKSTEP_Out(2281) <= \<const0>\;
  LOCKSTEP_Out(2282) <= \<const0>\;
  LOCKSTEP_Out(2283) <= \<const0>\;
  LOCKSTEP_Out(2284) <= \<const0>\;
  LOCKSTEP_Out(2285) <= \<const0>\;
  LOCKSTEP_Out(2286) <= \<const0>\;
  LOCKSTEP_Out(2287) <= \<const0>\;
  LOCKSTEP_Out(2288) <= \<const0>\;
  LOCKSTEP_Out(2289) <= \<const0>\;
  LOCKSTEP_Out(2290) <= \<const0>\;
  LOCKSTEP_Out(2291) <= \<const0>\;
  LOCKSTEP_Out(2292) <= \<const0>\;
  LOCKSTEP_Out(2293) <= \<const0>\;
  LOCKSTEP_Out(2294) <= \<const0>\;
  LOCKSTEP_Out(2295) <= \<const0>\;
  LOCKSTEP_Out(2296) <= \<const0>\;
  LOCKSTEP_Out(2297) <= \<const0>\;
  LOCKSTEP_Out(2298) <= \<const0>\;
  LOCKSTEP_Out(2299) <= \<const0>\;
  LOCKSTEP_Out(2300) <= \<const0>\;
  LOCKSTEP_Out(2301) <= \<const0>\;
  LOCKSTEP_Out(2302) <= \<const0>\;
  LOCKSTEP_Out(2303) <= \<const0>\;
  LOCKSTEP_Out(2304) <= \<const0>\;
  LOCKSTEP_Out(2305) <= \<const0>\;
  LOCKSTEP_Out(2306) <= \<const0>\;
  LOCKSTEP_Out(2307) <= \<const0>\;
  LOCKSTEP_Out(2308) <= \<const0>\;
  LOCKSTEP_Out(2309) <= \<const0>\;
  LOCKSTEP_Out(2310) <= \<const0>\;
  LOCKSTEP_Out(2311) <= \<const0>\;
  LOCKSTEP_Out(2312) <= \<const0>\;
  LOCKSTEP_Out(2313) <= \<const0>\;
  LOCKSTEP_Out(2314) <= \<const0>\;
  LOCKSTEP_Out(2315) <= \<const0>\;
  LOCKSTEP_Out(2316) <= \<const0>\;
  LOCKSTEP_Out(2317) <= \<const0>\;
  LOCKSTEP_Out(2318) <= \<const0>\;
  LOCKSTEP_Out(2319) <= \<const0>\;
  LOCKSTEP_Out(2320) <= \<const0>\;
  LOCKSTEP_Out(2321) <= \<const0>\;
  LOCKSTEP_Out(2322) <= \<const0>\;
  LOCKSTEP_Out(2323) <= \<const0>\;
  LOCKSTEP_Out(2324) <= \<const0>\;
  LOCKSTEP_Out(2325) <= \<const0>\;
  LOCKSTEP_Out(2326) <= \<const0>\;
  LOCKSTEP_Out(2327) <= \<const0>\;
  LOCKSTEP_Out(2328) <= \<const0>\;
  LOCKSTEP_Out(2329) <= \<const0>\;
  LOCKSTEP_Out(2330) <= \<const0>\;
  LOCKSTEP_Out(2331) <= \<const0>\;
  LOCKSTEP_Out(2332) <= \<const0>\;
  LOCKSTEP_Out(2333) <= \<const0>\;
  LOCKSTEP_Out(2334) <= \<const0>\;
  LOCKSTEP_Out(2335) <= \<const0>\;
  LOCKSTEP_Out(2336) <= \<const0>\;
  LOCKSTEP_Out(2337) <= \<const0>\;
  LOCKSTEP_Out(2338) <= \<const0>\;
  LOCKSTEP_Out(2339) <= \<const0>\;
  LOCKSTEP_Out(2340) <= \<const0>\;
  LOCKSTEP_Out(2341) <= \<const0>\;
  LOCKSTEP_Out(2342) <= \<const0>\;
  LOCKSTEP_Out(2343) <= \<const0>\;
  LOCKSTEP_Out(2344) <= \<const0>\;
  LOCKSTEP_Out(2345) <= \<const0>\;
  LOCKSTEP_Out(2346) <= \<const0>\;
  LOCKSTEP_Out(2347) <= \<const0>\;
  LOCKSTEP_Out(2348) <= \<const0>\;
  LOCKSTEP_Out(2349) <= \<const0>\;
  LOCKSTEP_Out(2350) <= \<const0>\;
  LOCKSTEP_Out(2351) <= \<const0>\;
  LOCKSTEP_Out(2352) <= \<const0>\;
  LOCKSTEP_Out(2353) <= \<const0>\;
  LOCKSTEP_Out(2354) <= \<const0>\;
  LOCKSTEP_Out(2355) <= \<const0>\;
  LOCKSTEP_Out(2356) <= \<const0>\;
  LOCKSTEP_Out(2357) <= \<const0>\;
  LOCKSTEP_Out(2358) <= \<const0>\;
  LOCKSTEP_Out(2359) <= \<const0>\;
  LOCKSTEP_Out(2360) <= \<const0>\;
  LOCKSTEP_Out(2361) <= \<const0>\;
  LOCKSTEP_Out(2362) <= \<const0>\;
  LOCKSTEP_Out(2363) <= \<const0>\;
  LOCKSTEP_Out(2364) <= \<const0>\;
  LOCKSTEP_Out(2365) <= \<const0>\;
  LOCKSTEP_Out(2366) <= \<const0>\;
  LOCKSTEP_Out(2367) <= \<const0>\;
  LOCKSTEP_Out(2368) <= \<const0>\;
  LOCKSTEP_Out(2369) <= \<const0>\;
  LOCKSTEP_Out(2370) <= \<const0>\;
  LOCKSTEP_Out(2371) <= \<const0>\;
  LOCKSTEP_Out(2372) <= \<const0>\;
  LOCKSTEP_Out(2373) <= \<const0>\;
  LOCKSTEP_Out(2374) <= \<const0>\;
  LOCKSTEP_Out(2375) <= \<const0>\;
  LOCKSTEP_Out(2376) <= \<const0>\;
  LOCKSTEP_Out(2377) <= \<const0>\;
  LOCKSTEP_Out(2378) <= \<const0>\;
  LOCKSTEP_Out(2379) <= \<const0>\;
  LOCKSTEP_Out(2380) <= \<const0>\;
  LOCKSTEP_Out(2381) <= \<const0>\;
  LOCKSTEP_Out(2382) <= \<const0>\;
  LOCKSTEP_Out(2383) <= \<const0>\;
  LOCKSTEP_Out(2384) <= \<const0>\;
  LOCKSTEP_Out(2385) <= \<const0>\;
  LOCKSTEP_Out(2386) <= \<const0>\;
  LOCKSTEP_Out(2387) <= \<const0>\;
  LOCKSTEP_Out(2388) <= \<const0>\;
  LOCKSTEP_Out(2389) <= \<const0>\;
  LOCKSTEP_Out(2390) <= \<const0>\;
  LOCKSTEP_Out(2391) <= \<const0>\;
  LOCKSTEP_Out(2392) <= \<const0>\;
  LOCKSTEP_Out(2393) <= \<const0>\;
  LOCKSTEP_Out(2394) <= \<const0>\;
  LOCKSTEP_Out(2395) <= \<const0>\;
  LOCKSTEP_Out(2396) <= \<const0>\;
  LOCKSTEP_Out(2397) <= \<const0>\;
  LOCKSTEP_Out(2398) <= \<const0>\;
  LOCKSTEP_Out(2399) <= \<const0>\;
  LOCKSTEP_Out(2400) <= \<const0>\;
  LOCKSTEP_Out(2401) <= \<const0>\;
  LOCKSTEP_Out(2402) <= \<const0>\;
  LOCKSTEP_Out(2403) <= \<const0>\;
  LOCKSTEP_Out(2404) <= \<const0>\;
  LOCKSTEP_Out(2405) <= \<const0>\;
  LOCKSTEP_Out(2406) <= \<const0>\;
  LOCKSTEP_Out(2407) <= \<const0>\;
  LOCKSTEP_Out(2408) <= \<const0>\;
  LOCKSTEP_Out(2409) <= \<const0>\;
  LOCKSTEP_Out(2410) <= \<const0>\;
  LOCKSTEP_Out(2411) <= \<const0>\;
  LOCKSTEP_Out(2412) <= \<const0>\;
  LOCKSTEP_Out(2413) <= \<const0>\;
  LOCKSTEP_Out(2414) <= \<const0>\;
  LOCKSTEP_Out(2415) <= \<const0>\;
  LOCKSTEP_Out(2416) <= \<const0>\;
  LOCKSTEP_Out(2417) <= \<const0>\;
  LOCKSTEP_Out(2418) <= \<const0>\;
  LOCKSTEP_Out(2419) <= \<const0>\;
  LOCKSTEP_Out(2420) <= \<const0>\;
  LOCKSTEP_Out(2421) <= \<const0>\;
  LOCKSTEP_Out(2422) <= \<const0>\;
  LOCKSTEP_Out(2423) <= \<const0>\;
  LOCKSTEP_Out(2424) <= \<const0>\;
  LOCKSTEP_Out(2425) <= \<const0>\;
  LOCKSTEP_Out(2426) <= \<const0>\;
  LOCKSTEP_Out(2427) <= \<const0>\;
  LOCKSTEP_Out(2428) <= \<const0>\;
  LOCKSTEP_Out(2429) <= \<const0>\;
  LOCKSTEP_Out(2430) <= \<const0>\;
  LOCKSTEP_Out(2431) <= \<const0>\;
  LOCKSTEP_Out(2432) <= \<const0>\;
  LOCKSTEP_Out(2433) <= \<const0>\;
  LOCKSTEP_Out(2434) <= \<const0>\;
  LOCKSTEP_Out(2435) <= \<const0>\;
  LOCKSTEP_Out(2436) <= \<const0>\;
  LOCKSTEP_Out(2437) <= \<const0>\;
  LOCKSTEP_Out(2438) <= \<const0>\;
  LOCKSTEP_Out(2439) <= \<const0>\;
  LOCKSTEP_Out(2440) <= \<const0>\;
  LOCKSTEP_Out(2441) <= \<const0>\;
  LOCKSTEP_Out(2442) <= \<const0>\;
  LOCKSTEP_Out(2443) <= \<const0>\;
  LOCKSTEP_Out(2444) <= \<const0>\;
  LOCKSTEP_Out(2445) <= \<const0>\;
  LOCKSTEP_Out(2446) <= \<const0>\;
  LOCKSTEP_Out(2447) <= \<const0>\;
  LOCKSTEP_Out(2448) <= \<const0>\;
  LOCKSTEP_Out(2449) <= \<const0>\;
  LOCKSTEP_Out(2450) <= \<const0>\;
  LOCKSTEP_Out(2451) <= \<const0>\;
  LOCKSTEP_Out(2452) <= \<const0>\;
  LOCKSTEP_Out(2453) <= \<const0>\;
  LOCKSTEP_Out(2454) <= \<const0>\;
  LOCKSTEP_Out(2455) <= \<const0>\;
  LOCKSTEP_Out(2456) <= \<const0>\;
  LOCKSTEP_Out(2457) <= \<const0>\;
  LOCKSTEP_Out(2458) <= \<const0>\;
  LOCKSTEP_Out(2459) <= \<const0>\;
  LOCKSTEP_Out(2460) <= \<const0>\;
  LOCKSTEP_Out(2461) <= \<const0>\;
  LOCKSTEP_Out(2462) <= \<const0>\;
  LOCKSTEP_Out(2463) <= \<const0>\;
  LOCKSTEP_Out(2464) <= \<const0>\;
  LOCKSTEP_Out(2465) <= \<const0>\;
  LOCKSTEP_Out(2466) <= \<const0>\;
  LOCKSTEP_Out(2467) <= \<const0>\;
  LOCKSTEP_Out(2468) <= \<const0>\;
  LOCKSTEP_Out(2469) <= \<const0>\;
  LOCKSTEP_Out(2470) <= \<const0>\;
  LOCKSTEP_Out(2471) <= \<const0>\;
  LOCKSTEP_Out(2472) <= \<const0>\;
  LOCKSTEP_Out(2473) <= \<const0>\;
  LOCKSTEP_Out(2474) <= \<const0>\;
  LOCKSTEP_Out(2475) <= \<const0>\;
  LOCKSTEP_Out(2476) <= \<const0>\;
  LOCKSTEP_Out(2477) <= \<const0>\;
  LOCKSTEP_Out(2478) <= \<const0>\;
  LOCKSTEP_Out(2479) <= \<const0>\;
  LOCKSTEP_Out(2480) <= \<const0>\;
  LOCKSTEP_Out(2481) <= \<const0>\;
  LOCKSTEP_Out(2482) <= \<const0>\;
  LOCKSTEP_Out(2483) <= \<const0>\;
  LOCKSTEP_Out(2484) <= \<const0>\;
  LOCKSTEP_Out(2485) <= \<const0>\;
  LOCKSTEP_Out(2486) <= \<const0>\;
  LOCKSTEP_Out(2487) <= \<const0>\;
  LOCKSTEP_Out(2488) <= \<const0>\;
  LOCKSTEP_Out(2489) <= \<const0>\;
  LOCKSTEP_Out(2490) <= \<const0>\;
  LOCKSTEP_Out(2491) <= \<const0>\;
  LOCKSTEP_Out(2492) <= \<const0>\;
  LOCKSTEP_Out(2493) <= \<const0>\;
  LOCKSTEP_Out(2494) <= \<const0>\;
  LOCKSTEP_Out(2495) <= \<const0>\;
  LOCKSTEP_Out(2496) <= \<const0>\;
  LOCKSTEP_Out(2497) <= \<const0>\;
  LOCKSTEP_Out(2498) <= \<const0>\;
  LOCKSTEP_Out(2499) <= \<const0>\;
  LOCKSTEP_Out(2500) <= \<const0>\;
  LOCKSTEP_Out(2501) <= \<const0>\;
  LOCKSTEP_Out(2502) <= \<const0>\;
  LOCKSTEP_Out(2503) <= \<const0>\;
  LOCKSTEP_Out(2504) <= \<const0>\;
  LOCKSTEP_Out(2505) <= \<const0>\;
  LOCKSTEP_Out(2506) <= \<const0>\;
  LOCKSTEP_Out(2507) <= \<const0>\;
  LOCKSTEP_Out(2508) <= \<const0>\;
  LOCKSTEP_Out(2509) <= \<const0>\;
  LOCKSTEP_Out(2510) <= \<const0>\;
  LOCKSTEP_Out(2511) <= \<const0>\;
  LOCKSTEP_Out(2512) <= \<const0>\;
  LOCKSTEP_Out(2513) <= \<const0>\;
  LOCKSTEP_Out(2514) <= \<const0>\;
  LOCKSTEP_Out(2515) <= \<const0>\;
  LOCKSTEP_Out(2516) <= \<const0>\;
  LOCKSTEP_Out(2517) <= \<const0>\;
  LOCKSTEP_Out(2518) <= \<const0>\;
  LOCKSTEP_Out(2519) <= \<const0>\;
  LOCKSTEP_Out(2520) <= \<const0>\;
  LOCKSTEP_Out(2521) <= \<const0>\;
  LOCKSTEP_Out(2522) <= \<const0>\;
  LOCKSTEP_Out(2523) <= \<const0>\;
  LOCKSTEP_Out(2524) <= \<const0>\;
  LOCKSTEP_Out(2525) <= \<const0>\;
  LOCKSTEP_Out(2526) <= \<const0>\;
  LOCKSTEP_Out(2527) <= \<const0>\;
  LOCKSTEP_Out(2528) <= \<const0>\;
  LOCKSTEP_Out(2529) <= \<const0>\;
  LOCKSTEP_Out(2530) <= \<const0>\;
  LOCKSTEP_Out(2531) <= \<const0>\;
  LOCKSTEP_Out(2532) <= \<const0>\;
  LOCKSTEP_Out(2533) <= \<const0>\;
  LOCKSTEP_Out(2534) <= \<const0>\;
  LOCKSTEP_Out(2535) <= \<const0>\;
  LOCKSTEP_Out(2536) <= \<const0>\;
  LOCKSTEP_Out(2537) <= \<const0>\;
  LOCKSTEP_Out(2538) <= \<const0>\;
  LOCKSTEP_Out(2539) <= \<const0>\;
  LOCKSTEP_Out(2540) <= \<const0>\;
  LOCKSTEP_Out(2541) <= \<const0>\;
  LOCKSTEP_Out(2542) <= \<const0>\;
  LOCKSTEP_Out(2543) <= \<const0>\;
  LOCKSTEP_Out(2544) <= \<const0>\;
  LOCKSTEP_Out(2545) <= \<const0>\;
  LOCKSTEP_Out(2546) <= \<const0>\;
  LOCKSTEP_Out(2547) <= \<const0>\;
  LOCKSTEP_Out(2548) <= \<const0>\;
  LOCKSTEP_Out(2549) <= \<const0>\;
  LOCKSTEP_Out(2550) <= \<const0>\;
  LOCKSTEP_Out(2551) <= \<const0>\;
  LOCKSTEP_Out(2552) <= \<const0>\;
  LOCKSTEP_Out(2553) <= \<const0>\;
  LOCKSTEP_Out(2554) <= \<const0>\;
  LOCKSTEP_Out(2555) <= \<const0>\;
  LOCKSTEP_Out(2556) <= \<const0>\;
  LOCKSTEP_Out(2557) <= \<const0>\;
  LOCKSTEP_Out(2558) <= \<const0>\;
  LOCKSTEP_Out(2559) <= \<const0>\;
  LOCKSTEP_Out(2560) <= \<const0>\;
  LOCKSTEP_Out(2561) <= \<const0>\;
  LOCKSTEP_Out(2562) <= \<const0>\;
  LOCKSTEP_Out(2563) <= \<const0>\;
  LOCKSTEP_Out(2564) <= \<const0>\;
  LOCKSTEP_Out(2565) <= \<const0>\;
  LOCKSTEP_Out(2566) <= \<const0>\;
  LOCKSTEP_Out(2567) <= \<const0>\;
  LOCKSTEP_Out(2568) <= \<const0>\;
  LOCKSTEP_Out(2569) <= \<const0>\;
  LOCKSTEP_Out(2570) <= \<const0>\;
  LOCKSTEP_Out(2571) <= \<const0>\;
  LOCKSTEP_Out(2572) <= \<const0>\;
  LOCKSTEP_Out(2573) <= \<const0>\;
  LOCKSTEP_Out(2574) <= \<const0>\;
  LOCKSTEP_Out(2575) <= \<const0>\;
  LOCKSTEP_Out(2576) <= \<const0>\;
  LOCKSTEP_Out(2577) <= \<const0>\;
  LOCKSTEP_Out(2578) <= \<const0>\;
  LOCKSTEP_Out(2579) <= \<const0>\;
  LOCKSTEP_Out(2580) <= \<const0>\;
  LOCKSTEP_Out(2581) <= \<const0>\;
  LOCKSTEP_Out(2582) <= \<const0>\;
  LOCKSTEP_Out(2583) <= \<const0>\;
  LOCKSTEP_Out(2584) <= \<const0>\;
  LOCKSTEP_Out(2585) <= \<const0>\;
  LOCKSTEP_Out(2586) <= \<const0>\;
  LOCKSTEP_Out(2587) <= \<const0>\;
  LOCKSTEP_Out(2588) <= \<const0>\;
  LOCKSTEP_Out(2589) <= \<const0>\;
  LOCKSTEP_Out(2590) <= \<const0>\;
  LOCKSTEP_Out(2591) <= \<const0>\;
  LOCKSTEP_Out(2592) <= \<const0>\;
  LOCKSTEP_Out(2593) <= \<const0>\;
  LOCKSTEP_Out(2594) <= \<const0>\;
  LOCKSTEP_Out(2595) <= \<const0>\;
  LOCKSTEP_Out(2596) <= \<const0>\;
  LOCKSTEP_Out(2597) <= \<const0>\;
  LOCKSTEP_Out(2598) <= \<const0>\;
  LOCKSTEP_Out(2599) <= \<const0>\;
  LOCKSTEP_Out(2600) <= \<const0>\;
  LOCKSTEP_Out(2601) <= \<const0>\;
  LOCKSTEP_Out(2602) <= \<const0>\;
  LOCKSTEP_Out(2603) <= \<const0>\;
  LOCKSTEP_Out(2604) <= \<const0>\;
  LOCKSTEP_Out(2605) <= \<const0>\;
  LOCKSTEP_Out(2606) <= \<const0>\;
  LOCKSTEP_Out(2607) <= \<const0>\;
  LOCKSTEP_Out(2608) <= \<const0>\;
  LOCKSTEP_Out(2609) <= \<const0>\;
  LOCKSTEP_Out(2610) <= \<const0>\;
  LOCKSTEP_Out(2611) <= \<const0>\;
  LOCKSTEP_Out(2612) <= \<const0>\;
  LOCKSTEP_Out(2613) <= \<const0>\;
  LOCKSTEP_Out(2614) <= \<const0>\;
  LOCKSTEP_Out(2615) <= \<const0>\;
  LOCKSTEP_Out(2616) <= \<const0>\;
  LOCKSTEP_Out(2617) <= \<const0>\;
  LOCKSTEP_Out(2618) <= \<const0>\;
  LOCKSTEP_Out(2619) <= \<const0>\;
  LOCKSTEP_Out(2620) <= \<const0>\;
  LOCKSTEP_Out(2621) <= \<const0>\;
  LOCKSTEP_Out(2622) <= \<const0>\;
  LOCKSTEP_Out(2623) <= \<const0>\;
  LOCKSTEP_Out(2624) <= \<const0>\;
  LOCKSTEP_Out(2625) <= \<const0>\;
  LOCKSTEP_Out(2626) <= \<const0>\;
  LOCKSTEP_Out(2627) <= \<const0>\;
  LOCKSTEP_Out(2628) <= \<const0>\;
  LOCKSTEP_Out(2629) <= \<const0>\;
  LOCKSTEP_Out(2630) <= \<const0>\;
  LOCKSTEP_Out(2631) <= \<const0>\;
  LOCKSTEP_Out(2632) <= \<const0>\;
  LOCKSTEP_Out(2633) <= \<const0>\;
  LOCKSTEP_Out(2634) <= \<const0>\;
  LOCKSTEP_Out(2635) <= \<const0>\;
  LOCKSTEP_Out(2636) <= \<const0>\;
  LOCKSTEP_Out(2637) <= \<const0>\;
  LOCKSTEP_Out(2638) <= \<const0>\;
  LOCKSTEP_Out(2639) <= \<const0>\;
  LOCKSTEP_Out(2640) <= \<const0>\;
  LOCKSTEP_Out(2641) <= \<const0>\;
  LOCKSTEP_Out(2642) <= \<const0>\;
  LOCKSTEP_Out(2643) <= \<const0>\;
  LOCKSTEP_Out(2644) <= \<const0>\;
  LOCKSTEP_Out(2645) <= \<const0>\;
  LOCKSTEP_Out(2646) <= \<const0>\;
  LOCKSTEP_Out(2647) <= \<const0>\;
  LOCKSTEP_Out(2648) <= \<const0>\;
  LOCKSTEP_Out(2649) <= \<const0>\;
  LOCKSTEP_Out(2650) <= \<const0>\;
  LOCKSTEP_Out(2651) <= \<const0>\;
  LOCKSTEP_Out(2652) <= \<const0>\;
  LOCKSTEP_Out(2653) <= \<const0>\;
  LOCKSTEP_Out(2654) <= \<const0>\;
  LOCKSTEP_Out(2655) <= \<const0>\;
  LOCKSTEP_Out(2656) <= \<const0>\;
  LOCKSTEP_Out(2657) <= \<const0>\;
  LOCKSTEP_Out(2658) <= \<const0>\;
  LOCKSTEP_Out(2659) <= \<const0>\;
  LOCKSTEP_Out(2660) <= \<const0>\;
  LOCKSTEP_Out(2661) <= \<const0>\;
  LOCKSTEP_Out(2662) <= \<const0>\;
  LOCKSTEP_Out(2663) <= \<const0>\;
  LOCKSTEP_Out(2664) <= \<const0>\;
  LOCKSTEP_Out(2665) <= \<const0>\;
  LOCKSTEP_Out(2666) <= \<const0>\;
  LOCKSTEP_Out(2667) <= \<const0>\;
  LOCKSTEP_Out(2668) <= \<const0>\;
  LOCKSTEP_Out(2669) <= \<const0>\;
  LOCKSTEP_Out(2670) <= \<const0>\;
  LOCKSTEP_Out(2671) <= \<const0>\;
  LOCKSTEP_Out(2672) <= \<const0>\;
  LOCKSTEP_Out(2673) <= \<const0>\;
  LOCKSTEP_Out(2674) <= \<const0>\;
  LOCKSTEP_Out(2675) <= \<const0>\;
  LOCKSTEP_Out(2676) <= \<const0>\;
  LOCKSTEP_Out(2677) <= \<const0>\;
  LOCKSTEP_Out(2678) <= \<const0>\;
  LOCKSTEP_Out(2679) <= \<const0>\;
  LOCKSTEP_Out(2680) <= \<const0>\;
  LOCKSTEP_Out(2681) <= \<const0>\;
  LOCKSTEP_Out(2682) <= \<const0>\;
  LOCKSTEP_Out(2683) <= \<const0>\;
  LOCKSTEP_Out(2684) <= \<const0>\;
  LOCKSTEP_Out(2685) <= \<const0>\;
  LOCKSTEP_Out(2686) <= \<const0>\;
  LOCKSTEP_Out(2687) <= \<const0>\;
  LOCKSTEP_Out(2688) <= \<const0>\;
  LOCKSTEP_Out(2689) <= \<const0>\;
  LOCKSTEP_Out(2690) <= \<const0>\;
  LOCKSTEP_Out(2691) <= \<const0>\;
  LOCKSTEP_Out(2692) <= \<const0>\;
  LOCKSTEP_Out(2693) <= \<const0>\;
  LOCKSTEP_Out(2694) <= \<const0>\;
  LOCKSTEP_Out(2695) <= \<const0>\;
  LOCKSTEP_Out(2696) <= \<const0>\;
  LOCKSTEP_Out(2697) <= \<const0>\;
  LOCKSTEP_Out(2698) <= \<const0>\;
  LOCKSTEP_Out(2699) <= \<const0>\;
  LOCKSTEP_Out(2700) <= \<const0>\;
  LOCKSTEP_Out(2701) <= \<const0>\;
  LOCKSTEP_Out(2702) <= \<const0>\;
  LOCKSTEP_Out(2703) <= \<const0>\;
  LOCKSTEP_Out(2704) <= \<const0>\;
  LOCKSTEP_Out(2705) <= \<const0>\;
  LOCKSTEP_Out(2706) <= \<const0>\;
  LOCKSTEP_Out(2707) <= \<const0>\;
  LOCKSTEP_Out(2708) <= \<const0>\;
  LOCKSTEP_Out(2709) <= \<const0>\;
  LOCKSTEP_Out(2710) <= \<const0>\;
  LOCKSTEP_Out(2711) <= \<const0>\;
  LOCKSTEP_Out(2712) <= \<const0>\;
  LOCKSTEP_Out(2713) <= \<const0>\;
  LOCKSTEP_Out(2714) <= \<const0>\;
  LOCKSTEP_Out(2715) <= \<const0>\;
  LOCKSTEP_Out(2716) <= \<const0>\;
  LOCKSTEP_Out(2717) <= \<const0>\;
  LOCKSTEP_Out(2718) <= \<const0>\;
  LOCKSTEP_Out(2719) <= \<const0>\;
  LOCKSTEP_Out(2720) <= \<const0>\;
  LOCKSTEP_Out(2721) <= \<const0>\;
  LOCKSTEP_Out(2722) <= \<const0>\;
  LOCKSTEP_Out(2723) <= \<const0>\;
  LOCKSTEP_Out(2724) <= \<const0>\;
  LOCKSTEP_Out(2725) <= \<const0>\;
  LOCKSTEP_Out(2726) <= \<const0>\;
  LOCKSTEP_Out(2727) <= \<const0>\;
  LOCKSTEP_Out(2728) <= \<const0>\;
  LOCKSTEP_Out(2729) <= \<const0>\;
  LOCKSTEP_Out(2730) <= \<const0>\;
  LOCKSTEP_Out(2731) <= \<const0>\;
  LOCKSTEP_Out(2732) <= \<const0>\;
  LOCKSTEP_Out(2733) <= \<const0>\;
  LOCKSTEP_Out(2734) <= \<const0>\;
  LOCKSTEP_Out(2735) <= \<const0>\;
  LOCKSTEP_Out(2736) <= \<const0>\;
  LOCKSTEP_Out(2737) <= \<const0>\;
  LOCKSTEP_Out(2738) <= \<const0>\;
  LOCKSTEP_Out(2739) <= \<const0>\;
  LOCKSTEP_Out(2740) <= \<const0>\;
  LOCKSTEP_Out(2741) <= \<const0>\;
  LOCKSTEP_Out(2742) <= \<const0>\;
  LOCKSTEP_Out(2743) <= \<const0>\;
  LOCKSTEP_Out(2744) <= \<const0>\;
  LOCKSTEP_Out(2745) <= \<const0>\;
  LOCKSTEP_Out(2746) <= \<const0>\;
  LOCKSTEP_Out(2747) <= \<const0>\;
  LOCKSTEP_Out(2748) <= \<const0>\;
  LOCKSTEP_Out(2749) <= \<const0>\;
  LOCKSTEP_Out(2750) <= \<const0>\;
  LOCKSTEP_Out(2751) <= \<const0>\;
  LOCKSTEP_Out(2752) <= \<const0>\;
  LOCKSTEP_Out(2753) <= \<const0>\;
  LOCKSTEP_Out(2754) <= \<const0>\;
  LOCKSTEP_Out(2755) <= \<const0>\;
  LOCKSTEP_Out(2756) <= \<const0>\;
  LOCKSTEP_Out(2757) <= \<const0>\;
  LOCKSTEP_Out(2758) <= \<const0>\;
  LOCKSTEP_Out(2759) <= \<const0>\;
  LOCKSTEP_Out(2760) <= \<const0>\;
  LOCKSTEP_Out(2761) <= \<const0>\;
  LOCKSTEP_Out(2762) <= \<const0>\;
  LOCKSTEP_Out(2763) <= \<const0>\;
  LOCKSTEP_Out(2764) <= \<const0>\;
  LOCKSTEP_Out(2765) <= \<const0>\;
  LOCKSTEP_Out(2766) <= \<const0>\;
  LOCKSTEP_Out(2767) <= \<const0>\;
  LOCKSTEP_Out(2768) <= \<const0>\;
  LOCKSTEP_Out(2769) <= \<const0>\;
  LOCKSTEP_Out(2770) <= \<const0>\;
  LOCKSTEP_Out(2771) <= \<const0>\;
  LOCKSTEP_Out(2772) <= \<const0>\;
  LOCKSTEP_Out(2773) <= \<const0>\;
  LOCKSTEP_Out(2774) <= \<const0>\;
  LOCKSTEP_Out(2775) <= \<const0>\;
  LOCKSTEP_Out(2776) <= \<const0>\;
  LOCKSTEP_Out(2777) <= \<const0>\;
  LOCKSTEP_Out(2778) <= \<const0>\;
  LOCKSTEP_Out(2779) <= \<const0>\;
  LOCKSTEP_Out(2780) <= \<const0>\;
  LOCKSTEP_Out(2781) <= \<const0>\;
  LOCKSTEP_Out(2782) <= \<const0>\;
  LOCKSTEP_Out(2783) <= \<const0>\;
  LOCKSTEP_Out(2784) <= \<const0>\;
  LOCKSTEP_Out(2785) <= \<const0>\;
  LOCKSTEP_Out(2786) <= \<const0>\;
  LOCKSTEP_Out(2787) <= \<const0>\;
  LOCKSTEP_Out(2788) <= \<const0>\;
  LOCKSTEP_Out(2789) <= \<const0>\;
  LOCKSTEP_Out(2790) <= \<const0>\;
  LOCKSTEP_Out(2791) <= \<const0>\;
  LOCKSTEP_Out(2792) <= \<const0>\;
  LOCKSTEP_Out(2793) <= \<const0>\;
  LOCKSTEP_Out(2794) <= \<const0>\;
  LOCKSTEP_Out(2795) <= \<const0>\;
  LOCKSTEP_Out(2796) <= \<const0>\;
  LOCKSTEP_Out(2797) <= \<const0>\;
  LOCKSTEP_Out(2798) <= \<const0>\;
  LOCKSTEP_Out(2799) <= \<const0>\;
  LOCKSTEP_Out(2800) <= \<const0>\;
  LOCKSTEP_Out(2801) <= \<const0>\;
  LOCKSTEP_Out(2802) <= \<const0>\;
  LOCKSTEP_Out(2803) <= \<const0>\;
  LOCKSTEP_Out(2804) <= \<const0>\;
  LOCKSTEP_Out(2805) <= \<const0>\;
  LOCKSTEP_Out(2806) <= \<const0>\;
  LOCKSTEP_Out(2807) <= \<const0>\;
  LOCKSTEP_Out(2808) <= \<const0>\;
  LOCKSTEP_Out(2809) <= \<const0>\;
  LOCKSTEP_Out(2810) <= \<const0>\;
  LOCKSTEP_Out(2811) <= \<const0>\;
  LOCKSTEP_Out(2812) <= \<const0>\;
  LOCKSTEP_Out(2813) <= \<const0>\;
  LOCKSTEP_Out(2814) <= \<const0>\;
  LOCKSTEP_Out(2815) <= \<const0>\;
  LOCKSTEP_Out(2816) <= \<const0>\;
  LOCKSTEP_Out(2817) <= \<const0>\;
  LOCKSTEP_Out(2818) <= \<const0>\;
  LOCKSTEP_Out(2819) <= \<const0>\;
  LOCKSTEP_Out(2820) <= \<const0>\;
  LOCKSTEP_Out(2821) <= \<const0>\;
  LOCKSTEP_Out(2822) <= \<const0>\;
  LOCKSTEP_Out(2823) <= \<const0>\;
  LOCKSTEP_Out(2824) <= \<const0>\;
  LOCKSTEP_Out(2825) <= \<const0>\;
  LOCKSTEP_Out(2826) <= \<const0>\;
  LOCKSTEP_Out(2827) <= \<const0>\;
  LOCKSTEP_Out(2828) <= \<const0>\;
  LOCKSTEP_Out(2829) <= \<const0>\;
  LOCKSTEP_Out(2830) <= \<const0>\;
  LOCKSTEP_Out(2831) <= \<const0>\;
  LOCKSTEP_Out(2832) <= \<const0>\;
  LOCKSTEP_Out(2833) <= \<const0>\;
  LOCKSTEP_Out(2834) <= \<const0>\;
  LOCKSTEP_Out(2835) <= \<const0>\;
  LOCKSTEP_Out(2836) <= \<const0>\;
  LOCKSTEP_Out(2837) <= \<const0>\;
  LOCKSTEP_Out(2838) <= \<const0>\;
  LOCKSTEP_Out(2839) <= \<const0>\;
  LOCKSTEP_Out(2840) <= \<const0>\;
  LOCKSTEP_Out(2841) <= \<const0>\;
  LOCKSTEP_Out(2842) <= \<const0>\;
  LOCKSTEP_Out(2843) <= \<const0>\;
  LOCKSTEP_Out(2844) <= \<const0>\;
  LOCKSTEP_Out(2845) <= \<const0>\;
  LOCKSTEP_Out(2846) <= \<const0>\;
  LOCKSTEP_Out(2847) <= \<const0>\;
  LOCKSTEP_Out(2848) <= \<const0>\;
  LOCKSTEP_Out(2849) <= \<const0>\;
  LOCKSTEP_Out(2850) <= \<const0>\;
  LOCKSTEP_Out(2851) <= \<const0>\;
  LOCKSTEP_Out(2852) <= \<const0>\;
  LOCKSTEP_Out(2853) <= \<const0>\;
  LOCKSTEP_Out(2854) <= \<const0>\;
  LOCKSTEP_Out(2855) <= \<const0>\;
  LOCKSTEP_Out(2856) <= \<const0>\;
  LOCKSTEP_Out(2857) <= \<const0>\;
  LOCKSTEP_Out(2858) <= \<const0>\;
  LOCKSTEP_Out(2859) <= \<const0>\;
  LOCKSTEP_Out(2860) <= \<const0>\;
  LOCKSTEP_Out(2861) <= \<const0>\;
  LOCKSTEP_Out(2862) <= \<const0>\;
  LOCKSTEP_Out(2863) <= \<const0>\;
  LOCKSTEP_Out(2864) <= \<const0>\;
  LOCKSTEP_Out(2865) <= \<const0>\;
  LOCKSTEP_Out(2866) <= \<const0>\;
  LOCKSTEP_Out(2867) <= \<const0>\;
  LOCKSTEP_Out(2868) <= \<const0>\;
  LOCKSTEP_Out(2869) <= \<const0>\;
  LOCKSTEP_Out(2870) <= \<const0>\;
  LOCKSTEP_Out(2871) <= \<const0>\;
  LOCKSTEP_Out(2872) <= \<const0>\;
  LOCKSTEP_Out(2873) <= \<const0>\;
  LOCKSTEP_Out(2874) <= \<const0>\;
  LOCKSTEP_Out(2875) <= \<const0>\;
  LOCKSTEP_Out(2876) <= \<const0>\;
  LOCKSTEP_Out(2877) <= \<const0>\;
  LOCKSTEP_Out(2878) <= \<const0>\;
  LOCKSTEP_Out(2879) <= \<const0>\;
  LOCKSTEP_Out(2880) <= \<const0>\;
  LOCKSTEP_Out(2881 to 2945) <= \^lockstep_out\(2881 to 2945);
  LOCKSTEP_Out(2946) <= \<const0>\;
  LOCKSTEP_Out(2947) <= \<const0>\;
  LOCKSTEP_Out(2948) <= \<const0>\;
  LOCKSTEP_Out(2949) <= \<const0>\;
  LOCKSTEP_Out(2950) <= \<const0>\;
  LOCKSTEP_Out(2951) <= \<const0>\;
  LOCKSTEP_Out(2952) <= \<const0>\;
  LOCKSTEP_Out(2953) <= \<const0>\;
  LOCKSTEP_Out(2954) <= \<const0>\;
  LOCKSTEP_Out(2955) <= \<const0>\;
  LOCKSTEP_Out(2956) <= \<const0>\;
  LOCKSTEP_Out(2957) <= \<const0>\;
  LOCKSTEP_Out(2958) <= \<const0>\;
  LOCKSTEP_Out(2959) <= \<const0>\;
  LOCKSTEP_Out(2960) <= \<const0>\;
  LOCKSTEP_Out(2961) <= \<const0>\;
  LOCKSTEP_Out(2962) <= \<const0>\;
  LOCKSTEP_Out(2963) <= \<const0>\;
  LOCKSTEP_Out(2964) <= \<const0>\;
  LOCKSTEP_Out(2965) <= \<const0>\;
  LOCKSTEP_Out(2966) <= \<const0>\;
  LOCKSTEP_Out(2967) <= \<const0>\;
  LOCKSTEP_Out(2968) <= \<const0>\;
  LOCKSTEP_Out(2969) <= \<const0>\;
  LOCKSTEP_Out(2970) <= \<const0>\;
  LOCKSTEP_Out(2971) <= \<const0>\;
  LOCKSTEP_Out(2972) <= \<const0>\;
  LOCKSTEP_Out(2973) <= \<const0>\;
  LOCKSTEP_Out(2974) <= \<const0>\;
  LOCKSTEP_Out(2975) <= \<const0>\;
  LOCKSTEP_Out(2976) <= \<const0>\;
  LOCKSTEP_Out(2977) <= \<const0>\;
  LOCKSTEP_Out(2978 to 2983) <= \^lockstep_out\(2978 to 2983);
  LOCKSTEP_Out(2984) <= \<const0>\;
  LOCKSTEP_Out(2985) <= \<const0>\;
  LOCKSTEP_Out(2986) <= \<const0>\;
  LOCKSTEP_Out(2987) <= \<const0>\;
  LOCKSTEP_Out(2988) <= \<const0>\;
  LOCKSTEP_Out(2989 to 2990) <= \^lockstep_out\(2989 to 2990);
  LOCKSTEP_Out(2991) <= \<const0>\;
  LOCKSTEP_Out(2992) <= \^lockstep_out\(2992);
  LOCKSTEP_Out(2993) <= \<const0>\;
  LOCKSTEP_Out(2994) <= \<const0>\;
  LOCKSTEP_Out(2995 to 2997) <= \^lockstep_out\(2995 to 2997);
  LOCKSTEP_Out(2998) <= \<const0>\;
  LOCKSTEP_Out(2999) <= \<const0>\;
  LOCKSTEP_Out(3000) <= \<const0>\;
  LOCKSTEP_Out(3001) <= \<const0>\;
  LOCKSTEP_Out(3002) <= \<const0>\;
  LOCKSTEP_Out(3003) <= \<const0>\;
  LOCKSTEP_Out(3004) <= \<const0>\;
  LOCKSTEP_Out(3005) <= \<const0>\;
  LOCKSTEP_Out(3006) <= \<const0>\;
  LOCKSTEP_Out(3007 to 3038) <= \^lockstep_out\(3007 to 3038);
  LOCKSTEP_Out(3039) <= \<const0>\;
  LOCKSTEP_Out(3040) <= \<const0>\;
  LOCKSTEP_Out(3041) <= \<const0>\;
  LOCKSTEP_Out(3042) <= \<const0>\;
  LOCKSTEP_Out(3043) <= \<const0>\;
  LOCKSTEP_Out(3044) <= \<const0>\;
  LOCKSTEP_Out(3045) <= \<const0>\;
  LOCKSTEP_Out(3046) <= \<const0>\;
  LOCKSTEP_Out(3047) <= \<const0>\;
  LOCKSTEP_Out(3048) <= \<const0>\;
  LOCKSTEP_Out(3049) <= \<const0>\;
  LOCKSTEP_Out(3050) <= \<const0>\;
  LOCKSTEP_Out(3051) <= \<const0>\;
  LOCKSTEP_Out(3052) <= \<const0>\;
  LOCKSTEP_Out(3053) <= \<const0>\;
  LOCKSTEP_Out(3054) <= \<const0>\;
  LOCKSTEP_Out(3055) <= \<const0>\;
  LOCKSTEP_Out(3056) <= \<const0>\;
  LOCKSTEP_Out(3057) <= \<const0>\;
  LOCKSTEP_Out(3058) <= \<const0>\;
  LOCKSTEP_Out(3059) <= \<const0>\;
  LOCKSTEP_Out(3060) <= \<const0>\;
  LOCKSTEP_Out(3061) <= \<const0>\;
  LOCKSTEP_Out(3062) <= \<const0>\;
  LOCKSTEP_Out(3063) <= \<const0>\;
  LOCKSTEP_Out(3064) <= \<const0>\;
  LOCKSTEP_Out(3065) <= \<const0>\;
  LOCKSTEP_Out(3066) <= \<const0>\;
  LOCKSTEP_Out(3067) <= \<const0>\;
  LOCKSTEP_Out(3068) <= \<const0>\;
  LOCKSTEP_Out(3069) <= \<const0>\;
  LOCKSTEP_Out(3070) <= \<const0>\;
  LOCKSTEP_Out(3071) <= \^lockstep_out\(3071);
  LOCKSTEP_Out(3072) <= \<const0>\;
  LOCKSTEP_Out(3073 to 3110) <= \^lockstep_out\(3073 to 3110);
  LOCKSTEP_Out(3111) <= \<const0>\;
  LOCKSTEP_Out(3112) <= \<const0>\;
  LOCKSTEP_Out(3113) <= \<const0>\;
  LOCKSTEP_Out(3114) <= \<const0>\;
  LOCKSTEP_Out(3115) <= \<const0>\;
  LOCKSTEP_Out(3116) <= \<const0>\;
  LOCKSTEP_Out(3117) <= \<const0>\;
  LOCKSTEP_Out(3118) <= \<const0>\;
  LOCKSTEP_Out(3119) <= \<const0>\;
  LOCKSTEP_Out(3120) <= \<const0>\;
  LOCKSTEP_Out(3121) <= \<const0>\;
  LOCKSTEP_Out(3122) <= \<const0>\;
  LOCKSTEP_Out(3123) <= \<const0>\;
  LOCKSTEP_Out(3124) <= \<const0>\;
  LOCKSTEP_Out(3125) <= \<const0>\;
  LOCKSTEP_Out(3126) <= \<const0>\;
  LOCKSTEP_Out(3127) <= \<const0>\;
  LOCKSTEP_Out(3128) <= \<const0>\;
  LOCKSTEP_Out(3129) <= \<const0>\;
  LOCKSTEP_Out(3130) <= \<const0>\;
  LOCKSTEP_Out(3131) <= \<const0>\;
  LOCKSTEP_Out(3132) <= \<const0>\;
  LOCKSTEP_Out(3133) <= \<const0>\;
  LOCKSTEP_Out(3134) <= \<const0>\;
  LOCKSTEP_Out(3135) <= \<const0>\;
  LOCKSTEP_Out(3136) <= \<const0>\;
  LOCKSTEP_Out(3137) <= \<const0>\;
  LOCKSTEP_Out(3138) <= \<const0>\;
  LOCKSTEP_Out(3139) <= \<const0>\;
  LOCKSTEP_Out(3140) <= \<const0>\;
  LOCKSTEP_Out(3141) <= \<const0>\;
  LOCKSTEP_Out(3142) <= \<const0>\;
  LOCKSTEP_Out(3143 to 3174) <= \^lockstep_out\(3143 to 3174);
  LOCKSTEP_Out(3175) <= \<const0>\;
  LOCKSTEP_Out(3176) <= \<const0>\;
  LOCKSTEP_Out(3177) <= \<const0>\;
  LOCKSTEP_Out(3178) <= \<const0>\;
  LOCKSTEP_Out(3179) <= \<const0>\;
  LOCKSTEP_Out(3180) <= \<const0>\;
  LOCKSTEP_Out(3181) <= \<const0>\;
  LOCKSTEP_Out(3182) <= \<const0>\;
  LOCKSTEP_Out(3183) <= \<const0>\;
  LOCKSTEP_Out(3184) <= \<const0>\;
  LOCKSTEP_Out(3185) <= \<const0>\;
  LOCKSTEP_Out(3186) <= \<const0>\;
  LOCKSTEP_Out(3187) <= \<const0>\;
  LOCKSTEP_Out(3188) <= \<const0>\;
  LOCKSTEP_Out(3189) <= \<const0>\;
  LOCKSTEP_Out(3190) <= \<const0>\;
  LOCKSTEP_Out(3191) <= \<const0>\;
  LOCKSTEP_Out(3192) <= \<const0>\;
  LOCKSTEP_Out(3193) <= \<const0>\;
  LOCKSTEP_Out(3194) <= \<const0>\;
  LOCKSTEP_Out(3195) <= \<const0>\;
  LOCKSTEP_Out(3196) <= \<const0>\;
  LOCKSTEP_Out(3197) <= \<const0>\;
  LOCKSTEP_Out(3198) <= \<const0>\;
  LOCKSTEP_Out(3199) <= \<const0>\;
  LOCKSTEP_Out(3200) <= \<const0>\;
  LOCKSTEP_Out(3201) <= \<const0>\;
  LOCKSTEP_Out(3202) <= \<const0>\;
  LOCKSTEP_Out(3203) <= \<const0>\;
  LOCKSTEP_Out(3204) <= \<const0>\;
  LOCKSTEP_Out(3205) <= \<const0>\;
  LOCKSTEP_Out(3206) <= \<const0>\;
  LOCKSTEP_Out(3207 to 3210) <= \^lockstep_out\(3207 to 3210);
  LOCKSTEP_Out(3211) <= \<const0>\;
  LOCKSTEP_Out(3212) <= \<const0>\;
  LOCKSTEP_Out(3213) <= \<const0>\;
  LOCKSTEP_Out(3214) <= \<const0>\;
  LOCKSTEP_Out(3215 to 3217) <= \^lockstep_out\(3215 to 3217);
  LOCKSTEP_Out(3218) <= \<const0>\;
  LOCKSTEP_Out(3219) <= \<const0>\;
  LOCKSTEP_Out(3220) <= \<const0>\;
  LOCKSTEP_Out(3221) <= \<const0>\;
  LOCKSTEP_Out(3222) <= \<const0>\;
  LOCKSTEP_Out(3223) <= \<const0>\;
  LOCKSTEP_Out(3224) <= \<const0>\;
  LOCKSTEP_Out(3225 to 3228) <= \^lockstep_out\(3225 to 3228);
  LOCKSTEP_Out(3229) <= \<const0>\;
  LOCKSTEP_Out(3230) <= \<const0>\;
  LOCKSTEP_Out(3231) <= \<const0>\;
  LOCKSTEP_Out(3232) <= \<const0>\;
  LOCKSTEP_Out(3233) <= \<const0>\;
  LOCKSTEP_Out(3234) <= \<const0>\;
  LOCKSTEP_Out(3235) <= \<const0>\;
  LOCKSTEP_Out(3236) <= \<const0>\;
  LOCKSTEP_Out(3237) <= \<const0>\;
  LOCKSTEP_Out(3238) <= \<const0>\;
  LOCKSTEP_Out(3239) <= \<const0>\;
  LOCKSTEP_Out(3240) <= \<const0>\;
  LOCKSTEP_Out(3241) <= \<const0>\;
  LOCKSTEP_Out(3242) <= \<const0>\;
  LOCKSTEP_Out(3243) <= \<const0>\;
  LOCKSTEP_Out(3244) <= \<const0>\;
  LOCKSTEP_Out(3245) <= \<const0>\;
  LOCKSTEP_Out(3246) <= \<const0>\;
  LOCKSTEP_Out(3247) <= \<const0>\;
  LOCKSTEP_Out(3248) <= \<const0>\;
  LOCKSTEP_Out(3249) <= \<const0>\;
  LOCKSTEP_Out(3250) <= \<const0>\;
  LOCKSTEP_Out(3251) <= \<const0>\;
  LOCKSTEP_Out(3252) <= \<const0>\;
  LOCKSTEP_Out(3253) <= \<const0>\;
  LOCKSTEP_Out(3254) <= \<const0>\;
  LOCKSTEP_Out(3255) <= \<const0>\;
  LOCKSTEP_Out(3256) <= \<const0>\;
  LOCKSTEP_Out(3257) <= \<const0>\;
  LOCKSTEP_Out(3258) <= \<const0>\;
  LOCKSTEP_Out(3259) <= \<const0>\;
  LOCKSTEP_Out(3260) <= \<const0>\;
  LOCKSTEP_Out(3261) <= \<const0>\;
  LOCKSTEP_Out(3262) <= \<const0>\;
  LOCKSTEP_Out(3263) <= \<const0>\;
  LOCKSTEP_Out(3264) <= \<const0>\;
  LOCKSTEP_Out(3265) <= \<const0>\;
  LOCKSTEP_Out(3266) <= \<const0>\;
  LOCKSTEP_Out(3267) <= \<const0>\;
  LOCKSTEP_Out(3268) <= \<const0>\;
  LOCKSTEP_Out(3269) <= \<const0>\;
  LOCKSTEP_Out(3270) <= \<const0>\;
  LOCKSTEP_Out(3271) <= \<const0>\;
  LOCKSTEP_Out(3272) <= \<const0>\;
  LOCKSTEP_Out(3273) <= \<const0>\;
  LOCKSTEP_Out(3274) <= \<const0>\;
  LOCKSTEP_Out(3275) <= \<const0>\;
  LOCKSTEP_Out(3276) <= \<const0>\;
  LOCKSTEP_Out(3277) <= \<const0>\;
  LOCKSTEP_Out(3278) <= \<const0>\;
  LOCKSTEP_Out(3279) <= \<const0>\;
  LOCKSTEP_Out(3280) <= \<const0>\;
  LOCKSTEP_Out(3281) <= \<const0>\;
  LOCKSTEP_Out(3282) <= \<const0>\;
  LOCKSTEP_Out(3283) <= \<const0>\;
  LOCKSTEP_Out(3284) <= \<const0>\;
  LOCKSTEP_Out(3285) <= \<const0>\;
  LOCKSTEP_Out(3286) <= \<const0>\;
  LOCKSTEP_Out(3287) <= \<const0>\;
  LOCKSTEP_Out(3288) <= \<const0>\;
  LOCKSTEP_Out(3289) <= \<const0>\;
  LOCKSTEP_Out(3290) <= \<const0>\;
  LOCKSTEP_Out(3291) <= \<const0>\;
  LOCKSTEP_Out(3292) <= \<const0>\;
  LOCKSTEP_Out(3293) <= \<const0>\;
  LOCKSTEP_Out(3294) <= \<const0>\;
  LOCKSTEP_Out(3295) <= \<const0>\;
  LOCKSTEP_Out(3296) <= \<const0>\;
  LOCKSTEP_Out(3297) <= \<const0>\;
  LOCKSTEP_Out(3298) <= \<const0>\;
  LOCKSTEP_Out(3299) <= \<const0>\;
  LOCKSTEP_Out(3300) <= \<const0>\;
  LOCKSTEP_Out(3301) <= \<const0>\;
  LOCKSTEP_Out(3302) <= \<const0>\;
  LOCKSTEP_Out(3303) <= \<const0>\;
  LOCKSTEP_Out(3304) <= \<const0>\;
  LOCKSTEP_Out(3305) <= \<const0>\;
  LOCKSTEP_Out(3306) <= \<const0>\;
  LOCKSTEP_Out(3307) <= \<const0>\;
  LOCKSTEP_Out(3308) <= \<const0>\;
  LOCKSTEP_Out(3309) <= \<const0>\;
  LOCKSTEP_Out(3310) <= \<const0>\;
  LOCKSTEP_Out(3311) <= \<const0>\;
  LOCKSTEP_Out(3312) <= \<const0>\;
  LOCKSTEP_Out(3313) <= \<const0>\;
  LOCKSTEP_Out(3314) <= \<const0>\;
  LOCKSTEP_Out(3315) <= \<const0>\;
  LOCKSTEP_Out(3316) <= \<const0>\;
  LOCKSTEP_Out(3317) <= \<const0>\;
  LOCKSTEP_Out(3318) <= \<const0>\;
  LOCKSTEP_Out(3319) <= \<const0>\;
  LOCKSTEP_Out(3320) <= \<const0>\;
  LOCKSTEP_Out(3321) <= \<const0>\;
  LOCKSTEP_Out(3322) <= \<const0>\;
  LOCKSTEP_Out(3323) <= \<const0>\;
  LOCKSTEP_Out(3324) <= \<const0>\;
  LOCKSTEP_Out(3325) <= \<const0>\;
  LOCKSTEP_Out(3326) <= \<const0>\;
  LOCKSTEP_Out(3327) <= \<const0>\;
  LOCKSTEP_Out(3328) <= \<const0>\;
  LOCKSTEP_Out(3329) <= \<const0>\;
  LOCKSTEP_Out(3330) <= \<const0>\;
  LOCKSTEP_Out(3331) <= \<const0>\;
  LOCKSTEP_Out(3332) <= \<const0>\;
  LOCKSTEP_Out(3333) <= \<const0>\;
  LOCKSTEP_Out(3334) <= \<const0>\;
  LOCKSTEP_Out(3335) <= \<const0>\;
  LOCKSTEP_Out(3336) <= \<const0>\;
  LOCKSTEP_Out(3337) <= \<const0>\;
  LOCKSTEP_Out(3338) <= \<const0>\;
  LOCKSTEP_Out(3339) <= \<const0>\;
  LOCKSTEP_Out(3340) <= \<const0>\;
  LOCKSTEP_Out(3341) <= \<const0>\;
  LOCKSTEP_Out(3342) <= \<const0>\;
  LOCKSTEP_Out(3343) <= \<const0>\;
  LOCKSTEP_Out(3344) <= \<const0>\;
  LOCKSTEP_Out(3345) <= \<const0>\;
  LOCKSTEP_Out(3346) <= \<const0>\;
  LOCKSTEP_Out(3347) <= \<const0>\;
  LOCKSTEP_Out(3348) <= \<const0>\;
  LOCKSTEP_Out(3349) <= \<const0>\;
  LOCKSTEP_Out(3350) <= \<const0>\;
  LOCKSTEP_Out(3351) <= \<const0>\;
  LOCKSTEP_Out(3352) <= \<const0>\;
  LOCKSTEP_Out(3353) <= \<const0>\;
  LOCKSTEP_Out(3354) <= \<const0>\;
  LOCKSTEP_Out(3355) <= \<const0>\;
  LOCKSTEP_Out(3356) <= \<const0>\;
  LOCKSTEP_Out(3357) <= \<const0>\;
  LOCKSTEP_Out(3358) <= \<const0>\;
  LOCKSTEP_Out(3359) <= \<const0>\;
  LOCKSTEP_Out(3360) <= \<const0>\;
  LOCKSTEP_Out(3361) <= \<const0>\;
  LOCKSTEP_Out(3362) <= \<const0>\;
  LOCKSTEP_Out(3363) <= \<const0>\;
  LOCKSTEP_Out(3364) <= \<const0>\;
  LOCKSTEP_Out(3365) <= \<const0>\;
  LOCKSTEP_Out(3366) <= \<const0>\;
  LOCKSTEP_Out(3367) <= \<const0>\;
  LOCKSTEP_Out(3368) <= \<const0>\;
  LOCKSTEP_Out(3369) <= \<const0>\;
  LOCKSTEP_Out(3370) <= \<const0>\;
  LOCKSTEP_Out(3371) <= \<const0>\;
  LOCKSTEP_Out(3372) <= \<const0>\;
  LOCKSTEP_Out(3373) <= \<const0>\;
  LOCKSTEP_Out(3374) <= \<const0>\;
  LOCKSTEP_Out(3375) <= \<const0>\;
  LOCKSTEP_Out(3376) <= \<const0>\;
  LOCKSTEP_Out(3377) <= \<const0>\;
  LOCKSTEP_Out(3378) <= \<const0>\;
  LOCKSTEP_Out(3379) <= \<const0>\;
  LOCKSTEP_Out(3380) <= \<const0>\;
  LOCKSTEP_Out(3381) <= \<const0>\;
  LOCKSTEP_Out(3382) <= \<const0>\;
  LOCKSTEP_Out(3383) <= \<const0>\;
  LOCKSTEP_Out(3384) <= \<const0>\;
  LOCKSTEP_Out(3385) <= \<const0>\;
  LOCKSTEP_Out(3386) <= \<const0>\;
  LOCKSTEP_Out(3387) <= \<const0>\;
  LOCKSTEP_Out(3388) <= \<const0>\;
  LOCKSTEP_Out(3389) <= \<const0>\;
  LOCKSTEP_Out(3390) <= \<const0>\;
  LOCKSTEP_Out(3391) <= \<const0>\;
  LOCKSTEP_Out(3392) <= \<const0>\;
  LOCKSTEP_Out(3393) <= \<const0>\;
  LOCKSTEP_Out(3394) <= \<const0>\;
  LOCKSTEP_Out(3395) <= \<const0>\;
  LOCKSTEP_Out(3396) <= \<const0>\;
  LOCKSTEP_Out(3397) <= \<const0>\;
  LOCKSTEP_Out(3398) <= \<const0>\;
  LOCKSTEP_Out(3399) <= \<const0>\;
  LOCKSTEP_Out(3400) <= \<const0>\;
  LOCKSTEP_Out(3401) <= \<const0>\;
  LOCKSTEP_Out(3402) <= \<const0>\;
  LOCKSTEP_Out(3403) <= \<const0>\;
  LOCKSTEP_Out(3404) <= \<const0>\;
  LOCKSTEP_Out(3405) <= \<const0>\;
  LOCKSTEP_Out(3406) <= \<const0>\;
  LOCKSTEP_Out(3407) <= \<const0>\;
  LOCKSTEP_Out(3408) <= \<const0>\;
  LOCKSTEP_Out(3409) <= \<const0>\;
  LOCKSTEP_Out(3410) <= \<const0>\;
  LOCKSTEP_Out(3411) <= \<const0>\;
  LOCKSTEP_Out(3412) <= \<const0>\;
  LOCKSTEP_Out(3413) <= \<const0>\;
  LOCKSTEP_Out(3414) <= \<const0>\;
  LOCKSTEP_Out(3415) <= \<const0>\;
  LOCKSTEP_Out(3416) <= \<const0>\;
  LOCKSTEP_Out(3417) <= \<const0>\;
  LOCKSTEP_Out(3418) <= \<const0>\;
  LOCKSTEP_Out(3419) <= \<const0>\;
  LOCKSTEP_Out(3420) <= \<const0>\;
  LOCKSTEP_Out(3421) <= \<const0>\;
  LOCKSTEP_Out(3422) <= \<const0>\;
  LOCKSTEP_Out(3423) <= \<const0>\;
  LOCKSTEP_Out(3424) <= \<const0>\;
  LOCKSTEP_Out(3425) <= \<const0>\;
  LOCKSTEP_Out(3426) <= \<const0>\;
  LOCKSTEP_Out(3427) <= \<const0>\;
  LOCKSTEP_Out(3428) <= \<const0>\;
  LOCKSTEP_Out(3429) <= \<const0>\;
  LOCKSTEP_Out(3430) <= \<const0>\;
  LOCKSTEP_Out(3431) <= \<const0>\;
  LOCKSTEP_Out(3432) <= \<const0>\;
  LOCKSTEP_Out(3433) <= \<const0>\;
  LOCKSTEP_Out(3434) <= \<const0>\;
  LOCKSTEP_Out(3435) <= \<const0>\;
  LOCKSTEP_Out(3436) <= \<const0>\;
  LOCKSTEP_Out(3437) <= \<const0>\;
  LOCKSTEP_Out(3438) <= \<const0>\;
  LOCKSTEP_Out(3439) <= \<const0>\;
  LOCKSTEP_Out(3440) <= \<const0>\;
  LOCKSTEP_Out(3441) <= \<const0>\;
  LOCKSTEP_Out(3442) <= \<const0>\;
  LOCKSTEP_Out(3443) <= \<const0>\;
  LOCKSTEP_Out(3444) <= \<const0>\;
  LOCKSTEP_Out(3445) <= \<const0>\;
  LOCKSTEP_Out(3446) <= \<const0>\;
  LOCKSTEP_Out(3447) <= \<const0>\;
  LOCKSTEP_Out(3448) <= \<const0>\;
  LOCKSTEP_Out(3449) <= \<const0>\;
  LOCKSTEP_Out(3450) <= \<const0>\;
  LOCKSTEP_Out(3451) <= \<const0>\;
  LOCKSTEP_Out(3452) <= \<const0>\;
  LOCKSTEP_Out(3453) <= \<const0>\;
  LOCKSTEP_Out(3454) <= \<const0>\;
  LOCKSTEP_Out(3455) <= \<const0>\;
  LOCKSTEP_Out(3456) <= \<const0>\;
  LOCKSTEP_Out(3457) <= \<const0>\;
  LOCKSTEP_Out(3458) <= \<const0>\;
  LOCKSTEP_Out(3459) <= \<const0>\;
  LOCKSTEP_Out(3460) <= \<const0>\;
  LOCKSTEP_Out(3461) <= \<const0>\;
  LOCKSTEP_Out(3462) <= \<const0>\;
  LOCKSTEP_Out(3463) <= \<const0>\;
  LOCKSTEP_Out(3464) <= \<const0>\;
  LOCKSTEP_Out(3465) <= \<const0>\;
  LOCKSTEP_Out(3466) <= \<const0>\;
  LOCKSTEP_Out(3467) <= \<const0>\;
  LOCKSTEP_Out(3468) <= \<const0>\;
  LOCKSTEP_Out(3469) <= \<const0>\;
  LOCKSTEP_Out(3470) <= \<const0>\;
  LOCKSTEP_Out(3471) <= \<const0>\;
  LOCKSTEP_Out(3472) <= \<const0>\;
  LOCKSTEP_Out(3473) <= \<const0>\;
  LOCKSTEP_Out(3474) <= \<const0>\;
  LOCKSTEP_Out(3475) <= \<const0>\;
  LOCKSTEP_Out(3476) <= \<const0>\;
  LOCKSTEP_Out(3477) <= \<const0>\;
  LOCKSTEP_Out(3478) <= \<const0>\;
  LOCKSTEP_Out(3479) <= \<const0>\;
  LOCKSTEP_Out(3480) <= \<const0>\;
  LOCKSTEP_Out(3481) <= \<const0>\;
  LOCKSTEP_Out(3482) <= \<const0>\;
  LOCKSTEP_Out(3483) <= \<const0>\;
  LOCKSTEP_Out(3484) <= \<const0>\;
  LOCKSTEP_Out(3485) <= \<const0>\;
  LOCKSTEP_Out(3486) <= \<const0>\;
  LOCKSTEP_Out(3487) <= \<const0>\;
  LOCKSTEP_Out(3488) <= \<const0>\;
  LOCKSTEP_Out(3489) <= \<const0>\;
  LOCKSTEP_Out(3490) <= \<const0>\;
  LOCKSTEP_Out(3491) <= \<const0>\;
  LOCKSTEP_Out(3492) <= \<const0>\;
  LOCKSTEP_Out(3493) <= \<const0>\;
  LOCKSTEP_Out(3494) <= \<const0>\;
  LOCKSTEP_Out(3495) <= \<const0>\;
  LOCKSTEP_Out(3496) <= \<const0>\;
  LOCKSTEP_Out(3497) <= \<const0>\;
  LOCKSTEP_Out(3498) <= \<const0>\;
  LOCKSTEP_Out(3499) <= \<const0>\;
  LOCKSTEP_Out(3500) <= \<const0>\;
  LOCKSTEP_Out(3501) <= \<const0>\;
  LOCKSTEP_Out(3502) <= \<const0>\;
  LOCKSTEP_Out(3503) <= \<const0>\;
  LOCKSTEP_Out(3504) <= \<const0>\;
  LOCKSTEP_Out(3505) <= \<const0>\;
  LOCKSTEP_Out(3506) <= \<const0>\;
  LOCKSTEP_Out(3507) <= \<const0>\;
  LOCKSTEP_Out(3508) <= \<const0>\;
  LOCKSTEP_Out(3509) <= \<const0>\;
  LOCKSTEP_Out(3510) <= \<const0>\;
  LOCKSTEP_Out(3511) <= \<const0>\;
  LOCKSTEP_Out(3512) <= \<const0>\;
  LOCKSTEP_Out(3513) <= \<const0>\;
  LOCKSTEP_Out(3514) <= \<const0>\;
  LOCKSTEP_Out(3515) <= \<const0>\;
  LOCKSTEP_Out(3516) <= \<const0>\;
  LOCKSTEP_Out(3517) <= \<const0>\;
  LOCKSTEP_Out(3518) <= \<const0>\;
  LOCKSTEP_Out(3519) <= \<const0>\;
  LOCKSTEP_Out(3520) <= \<const0>\;
  LOCKSTEP_Out(3521) <= \<const0>\;
  LOCKSTEP_Out(3522) <= \<const0>\;
  LOCKSTEP_Out(3523) <= \<const0>\;
  LOCKSTEP_Out(3524) <= \<const0>\;
  LOCKSTEP_Out(3525) <= \<const0>\;
  LOCKSTEP_Out(3526) <= \<const0>\;
  LOCKSTEP_Out(3527) <= \<const0>\;
  LOCKSTEP_Out(3528) <= \<const0>\;
  LOCKSTEP_Out(3529) <= \<const0>\;
  LOCKSTEP_Out(3530) <= \<const0>\;
  LOCKSTEP_Out(3531) <= \<const0>\;
  LOCKSTEP_Out(3532) <= \<const0>\;
  LOCKSTEP_Out(3533) <= \<const0>\;
  LOCKSTEP_Out(3534) <= \<const0>\;
  LOCKSTEP_Out(3535) <= \<const0>\;
  LOCKSTEP_Out(3536) <= \<const0>\;
  LOCKSTEP_Out(3537) <= \<const0>\;
  LOCKSTEP_Out(3538) <= \<const0>\;
  LOCKSTEP_Out(3539) <= \<const0>\;
  LOCKSTEP_Out(3540) <= \<const0>\;
  LOCKSTEP_Out(3541) <= \<const0>\;
  LOCKSTEP_Out(3542) <= \<const0>\;
  LOCKSTEP_Out(3543) <= \<const0>\;
  LOCKSTEP_Out(3544) <= \<const0>\;
  LOCKSTEP_Out(3545) <= \<const0>\;
  LOCKSTEP_Out(3546) <= \<const0>\;
  LOCKSTEP_Out(3547) <= \<const0>\;
  LOCKSTEP_Out(3548) <= \<const0>\;
  LOCKSTEP_Out(3549) <= \<const0>\;
  LOCKSTEP_Out(3550) <= \<const0>\;
  LOCKSTEP_Out(3551) <= \<const0>\;
  LOCKSTEP_Out(3552) <= \<const0>\;
  LOCKSTEP_Out(3553) <= \<const0>\;
  LOCKSTEP_Out(3554) <= \<const0>\;
  LOCKSTEP_Out(3555) <= \<const0>\;
  LOCKSTEP_Out(3556) <= \<const0>\;
  LOCKSTEP_Out(3557) <= \<const0>\;
  LOCKSTEP_Out(3558) <= \<const0>\;
  LOCKSTEP_Out(3559) <= \<const0>\;
  LOCKSTEP_Out(3560) <= \<const0>\;
  LOCKSTEP_Out(3561) <= \<const0>\;
  LOCKSTEP_Out(3562) <= \<const0>\;
  LOCKSTEP_Out(3563) <= \<const0>\;
  LOCKSTEP_Out(3564) <= \<const0>\;
  LOCKSTEP_Out(3565) <= \<const0>\;
  LOCKSTEP_Out(3566) <= \<const0>\;
  LOCKSTEP_Out(3567) <= \<const0>\;
  LOCKSTEP_Out(3568) <= \<const0>\;
  LOCKSTEP_Out(3569) <= \<const0>\;
  LOCKSTEP_Out(3570) <= \<const0>\;
  LOCKSTEP_Out(3571) <= \<const0>\;
  LOCKSTEP_Out(3572) <= \<const0>\;
  LOCKSTEP_Out(3573) <= \<const0>\;
  LOCKSTEP_Out(3574) <= \<const0>\;
  LOCKSTEP_Out(3575) <= \<const0>\;
  LOCKSTEP_Out(3576) <= \<const0>\;
  LOCKSTEP_Out(3577) <= \<const0>\;
  LOCKSTEP_Out(3578) <= \<const0>\;
  LOCKSTEP_Out(3579) <= \<const0>\;
  LOCKSTEP_Out(3580) <= \<const0>\;
  LOCKSTEP_Out(3581) <= \<const0>\;
  LOCKSTEP_Out(3582) <= \<const0>\;
  LOCKSTEP_Out(3583) <= \<const0>\;
  LOCKSTEP_Out(3584) <= \<const0>\;
  LOCKSTEP_Out(3585) <= \<const0>\;
  LOCKSTEP_Out(3586) <= \<const0>\;
  LOCKSTEP_Out(3587) <= \<const0>\;
  LOCKSTEP_Out(3588) <= \<const0>\;
  LOCKSTEP_Out(3589) <= \<const0>\;
  LOCKSTEP_Out(3590) <= \<const0>\;
  LOCKSTEP_Out(3591) <= \<const0>\;
  LOCKSTEP_Out(3592) <= \<const0>\;
  LOCKSTEP_Out(3593) <= \<const0>\;
  LOCKSTEP_Out(3594) <= \<const0>\;
  LOCKSTEP_Out(3595) <= \<const0>\;
  LOCKSTEP_Out(3596) <= \<const0>\;
  LOCKSTEP_Out(3597) <= \<const0>\;
  LOCKSTEP_Out(3598) <= \<const0>\;
  LOCKSTEP_Out(3599) <= \<const0>\;
  LOCKSTEP_Out(3600) <= \<const0>\;
  LOCKSTEP_Out(3601) <= \<const0>\;
  LOCKSTEP_Out(3602) <= \<const0>\;
  LOCKSTEP_Out(3603) <= \<const0>\;
  LOCKSTEP_Out(3604) <= \<const0>\;
  LOCKSTEP_Out(3605) <= \<const0>\;
  LOCKSTEP_Out(3606) <= \<const0>\;
  LOCKSTEP_Out(3607) <= \<const0>\;
  LOCKSTEP_Out(3608) <= \<const0>\;
  LOCKSTEP_Out(3609) <= \<const0>\;
  LOCKSTEP_Out(3610) <= \<const0>\;
  LOCKSTEP_Out(3611) <= \<const0>\;
  LOCKSTEP_Out(3612) <= \<const0>\;
  LOCKSTEP_Out(3613) <= \<const0>\;
  LOCKSTEP_Out(3614) <= \<const0>\;
  LOCKSTEP_Out(3615) <= \<const0>\;
  LOCKSTEP_Out(3616) <= \<const0>\;
  LOCKSTEP_Out(3617) <= \<const0>\;
  LOCKSTEP_Out(3618) <= \<const0>\;
  LOCKSTEP_Out(3619) <= \<const0>\;
  LOCKSTEP_Out(3620) <= \<const0>\;
  LOCKSTEP_Out(3621) <= \<const0>\;
  LOCKSTEP_Out(3622) <= \<const0>\;
  LOCKSTEP_Out(3623) <= \<const0>\;
  LOCKSTEP_Out(3624) <= \<const0>\;
  LOCKSTEP_Out(3625) <= \<const0>\;
  LOCKSTEP_Out(3626) <= \<const0>\;
  LOCKSTEP_Out(3627) <= \<const0>\;
  LOCKSTEP_Out(3628) <= \<const0>\;
  LOCKSTEP_Out(3629) <= \<const0>\;
  LOCKSTEP_Out(3630) <= \<const0>\;
  LOCKSTEP_Out(3631) <= \<const0>\;
  LOCKSTEP_Out(3632) <= \<const0>\;
  LOCKSTEP_Out(3633) <= \<const0>\;
  LOCKSTEP_Out(3634) <= \<const0>\;
  LOCKSTEP_Out(3635) <= \<const0>\;
  LOCKSTEP_Out(3636) <= \<const0>\;
  LOCKSTEP_Out(3637) <= \<const0>\;
  LOCKSTEP_Out(3638) <= \<const0>\;
  LOCKSTEP_Out(3639) <= \<const0>\;
  LOCKSTEP_Out(3640) <= \<const0>\;
  LOCKSTEP_Out(3641) <= \<const0>\;
  LOCKSTEP_Out(3642) <= \<const0>\;
  LOCKSTEP_Out(3643) <= \<const0>\;
  LOCKSTEP_Out(3644) <= \<const0>\;
  LOCKSTEP_Out(3645) <= \<const0>\;
  LOCKSTEP_Out(3646) <= \<const0>\;
  LOCKSTEP_Out(3647) <= \<const0>\;
  LOCKSTEP_Out(3648) <= \<const0>\;
  LOCKSTEP_Out(3649) <= \<const0>\;
  LOCKSTEP_Out(3650) <= \<const0>\;
  LOCKSTEP_Out(3651) <= \<const0>\;
  LOCKSTEP_Out(3652) <= \<const0>\;
  LOCKSTEP_Out(3653) <= \<const0>\;
  LOCKSTEP_Out(3654) <= \<const0>\;
  LOCKSTEP_Out(3655) <= \<const0>\;
  LOCKSTEP_Out(3656) <= \<const0>\;
  LOCKSTEP_Out(3657) <= \<const0>\;
  LOCKSTEP_Out(3658) <= \<const0>\;
  LOCKSTEP_Out(3659) <= \<const0>\;
  LOCKSTEP_Out(3660) <= \<const0>\;
  LOCKSTEP_Out(3661) <= \<const0>\;
  LOCKSTEP_Out(3662) <= \<const0>\;
  LOCKSTEP_Out(3663) <= \<const0>\;
  LOCKSTEP_Out(3664) <= \<const0>\;
  LOCKSTEP_Out(3665) <= \<const0>\;
  LOCKSTEP_Out(3666) <= \<const0>\;
  LOCKSTEP_Out(3667) <= \<const0>\;
  LOCKSTEP_Out(3668) <= \<const0>\;
  LOCKSTEP_Out(3669) <= \<const0>\;
  LOCKSTEP_Out(3670) <= \<const0>\;
  LOCKSTEP_Out(3671) <= \<const0>\;
  LOCKSTEP_Out(3672) <= \<const0>\;
  LOCKSTEP_Out(3673) <= \<const0>\;
  LOCKSTEP_Out(3674) <= \<const0>\;
  LOCKSTEP_Out(3675) <= \<const0>\;
  LOCKSTEP_Out(3676) <= \<const0>\;
  LOCKSTEP_Out(3677) <= \<const0>\;
  LOCKSTEP_Out(3678) <= \<const0>\;
  LOCKSTEP_Out(3679) <= \<const0>\;
  LOCKSTEP_Out(3680) <= \<const0>\;
  LOCKSTEP_Out(3681) <= \<const0>\;
  LOCKSTEP_Out(3682) <= \<const0>\;
  LOCKSTEP_Out(3683) <= \<const0>\;
  LOCKSTEP_Out(3684) <= \<const0>\;
  LOCKSTEP_Out(3685) <= \<const0>\;
  LOCKSTEP_Out(3686) <= \<const0>\;
  LOCKSTEP_Out(3687) <= \<const0>\;
  LOCKSTEP_Out(3688) <= \<const0>\;
  LOCKSTEP_Out(3689) <= \<const0>\;
  LOCKSTEP_Out(3690) <= \<const0>\;
  LOCKSTEP_Out(3691) <= \<const0>\;
  LOCKSTEP_Out(3692) <= \<const0>\;
  LOCKSTEP_Out(3693) <= \<const0>\;
  LOCKSTEP_Out(3694) <= \<const0>\;
  LOCKSTEP_Out(3695) <= \<const0>\;
  LOCKSTEP_Out(3696) <= \<const0>\;
  LOCKSTEP_Out(3697) <= \<const0>\;
  LOCKSTEP_Out(3698) <= \<const0>\;
  LOCKSTEP_Out(3699) <= \<const0>\;
  LOCKSTEP_Out(3700) <= \<const0>\;
  LOCKSTEP_Out(3701) <= \<const0>\;
  LOCKSTEP_Out(3702) <= \<const0>\;
  LOCKSTEP_Out(3703) <= \<const0>\;
  LOCKSTEP_Out(3704) <= \<const0>\;
  LOCKSTEP_Out(3705) <= \<const0>\;
  LOCKSTEP_Out(3706) <= \<const0>\;
  LOCKSTEP_Out(3707) <= \<const0>\;
  LOCKSTEP_Out(3708) <= \<const0>\;
  LOCKSTEP_Out(3709) <= \<const0>\;
  LOCKSTEP_Out(3710) <= \<const0>\;
  LOCKSTEP_Out(3711) <= \<const0>\;
  LOCKSTEP_Out(3712) <= \<const0>\;
  LOCKSTEP_Out(3713) <= \<const0>\;
  LOCKSTEP_Out(3714) <= \<const0>\;
  LOCKSTEP_Out(3715) <= \<const0>\;
  LOCKSTEP_Out(3716) <= \<const0>\;
  LOCKSTEP_Out(3717) <= \<const0>\;
  LOCKSTEP_Out(3718) <= \<const0>\;
  LOCKSTEP_Out(3719) <= \<const0>\;
  LOCKSTEP_Out(3720) <= \<const0>\;
  LOCKSTEP_Out(3721) <= \<const0>\;
  LOCKSTEP_Out(3722) <= \<const0>\;
  LOCKSTEP_Out(3723) <= \<const0>\;
  LOCKSTEP_Out(3724) <= \<const0>\;
  LOCKSTEP_Out(3725) <= \<const0>\;
  LOCKSTEP_Out(3726) <= \<const0>\;
  LOCKSTEP_Out(3727) <= \<const0>\;
  LOCKSTEP_Out(3728) <= \<const0>\;
  LOCKSTEP_Out(3729) <= \<const0>\;
  LOCKSTEP_Out(3730) <= \<const0>\;
  LOCKSTEP_Out(3731) <= \<const0>\;
  LOCKSTEP_Out(3732) <= \<const0>\;
  LOCKSTEP_Out(3733) <= \<const0>\;
  LOCKSTEP_Out(3734) <= \<const0>\;
  LOCKSTEP_Out(3735) <= \<const0>\;
  LOCKSTEP_Out(3736) <= \<const0>\;
  LOCKSTEP_Out(3737) <= \<const0>\;
  LOCKSTEP_Out(3738) <= \<const0>\;
  LOCKSTEP_Out(3739) <= \<const0>\;
  LOCKSTEP_Out(3740) <= \<const0>\;
  LOCKSTEP_Out(3741) <= \<const0>\;
  LOCKSTEP_Out(3742) <= \<const0>\;
  LOCKSTEP_Out(3743) <= \<const0>\;
  LOCKSTEP_Out(3744) <= \<const0>\;
  LOCKSTEP_Out(3745) <= \<const0>\;
  LOCKSTEP_Out(3746) <= \<const0>\;
  LOCKSTEP_Out(3747) <= \<const0>\;
  LOCKSTEP_Out(3748) <= \<const0>\;
  LOCKSTEP_Out(3749) <= \<const0>\;
  LOCKSTEP_Out(3750) <= \<const0>\;
  LOCKSTEP_Out(3751) <= \<const0>\;
  LOCKSTEP_Out(3752) <= \<const0>\;
  LOCKSTEP_Out(3753) <= \<const0>\;
  LOCKSTEP_Out(3754) <= \<const0>\;
  LOCKSTEP_Out(3755) <= \<const0>\;
  LOCKSTEP_Out(3756) <= \<const0>\;
  LOCKSTEP_Out(3757) <= \<const0>\;
  LOCKSTEP_Out(3758) <= \<const0>\;
  LOCKSTEP_Out(3759) <= \<const0>\;
  LOCKSTEP_Out(3760) <= \<const0>\;
  LOCKSTEP_Out(3761) <= \<const0>\;
  LOCKSTEP_Out(3762) <= \<const0>\;
  LOCKSTEP_Out(3763) <= \<const0>\;
  LOCKSTEP_Out(3764) <= \<const0>\;
  LOCKSTEP_Out(3765) <= \<const0>\;
  LOCKSTEP_Out(3766) <= \<const0>\;
  LOCKSTEP_Out(3767) <= \<const0>\;
  LOCKSTEP_Out(3768) <= \<const0>\;
  LOCKSTEP_Out(3769) <= \<const0>\;
  LOCKSTEP_Out(3770) <= \<const0>\;
  LOCKSTEP_Out(3771) <= \<const0>\;
  LOCKSTEP_Out(3772) <= \<const0>\;
  LOCKSTEP_Out(3773) <= \<const0>\;
  LOCKSTEP_Out(3774) <= \<const0>\;
  LOCKSTEP_Out(3775) <= \<const0>\;
  LOCKSTEP_Out(3776) <= \<const0>\;
  LOCKSTEP_Out(3777) <= \<const0>\;
  LOCKSTEP_Out(3778) <= \<const0>\;
  LOCKSTEP_Out(3779) <= \<const0>\;
  LOCKSTEP_Out(3780) <= \<const0>\;
  LOCKSTEP_Out(3781) <= \<const0>\;
  LOCKSTEP_Out(3782) <= \<const0>\;
  LOCKSTEP_Out(3783) <= \<const0>\;
  LOCKSTEP_Out(3784) <= \<const0>\;
  LOCKSTEP_Out(3785) <= \<const0>\;
  LOCKSTEP_Out(3786) <= \<const0>\;
  LOCKSTEP_Out(3787) <= \<const0>\;
  LOCKSTEP_Out(3788) <= \<const0>\;
  LOCKSTEP_Out(3789) <= \<const0>\;
  LOCKSTEP_Out(3790) <= \<const0>\;
  LOCKSTEP_Out(3791) <= \<const0>\;
  LOCKSTEP_Out(3792) <= \<const0>\;
  LOCKSTEP_Out(3793) <= \<const0>\;
  LOCKSTEP_Out(3794) <= \<const0>\;
  LOCKSTEP_Out(3795) <= \<const0>\;
  LOCKSTEP_Out(3796) <= \<const0>\;
  LOCKSTEP_Out(3797) <= \<const0>\;
  LOCKSTEP_Out(3798) <= \<const0>\;
  LOCKSTEP_Out(3799) <= \<const0>\;
  LOCKSTEP_Out(3800) <= \<const0>\;
  LOCKSTEP_Out(3801) <= \<const0>\;
  LOCKSTEP_Out(3802) <= \<const0>\;
  LOCKSTEP_Out(3803) <= \<const0>\;
  LOCKSTEP_Out(3804) <= \<const0>\;
  LOCKSTEP_Out(3805) <= \<const0>\;
  LOCKSTEP_Out(3806) <= \<const0>\;
  LOCKSTEP_Out(3807) <= \<const0>\;
  LOCKSTEP_Out(3808) <= \<const0>\;
  LOCKSTEP_Out(3809) <= \<const0>\;
  LOCKSTEP_Out(3810) <= \<const0>\;
  LOCKSTEP_Out(3811) <= \<const0>\;
  LOCKSTEP_Out(3812) <= \<const0>\;
  LOCKSTEP_Out(3813) <= \<const0>\;
  LOCKSTEP_Out(3814) <= \<const0>\;
  LOCKSTEP_Out(3815) <= \<const0>\;
  LOCKSTEP_Out(3816) <= \<const0>\;
  LOCKSTEP_Out(3817) <= \<const0>\;
  LOCKSTEP_Out(3818) <= \<const0>\;
  LOCKSTEP_Out(3819) <= \<const0>\;
  LOCKSTEP_Out(3820) <= \<const0>\;
  LOCKSTEP_Out(3821) <= \<const0>\;
  LOCKSTEP_Out(3822) <= \<const0>\;
  LOCKSTEP_Out(3823) <= \<const0>\;
  LOCKSTEP_Out(3824) <= \<const0>\;
  LOCKSTEP_Out(3825) <= \<const0>\;
  LOCKSTEP_Out(3826) <= \<const0>\;
  LOCKSTEP_Out(3827) <= \<const0>\;
  LOCKSTEP_Out(3828) <= \<const0>\;
  LOCKSTEP_Out(3829) <= \<const0>\;
  LOCKSTEP_Out(3830) <= \<const0>\;
  LOCKSTEP_Out(3831) <= \<const0>\;
  LOCKSTEP_Out(3832) <= \<const0>\;
  LOCKSTEP_Out(3833) <= \<const0>\;
  LOCKSTEP_Out(3834) <= \<const0>\;
  LOCKSTEP_Out(3835) <= \<const0>\;
  LOCKSTEP_Out(3836) <= \<const0>\;
  LOCKSTEP_Out(3837) <= \<const0>\;
  LOCKSTEP_Out(3838) <= \<const0>\;
  LOCKSTEP_Out(3839) <= \<const0>\;
  LOCKSTEP_Out(3840) <= \<const0>\;
  LOCKSTEP_Out(3841) <= \<const0>\;
  LOCKSTEP_Out(3842) <= \<const0>\;
  LOCKSTEP_Out(3843) <= \<const0>\;
  LOCKSTEP_Out(3844) <= \<const0>\;
  LOCKSTEP_Out(3845) <= \<const0>\;
  LOCKSTEP_Out(3846) <= \<const0>\;
  LOCKSTEP_Out(3847) <= \<const0>\;
  LOCKSTEP_Out(3848) <= \<const0>\;
  LOCKSTEP_Out(3849) <= \<const0>\;
  LOCKSTEP_Out(3850) <= \<const0>\;
  LOCKSTEP_Out(3851) <= \<const0>\;
  LOCKSTEP_Out(3852) <= \<const0>\;
  LOCKSTEP_Out(3853) <= \<const0>\;
  LOCKSTEP_Out(3854) <= \<const0>\;
  LOCKSTEP_Out(3855) <= \<const0>\;
  LOCKSTEP_Out(3856) <= \<const0>\;
  LOCKSTEP_Out(3857) <= \<const0>\;
  LOCKSTEP_Out(3858) <= \<const0>\;
  LOCKSTEP_Out(3859) <= \<const0>\;
  LOCKSTEP_Out(3860) <= \<const0>\;
  LOCKSTEP_Out(3861) <= \<const0>\;
  LOCKSTEP_Out(3862) <= \<const0>\;
  LOCKSTEP_Out(3863) <= \<const0>\;
  LOCKSTEP_Out(3864) <= \<const0>\;
  LOCKSTEP_Out(3865) <= \<const0>\;
  LOCKSTEP_Out(3866) <= \<const0>\;
  LOCKSTEP_Out(3867) <= \<const0>\;
  LOCKSTEP_Out(3868) <= \<const0>\;
  LOCKSTEP_Out(3869) <= \<const0>\;
  LOCKSTEP_Out(3870) <= \<const0>\;
  LOCKSTEP_Out(3871) <= \<const0>\;
  LOCKSTEP_Out(3872) <= \<const0>\;
  LOCKSTEP_Out(3873) <= \<const0>\;
  LOCKSTEP_Out(3874) <= \<const0>\;
  LOCKSTEP_Out(3875) <= \<const0>\;
  LOCKSTEP_Out(3876) <= \<const0>\;
  LOCKSTEP_Out(3877) <= \<const0>\;
  LOCKSTEP_Out(3878) <= \<const0>\;
  LOCKSTEP_Out(3879) <= \<const0>\;
  LOCKSTEP_Out(3880) <= \<const0>\;
  LOCKSTEP_Out(3881) <= \<const0>\;
  LOCKSTEP_Out(3882) <= \<const0>\;
  LOCKSTEP_Out(3883) <= \<const0>\;
  LOCKSTEP_Out(3884) <= \<const0>\;
  LOCKSTEP_Out(3885) <= \<const0>\;
  LOCKSTEP_Out(3886) <= \<const0>\;
  LOCKSTEP_Out(3887) <= \<const0>\;
  LOCKSTEP_Out(3888) <= \<const0>\;
  LOCKSTEP_Out(3889) <= \<const0>\;
  LOCKSTEP_Out(3890) <= \<const0>\;
  LOCKSTEP_Out(3891) <= \<const0>\;
  LOCKSTEP_Out(3892) <= \<const0>\;
  LOCKSTEP_Out(3893) <= \<const0>\;
  LOCKSTEP_Out(3894) <= \<const0>\;
  LOCKSTEP_Out(3895) <= \<const0>\;
  LOCKSTEP_Out(3896) <= \<const0>\;
  LOCKSTEP_Out(3897) <= \<const0>\;
  LOCKSTEP_Out(3898) <= \<const0>\;
  LOCKSTEP_Out(3899) <= \<const0>\;
  LOCKSTEP_Out(3900) <= \<const0>\;
  LOCKSTEP_Out(3901) <= \<const0>\;
  LOCKSTEP_Out(3902) <= \<const0>\;
  LOCKSTEP_Out(3903) <= \<const0>\;
  LOCKSTEP_Out(3904) <= \<const0>\;
  LOCKSTEP_Out(3905) <= \<const0>\;
  LOCKSTEP_Out(3906) <= \<const0>\;
  LOCKSTEP_Out(3907) <= \<const0>\;
  LOCKSTEP_Out(3908) <= \<const0>\;
  LOCKSTEP_Out(3909) <= \<const0>\;
  LOCKSTEP_Out(3910) <= \<const0>\;
  LOCKSTEP_Out(3911) <= \<const0>\;
  LOCKSTEP_Out(3912) <= \<const0>\;
  LOCKSTEP_Out(3913) <= \<const0>\;
  LOCKSTEP_Out(3914) <= \<const0>\;
  LOCKSTEP_Out(3915) <= \<const0>\;
  LOCKSTEP_Out(3916) <= \<const0>\;
  LOCKSTEP_Out(3917) <= \<const0>\;
  LOCKSTEP_Out(3918) <= \<const0>\;
  LOCKSTEP_Out(3919) <= \<const0>\;
  LOCKSTEP_Out(3920) <= \<const0>\;
  LOCKSTEP_Out(3921) <= \<const0>\;
  LOCKSTEP_Out(3922) <= \<const0>\;
  LOCKSTEP_Out(3923) <= \<const0>\;
  LOCKSTEP_Out(3924) <= \<const0>\;
  LOCKSTEP_Out(3925) <= \<const0>\;
  LOCKSTEP_Out(3926) <= \<const0>\;
  LOCKSTEP_Out(3927) <= \<const0>\;
  LOCKSTEP_Out(3928) <= \<const0>\;
  LOCKSTEP_Out(3929) <= \<const0>\;
  LOCKSTEP_Out(3930) <= \<const0>\;
  LOCKSTEP_Out(3931) <= \<const0>\;
  LOCKSTEP_Out(3932) <= \<const0>\;
  LOCKSTEP_Out(3933) <= \<const0>\;
  LOCKSTEP_Out(3934) <= \<const0>\;
  LOCKSTEP_Out(3935) <= \<const0>\;
  LOCKSTEP_Out(3936) <= \<const0>\;
  LOCKSTEP_Out(3937) <= \<const0>\;
  LOCKSTEP_Out(3938) <= \<const0>\;
  LOCKSTEP_Out(3939) <= \<const0>\;
  LOCKSTEP_Out(3940) <= \<const0>\;
  LOCKSTEP_Out(3941) <= \<const0>\;
  LOCKSTEP_Out(3942) <= \<const0>\;
  LOCKSTEP_Out(3943) <= \<const0>\;
  LOCKSTEP_Out(3944) <= \<const0>\;
  LOCKSTEP_Out(3945) <= \<const0>\;
  LOCKSTEP_Out(3946) <= \<const0>\;
  LOCKSTEP_Out(3947) <= \<const0>\;
  LOCKSTEP_Out(3948) <= \<const0>\;
  LOCKSTEP_Out(3949) <= \<const0>\;
  LOCKSTEP_Out(3950) <= \<const0>\;
  LOCKSTEP_Out(3951) <= \<const0>\;
  LOCKSTEP_Out(3952) <= \<const0>\;
  LOCKSTEP_Out(3953) <= \<const0>\;
  LOCKSTEP_Out(3954) <= \<const0>\;
  LOCKSTEP_Out(3955) <= \<const0>\;
  LOCKSTEP_Out(3956) <= \<const0>\;
  LOCKSTEP_Out(3957) <= \<const0>\;
  LOCKSTEP_Out(3958) <= \<const0>\;
  LOCKSTEP_Out(3959) <= \<const0>\;
  LOCKSTEP_Out(3960) <= \<const0>\;
  LOCKSTEP_Out(3961) <= \<const0>\;
  LOCKSTEP_Out(3962) <= \<const0>\;
  LOCKSTEP_Out(3963) <= \<const0>\;
  LOCKSTEP_Out(3964) <= \<const0>\;
  LOCKSTEP_Out(3965) <= \<const0>\;
  LOCKSTEP_Out(3966) <= \<const0>\;
  LOCKSTEP_Out(3967) <= \<const0>\;
  LOCKSTEP_Out(3968) <= \<const0>\;
  LOCKSTEP_Out(3969) <= \<const0>\;
  LOCKSTEP_Out(3970) <= \<const0>\;
  LOCKSTEP_Out(3971) <= \<const0>\;
  LOCKSTEP_Out(3972) <= \<const0>\;
  LOCKSTEP_Out(3973) <= \<const0>\;
  LOCKSTEP_Out(3974) <= \<const0>\;
  LOCKSTEP_Out(3975) <= \<const0>\;
  LOCKSTEP_Out(3976) <= \<const0>\;
  LOCKSTEP_Out(3977) <= \<const0>\;
  LOCKSTEP_Out(3978) <= \<const0>\;
  LOCKSTEP_Out(3979) <= \<const0>\;
  LOCKSTEP_Out(3980) <= \<const0>\;
  LOCKSTEP_Out(3981) <= \<const0>\;
  LOCKSTEP_Out(3982) <= \<const0>\;
  LOCKSTEP_Out(3983) <= \<const0>\;
  LOCKSTEP_Out(3984) <= \<const0>\;
  LOCKSTEP_Out(3985) <= \<const0>\;
  LOCKSTEP_Out(3986) <= \<const0>\;
  LOCKSTEP_Out(3987) <= \<const0>\;
  LOCKSTEP_Out(3988) <= \<const0>\;
  LOCKSTEP_Out(3989) <= \<const0>\;
  LOCKSTEP_Out(3990) <= \<const0>\;
  LOCKSTEP_Out(3991) <= \<const0>\;
  LOCKSTEP_Out(3992) <= \<const0>\;
  LOCKSTEP_Out(3993) <= \<const0>\;
  LOCKSTEP_Out(3994) <= \<const0>\;
  LOCKSTEP_Out(3995) <= \<const0>\;
  LOCKSTEP_Out(3996) <= \<const0>\;
  LOCKSTEP_Out(3997) <= \<const0>\;
  LOCKSTEP_Out(3998) <= \<const0>\;
  LOCKSTEP_Out(3999) <= \<const0>\;
  LOCKSTEP_Out(4000) <= \<const0>\;
  LOCKSTEP_Out(4001) <= \<const0>\;
  LOCKSTEP_Out(4002) <= \<const0>\;
  LOCKSTEP_Out(4003) <= \<const0>\;
  LOCKSTEP_Out(4004) <= \<const0>\;
  LOCKSTEP_Out(4005) <= \<const0>\;
  LOCKSTEP_Out(4006) <= \<const0>\;
  LOCKSTEP_Out(4007) <= \<const0>\;
  LOCKSTEP_Out(4008) <= \<const0>\;
  LOCKSTEP_Out(4009) <= \<const0>\;
  LOCKSTEP_Out(4010) <= \<const0>\;
  LOCKSTEP_Out(4011) <= \<const0>\;
  LOCKSTEP_Out(4012) <= \<const0>\;
  LOCKSTEP_Out(4013) <= \<const0>\;
  LOCKSTEP_Out(4014) <= \<const0>\;
  LOCKSTEP_Out(4015) <= \<const0>\;
  LOCKSTEP_Out(4016) <= \<const0>\;
  LOCKSTEP_Out(4017) <= \<const0>\;
  LOCKSTEP_Out(4018) <= \<const0>\;
  LOCKSTEP_Out(4019) <= \<const0>\;
  LOCKSTEP_Out(4020) <= \<const0>\;
  LOCKSTEP_Out(4021) <= \<const0>\;
  LOCKSTEP_Out(4022) <= \<const0>\;
  LOCKSTEP_Out(4023) <= \<const0>\;
  LOCKSTEP_Out(4024) <= \<const0>\;
  LOCKSTEP_Out(4025) <= \<const0>\;
  LOCKSTEP_Out(4026) <= \<const0>\;
  LOCKSTEP_Out(4027) <= \<const0>\;
  LOCKSTEP_Out(4028) <= \<const0>\;
  LOCKSTEP_Out(4029) <= \<const0>\;
  LOCKSTEP_Out(4030) <= \<const0>\;
  LOCKSTEP_Out(4031) <= \<const0>\;
  LOCKSTEP_Out(4032) <= \<const0>\;
  LOCKSTEP_Out(4033) <= \<const0>\;
  LOCKSTEP_Out(4034) <= \<const0>\;
  LOCKSTEP_Out(4035) <= \<const0>\;
  LOCKSTEP_Out(4036) <= \<const0>\;
  LOCKSTEP_Out(4037) <= \<const0>\;
  LOCKSTEP_Out(4038) <= \<const0>\;
  LOCKSTEP_Out(4039) <= \<const0>\;
  LOCKSTEP_Out(4040) <= \<const0>\;
  LOCKSTEP_Out(4041) <= \<const0>\;
  LOCKSTEP_Out(4042) <= \<const0>\;
  LOCKSTEP_Out(4043) <= \<const0>\;
  LOCKSTEP_Out(4044) <= \<const0>\;
  LOCKSTEP_Out(4045) <= \<const0>\;
  LOCKSTEP_Out(4046) <= \<const0>\;
  LOCKSTEP_Out(4047) <= \<const0>\;
  LOCKSTEP_Out(4048) <= \<const0>\;
  LOCKSTEP_Out(4049) <= \<const0>\;
  LOCKSTEP_Out(4050) <= \<const0>\;
  LOCKSTEP_Out(4051) <= \<const0>\;
  LOCKSTEP_Out(4052) <= \<const0>\;
  LOCKSTEP_Out(4053) <= \<const0>\;
  LOCKSTEP_Out(4054) <= \<const0>\;
  LOCKSTEP_Out(4055) <= \<const0>\;
  LOCKSTEP_Out(4056) <= \<const0>\;
  LOCKSTEP_Out(4057) <= \<const0>\;
  LOCKSTEP_Out(4058) <= \<const0>\;
  LOCKSTEP_Out(4059) <= \<const0>\;
  LOCKSTEP_Out(4060) <= \<const0>\;
  LOCKSTEP_Out(4061) <= \<const0>\;
  LOCKSTEP_Out(4062) <= \<const0>\;
  LOCKSTEP_Out(4063) <= \<const0>\;
  LOCKSTEP_Out(4064) <= \<const0>\;
  LOCKSTEP_Out(4065) <= \<const0>\;
  LOCKSTEP_Out(4066) <= \<const0>\;
  LOCKSTEP_Out(4067) <= \<const0>\;
  LOCKSTEP_Out(4068) <= \<const0>\;
  LOCKSTEP_Out(4069) <= \<const0>\;
  LOCKSTEP_Out(4070) <= \<const0>\;
  LOCKSTEP_Out(4071) <= \<const0>\;
  LOCKSTEP_Out(4072) <= \<const0>\;
  LOCKSTEP_Out(4073) <= \<const0>\;
  LOCKSTEP_Out(4074) <= \<const0>\;
  LOCKSTEP_Out(4075) <= \<const0>\;
  LOCKSTEP_Out(4076) <= \<const0>\;
  LOCKSTEP_Out(4077) <= \<const0>\;
  LOCKSTEP_Out(4078) <= \<const0>\;
  LOCKSTEP_Out(4079) <= \<const0>\;
  LOCKSTEP_Out(4080) <= \<const0>\;
  LOCKSTEP_Out(4081) <= \<const0>\;
  LOCKSTEP_Out(4082) <= \<const0>\;
  LOCKSTEP_Out(4083) <= \<const0>\;
  LOCKSTEP_Out(4084) <= \<const0>\;
  LOCKSTEP_Out(4085) <= \<const0>\;
  LOCKSTEP_Out(4086) <= \<const0>\;
  LOCKSTEP_Out(4087) <= \<const0>\;
  LOCKSTEP_Out(4088) <= \<const0>\;
  LOCKSTEP_Out(4089) <= \<const0>\;
  LOCKSTEP_Out(4090) <= \<const0>\;
  LOCKSTEP_Out(4091) <= \<const0>\;
  LOCKSTEP_Out(4092) <= \<const0>\;
  LOCKSTEP_Out(4093) <= \<const0>\;
  LOCKSTEP_Out(4094) <= \<const0>\;
  LOCKSTEP_Out(4095) <= \<const0>\;
  M0_AXIS_TDATA(31) <= \<const0>\;
  M0_AXIS_TDATA(30) <= \<const0>\;
  M0_AXIS_TDATA(29) <= \<const0>\;
  M0_AXIS_TDATA(28) <= \<const0>\;
  M0_AXIS_TDATA(27) <= \<const0>\;
  M0_AXIS_TDATA(26) <= \<const0>\;
  M0_AXIS_TDATA(25) <= \<const0>\;
  M0_AXIS_TDATA(24) <= \<const0>\;
  M0_AXIS_TDATA(23) <= \<const0>\;
  M0_AXIS_TDATA(22) <= \<const0>\;
  M0_AXIS_TDATA(21) <= \<const0>\;
  M0_AXIS_TDATA(20) <= \<const0>\;
  M0_AXIS_TDATA(19) <= \<const0>\;
  M0_AXIS_TDATA(18) <= \<const0>\;
  M0_AXIS_TDATA(17) <= \<const0>\;
  M0_AXIS_TDATA(16) <= \<const0>\;
  M0_AXIS_TDATA(15) <= \<const0>\;
  M0_AXIS_TDATA(14) <= \<const0>\;
  M0_AXIS_TDATA(13) <= \<const0>\;
  M0_AXIS_TDATA(12) <= \<const0>\;
  M0_AXIS_TDATA(11) <= \<const0>\;
  M0_AXIS_TDATA(10) <= \<const0>\;
  M0_AXIS_TDATA(9) <= \<const0>\;
  M0_AXIS_TDATA(8) <= \<const0>\;
  M0_AXIS_TDATA(7) <= \<const0>\;
  M0_AXIS_TDATA(6) <= \<const0>\;
  M0_AXIS_TDATA(5) <= \<const0>\;
  M0_AXIS_TDATA(4) <= \<const0>\;
  M0_AXIS_TDATA(3) <= \<const0>\;
  M0_AXIS_TDATA(2) <= \<const0>\;
  M0_AXIS_TDATA(1) <= \<const0>\;
  M0_AXIS_TDATA(0) <= \<const0>\;
  M0_AXIS_TLAST <= \<const0>\;
  M0_AXIS_TVALID <= \<const0>\;
  M10_AXIS_TDATA(31) <= \<const0>\;
  M10_AXIS_TDATA(30) <= \<const0>\;
  M10_AXIS_TDATA(29) <= \<const0>\;
  M10_AXIS_TDATA(28) <= \<const0>\;
  M10_AXIS_TDATA(27) <= \<const0>\;
  M10_AXIS_TDATA(26) <= \<const0>\;
  M10_AXIS_TDATA(25) <= \<const0>\;
  M10_AXIS_TDATA(24) <= \<const0>\;
  M10_AXIS_TDATA(23) <= \<const0>\;
  M10_AXIS_TDATA(22) <= \<const0>\;
  M10_AXIS_TDATA(21) <= \<const0>\;
  M10_AXIS_TDATA(20) <= \<const0>\;
  M10_AXIS_TDATA(19) <= \<const0>\;
  M10_AXIS_TDATA(18) <= \<const0>\;
  M10_AXIS_TDATA(17) <= \<const0>\;
  M10_AXIS_TDATA(16) <= \<const0>\;
  M10_AXIS_TDATA(15) <= \<const0>\;
  M10_AXIS_TDATA(14) <= \<const0>\;
  M10_AXIS_TDATA(13) <= \<const0>\;
  M10_AXIS_TDATA(12) <= \<const0>\;
  M10_AXIS_TDATA(11) <= \<const0>\;
  M10_AXIS_TDATA(10) <= \<const0>\;
  M10_AXIS_TDATA(9) <= \<const0>\;
  M10_AXIS_TDATA(8) <= \<const0>\;
  M10_AXIS_TDATA(7) <= \<const0>\;
  M10_AXIS_TDATA(6) <= \<const0>\;
  M10_AXIS_TDATA(5) <= \<const0>\;
  M10_AXIS_TDATA(4) <= \<const0>\;
  M10_AXIS_TDATA(3) <= \<const0>\;
  M10_AXIS_TDATA(2) <= \<const0>\;
  M10_AXIS_TDATA(1) <= \<const0>\;
  M10_AXIS_TDATA(0) <= \<const0>\;
  M10_AXIS_TLAST <= \<const0>\;
  M10_AXIS_TVALID <= \<const0>\;
  M11_AXIS_TDATA(31) <= \<const0>\;
  M11_AXIS_TDATA(30) <= \<const0>\;
  M11_AXIS_TDATA(29) <= \<const0>\;
  M11_AXIS_TDATA(28) <= \<const0>\;
  M11_AXIS_TDATA(27) <= \<const0>\;
  M11_AXIS_TDATA(26) <= \<const0>\;
  M11_AXIS_TDATA(25) <= \<const0>\;
  M11_AXIS_TDATA(24) <= \<const0>\;
  M11_AXIS_TDATA(23) <= \<const0>\;
  M11_AXIS_TDATA(22) <= \<const0>\;
  M11_AXIS_TDATA(21) <= \<const0>\;
  M11_AXIS_TDATA(20) <= \<const0>\;
  M11_AXIS_TDATA(19) <= \<const0>\;
  M11_AXIS_TDATA(18) <= \<const0>\;
  M11_AXIS_TDATA(17) <= \<const0>\;
  M11_AXIS_TDATA(16) <= \<const0>\;
  M11_AXIS_TDATA(15) <= \<const0>\;
  M11_AXIS_TDATA(14) <= \<const0>\;
  M11_AXIS_TDATA(13) <= \<const0>\;
  M11_AXIS_TDATA(12) <= \<const0>\;
  M11_AXIS_TDATA(11) <= \<const0>\;
  M11_AXIS_TDATA(10) <= \<const0>\;
  M11_AXIS_TDATA(9) <= \<const0>\;
  M11_AXIS_TDATA(8) <= \<const0>\;
  M11_AXIS_TDATA(7) <= \<const0>\;
  M11_AXIS_TDATA(6) <= \<const0>\;
  M11_AXIS_TDATA(5) <= \<const0>\;
  M11_AXIS_TDATA(4) <= \<const0>\;
  M11_AXIS_TDATA(3) <= \<const0>\;
  M11_AXIS_TDATA(2) <= \<const0>\;
  M11_AXIS_TDATA(1) <= \<const0>\;
  M11_AXIS_TDATA(0) <= \<const0>\;
  M11_AXIS_TLAST <= \<const0>\;
  M11_AXIS_TVALID <= \<const0>\;
  M12_AXIS_TDATA(31) <= \<const0>\;
  M12_AXIS_TDATA(30) <= \<const0>\;
  M12_AXIS_TDATA(29) <= \<const0>\;
  M12_AXIS_TDATA(28) <= \<const0>\;
  M12_AXIS_TDATA(27) <= \<const0>\;
  M12_AXIS_TDATA(26) <= \<const0>\;
  M12_AXIS_TDATA(25) <= \<const0>\;
  M12_AXIS_TDATA(24) <= \<const0>\;
  M12_AXIS_TDATA(23) <= \<const0>\;
  M12_AXIS_TDATA(22) <= \<const0>\;
  M12_AXIS_TDATA(21) <= \<const0>\;
  M12_AXIS_TDATA(20) <= \<const0>\;
  M12_AXIS_TDATA(19) <= \<const0>\;
  M12_AXIS_TDATA(18) <= \<const0>\;
  M12_AXIS_TDATA(17) <= \<const0>\;
  M12_AXIS_TDATA(16) <= \<const0>\;
  M12_AXIS_TDATA(15) <= \<const0>\;
  M12_AXIS_TDATA(14) <= \<const0>\;
  M12_AXIS_TDATA(13) <= \<const0>\;
  M12_AXIS_TDATA(12) <= \<const0>\;
  M12_AXIS_TDATA(11) <= \<const0>\;
  M12_AXIS_TDATA(10) <= \<const0>\;
  M12_AXIS_TDATA(9) <= \<const0>\;
  M12_AXIS_TDATA(8) <= \<const0>\;
  M12_AXIS_TDATA(7) <= \<const0>\;
  M12_AXIS_TDATA(6) <= \<const0>\;
  M12_AXIS_TDATA(5) <= \<const0>\;
  M12_AXIS_TDATA(4) <= \<const0>\;
  M12_AXIS_TDATA(3) <= \<const0>\;
  M12_AXIS_TDATA(2) <= \<const0>\;
  M12_AXIS_TDATA(1) <= \<const0>\;
  M12_AXIS_TDATA(0) <= \<const0>\;
  M12_AXIS_TLAST <= \<const0>\;
  M12_AXIS_TVALID <= \<const0>\;
  M13_AXIS_TDATA(31) <= \<const0>\;
  M13_AXIS_TDATA(30) <= \<const0>\;
  M13_AXIS_TDATA(29) <= \<const0>\;
  M13_AXIS_TDATA(28) <= \<const0>\;
  M13_AXIS_TDATA(27) <= \<const0>\;
  M13_AXIS_TDATA(26) <= \<const0>\;
  M13_AXIS_TDATA(25) <= \<const0>\;
  M13_AXIS_TDATA(24) <= \<const0>\;
  M13_AXIS_TDATA(23) <= \<const0>\;
  M13_AXIS_TDATA(22) <= \<const0>\;
  M13_AXIS_TDATA(21) <= \<const0>\;
  M13_AXIS_TDATA(20) <= \<const0>\;
  M13_AXIS_TDATA(19) <= \<const0>\;
  M13_AXIS_TDATA(18) <= \<const0>\;
  M13_AXIS_TDATA(17) <= \<const0>\;
  M13_AXIS_TDATA(16) <= \<const0>\;
  M13_AXIS_TDATA(15) <= \<const0>\;
  M13_AXIS_TDATA(14) <= \<const0>\;
  M13_AXIS_TDATA(13) <= \<const0>\;
  M13_AXIS_TDATA(12) <= \<const0>\;
  M13_AXIS_TDATA(11) <= \<const0>\;
  M13_AXIS_TDATA(10) <= \<const0>\;
  M13_AXIS_TDATA(9) <= \<const0>\;
  M13_AXIS_TDATA(8) <= \<const0>\;
  M13_AXIS_TDATA(7) <= \<const0>\;
  M13_AXIS_TDATA(6) <= \<const0>\;
  M13_AXIS_TDATA(5) <= \<const0>\;
  M13_AXIS_TDATA(4) <= \<const0>\;
  M13_AXIS_TDATA(3) <= \<const0>\;
  M13_AXIS_TDATA(2) <= \<const0>\;
  M13_AXIS_TDATA(1) <= \<const0>\;
  M13_AXIS_TDATA(0) <= \<const0>\;
  M13_AXIS_TLAST <= \<const0>\;
  M13_AXIS_TVALID <= \<const0>\;
  M14_AXIS_TDATA(31) <= \<const0>\;
  M14_AXIS_TDATA(30) <= \<const0>\;
  M14_AXIS_TDATA(29) <= \<const0>\;
  M14_AXIS_TDATA(28) <= \<const0>\;
  M14_AXIS_TDATA(27) <= \<const0>\;
  M14_AXIS_TDATA(26) <= \<const0>\;
  M14_AXIS_TDATA(25) <= \<const0>\;
  M14_AXIS_TDATA(24) <= \<const0>\;
  M14_AXIS_TDATA(23) <= \<const0>\;
  M14_AXIS_TDATA(22) <= \<const0>\;
  M14_AXIS_TDATA(21) <= \<const0>\;
  M14_AXIS_TDATA(20) <= \<const0>\;
  M14_AXIS_TDATA(19) <= \<const0>\;
  M14_AXIS_TDATA(18) <= \<const0>\;
  M14_AXIS_TDATA(17) <= \<const0>\;
  M14_AXIS_TDATA(16) <= \<const0>\;
  M14_AXIS_TDATA(15) <= \<const0>\;
  M14_AXIS_TDATA(14) <= \<const0>\;
  M14_AXIS_TDATA(13) <= \<const0>\;
  M14_AXIS_TDATA(12) <= \<const0>\;
  M14_AXIS_TDATA(11) <= \<const0>\;
  M14_AXIS_TDATA(10) <= \<const0>\;
  M14_AXIS_TDATA(9) <= \<const0>\;
  M14_AXIS_TDATA(8) <= \<const0>\;
  M14_AXIS_TDATA(7) <= \<const0>\;
  M14_AXIS_TDATA(6) <= \<const0>\;
  M14_AXIS_TDATA(5) <= \<const0>\;
  M14_AXIS_TDATA(4) <= \<const0>\;
  M14_AXIS_TDATA(3) <= \<const0>\;
  M14_AXIS_TDATA(2) <= \<const0>\;
  M14_AXIS_TDATA(1) <= \<const0>\;
  M14_AXIS_TDATA(0) <= \<const0>\;
  M14_AXIS_TLAST <= \<const0>\;
  M14_AXIS_TVALID <= \<const0>\;
  M15_AXIS_TDATA(31) <= \<const0>\;
  M15_AXIS_TDATA(30) <= \<const0>\;
  M15_AXIS_TDATA(29) <= \<const0>\;
  M15_AXIS_TDATA(28) <= \<const0>\;
  M15_AXIS_TDATA(27) <= \<const0>\;
  M15_AXIS_TDATA(26) <= \<const0>\;
  M15_AXIS_TDATA(25) <= \<const0>\;
  M15_AXIS_TDATA(24) <= \<const0>\;
  M15_AXIS_TDATA(23) <= \<const0>\;
  M15_AXIS_TDATA(22) <= \<const0>\;
  M15_AXIS_TDATA(21) <= \<const0>\;
  M15_AXIS_TDATA(20) <= \<const0>\;
  M15_AXIS_TDATA(19) <= \<const0>\;
  M15_AXIS_TDATA(18) <= \<const0>\;
  M15_AXIS_TDATA(17) <= \<const0>\;
  M15_AXIS_TDATA(16) <= \<const0>\;
  M15_AXIS_TDATA(15) <= \<const0>\;
  M15_AXIS_TDATA(14) <= \<const0>\;
  M15_AXIS_TDATA(13) <= \<const0>\;
  M15_AXIS_TDATA(12) <= \<const0>\;
  M15_AXIS_TDATA(11) <= \<const0>\;
  M15_AXIS_TDATA(10) <= \<const0>\;
  M15_AXIS_TDATA(9) <= \<const0>\;
  M15_AXIS_TDATA(8) <= \<const0>\;
  M15_AXIS_TDATA(7) <= \<const0>\;
  M15_AXIS_TDATA(6) <= \<const0>\;
  M15_AXIS_TDATA(5) <= \<const0>\;
  M15_AXIS_TDATA(4) <= \<const0>\;
  M15_AXIS_TDATA(3) <= \<const0>\;
  M15_AXIS_TDATA(2) <= \<const0>\;
  M15_AXIS_TDATA(1) <= \<const0>\;
  M15_AXIS_TDATA(0) <= \<const0>\;
  M15_AXIS_TLAST <= \<const0>\;
  M15_AXIS_TVALID <= \<const0>\;
  M1_AXIS_TDATA(31) <= \<const0>\;
  M1_AXIS_TDATA(30) <= \<const0>\;
  M1_AXIS_TDATA(29) <= \<const0>\;
  M1_AXIS_TDATA(28) <= \<const0>\;
  M1_AXIS_TDATA(27) <= \<const0>\;
  M1_AXIS_TDATA(26) <= \<const0>\;
  M1_AXIS_TDATA(25) <= \<const0>\;
  M1_AXIS_TDATA(24) <= \<const0>\;
  M1_AXIS_TDATA(23) <= \<const0>\;
  M1_AXIS_TDATA(22) <= \<const0>\;
  M1_AXIS_TDATA(21) <= \<const0>\;
  M1_AXIS_TDATA(20) <= \<const0>\;
  M1_AXIS_TDATA(19) <= \<const0>\;
  M1_AXIS_TDATA(18) <= \<const0>\;
  M1_AXIS_TDATA(17) <= \<const0>\;
  M1_AXIS_TDATA(16) <= \<const0>\;
  M1_AXIS_TDATA(15) <= \<const0>\;
  M1_AXIS_TDATA(14) <= \<const0>\;
  M1_AXIS_TDATA(13) <= \<const0>\;
  M1_AXIS_TDATA(12) <= \<const0>\;
  M1_AXIS_TDATA(11) <= \<const0>\;
  M1_AXIS_TDATA(10) <= \<const0>\;
  M1_AXIS_TDATA(9) <= \<const0>\;
  M1_AXIS_TDATA(8) <= \<const0>\;
  M1_AXIS_TDATA(7) <= \<const0>\;
  M1_AXIS_TDATA(6) <= \<const0>\;
  M1_AXIS_TDATA(5) <= \<const0>\;
  M1_AXIS_TDATA(4) <= \<const0>\;
  M1_AXIS_TDATA(3) <= \<const0>\;
  M1_AXIS_TDATA(2) <= \<const0>\;
  M1_AXIS_TDATA(1) <= \<const0>\;
  M1_AXIS_TDATA(0) <= \<const0>\;
  M1_AXIS_TLAST <= \<const0>\;
  M1_AXIS_TVALID <= \<const0>\;
  M2_AXIS_TDATA(31) <= \<const0>\;
  M2_AXIS_TDATA(30) <= \<const0>\;
  M2_AXIS_TDATA(29) <= \<const0>\;
  M2_AXIS_TDATA(28) <= \<const0>\;
  M2_AXIS_TDATA(27) <= \<const0>\;
  M2_AXIS_TDATA(26) <= \<const0>\;
  M2_AXIS_TDATA(25) <= \<const0>\;
  M2_AXIS_TDATA(24) <= \<const0>\;
  M2_AXIS_TDATA(23) <= \<const0>\;
  M2_AXIS_TDATA(22) <= \<const0>\;
  M2_AXIS_TDATA(21) <= \<const0>\;
  M2_AXIS_TDATA(20) <= \<const0>\;
  M2_AXIS_TDATA(19) <= \<const0>\;
  M2_AXIS_TDATA(18) <= \<const0>\;
  M2_AXIS_TDATA(17) <= \<const0>\;
  M2_AXIS_TDATA(16) <= \<const0>\;
  M2_AXIS_TDATA(15) <= \<const0>\;
  M2_AXIS_TDATA(14) <= \<const0>\;
  M2_AXIS_TDATA(13) <= \<const0>\;
  M2_AXIS_TDATA(12) <= \<const0>\;
  M2_AXIS_TDATA(11) <= \<const0>\;
  M2_AXIS_TDATA(10) <= \<const0>\;
  M2_AXIS_TDATA(9) <= \<const0>\;
  M2_AXIS_TDATA(8) <= \<const0>\;
  M2_AXIS_TDATA(7) <= \<const0>\;
  M2_AXIS_TDATA(6) <= \<const0>\;
  M2_AXIS_TDATA(5) <= \<const0>\;
  M2_AXIS_TDATA(4) <= \<const0>\;
  M2_AXIS_TDATA(3) <= \<const0>\;
  M2_AXIS_TDATA(2) <= \<const0>\;
  M2_AXIS_TDATA(1) <= \<const0>\;
  M2_AXIS_TDATA(0) <= \<const0>\;
  M2_AXIS_TLAST <= \<const0>\;
  M2_AXIS_TVALID <= \<const0>\;
  M3_AXIS_TDATA(31) <= \<const0>\;
  M3_AXIS_TDATA(30) <= \<const0>\;
  M3_AXIS_TDATA(29) <= \<const0>\;
  M3_AXIS_TDATA(28) <= \<const0>\;
  M3_AXIS_TDATA(27) <= \<const0>\;
  M3_AXIS_TDATA(26) <= \<const0>\;
  M3_AXIS_TDATA(25) <= \<const0>\;
  M3_AXIS_TDATA(24) <= \<const0>\;
  M3_AXIS_TDATA(23) <= \<const0>\;
  M3_AXIS_TDATA(22) <= \<const0>\;
  M3_AXIS_TDATA(21) <= \<const0>\;
  M3_AXIS_TDATA(20) <= \<const0>\;
  M3_AXIS_TDATA(19) <= \<const0>\;
  M3_AXIS_TDATA(18) <= \<const0>\;
  M3_AXIS_TDATA(17) <= \<const0>\;
  M3_AXIS_TDATA(16) <= \<const0>\;
  M3_AXIS_TDATA(15) <= \<const0>\;
  M3_AXIS_TDATA(14) <= \<const0>\;
  M3_AXIS_TDATA(13) <= \<const0>\;
  M3_AXIS_TDATA(12) <= \<const0>\;
  M3_AXIS_TDATA(11) <= \<const0>\;
  M3_AXIS_TDATA(10) <= \<const0>\;
  M3_AXIS_TDATA(9) <= \<const0>\;
  M3_AXIS_TDATA(8) <= \<const0>\;
  M3_AXIS_TDATA(7) <= \<const0>\;
  M3_AXIS_TDATA(6) <= \<const0>\;
  M3_AXIS_TDATA(5) <= \<const0>\;
  M3_AXIS_TDATA(4) <= \<const0>\;
  M3_AXIS_TDATA(3) <= \<const0>\;
  M3_AXIS_TDATA(2) <= \<const0>\;
  M3_AXIS_TDATA(1) <= \<const0>\;
  M3_AXIS_TDATA(0) <= \<const0>\;
  M3_AXIS_TLAST <= \<const0>\;
  M3_AXIS_TVALID <= \<const0>\;
  M4_AXIS_TDATA(31) <= \<const0>\;
  M4_AXIS_TDATA(30) <= \<const0>\;
  M4_AXIS_TDATA(29) <= \<const0>\;
  M4_AXIS_TDATA(28) <= \<const0>\;
  M4_AXIS_TDATA(27) <= \<const0>\;
  M4_AXIS_TDATA(26) <= \<const0>\;
  M4_AXIS_TDATA(25) <= \<const0>\;
  M4_AXIS_TDATA(24) <= \<const0>\;
  M4_AXIS_TDATA(23) <= \<const0>\;
  M4_AXIS_TDATA(22) <= \<const0>\;
  M4_AXIS_TDATA(21) <= \<const0>\;
  M4_AXIS_TDATA(20) <= \<const0>\;
  M4_AXIS_TDATA(19) <= \<const0>\;
  M4_AXIS_TDATA(18) <= \<const0>\;
  M4_AXIS_TDATA(17) <= \<const0>\;
  M4_AXIS_TDATA(16) <= \<const0>\;
  M4_AXIS_TDATA(15) <= \<const0>\;
  M4_AXIS_TDATA(14) <= \<const0>\;
  M4_AXIS_TDATA(13) <= \<const0>\;
  M4_AXIS_TDATA(12) <= \<const0>\;
  M4_AXIS_TDATA(11) <= \<const0>\;
  M4_AXIS_TDATA(10) <= \<const0>\;
  M4_AXIS_TDATA(9) <= \<const0>\;
  M4_AXIS_TDATA(8) <= \<const0>\;
  M4_AXIS_TDATA(7) <= \<const0>\;
  M4_AXIS_TDATA(6) <= \<const0>\;
  M4_AXIS_TDATA(5) <= \<const0>\;
  M4_AXIS_TDATA(4) <= \<const0>\;
  M4_AXIS_TDATA(3) <= \<const0>\;
  M4_AXIS_TDATA(2) <= \<const0>\;
  M4_AXIS_TDATA(1) <= \<const0>\;
  M4_AXIS_TDATA(0) <= \<const0>\;
  M4_AXIS_TLAST <= \<const0>\;
  M4_AXIS_TVALID <= \<const0>\;
  M5_AXIS_TDATA(31) <= \<const0>\;
  M5_AXIS_TDATA(30) <= \<const0>\;
  M5_AXIS_TDATA(29) <= \<const0>\;
  M5_AXIS_TDATA(28) <= \<const0>\;
  M5_AXIS_TDATA(27) <= \<const0>\;
  M5_AXIS_TDATA(26) <= \<const0>\;
  M5_AXIS_TDATA(25) <= \<const0>\;
  M5_AXIS_TDATA(24) <= \<const0>\;
  M5_AXIS_TDATA(23) <= \<const0>\;
  M5_AXIS_TDATA(22) <= \<const0>\;
  M5_AXIS_TDATA(21) <= \<const0>\;
  M5_AXIS_TDATA(20) <= \<const0>\;
  M5_AXIS_TDATA(19) <= \<const0>\;
  M5_AXIS_TDATA(18) <= \<const0>\;
  M5_AXIS_TDATA(17) <= \<const0>\;
  M5_AXIS_TDATA(16) <= \<const0>\;
  M5_AXIS_TDATA(15) <= \<const0>\;
  M5_AXIS_TDATA(14) <= \<const0>\;
  M5_AXIS_TDATA(13) <= \<const0>\;
  M5_AXIS_TDATA(12) <= \<const0>\;
  M5_AXIS_TDATA(11) <= \<const0>\;
  M5_AXIS_TDATA(10) <= \<const0>\;
  M5_AXIS_TDATA(9) <= \<const0>\;
  M5_AXIS_TDATA(8) <= \<const0>\;
  M5_AXIS_TDATA(7) <= \<const0>\;
  M5_AXIS_TDATA(6) <= \<const0>\;
  M5_AXIS_TDATA(5) <= \<const0>\;
  M5_AXIS_TDATA(4) <= \<const0>\;
  M5_AXIS_TDATA(3) <= \<const0>\;
  M5_AXIS_TDATA(2) <= \<const0>\;
  M5_AXIS_TDATA(1) <= \<const0>\;
  M5_AXIS_TDATA(0) <= \<const0>\;
  M5_AXIS_TLAST <= \<const0>\;
  M5_AXIS_TVALID <= \<const0>\;
  M6_AXIS_TDATA(31) <= \<const0>\;
  M6_AXIS_TDATA(30) <= \<const0>\;
  M6_AXIS_TDATA(29) <= \<const0>\;
  M6_AXIS_TDATA(28) <= \<const0>\;
  M6_AXIS_TDATA(27) <= \<const0>\;
  M6_AXIS_TDATA(26) <= \<const0>\;
  M6_AXIS_TDATA(25) <= \<const0>\;
  M6_AXIS_TDATA(24) <= \<const0>\;
  M6_AXIS_TDATA(23) <= \<const0>\;
  M6_AXIS_TDATA(22) <= \<const0>\;
  M6_AXIS_TDATA(21) <= \<const0>\;
  M6_AXIS_TDATA(20) <= \<const0>\;
  M6_AXIS_TDATA(19) <= \<const0>\;
  M6_AXIS_TDATA(18) <= \<const0>\;
  M6_AXIS_TDATA(17) <= \<const0>\;
  M6_AXIS_TDATA(16) <= \<const0>\;
  M6_AXIS_TDATA(15) <= \<const0>\;
  M6_AXIS_TDATA(14) <= \<const0>\;
  M6_AXIS_TDATA(13) <= \<const0>\;
  M6_AXIS_TDATA(12) <= \<const0>\;
  M6_AXIS_TDATA(11) <= \<const0>\;
  M6_AXIS_TDATA(10) <= \<const0>\;
  M6_AXIS_TDATA(9) <= \<const0>\;
  M6_AXIS_TDATA(8) <= \<const0>\;
  M6_AXIS_TDATA(7) <= \<const0>\;
  M6_AXIS_TDATA(6) <= \<const0>\;
  M6_AXIS_TDATA(5) <= \<const0>\;
  M6_AXIS_TDATA(4) <= \<const0>\;
  M6_AXIS_TDATA(3) <= \<const0>\;
  M6_AXIS_TDATA(2) <= \<const0>\;
  M6_AXIS_TDATA(1) <= \<const0>\;
  M6_AXIS_TDATA(0) <= \<const0>\;
  M6_AXIS_TLAST <= \<const0>\;
  M6_AXIS_TVALID <= \<const0>\;
  M7_AXIS_TDATA(31) <= \<const0>\;
  M7_AXIS_TDATA(30) <= \<const0>\;
  M7_AXIS_TDATA(29) <= \<const0>\;
  M7_AXIS_TDATA(28) <= \<const0>\;
  M7_AXIS_TDATA(27) <= \<const0>\;
  M7_AXIS_TDATA(26) <= \<const0>\;
  M7_AXIS_TDATA(25) <= \<const0>\;
  M7_AXIS_TDATA(24) <= \<const0>\;
  M7_AXIS_TDATA(23) <= \<const0>\;
  M7_AXIS_TDATA(22) <= \<const0>\;
  M7_AXIS_TDATA(21) <= \<const0>\;
  M7_AXIS_TDATA(20) <= \<const0>\;
  M7_AXIS_TDATA(19) <= \<const0>\;
  M7_AXIS_TDATA(18) <= \<const0>\;
  M7_AXIS_TDATA(17) <= \<const0>\;
  M7_AXIS_TDATA(16) <= \<const0>\;
  M7_AXIS_TDATA(15) <= \<const0>\;
  M7_AXIS_TDATA(14) <= \<const0>\;
  M7_AXIS_TDATA(13) <= \<const0>\;
  M7_AXIS_TDATA(12) <= \<const0>\;
  M7_AXIS_TDATA(11) <= \<const0>\;
  M7_AXIS_TDATA(10) <= \<const0>\;
  M7_AXIS_TDATA(9) <= \<const0>\;
  M7_AXIS_TDATA(8) <= \<const0>\;
  M7_AXIS_TDATA(7) <= \<const0>\;
  M7_AXIS_TDATA(6) <= \<const0>\;
  M7_AXIS_TDATA(5) <= \<const0>\;
  M7_AXIS_TDATA(4) <= \<const0>\;
  M7_AXIS_TDATA(3) <= \<const0>\;
  M7_AXIS_TDATA(2) <= \<const0>\;
  M7_AXIS_TDATA(1) <= \<const0>\;
  M7_AXIS_TDATA(0) <= \<const0>\;
  M7_AXIS_TLAST <= \<const0>\;
  M7_AXIS_TVALID <= \<const0>\;
  M8_AXIS_TDATA(31) <= \<const0>\;
  M8_AXIS_TDATA(30) <= \<const0>\;
  M8_AXIS_TDATA(29) <= \<const0>\;
  M8_AXIS_TDATA(28) <= \<const0>\;
  M8_AXIS_TDATA(27) <= \<const0>\;
  M8_AXIS_TDATA(26) <= \<const0>\;
  M8_AXIS_TDATA(25) <= \<const0>\;
  M8_AXIS_TDATA(24) <= \<const0>\;
  M8_AXIS_TDATA(23) <= \<const0>\;
  M8_AXIS_TDATA(22) <= \<const0>\;
  M8_AXIS_TDATA(21) <= \<const0>\;
  M8_AXIS_TDATA(20) <= \<const0>\;
  M8_AXIS_TDATA(19) <= \<const0>\;
  M8_AXIS_TDATA(18) <= \<const0>\;
  M8_AXIS_TDATA(17) <= \<const0>\;
  M8_AXIS_TDATA(16) <= \<const0>\;
  M8_AXIS_TDATA(15) <= \<const0>\;
  M8_AXIS_TDATA(14) <= \<const0>\;
  M8_AXIS_TDATA(13) <= \<const0>\;
  M8_AXIS_TDATA(12) <= \<const0>\;
  M8_AXIS_TDATA(11) <= \<const0>\;
  M8_AXIS_TDATA(10) <= \<const0>\;
  M8_AXIS_TDATA(9) <= \<const0>\;
  M8_AXIS_TDATA(8) <= \<const0>\;
  M8_AXIS_TDATA(7) <= \<const0>\;
  M8_AXIS_TDATA(6) <= \<const0>\;
  M8_AXIS_TDATA(5) <= \<const0>\;
  M8_AXIS_TDATA(4) <= \<const0>\;
  M8_AXIS_TDATA(3) <= \<const0>\;
  M8_AXIS_TDATA(2) <= \<const0>\;
  M8_AXIS_TDATA(1) <= \<const0>\;
  M8_AXIS_TDATA(0) <= \<const0>\;
  M8_AXIS_TLAST <= \<const0>\;
  M8_AXIS_TVALID <= \<const0>\;
  M9_AXIS_TDATA(31) <= \<const0>\;
  M9_AXIS_TDATA(30) <= \<const0>\;
  M9_AXIS_TDATA(29) <= \<const0>\;
  M9_AXIS_TDATA(28) <= \<const0>\;
  M9_AXIS_TDATA(27) <= \<const0>\;
  M9_AXIS_TDATA(26) <= \<const0>\;
  M9_AXIS_TDATA(25) <= \<const0>\;
  M9_AXIS_TDATA(24) <= \<const0>\;
  M9_AXIS_TDATA(23) <= \<const0>\;
  M9_AXIS_TDATA(22) <= \<const0>\;
  M9_AXIS_TDATA(21) <= \<const0>\;
  M9_AXIS_TDATA(20) <= \<const0>\;
  M9_AXIS_TDATA(19) <= \<const0>\;
  M9_AXIS_TDATA(18) <= \<const0>\;
  M9_AXIS_TDATA(17) <= \<const0>\;
  M9_AXIS_TDATA(16) <= \<const0>\;
  M9_AXIS_TDATA(15) <= \<const0>\;
  M9_AXIS_TDATA(14) <= \<const0>\;
  M9_AXIS_TDATA(13) <= \<const0>\;
  M9_AXIS_TDATA(12) <= \<const0>\;
  M9_AXIS_TDATA(11) <= \<const0>\;
  M9_AXIS_TDATA(10) <= \<const0>\;
  M9_AXIS_TDATA(9) <= \<const0>\;
  M9_AXIS_TDATA(8) <= \<const0>\;
  M9_AXIS_TDATA(7) <= \<const0>\;
  M9_AXIS_TDATA(6) <= \<const0>\;
  M9_AXIS_TDATA(5) <= \<const0>\;
  M9_AXIS_TDATA(4) <= \<const0>\;
  M9_AXIS_TDATA(3) <= \<const0>\;
  M9_AXIS_TDATA(2) <= \<const0>\;
  M9_AXIS_TDATA(1) <= \<const0>\;
  M9_AXIS_TDATA(0) <= \<const0>\;
  M9_AXIS_TLAST <= \<const0>\;
  M9_AXIS_TVALID <= \<const0>\;
  MB_Error <= \<const0>\;
  MB_Halted <= \^lockstep_master_out\(10);
  M_AXI_DC_ACREADY <= \<const0>\;
  M_AXI_DC_ARADDR(31) <= \<const0>\;
  M_AXI_DC_ARADDR(30) <= \<const0>\;
  M_AXI_DC_ARADDR(29) <= \<const0>\;
  M_AXI_DC_ARADDR(28) <= \<const0>\;
  M_AXI_DC_ARADDR(27) <= \<const0>\;
  M_AXI_DC_ARADDR(26) <= \<const0>\;
  M_AXI_DC_ARADDR(25) <= \<const0>\;
  M_AXI_DC_ARADDR(24) <= \<const0>\;
  M_AXI_DC_ARADDR(23) <= \<const0>\;
  M_AXI_DC_ARADDR(22) <= \<const0>\;
  M_AXI_DC_ARADDR(21) <= \<const0>\;
  M_AXI_DC_ARADDR(20) <= \<const0>\;
  M_AXI_DC_ARADDR(19) <= \<const0>\;
  M_AXI_DC_ARADDR(18) <= \<const0>\;
  M_AXI_DC_ARADDR(17) <= \<const0>\;
  M_AXI_DC_ARADDR(16) <= \<const0>\;
  M_AXI_DC_ARADDR(15) <= \<const0>\;
  M_AXI_DC_ARADDR(14) <= \<const0>\;
  M_AXI_DC_ARADDR(13) <= \<const0>\;
  M_AXI_DC_ARADDR(12) <= \<const0>\;
  M_AXI_DC_ARADDR(11) <= \<const0>\;
  M_AXI_DC_ARADDR(10) <= \<const0>\;
  M_AXI_DC_ARADDR(9) <= \<const0>\;
  M_AXI_DC_ARADDR(8) <= \<const0>\;
  M_AXI_DC_ARADDR(7) <= \<const0>\;
  M_AXI_DC_ARADDR(6) <= \<const0>\;
  M_AXI_DC_ARADDR(5) <= \<const0>\;
  M_AXI_DC_ARADDR(4) <= \<const0>\;
  M_AXI_DC_ARADDR(3) <= \<const0>\;
  M_AXI_DC_ARADDR(2) <= \<const0>\;
  M_AXI_DC_ARADDR(1) <= \<const0>\;
  M_AXI_DC_ARADDR(0) <= \<const0>\;
  M_AXI_DC_ARBAR(1) <= \<const0>\;
  M_AXI_DC_ARBAR(0) <= \<const0>\;
  M_AXI_DC_ARBURST(1) <= \<const0>\;
  M_AXI_DC_ARBURST(0) <= \<const0>\;
  M_AXI_DC_ARCACHE(3) <= \<const0>\;
  M_AXI_DC_ARCACHE(2) <= \<const0>\;
  M_AXI_DC_ARCACHE(1) <= \<const0>\;
  M_AXI_DC_ARCACHE(0) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_DC_ARID(0) <= \<const0>\;
  M_AXI_DC_ARLEN(7) <= \<const0>\;
  M_AXI_DC_ARLEN(6) <= \<const0>\;
  M_AXI_DC_ARLEN(5) <= \<const0>\;
  M_AXI_DC_ARLEN(4) <= \<const0>\;
  M_AXI_DC_ARLEN(3) <= \<const0>\;
  M_AXI_DC_ARLEN(2) <= \<const0>\;
  M_AXI_DC_ARLEN(1) <= \<const0>\;
  M_AXI_DC_ARLEN(0) <= \<const0>\;
  M_AXI_DC_ARLOCK <= \<const0>\;
  M_AXI_DC_ARPROT(2) <= \<const0>\;
  M_AXI_DC_ARPROT(1) <= \<const0>\;
  M_AXI_DC_ARPROT(0) <= \<const0>\;
  M_AXI_DC_ARQOS(3) <= \<const0>\;
  M_AXI_DC_ARQOS(2) <= \<const0>\;
  M_AXI_DC_ARQOS(1) <= \<const0>\;
  M_AXI_DC_ARQOS(0) <= \<const0>\;
  M_AXI_DC_ARSIZE(2) <= \<const0>\;
  M_AXI_DC_ARSIZE(1) <= \<const0>\;
  M_AXI_DC_ARSIZE(0) <= \<const0>\;
  M_AXI_DC_ARSNOOP(3) <= \<const0>\;
  M_AXI_DC_ARSNOOP(2) <= \<const0>\;
  M_AXI_DC_ARSNOOP(1) <= \<const0>\;
  M_AXI_DC_ARSNOOP(0) <= \<const0>\;
  M_AXI_DC_ARUSER(4) <= \<const0>\;
  M_AXI_DC_ARUSER(3) <= \<const0>\;
  M_AXI_DC_ARUSER(2) <= \<const0>\;
  M_AXI_DC_ARUSER(1) <= \<const0>\;
  M_AXI_DC_ARUSER(0) <= \<const0>\;
  M_AXI_DC_ARVALID <= \<const0>\;
  M_AXI_DC_AWADDR(31) <= \<const0>\;
  M_AXI_DC_AWADDR(30) <= \<const0>\;
  M_AXI_DC_AWADDR(29) <= \<const0>\;
  M_AXI_DC_AWADDR(28) <= \<const0>\;
  M_AXI_DC_AWADDR(27) <= \<const0>\;
  M_AXI_DC_AWADDR(26) <= \<const0>\;
  M_AXI_DC_AWADDR(25) <= \<const0>\;
  M_AXI_DC_AWADDR(24) <= \<const0>\;
  M_AXI_DC_AWADDR(23) <= \<const0>\;
  M_AXI_DC_AWADDR(22) <= \<const0>\;
  M_AXI_DC_AWADDR(21) <= \<const0>\;
  M_AXI_DC_AWADDR(20) <= \<const0>\;
  M_AXI_DC_AWADDR(19) <= \<const0>\;
  M_AXI_DC_AWADDR(18) <= \<const0>\;
  M_AXI_DC_AWADDR(17) <= \<const0>\;
  M_AXI_DC_AWADDR(16) <= \<const0>\;
  M_AXI_DC_AWADDR(15) <= \<const0>\;
  M_AXI_DC_AWADDR(14) <= \<const0>\;
  M_AXI_DC_AWADDR(13) <= \<const0>\;
  M_AXI_DC_AWADDR(12) <= \<const0>\;
  M_AXI_DC_AWADDR(11) <= \<const0>\;
  M_AXI_DC_AWADDR(10) <= \<const0>\;
  M_AXI_DC_AWADDR(9) <= \<const0>\;
  M_AXI_DC_AWADDR(8) <= \<const0>\;
  M_AXI_DC_AWADDR(7) <= \<const0>\;
  M_AXI_DC_AWADDR(6) <= \<const0>\;
  M_AXI_DC_AWADDR(5) <= \<const0>\;
  M_AXI_DC_AWADDR(4) <= \<const0>\;
  M_AXI_DC_AWADDR(3) <= \<const0>\;
  M_AXI_DC_AWADDR(2) <= \<const0>\;
  M_AXI_DC_AWADDR(1) <= \<const0>\;
  M_AXI_DC_AWADDR(0) <= \<const0>\;
  M_AXI_DC_AWBAR(1) <= \<const0>\;
  M_AXI_DC_AWBAR(0) <= \<const0>\;
  M_AXI_DC_AWBURST(1) <= \<const0>\;
  M_AXI_DC_AWBURST(0) <= \<const0>\;
  M_AXI_DC_AWCACHE(3) <= \<const0>\;
  M_AXI_DC_AWCACHE(2) <= \<const0>\;
  M_AXI_DC_AWCACHE(1) <= \<const0>\;
  M_AXI_DC_AWCACHE(0) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_DC_AWID(0) <= \<const0>\;
  M_AXI_DC_AWLEN(7) <= \<const0>\;
  M_AXI_DC_AWLEN(6) <= \<const0>\;
  M_AXI_DC_AWLEN(5) <= \<const0>\;
  M_AXI_DC_AWLEN(4) <= \<const0>\;
  M_AXI_DC_AWLEN(3) <= \<const0>\;
  M_AXI_DC_AWLEN(2) <= \<const0>\;
  M_AXI_DC_AWLEN(1) <= \<const0>\;
  M_AXI_DC_AWLEN(0) <= \<const0>\;
  M_AXI_DC_AWLOCK <= \<const0>\;
  M_AXI_DC_AWPROT(2) <= \<const0>\;
  M_AXI_DC_AWPROT(1) <= \<const0>\;
  M_AXI_DC_AWPROT(0) <= \<const0>\;
  M_AXI_DC_AWQOS(3) <= \<const0>\;
  M_AXI_DC_AWQOS(2) <= \<const0>\;
  M_AXI_DC_AWQOS(1) <= \<const0>\;
  M_AXI_DC_AWQOS(0) <= \<const0>\;
  M_AXI_DC_AWSIZE(2) <= \<const0>\;
  M_AXI_DC_AWSIZE(1) <= \<const0>\;
  M_AXI_DC_AWSIZE(0) <= \<const0>\;
  M_AXI_DC_AWSNOOP(2) <= \<const0>\;
  M_AXI_DC_AWSNOOP(1) <= \<const0>\;
  M_AXI_DC_AWSNOOP(0) <= \<const0>\;
  M_AXI_DC_AWUSER(4) <= \<const0>\;
  M_AXI_DC_AWUSER(3) <= \<const0>\;
  M_AXI_DC_AWUSER(2) <= \<const0>\;
  M_AXI_DC_AWUSER(1) <= \<const0>\;
  M_AXI_DC_AWUSER(0) <= \<const0>\;
  M_AXI_DC_AWVALID <= \<const0>\;
  M_AXI_DC_BREADY <= \<const0>\;
  M_AXI_DC_CDDATA(31) <= \<const0>\;
  M_AXI_DC_CDDATA(30) <= \<const0>\;
  M_AXI_DC_CDDATA(29) <= \<const0>\;
  M_AXI_DC_CDDATA(28) <= \<const0>\;
  M_AXI_DC_CDDATA(27) <= \<const0>\;
  M_AXI_DC_CDDATA(26) <= \<const0>\;
  M_AXI_DC_CDDATA(25) <= \<const0>\;
  M_AXI_DC_CDDATA(24) <= \<const0>\;
  M_AXI_DC_CDDATA(23) <= \<const0>\;
  M_AXI_DC_CDDATA(22) <= \<const0>\;
  M_AXI_DC_CDDATA(21) <= \<const0>\;
  M_AXI_DC_CDDATA(20) <= \<const0>\;
  M_AXI_DC_CDDATA(19) <= \<const0>\;
  M_AXI_DC_CDDATA(18) <= \<const0>\;
  M_AXI_DC_CDDATA(17) <= \<const0>\;
  M_AXI_DC_CDDATA(16) <= \<const0>\;
  M_AXI_DC_CDDATA(15) <= \<const0>\;
  M_AXI_DC_CDDATA(14) <= \<const0>\;
  M_AXI_DC_CDDATA(13) <= \<const0>\;
  M_AXI_DC_CDDATA(12) <= \<const0>\;
  M_AXI_DC_CDDATA(11) <= \<const0>\;
  M_AXI_DC_CDDATA(10) <= \<const0>\;
  M_AXI_DC_CDDATA(9) <= \<const0>\;
  M_AXI_DC_CDDATA(8) <= \<const0>\;
  M_AXI_DC_CDDATA(7) <= \<const0>\;
  M_AXI_DC_CDDATA(6) <= \<const0>\;
  M_AXI_DC_CDDATA(5) <= \<const0>\;
  M_AXI_DC_CDDATA(4) <= \<const0>\;
  M_AXI_DC_CDDATA(3) <= \<const0>\;
  M_AXI_DC_CDDATA(2) <= \<const0>\;
  M_AXI_DC_CDDATA(1) <= \<const0>\;
  M_AXI_DC_CDDATA(0) <= \<const0>\;
  M_AXI_DC_CDLAST <= \<const0>\;
  M_AXI_DC_CDVALID <= \<const0>\;
  M_AXI_DC_CRRESP(4) <= \<const0>\;
  M_AXI_DC_CRRESP(3) <= \<const0>\;
  M_AXI_DC_CRRESP(2) <= \<const0>\;
  M_AXI_DC_CRRESP(1) <= \<const0>\;
  M_AXI_DC_CRRESP(0) <= \<const0>\;
  M_AXI_DC_CRVALID <= \<const0>\;
  M_AXI_DC_RACK <= \<const0>\;
  M_AXI_DC_RREADY <= \<const0>\;
  M_AXI_DC_WACK <= \<const0>\;
  M_AXI_DC_WDATA(31) <= \<const0>\;
  M_AXI_DC_WDATA(30) <= \<const0>\;
  M_AXI_DC_WDATA(29) <= \<const0>\;
  M_AXI_DC_WDATA(28) <= \<const0>\;
  M_AXI_DC_WDATA(27) <= \<const0>\;
  M_AXI_DC_WDATA(26) <= \<const0>\;
  M_AXI_DC_WDATA(25) <= \<const0>\;
  M_AXI_DC_WDATA(24) <= \<const0>\;
  M_AXI_DC_WDATA(23) <= \<const0>\;
  M_AXI_DC_WDATA(22) <= \<const0>\;
  M_AXI_DC_WDATA(21) <= \<const0>\;
  M_AXI_DC_WDATA(20) <= \<const0>\;
  M_AXI_DC_WDATA(19) <= \<const0>\;
  M_AXI_DC_WDATA(18) <= \<const0>\;
  M_AXI_DC_WDATA(17) <= \<const0>\;
  M_AXI_DC_WDATA(16) <= \<const0>\;
  M_AXI_DC_WDATA(15) <= \<const0>\;
  M_AXI_DC_WDATA(14) <= \<const0>\;
  M_AXI_DC_WDATA(13) <= \<const0>\;
  M_AXI_DC_WDATA(12) <= \<const0>\;
  M_AXI_DC_WDATA(11) <= \<const0>\;
  M_AXI_DC_WDATA(10) <= \<const0>\;
  M_AXI_DC_WDATA(9) <= \<const0>\;
  M_AXI_DC_WDATA(8) <= \<const0>\;
  M_AXI_DC_WDATA(7) <= \<const0>\;
  M_AXI_DC_WDATA(6) <= \<const0>\;
  M_AXI_DC_WDATA(5) <= \<const0>\;
  M_AXI_DC_WDATA(4) <= \<const0>\;
  M_AXI_DC_WDATA(3) <= \<const0>\;
  M_AXI_DC_WDATA(2) <= \<const0>\;
  M_AXI_DC_WDATA(1) <= \<const0>\;
  M_AXI_DC_WDATA(0) <= \<const0>\;
  M_AXI_DC_WLAST <= \<const0>\;
  M_AXI_DC_WSTRB(3) <= \<const0>\;
  M_AXI_DC_WSTRB(2) <= \<const0>\;
  M_AXI_DC_WSTRB(1) <= \<const0>\;
  M_AXI_DC_WSTRB(0) <= \<const0>\;
  M_AXI_DC_WUSER(0) <= \<const0>\;
  M_AXI_DC_WVALID <= \<const0>\;
  M_AXI_DP_ARADDR(31 downto 0) <= \^m_axi_dp_araddr\(31 downto 0);
  M_AXI_DP_ARBURST(1) <= \<const0>\;
  M_AXI_DP_ARBURST(0) <= \<const1>\;
  M_AXI_DP_ARCACHE(3) <= \<const0>\;
  M_AXI_DP_ARCACHE(2) <= \<const0>\;
  M_AXI_DP_ARCACHE(1) <= \<const1>\;
  M_AXI_DP_ARCACHE(0) <= \<const1>\;
  M_AXI_DP_ARID(0) <= \<const0>\;
  M_AXI_DP_ARLEN(7) <= \<const0>\;
  M_AXI_DP_ARLEN(6) <= \<const0>\;
  M_AXI_DP_ARLEN(5) <= \<const0>\;
  M_AXI_DP_ARLEN(4) <= \<const0>\;
  M_AXI_DP_ARLEN(3) <= \<const0>\;
  M_AXI_DP_ARLEN(2) <= \<const0>\;
  M_AXI_DP_ARLEN(1) <= \<const0>\;
  M_AXI_DP_ARLEN(0) <= \<const0>\;
  M_AXI_DP_ARLOCK <= \<const0>\;
  M_AXI_DP_ARPROT(2) <= \<const0>\;
  M_AXI_DP_ARPROT(1) <= \<const0>\;
  M_AXI_DP_ARPROT(0) <= \<const0>\;
  M_AXI_DP_ARQOS(3) <= \<const1>\;
  M_AXI_DP_ARQOS(2) <= \<const0>\;
  M_AXI_DP_ARQOS(1) <= \<const0>\;
  M_AXI_DP_ARQOS(0) <= \<const0>\;
  M_AXI_DP_ARSIZE(2) <= \<const0>\;
  M_AXI_DP_ARSIZE(1) <= \<const1>\;
  M_AXI_DP_ARSIZE(0) <= \<const0>\;
  M_AXI_DP_ARVALID <= \^m_axi_dp_arvalid\;
  M_AXI_DP_AWADDR(31 downto 0) <= \^m_axi_dp_araddr\(31 downto 0);
  M_AXI_DP_AWBURST(1) <= \<const0>\;
  M_AXI_DP_AWBURST(0) <= \<const1>\;
  M_AXI_DP_AWCACHE(3) <= \<const0>\;
  M_AXI_DP_AWCACHE(2) <= \<const0>\;
  M_AXI_DP_AWCACHE(1) <= \<const1>\;
  M_AXI_DP_AWCACHE(0) <= \<const1>\;
  M_AXI_DP_AWID(0) <= \<const0>\;
  M_AXI_DP_AWLEN(7) <= \<const0>\;
  M_AXI_DP_AWLEN(6) <= \<const0>\;
  M_AXI_DP_AWLEN(5) <= \<const0>\;
  M_AXI_DP_AWLEN(4) <= \<const0>\;
  M_AXI_DP_AWLEN(3) <= \<const0>\;
  M_AXI_DP_AWLEN(2) <= \<const0>\;
  M_AXI_DP_AWLEN(1) <= \<const0>\;
  M_AXI_DP_AWLEN(0) <= \<const0>\;
  M_AXI_DP_AWLOCK <= \<const0>\;
  M_AXI_DP_AWPROT(2) <= \<const0>\;
  M_AXI_DP_AWPROT(1) <= \<const0>\;
  M_AXI_DP_AWPROT(0) <= \<const0>\;
  M_AXI_DP_AWQOS(3) <= \<const1>\;
  M_AXI_DP_AWQOS(2) <= \<const0>\;
  M_AXI_DP_AWQOS(1) <= \<const0>\;
  M_AXI_DP_AWQOS(0) <= \<const0>\;
  M_AXI_DP_AWSIZE(2) <= \<const0>\;
  M_AXI_DP_AWSIZE(1) <= \<const1>\;
  M_AXI_DP_AWSIZE(0) <= \<const0>\;
  M_AXI_DP_AWVALID <= \^m_axi_dp_awvalid\;
  M_AXI_DP_BREADY <= \<const1>\;
  M_AXI_DP_RREADY <= \<const1>\;
  M_AXI_DP_WDATA(31 downto 0) <= \^m_axi_dp_wdata\(31 downto 0);
  M_AXI_DP_WLAST <= \<const1>\;
  M_AXI_DP_WSTRB(3 downto 0) <= \^m_axi_dp_wstrb\(3 downto 0);
  M_AXI_DP_WVALID <= \^m_axi_dp_wvalid\;
  M_AXI_IC_ACREADY <= \<const0>\;
  M_AXI_IC_ARADDR(31) <= \<const0>\;
  M_AXI_IC_ARADDR(30) <= \<const0>\;
  M_AXI_IC_ARADDR(29) <= \<const0>\;
  M_AXI_IC_ARADDR(28) <= \<const0>\;
  M_AXI_IC_ARADDR(27) <= \<const0>\;
  M_AXI_IC_ARADDR(26) <= \<const0>\;
  M_AXI_IC_ARADDR(25) <= \<const0>\;
  M_AXI_IC_ARADDR(24) <= \<const0>\;
  M_AXI_IC_ARADDR(23) <= \<const0>\;
  M_AXI_IC_ARADDR(22) <= \<const0>\;
  M_AXI_IC_ARADDR(21) <= \<const0>\;
  M_AXI_IC_ARADDR(20) <= \<const0>\;
  M_AXI_IC_ARADDR(19) <= \<const0>\;
  M_AXI_IC_ARADDR(18) <= \<const0>\;
  M_AXI_IC_ARADDR(17) <= \<const0>\;
  M_AXI_IC_ARADDR(16) <= \<const0>\;
  M_AXI_IC_ARADDR(15) <= \<const0>\;
  M_AXI_IC_ARADDR(14) <= \<const0>\;
  M_AXI_IC_ARADDR(13) <= \<const0>\;
  M_AXI_IC_ARADDR(12) <= \<const0>\;
  M_AXI_IC_ARADDR(11) <= \<const0>\;
  M_AXI_IC_ARADDR(10) <= \<const0>\;
  M_AXI_IC_ARADDR(9) <= \<const0>\;
  M_AXI_IC_ARADDR(8) <= \<const0>\;
  M_AXI_IC_ARADDR(7) <= \<const0>\;
  M_AXI_IC_ARADDR(6) <= \<const0>\;
  M_AXI_IC_ARADDR(5) <= \<const0>\;
  M_AXI_IC_ARADDR(4) <= \<const0>\;
  M_AXI_IC_ARADDR(3) <= \<const0>\;
  M_AXI_IC_ARADDR(2) <= \<const0>\;
  M_AXI_IC_ARADDR(1) <= \<const0>\;
  M_AXI_IC_ARADDR(0) <= \<const0>\;
  M_AXI_IC_ARBAR(1) <= \<const0>\;
  M_AXI_IC_ARBAR(0) <= \<const0>\;
  M_AXI_IC_ARBURST(1) <= \<const0>\;
  M_AXI_IC_ARBURST(0) <= \<const0>\;
  M_AXI_IC_ARCACHE(3) <= \<const0>\;
  M_AXI_IC_ARCACHE(2) <= \<const0>\;
  M_AXI_IC_ARCACHE(1) <= \<const0>\;
  M_AXI_IC_ARCACHE(0) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_IC_ARID(0) <= \<const0>\;
  M_AXI_IC_ARLEN(7) <= \<const0>\;
  M_AXI_IC_ARLEN(6) <= \<const0>\;
  M_AXI_IC_ARLEN(5) <= \<const0>\;
  M_AXI_IC_ARLEN(4) <= \<const0>\;
  M_AXI_IC_ARLEN(3) <= \<const0>\;
  M_AXI_IC_ARLEN(2) <= \<const0>\;
  M_AXI_IC_ARLEN(1) <= \<const0>\;
  M_AXI_IC_ARLEN(0) <= \<const0>\;
  M_AXI_IC_ARLOCK <= \<const0>\;
  M_AXI_IC_ARPROT(2) <= \<const0>\;
  M_AXI_IC_ARPROT(1) <= \<const0>\;
  M_AXI_IC_ARPROT(0) <= \<const0>\;
  M_AXI_IC_ARQOS(3) <= \<const0>\;
  M_AXI_IC_ARQOS(2) <= \<const0>\;
  M_AXI_IC_ARQOS(1) <= \<const0>\;
  M_AXI_IC_ARQOS(0) <= \<const0>\;
  M_AXI_IC_ARSIZE(2) <= \<const0>\;
  M_AXI_IC_ARSIZE(1) <= \<const0>\;
  M_AXI_IC_ARSIZE(0) <= \<const0>\;
  M_AXI_IC_ARSNOOP(3) <= \<const0>\;
  M_AXI_IC_ARSNOOP(2) <= \<const0>\;
  M_AXI_IC_ARSNOOP(1) <= \<const0>\;
  M_AXI_IC_ARSNOOP(0) <= \<const0>\;
  M_AXI_IC_ARUSER(4) <= \<const0>\;
  M_AXI_IC_ARUSER(3) <= \<const0>\;
  M_AXI_IC_ARUSER(2) <= \<const0>\;
  M_AXI_IC_ARUSER(1) <= \<const0>\;
  M_AXI_IC_ARUSER(0) <= \<const0>\;
  M_AXI_IC_ARVALID <= \<const0>\;
  M_AXI_IC_AWADDR(31) <= \<const0>\;
  M_AXI_IC_AWADDR(30) <= \<const0>\;
  M_AXI_IC_AWADDR(29) <= \<const0>\;
  M_AXI_IC_AWADDR(28) <= \<const0>\;
  M_AXI_IC_AWADDR(27) <= \<const0>\;
  M_AXI_IC_AWADDR(26) <= \<const0>\;
  M_AXI_IC_AWADDR(25) <= \<const0>\;
  M_AXI_IC_AWADDR(24) <= \<const0>\;
  M_AXI_IC_AWADDR(23) <= \<const0>\;
  M_AXI_IC_AWADDR(22) <= \<const0>\;
  M_AXI_IC_AWADDR(21) <= \<const0>\;
  M_AXI_IC_AWADDR(20) <= \<const0>\;
  M_AXI_IC_AWADDR(19) <= \<const0>\;
  M_AXI_IC_AWADDR(18) <= \<const0>\;
  M_AXI_IC_AWADDR(17) <= \<const0>\;
  M_AXI_IC_AWADDR(16) <= \<const0>\;
  M_AXI_IC_AWADDR(15) <= \<const0>\;
  M_AXI_IC_AWADDR(14) <= \<const0>\;
  M_AXI_IC_AWADDR(13) <= \<const0>\;
  M_AXI_IC_AWADDR(12) <= \<const0>\;
  M_AXI_IC_AWADDR(11) <= \<const0>\;
  M_AXI_IC_AWADDR(10) <= \<const0>\;
  M_AXI_IC_AWADDR(9) <= \<const0>\;
  M_AXI_IC_AWADDR(8) <= \<const0>\;
  M_AXI_IC_AWADDR(7) <= \<const0>\;
  M_AXI_IC_AWADDR(6) <= \<const0>\;
  M_AXI_IC_AWADDR(5) <= \<const0>\;
  M_AXI_IC_AWADDR(4) <= \<const0>\;
  M_AXI_IC_AWADDR(3) <= \<const0>\;
  M_AXI_IC_AWADDR(2) <= \<const0>\;
  M_AXI_IC_AWADDR(1) <= \<const0>\;
  M_AXI_IC_AWADDR(0) <= \<const0>\;
  M_AXI_IC_AWBAR(1) <= \<const0>\;
  M_AXI_IC_AWBAR(0) <= \<const0>\;
  M_AXI_IC_AWBURST(1) <= \<const0>\;
  M_AXI_IC_AWBURST(0) <= \<const0>\;
  M_AXI_IC_AWCACHE(3) <= \<const0>\;
  M_AXI_IC_AWCACHE(2) <= \<const0>\;
  M_AXI_IC_AWCACHE(1) <= \<const0>\;
  M_AXI_IC_AWCACHE(0) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_IC_AWID(0) <= \<const0>\;
  M_AXI_IC_AWLEN(7) <= \<const0>\;
  M_AXI_IC_AWLEN(6) <= \<const0>\;
  M_AXI_IC_AWLEN(5) <= \<const0>\;
  M_AXI_IC_AWLEN(4) <= \<const0>\;
  M_AXI_IC_AWLEN(3) <= \<const0>\;
  M_AXI_IC_AWLEN(2) <= \<const0>\;
  M_AXI_IC_AWLEN(1) <= \<const0>\;
  M_AXI_IC_AWLEN(0) <= \<const0>\;
  M_AXI_IC_AWLOCK <= \<const0>\;
  M_AXI_IC_AWPROT(2) <= \<const0>\;
  M_AXI_IC_AWPROT(1) <= \<const0>\;
  M_AXI_IC_AWPROT(0) <= \<const0>\;
  M_AXI_IC_AWQOS(3) <= \<const0>\;
  M_AXI_IC_AWQOS(2) <= \<const0>\;
  M_AXI_IC_AWQOS(1) <= \<const0>\;
  M_AXI_IC_AWQOS(0) <= \<const0>\;
  M_AXI_IC_AWSIZE(2) <= \<const0>\;
  M_AXI_IC_AWSIZE(1) <= \<const0>\;
  M_AXI_IC_AWSIZE(0) <= \<const0>\;
  M_AXI_IC_AWSNOOP(2) <= \<const0>\;
  M_AXI_IC_AWSNOOP(1) <= \<const0>\;
  M_AXI_IC_AWSNOOP(0) <= \<const0>\;
  M_AXI_IC_AWUSER(4) <= \<const0>\;
  M_AXI_IC_AWUSER(3) <= \<const0>\;
  M_AXI_IC_AWUSER(2) <= \<const0>\;
  M_AXI_IC_AWUSER(1) <= \<const0>\;
  M_AXI_IC_AWUSER(0) <= \<const0>\;
  M_AXI_IC_AWVALID <= \<const0>\;
  M_AXI_IC_BREADY <= \<const0>\;
  M_AXI_IC_CDDATA(31) <= \<const0>\;
  M_AXI_IC_CDDATA(30) <= \<const0>\;
  M_AXI_IC_CDDATA(29) <= \<const0>\;
  M_AXI_IC_CDDATA(28) <= \<const0>\;
  M_AXI_IC_CDDATA(27) <= \<const0>\;
  M_AXI_IC_CDDATA(26) <= \<const0>\;
  M_AXI_IC_CDDATA(25) <= \<const0>\;
  M_AXI_IC_CDDATA(24) <= \<const0>\;
  M_AXI_IC_CDDATA(23) <= \<const0>\;
  M_AXI_IC_CDDATA(22) <= \<const0>\;
  M_AXI_IC_CDDATA(21) <= \<const0>\;
  M_AXI_IC_CDDATA(20) <= \<const0>\;
  M_AXI_IC_CDDATA(19) <= \<const0>\;
  M_AXI_IC_CDDATA(18) <= \<const0>\;
  M_AXI_IC_CDDATA(17) <= \<const0>\;
  M_AXI_IC_CDDATA(16) <= \<const0>\;
  M_AXI_IC_CDDATA(15) <= \<const0>\;
  M_AXI_IC_CDDATA(14) <= \<const0>\;
  M_AXI_IC_CDDATA(13) <= \<const0>\;
  M_AXI_IC_CDDATA(12) <= \<const0>\;
  M_AXI_IC_CDDATA(11) <= \<const0>\;
  M_AXI_IC_CDDATA(10) <= \<const0>\;
  M_AXI_IC_CDDATA(9) <= \<const0>\;
  M_AXI_IC_CDDATA(8) <= \<const0>\;
  M_AXI_IC_CDDATA(7) <= \<const0>\;
  M_AXI_IC_CDDATA(6) <= \<const0>\;
  M_AXI_IC_CDDATA(5) <= \<const0>\;
  M_AXI_IC_CDDATA(4) <= \<const0>\;
  M_AXI_IC_CDDATA(3) <= \<const0>\;
  M_AXI_IC_CDDATA(2) <= \<const0>\;
  M_AXI_IC_CDDATA(1) <= \<const0>\;
  M_AXI_IC_CDDATA(0) <= \<const0>\;
  M_AXI_IC_CDLAST <= \<const0>\;
  M_AXI_IC_CDVALID <= \<const0>\;
  M_AXI_IC_CRRESP(4) <= \<const0>\;
  M_AXI_IC_CRRESP(3) <= \<const0>\;
  M_AXI_IC_CRRESP(2) <= \<const0>\;
  M_AXI_IC_CRRESP(1) <= \<const0>\;
  M_AXI_IC_CRRESP(0) <= \<const0>\;
  M_AXI_IC_CRVALID <= \<const0>\;
  M_AXI_IC_RACK <= \<const0>\;
  M_AXI_IC_RREADY <= \<const0>\;
  M_AXI_IC_WACK <= \<const0>\;
  M_AXI_IC_WDATA(31) <= \<const0>\;
  M_AXI_IC_WDATA(30) <= \<const0>\;
  M_AXI_IC_WDATA(29) <= \<const0>\;
  M_AXI_IC_WDATA(28) <= \<const0>\;
  M_AXI_IC_WDATA(27) <= \<const0>\;
  M_AXI_IC_WDATA(26) <= \<const0>\;
  M_AXI_IC_WDATA(25) <= \<const0>\;
  M_AXI_IC_WDATA(24) <= \<const0>\;
  M_AXI_IC_WDATA(23) <= \<const0>\;
  M_AXI_IC_WDATA(22) <= \<const0>\;
  M_AXI_IC_WDATA(21) <= \<const0>\;
  M_AXI_IC_WDATA(20) <= \<const0>\;
  M_AXI_IC_WDATA(19) <= \<const0>\;
  M_AXI_IC_WDATA(18) <= \<const0>\;
  M_AXI_IC_WDATA(17) <= \<const0>\;
  M_AXI_IC_WDATA(16) <= \<const0>\;
  M_AXI_IC_WDATA(15) <= \<const0>\;
  M_AXI_IC_WDATA(14) <= \<const0>\;
  M_AXI_IC_WDATA(13) <= \<const0>\;
  M_AXI_IC_WDATA(12) <= \<const0>\;
  M_AXI_IC_WDATA(11) <= \<const0>\;
  M_AXI_IC_WDATA(10) <= \<const0>\;
  M_AXI_IC_WDATA(9) <= \<const0>\;
  M_AXI_IC_WDATA(8) <= \<const0>\;
  M_AXI_IC_WDATA(7) <= \<const0>\;
  M_AXI_IC_WDATA(6) <= \<const0>\;
  M_AXI_IC_WDATA(5) <= \<const0>\;
  M_AXI_IC_WDATA(4) <= \<const0>\;
  M_AXI_IC_WDATA(3) <= \<const0>\;
  M_AXI_IC_WDATA(2) <= \<const0>\;
  M_AXI_IC_WDATA(1) <= \<const0>\;
  M_AXI_IC_WDATA(0) <= \<const0>\;
  M_AXI_IC_WLAST <= \<const0>\;
  M_AXI_IC_WSTRB(3) <= \<const0>\;
  M_AXI_IC_WSTRB(2) <= \<const0>\;
  M_AXI_IC_WSTRB(1) <= \<const0>\;
  M_AXI_IC_WSTRB(0) <= \<const0>\;
  M_AXI_IC_WUSER(0) <= \<const0>\;
  M_AXI_IC_WVALID <= \<const0>\;
  M_AXI_IP_ARADDR(31) <= \<const0>\;
  M_AXI_IP_ARADDR(30) <= \<const0>\;
  M_AXI_IP_ARADDR(29) <= \<const0>\;
  M_AXI_IP_ARADDR(28) <= \<const0>\;
  M_AXI_IP_ARADDR(27) <= \<const0>\;
  M_AXI_IP_ARADDR(26) <= \<const0>\;
  M_AXI_IP_ARADDR(25) <= \<const0>\;
  M_AXI_IP_ARADDR(24) <= \<const0>\;
  M_AXI_IP_ARADDR(23) <= \<const0>\;
  M_AXI_IP_ARADDR(22) <= \<const0>\;
  M_AXI_IP_ARADDR(21) <= \<const0>\;
  M_AXI_IP_ARADDR(20) <= \<const0>\;
  M_AXI_IP_ARADDR(19) <= \<const0>\;
  M_AXI_IP_ARADDR(18) <= \<const0>\;
  M_AXI_IP_ARADDR(17) <= \<const0>\;
  M_AXI_IP_ARADDR(16) <= \<const0>\;
  M_AXI_IP_ARADDR(15) <= \<const0>\;
  M_AXI_IP_ARADDR(14) <= \<const0>\;
  M_AXI_IP_ARADDR(13) <= \<const0>\;
  M_AXI_IP_ARADDR(12) <= \<const0>\;
  M_AXI_IP_ARADDR(11) <= \<const0>\;
  M_AXI_IP_ARADDR(10) <= \<const0>\;
  M_AXI_IP_ARADDR(9) <= \<const0>\;
  M_AXI_IP_ARADDR(8) <= \<const0>\;
  M_AXI_IP_ARADDR(7) <= \<const0>\;
  M_AXI_IP_ARADDR(6) <= \<const0>\;
  M_AXI_IP_ARADDR(5) <= \<const0>\;
  M_AXI_IP_ARADDR(4) <= \<const0>\;
  M_AXI_IP_ARADDR(3) <= \<const0>\;
  M_AXI_IP_ARADDR(2) <= \<const0>\;
  M_AXI_IP_ARADDR(1) <= \<const0>\;
  M_AXI_IP_ARADDR(0) <= \<const0>\;
  M_AXI_IP_ARBURST(1) <= \<const0>\;
  M_AXI_IP_ARBURST(0) <= \<const0>\;
  M_AXI_IP_ARCACHE(3) <= \<const0>\;
  M_AXI_IP_ARCACHE(2) <= \<const0>\;
  M_AXI_IP_ARCACHE(1) <= \<const0>\;
  M_AXI_IP_ARCACHE(0) <= \<const0>\;
  M_AXI_IP_ARID(0) <= \<const0>\;
  M_AXI_IP_ARLEN(7) <= \<const0>\;
  M_AXI_IP_ARLEN(6) <= \<const0>\;
  M_AXI_IP_ARLEN(5) <= \<const0>\;
  M_AXI_IP_ARLEN(4) <= \<const0>\;
  M_AXI_IP_ARLEN(3) <= \<const0>\;
  M_AXI_IP_ARLEN(2) <= \<const0>\;
  M_AXI_IP_ARLEN(1) <= \<const0>\;
  M_AXI_IP_ARLEN(0) <= \<const0>\;
  M_AXI_IP_ARLOCK <= \<const0>\;
  M_AXI_IP_ARPROT(2) <= \<const0>\;
  M_AXI_IP_ARPROT(1) <= \<const0>\;
  M_AXI_IP_ARPROT(0) <= \<const0>\;
  M_AXI_IP_ARQOS(3) <= \<const0>\;
  M_AXI_IP_ARQOS(2) <= \<const0>\;
  M_AXI_IP_ARQOS(1) <= \<const0>\;
  M_AXI_IP_ARQOS(0) <= \<const0>\;
  M_AXI_IP_ARSIZE(2) <= \<const0>\;
  M_AXI_IP_ARSIZE(1) <= \<const0>\;
  M_AXI_IP_ARSIZE(0) <= \<const0>\;
  M_AXI_IP_ARVALID <= \<const0>\;
  M_AXI_IP_AWADDR(31) <= \<const0>\;
  M_AXI_IP_AWADDR(30) <= \<const0>\;
  M_AXI_IP_AWADDR(29) <= \<const0>\;
  M_AXI_IP_AWADDR(28) <= \<const0>\;
  M_AXI_IP_AWADDR(27) <= \<const0>\;
  M_AXI_IP_AWADDR(26) <= \<const0>\;
  M_AXI_IP_AWADDR(25) <= \<const0>\;
  M_AXI_IP_AWADDR(24) <= \<const0>\;
  M_AXI_IP_AWADDR(23) <= \<const0>\;
  M_AXI_IP_AWADDR(22) <= \<const0>\;
  M_AXI_IP_AWADDR(21) <= \<const0>\;
  M_AXI_IP_AWADDR(20) <= \<const0>\;
  M_AXI_IP_AWADDR(19) <= \<const0>\;
  M_AXI_IP_AWADDR(18) <= \<const0>\;
  M_AXI_IP_AWADDR(17) <= \<const0>\;
  M_AXI_IP_AWADDR(16) <= \<const0>\;
  M_AXI_IP_AWADDR(15) <= \<const0>\;
  M_AXI_IP_AWADDR(14) <= \<const0>\;
  M_AXI_IP_AWADDR(13) <= \<const0>\;
  M_AXI_IP_AWADDR(12) <= \<const0>\;
  M_AXI_IP_AWADDR(11) <= \<const0>\;
  M_AXI_IP_AWADDR(10) <= \<const0>\;
  M_AXI_IP_AWADDR(9) <= \<const0>\;
  M_AXI_IP_AWADDR(8) <= \<const0>\;
  M_AXI_IP_AWADDR(7) <= \<const0>\;
  M_AXI_IP_AWADDR(6) <= \<const0>\;
  M_AXI_IP_AWADDR(5) <= \<const0>\;
  M_AXI_IP_AWADDR(4) <= \<const0>\;
  M_AXI_IP_AWADDR(3) <= \<const0>\;
  M_AXI_IP_AWADDR(2) <= \<const0>\;
  M_AXI_IP_AWADDR(1) <= \<const0>\;
  M_AXI_IP_AWADDR(0) <= \<const0>\;
  M_AXI_IP_AWBURST(1) <= \<const0>\;
  M_AXI_IP_AWBURST(0) <= \<const0>\;
  M_AXI_IP_AWCACHE(3) <= \<const0>\;
  M_AXI_IP_AWCACHE(2) <= \<const0>\;
  M_AXI_IP_AWCACHE(1) <= \<const0>\;
  M_AXI_IP_AWCACHE(0) <= \<const0>\;
  M_AXI_IP_AWID(0) <= \<const0>\;
  M_AXI_IP_AWLEN(7) <= \<const0>\;
  M_AXI_IP_AWLEN(6) <= \<const0>\;
  M_AXI_IP_AWLEN(5) <= \<const0>\;
  M_AXI_IP_AWLEN(4) <= \<const0>\;
  M_AXI_IP_AWLEN(3) <= \<const0>\;
  M_AXI_IP_AWLEN(2) <= \<const0>\;
  M_AXI_IP_AWLEN(1) <= \<const0>\;
  M_AXI_IP_AWLEN(0) <= \<const0>\;
  M_AXI_IP_AWLOCK <= \<const0>\;
  M_AXI_IP_AWPROT(2) <= \<const0>\;
  M_AXI_IP_AWPROT(1) <= \<const0>\;
  M_AXI_IP_AWPROT(0) <= \<const0>\;
  M_AXI_IP_AWQOS(3) <= \<const0>\;
  M_AXI_IP_AWQOS(2) <= \<const0>\;
  M_AXI_IP_AWQOS(1) <= \<const0>\;
  M_AXI_IP_AWQOS(0) <= \<const0>\;
  M_AXI_IP_AWSIZE(2) <= \<const0>\;
  M_AXI_IP_AWSIZE(1) <= \<const0>\;
  M_AXI_IP_AWSIZE(0) <= \<const0>\;
  M_AXI_IP_AWVALID <= \<const0>\;
  M_AXI_IP_BREADY <= \<const0>\;
  M_AXI_IP_RREADY <= \<const0>\;
  M_AXI_IP_WDATA(31) <= \<const0>\;
  M_AXI_IP_WDATA(30) <= \<const0>\;
  M_AXI_IP_WDATA(29) <= \<const0>\;
  M_AXI_IP_WDATA(28) <= \<const0>\;
  M_AXI_IP_WDATA(27) <= \<const0>\;
  M_AXI_IP_WDATA(26) <= \<const0>\;
  M_AXI_IP_WDATA(25) <= \<const0>\;
  M_AXI_IP_WDATA(24) <= \<const0>\;
  M_AXI_IP_WDATA(23) <= \<const0>\;
  M_AXI_IP_WDATA(22) <= \<const0>\;
  M_AXI_IP_WDATA(21) <= \<const0>\;
  M_AXI_IP_WDATA(20) <= \<const0>\;
  M_AXI_IP_WDATA(19) <= \<const0>\;
  M_AXI_IP_WDATA(18) <= \<const0>\;
  M_AXI_IP_WDATA(17) <= \<const0>\;
  M_AXI_IP_WDATA(16) <= \<const0>\;
  M_AXI_IP_WDATA(15) <= \<const0>\;
  M_AXI_IP_WDATA(14) <= \<const0>\;
  M_AXI_IP_WDATA(13) <= \<const0>\;
  M_AXI_IP_WDATA(12) <= \<const0>\;
  M_AXI_IP_WDATA(11) <= \<const0>\;
  M_AXI_IP_WDATA(10) <= \<const0>\;
  M_AXI_IP_WDATA(9) <= \<const0>\;
  M_AXI_IP_WDATA(8) <= \<const0>\;
  M_AXI_IP_WDATA(7) <= \<const0>\;
  M_AXI_IP_WDATA(6) <= \<const0>\;
  M_AXI_IP_WDATA(5) <= \<const0>\;
  M_AXI_IP_WDATA(4) <= \<const0>\;
  M_AXI_IP_WDATA(3) <= \<const0>\;
  M_AXI_IP_WDATA(2) <= \<const0>\;
  M_AXI_IP_WDATA(1) <= \<const0>\;
  M_AXI_IP_WDATA(0) <= \<const0>\;
  M_AXI_IP_WLAST <= \<const0>\;
  M_AXI_IP_WSTRB(3) <= \<const0>\;
  M_AXI_IP_WSTRB(2) <= \<const0>\;
  M_AXI_IP_WSTRB(1) <= \<const0>\;
  M_AXI_IP_WSTRB(0) <= \<const0>\;
  M_AXI_IP_WVALID <= \<const0>\;
  RAM_From(255) <= \<const0>\;
  RAM_From(254) <= \<const0>\;
  RAM_From(253) <= \<const0>\;
  RAM_From(252) <= \<const0>\;
  RAM_From(251) <= \<const0>\;
  RAM_From(250) <= \<const0>\;
  RAM_From(249) <= \<const0>\;
  RAM_From(248) <= \<const0>\;
  RAM_From(247) <= \<const0>\;
  RAM_From(246) <= \<const0>\;
  RAM_From(245) <= \<const0>\;
  RAM_From(244) <= \<const0>\;
  RAM_From(243) <= \<const0>\;
  RAM_From(242) <= \<const0>\;
  RAM_From(241) <= \<const0>\;
  RAM_From(240) <= \<const0>\;
  RAM_From(239) <= \<const0>\;
  RAM_From(238) <= \<const0>\;
  RAM_From(237) <= \<const0>\;
  RAM_From(236) <= \<const0>\;
  RAM_From(235) <= \<const0>\;
  RAM_From(234) <= \<const0>\;
  RAM_From(233) <= \<const0>\;
  RAM_From(232) <= \<const0>\;
  RAM_From(231) <= \<const0>\;
  RAM_From(230) <= \<const0>\;
  RAM_From(229) <= \<const0>\;
  RAM_From(228) <= \<const0>\;
  RAM_From(227) <= \<const0>\;
  RAM_From(226) <= \<const0>\;
  RAM_From(225) <= \<const0>\;
  RAM_From(224) <= \<const0>\;
  RAM_From(223) <= \<const0>\;
  RAM_From(222) <= \<const0>\;
  RAM_From(221) <= \<const0>\;
  RAM_From(220) <= \<const0>\;
  RAM_From(219) <= \<const0>\;
  RAM_From(218) <= \<const0>\;
  RAM_From(217) <= \<const0>\;
  RAM_From(216) <= \<const0>\;
  RAM_From(215) <= \<const0>\;
  RAM_From(214) <= \<const0>\;
  RAM_From(213) <= \<const0>\;
  RAM_From(212) <= \<const0>\;
  RAM_From(211) <= \<const0>\;
  RAM_From(210) <= \<const0>\;
  RAM_From(209) <= \<const0>\;
  RAM_From(208) <= \<const0>\;
  RAM_From(207) <= \<const0>\;
  RAM_From(206) <= \<const0>\;
  RAM_From(205) <= \<const0>\;
  RAM_From(204) <= \<const0>\;
  RAM_From(203) <= \<const0>\;
  RAM_From(202) <= \<const0>\;
  RAM_From(201) <= \<const0>\;
  RAM_From(200) <= \<const0>\;
  RAM_From(199) <= \<const0>\;
  RAM_From(198) <= \<const0>\;
  RAM_From(197) <= \<const0>\;
  RAM_From(196) <= \<const0>\;
  RAM_From(195) <= \<const0>\;
  RAM_From(194) <= \<const0>\;
  RAM_From(193) <= \<const0>\;
  RAM_From(192) <= \<const0>\;
  RAM_From(191) <= \<const0>\;
  RAM_From(190) <= \<const0>\;
  RAM_From(189) <= \<const0>\;
  RAM_From(188) <= \<const0>\;
  RAM_From(187) <= \<const0>\;
  RAM_From(186) <= \<const0>\;
  RAM_From(185) <= \<const0>\;
  RAM_From(184) <= \<const0>\;
  RAM_From(183) <= \<const0>\;
  RAM_From(182) <= \<const0>\;
  RAM_From(181) <= \<const0>\;
  RAM_From(180) <= \<const0>\;
  RAM_From(179) <= \<const0>\;
  RAM_From(178) <= \<const0>\;
  RAM_From(177) <= \<const0>\;
  RAM_From(176) <= \<const0>\;
  RAM_From(175) <= \<const0>\;
  RAM_From(174) <= \<const0>\;
  RAM_From(173) <= \<const0>\;
  RAM_From(172) <= \<const0>\;
  RAM_From(171) <= \<const0>\;
  RAM_From(170) <= \<const0>\;
  RAM_From(169) <= \<const0>\;
  RAM_From(168) <= \<const0>\;
  RAM_From(167) <= \<const0>\;
  RAM_From(166) <= \<const0>\;
  RAM_From(165) <= \<const0>\;
  RAM_From(164) <= \<const0>\;
  RAM_From(163) <= \<const0>\;
  RAM_From(162) <= \<const0>\;
  RAM_From(161) <= \<const0>\;
  RAM_From(160) <= \<const0>\;
  RAM_From(159) <= \<const0>\;
  RAM_From(158) <= \<const0>\;
  RAM_From(157) <= \<const0>\;
  RAM_From(156) <= \<const0>\;
  RAM_From(155) <= \<const0>\;
  RAM_From(154) <= \<const0>\;
  RAM_From(153) <= \<const0>\;
  RAM_From(152) <= \<const0>\;
  RAM_From(151) <= \<const0>\;
  RAM_From(150) <= \<const0>\;
  RAM_From(149) <= \<const0>\;
  RAM_From(148) <= \<const0>\;
  RAM_From(147) <= \<const0>\;
  RAM_From(146) <= \<const0>\;
  RAM_From(145) <= \<const0>\;
  RAM_From(144) <= \<const0>\;
  RAM_From(143) <= \<const0>\;
  RAM_From(142) <= \<const0>\;
  RAM_From(141) <= \<const0>\;
  RAM_From(140) <= \<const0>\;
  RAM_From(139) <= \<const0>\;
  RAM_From(138) <= \<const0>\;
  RAM_From(137) <= \<const0>\;
  RAM_From(136) <= \<const0>\;
  RAM_From(135) <= \<const0>\;
  RAM_From(134) <= \<const0>\;
  RAM_From(133) <= \<const0>\;
  RAM_From(132) <= \<const0>\;
  RAM_From(131) <= \<const0>\;
  RAM_From(130) <= \<const0>\;
  RAM_From(129) <= \<const0>\;
  RAM_From(128) <= \<const0>\;
  RAM_From(127) <= \<const0>\;
  RAM_From(126) <= \<const0>\;
  RAM_From(125) <= \<const0>\;
  RAM_From(124) <= \<const0>\;
  RAM_From(123) <= \<const0>\;
  RAM_From(122) <= \<const0>\;
  RAM_From(121) <= \<const0>\;
  RAM_From(120) <= \<const0>\;
  RAM_From(119) <= \<const0>\;
  RAM_From(118) <= \<const0>\;
  RAM_From(117) <= \<const0>\;
  RAM_From(116) <= \<const0>\;
  RAM_From(115) <= \<const0>\;
  RAM_From(114) <= \<const0>\;
  RAM_From(113) <= \<const0>\;
  RAM_From(112) <= \<const0>\;
  RAM_From(111) <= \<const0>\;
  RAM_From(110) <= \<const0>\;
  RAM_From(109) <= \<const0>\;
  RAM_From(108) <= \<const0>\;
  RAM_From(107) <= \<const0>\;
  RAM_From(106) <= \<const0>\;
  RAM_From(105) <= \<const0>\;
  RAM_From(104) <= \<const0>\;
  RAM_From(103) <= \<const0>\;
  RAM_From(102) <= \<const0>\;
  RAM_From(101) <= \<const0>\;
  RAM_From(100) <= \<const0>\;
  RAM_From(99) <= \<const0>\;
  RAM_From(98) <= \<const0>\;
  RAM_From(97) <= \<const0>\;
  RAM_From(96) <= \<const0>\;
  RAM_From(95) <= \<const0>\;
  RAM_From(94) <= \<const0>\;
  RAM_From(93) <= \<const0>\;
  RAM_From(92) <= \<const0>\;
  RAM_From(91) <= \<const0>\;
  RAM_From(90) <= \<const0>\;
  RAM_From(89) <= \<const0>\;
  RAM_From(88) <= \<const0>\;
  RAM_From(87) <= \<const0>\;
  RAM_From(86) <= \<const0>\;
  RAM_From(85) <= \<const0>\;
  RAM_From(84) <= \<const0>\;
  RAM_From(83) <= \<const0>\;
  RAM_From(82) <= \<const0>\;
  RAM_From(81) <= \<const0>\;
  RAM_From(80) <= \<const0>\;
  RAM_From(79) <= \<const0>\;
  RAM_From(78) <= \<const0>\;
  RAM_From(77) <= \<const0>\;
  RAM_From(76) <= \<const0>\;
  RAM_From(75) <= \<const0>\;
  RAM_From(74) <= \<const0>\;
  RAM_From(73) <= \<const0>\;
  RAM_From(72) <= \<const0>\;
  RAM_From(71) <= \<const0>\;
  RAM_From(70) <= \<const0>\;
  RAM_From(69) <= \<const0>\;
  RAM_From(68) <= \<const0>\;
  RAM_From(67) <= \<const0>\;
  RAM_From(66) <= \<const0>\;
  RAM_From(65) <= \<const0>\;
  RAM_From(64) <= \<const0>\;
  RAM_From(63) <= \<const0>\;
  RAM_From(62) <= \<const0>\;
  RAM_From(61) <= \<const0>\;
  RAM_From(60) <= \<const0>\;
  RAM_From(59) <= \<const0>\;
  RAM_From(58) <= \<const0>\;
  RAM_From(57) <= \<const0>\;
  RAM_From(56) <= \<const0>\;
  RAM_From(55) <= \<const0>\;
  RAM_From(54) <= \<const0>\;
  RAM_From(53) <= \<const0>\;
  RAM_From(52) <= \<const0>\;
  RAM_From(51) <= \<const0>\;
  RAM_From(50) <= \<const0>\;
  RAM_From(49) <= \<const0>\;
  RAM_From(48) <= \<const0>\;
  RAM_From(47) <= \<const0>\;
  RAM_From(46) <= \<const0>\;
  RAM_From(45) <= \<const0>\;
  RAM_From(44) <= \<const0>\;
  RAM_From(43) <= \<const0>\;
  RAM_From(42) <= \<const0>\;
  RAM_From(41) <= \<const0>\;
  RAM_From(40) <= \<const0>\;
  RAM_From(39) <= \<const0>\;
  RAM_From(38) <= \<const0>\;
  RAM_From(37) <= \<const0>\;
  RAM_From(36) <= \<const0>\;
  RAM_From(35) <= \<const0>\;
  RAM_From(34) <= \<const0>\;
  RAM_From(33) <= \<const0>\;
  RAM_From(32) <= \<const0>\;
  RAM_From(31) <= \<const0>\;
  RAM_From(30) <= \<const0>\;
  RAM_From(29) <= \<const0>\;
  RAM_From(28) <= \<const0>\;
  RAM_From(27) <= \<const0>\;
  RAM_From(26) <= \<const0>\;
  RAM_From(25) <= \<const0>\;
  RAM_From(24) <= \<const0>\;
  RAM_From(23) <= \<const0>\;
  RAM_From(22) <= \<const0>\;
  RAM_From(21) <= \<const0>\;
  RAM_From(20) <= \<const0>\;
  RAM_From(19) <= \<const0>\;
  RAM_From(18) <= \<const0>\;
  RAM_From(17) <= \<const0>\;
  RAM_From(16) <= \<const0>\;
  RAM_From(15) <= \<const0>\;
  RAM_From(14) <= \<const0>\;
  RAM_From(13) <= \<const0>\;
  RAM_From(12) <= \<const0>\;
  RAM_From(11) <= \<const0>\;
  RAM_From(10) <= \<const0>\;
  RAM_From(9) <= \<const0>\;
  RAM_From(8) <= \<const0>\;
  RAM_From(7) <= \<const0>\;
  RAM_From(6) <= \<const0>\;
  RAM_From(5) <= \<const0>\;
  RAM_From(4) <= \<const0>\;
  RAM_From(3) <= \<const0>\;
  RAM_From(2) <= \<const0>\;
  RAM_From(1) <= \<const0>\;
  RAM_From(0) <= \<const0>\;
  Read_Strobe <= \^read_strobe\;
  S0_AXIS_TREADY <= \<const0>\;
  S10_AXIS_TREADY <= \<const0>\;
  S11_AXIS_TREADY <= \<const0>\;
  S12_AXIS_TREADY <= \<const0>\;
  S13_AXIS_TREADY <= \<const0>\;
  S14_AXIS_TREADY <= \<const0>\;
  S15_AXIS_TREADY <= \<const0>\;
  S1_AXIS_TREADY <= \<const0>\;
  S2_AXIS_TREADY <= \<const0>\;
  S3_AXIS_TREADY <= \<const0>\;
  S4_AXIS_TREADY <= \<const0>\;
  S5_AXIS_TREADY <= \<const0>\;
  S6_AXIS_TREADY <= \<const0>\;
  S7_AXIS_TREADY <= \<const0>\;
  S8_AXIS_TREADY <= \<const0>\;
  S9_AXIS_TREADY <= \<const0>\;
  Trace_DCache_Hit <= \<const0>\;
  Trace_DCache_Rdy <= \<const0>\;
  Trace_DCache_Read <= \<const0>\;
  Trace_DCache_Req <= \<const0>\;
  Trace_Data_Access <= \^trace_data_access\;
  Trace_Data_Address(0 to 31) <= \^trace_data_address\(0 to 31);
  Trace_Data_Byte_Enable(0 to 3) <= \^trace_data_byte_enable\(0 to 3);
  Trace_Data_Read <= \^trace_data_read\;
  Trace_Data_Write <= \^trace_data_write\;
  Trace_Data_Write_Value(0 to 31) <= \^trace_data_write_value\(0 to 31);
  Trace_Delay_Slot <= \^trace_delay_slot\;
  Trace_EX_PipeRun <= \^trace_ex_piperun\;
  Trace_Exception_Kind(0) <= \<const0>\;
  Trace_Exception_Kind(1 to 4) <= \^trace_exception_kind\(1 to 4);
  Trace_Exception_Taken <= \^trace_exception_taken\;
  Trace_ICache_Hit <= \<const0>\;
  Trace_ICache_Rdy <= \<const0>\;
  Trace_ICache_Req <= \<const0>\;
  Trace_Instruction(0 to 31) <= \^trace_instruction\(0 to 31);
  Trace_Jump_Hit <= \<const0>\;
  Trace_Jump_Taken <= \^trace_jump_taken\;
  Trace_MB_Halted <= \^lockstep_master_out\(10);
  Trace_MEM_PipeRun <= \^trace_mem_piperun\;
  Trace_MSR_Reg(0) <= \<const0>\;
  Trace_MSR_Reg(1) <= \<const0>\;
  Trace_MSR_Reg(2) <= \<const0>\;
  Trace_MSR_Reg(3) <= \<const0>\;
  Trace_MSR_Reg(4) <= \<const0>\;
  Trace_MSR_Reg(5 to 6) <= \^trace_msr_reg\(5 to 6);
  Trace_MSR_Reg(7) <= \<const0>\;
  Trace_MSR_Reg(8) <= \^trace_msr_reg\(8);
  Trace_MSR_Reg(9) <= \<const0>\;
  Trace_MSR_Reg(10) <= \<const0>\;
  Trace_MSR_Reg(11 to 13) <= \^trace_msr_reg\(11 to 13);
  Trace_MSR_Reg(14) <= \<const0>\;
  Trace_New_Reg_Value(0 to 31) <= \^trace_new_reg_value\(0 to 31);
  Trace_OF_PipeRun <= \^trace_of_piperun\;
  Trace_PC(0 to 31) <= \^trace_pc\(0 to 31);
  Trace_PID_Reg(0) <= \<const0>\;
  Trace_PID_Reg(1) <= \<const0>\;
  Trace_PID_Reg(2) <= \<const0>\;
  Trace_PID_Reg(3) <= \<const0>\;
  Trace_PID_Reg(4) <= \<const0>\;
  Trace_PID_Reg(5) <= \<const0>\;
  Trace_PID_Reg(6) <= \<const0>\;
  Trace_PID_Reg(7) <= \<const0>\;
  Trace_Reg_Addr(0 to 4) <= \^trace_reg_addr\(0 to 4);
  Trace_Reg_Write <= \^trace_reg_write\;
  Trace_Valid_Instr <= \^trace_valid_instr\;
  Write_Strobe <= \^write_strobe\;
  \^debug_rst\ <= Debug_Rst;
Dbg_TDO_INST_0_i_17: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080000"
    )
        port map (
      I0 => MicroBlaze_Core_I_n_418,
      I1 => Dbg_Reg_En(7),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(2),
      I4 => Dbg_Reg_En(6),
      O => \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\
    );
Dbg_TDO_INST_0_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => MicroBlaze_Core_I_n_417,
      I1 => Dbg_Reg_En(0),
      I2 => Dbg_Reg_En(2),
      I3 => Dbg_Reg_En(6),
      I4 => Dbg_Reg_En(7),
      O => Dbg_TDO_INST_0_i_4_n_0
    );
Dbg_TDO_INST_0_i_8: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(0),
      O => Dbg_TDO_INST_0_i_8_n_0
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\LOCKSTEP_Out_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^lockstep_master_out\(10),
      Q => \^lockstep_out\(3228),
      R => Reset
    );
\LOCKSTEP_Out_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(6),
      Q => \^lockstep_out\(10),
      R => Reset
    );
\LOCKSTEP_Out_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(7),
      Q => \^lockstep_out\(11),
      R => Reset
    );
\LOCKSTEP_Out_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(8),
      Q => \^lockstep_out\(12),
      R => Reset
    );
\LOCKSTEP_Out_reg[132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(0),
      Q => \^lockstep_out\(132),
      R => Reset
    );
\LOCKSTEP_Out_reg[133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(1),
      Q => \^lockstep_out\(133),
      R => Reset
    );
\LOCKSTEP_Out_reg[134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(2),
      Q => \^lockstep_out\(134),
      R => Reset
    );
\LOCKSTEP_Out_reg[135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(3),
      Q => \^lockstep_out\(135),
      R => Reset
    );
\LOCKSTEP_Out_reg[136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(4),
      Q => \^lockstep_out\(136),
      R => Reset
    );
\LOCKSTEP_Out_reg[137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(5),
      Q => \^lockstep_out\(137),
      R => Reset
    );
\LOCKSTEP_Out_reg[138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(6),
      Q => \^lockstep_out\(138),
      R => Reset
    );
\LOCKSTEP_Out_reg[139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(7),
      Q => \^lockstep_out\(139),
      R => Reset
    );
\LOCKSTEP_Out_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(9),
      Q => \^lockstep_out\(13),
      R => Reset
    );
\LOCKSTEP_Out_reg[140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(8),
      Q => \^lockstep_out\(140),
      R => Reset
    );
\LOCKSTEP_Out_reg[141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(9),
      Q => \^lockstep_out\(141),
      R => Reset
    );
\LOCKSTEP_Out_reg[142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(10),
      Q => \^lockstep_out\(142),
      R => Reset
    );
\LOCKSTEP_Out_reg[143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(11),
      Q => \^lockstep_out\(143),
      R => Reset
    );
\LOCKSTEP_Out_reg[144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(12),
      Q => \^lockstep_out\(144),
      R => Reset
    );
\LOCKSTEP_Out_reg[145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(13),
      Q => \^lockstep_out\(145),
      R => Reset
    );
\LOCKSTEP_Out_reg[146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(14),
      Q => \^lockstep_out\(146),
      R => Reset
    );
\LOCKSTEP_Out_reg[147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(15),
      Q => \^lockstep_out\(147),
      R => Reset
    );
\LOCKSTEP_Out_reg[148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(16),
      Q => \^lockstep_out\(148),
      R => Reset
    );
\LOCKSTEP_Out_reg[149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(17),
      Q => \^lockstep_out\(149),
      R => Reset
    );
\LOCKSTEP_Out_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(10),
      Q => \^lockstep_out\(14),
      R => Reset
    );
\LOCKSTEP_Out_reg[150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(18),
      Q => \^lockstep_out\(150),
      R => Reset
    );
\LOCKSTEP_Out_reg[151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(19),
      Q => \^lockstep_out\(151),
      R => Reset
    );
\LOCKSTEP_Out_reg[152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(20),
      Q => \^lockstep_out\(152),
      R => Reset
    );
\LOCKSTEP_Out_reg[153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(21),
      Q => \^lockstep_out\(153),
      R => Reset
    );
\LOCKSTEP_Out_reg[154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(22),
      Q => \^lockstep_out\(154),
      R => Reset
    );
\LOCKSTEP_Out_reg[155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(23),
      Q => \^lockstep_out\(155),
      R => Reset
    );
\LOCKSTEP_Out_reg[156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(24),
      Q => \^lockstep_out\(156),
      R => Reset
    );
\LOCKSTEP_Out_reg[157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(25),
      Q => \^lockstep_out\(157),
      R => Reset
    );
\LOCKSTEP_Out_reg[158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(26),
      Q => \^lockstep_out\(158),
      R => Reset
    );
\LOCKSTEP_Out_reg[159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(27),
      Q => \^lockstep_out\(159),
      R => Reset
    );
\LOCKSTEP_Out_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(11),
      Q => \^lockstep_out\(15),
      R => Reset
    );
\LOCKSTEP_Out_reg[160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(28),
      Q => \^lockstep_out\(160),
      R => Reset
    );
\LOCKSTEP_Out_reg[161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(29),
      Q => \^lockstep_out\(161),
      R => Reset
    );
\LOCKSTEP_Out_reg[162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(30),
      Q => \^lockstep_out\(162),
      R => Reset
    );
\LOCKSTEP_Out_reg[163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(31),
      Q => \^lockstep_out\(163),
      R => Reset
    );
\LOCKSTEP_Out_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(12),
      Q => \^lockstep_out\(16),
      R => Reset
    );
\LOCKSTEP_Out_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(13),
      Q => \^lockstep_out\(17),
      R => Reset
    );
\LOCKSTEP_Out_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(14),
      Q => \^lockstep_out\(18),
      R => Reset
    );
\LOCKSTEP_Out_reg[196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d_as\,
      Q => \^lockstep_out\(196),
      R => Reset
    );
\LOCKSTEP_Out_reg[197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^read_strobe\,
      Q => \^lockstep_out\(197),
      R => Reset
    );
\LOCKSTEP_Out_reg[198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^write_strobe\,
      Q => \^lockstep_out\(198),
      R => Reset
    );
\LOCKSTEP_Out_reg[199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(0),
      Q => \^lockstep_out\(199),
      R => Reset
    );
\LOCKSTEP_Out_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(15),
      Q => \^lockstep_out\(19),
      R => Reset
    );
\LOCKSTEP_Out_reg[200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(1),
      Q => \^lockstep_out\(200),
      R => Reset
    );
\LOCKSTEP_Out_reg[201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(2),
      Q => \^lockstep_out\(201),
      R => Reset
    );
\LOCKSTEP_Out_reg[202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(3),
      Q => \^lockstep_out\(202),
      R => Reset
    );
\LOCKSTEP_Out_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(16),
      Q => \^lockstep_out\(20),
      R => Reset
    );
\LOCKSTEP_Out_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(17),
      Q => \^lockstep_out\(21),
      R => Reset
    );
\LOCKSTEP_Out_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(18),
      Q => \^lockstep_out\(22),
      R => Reset
    );
\LOCKSTEP_Out_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(19),
      Q => \^lockstep_out\(23),
      R => Reset
    );
\LOCKSTEP_Out_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(20),
      Q => \^lockstep_out\(24),
      R => Reset
    );
\LOCKSTEP_Out_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(21),
      Q => \^lockstep_out\(25),
      R => Reset
    );
\LOCKSTEP_Out_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(22),
      Q => \^lockstep_out\(26),
      R => Reset
    );
\LOCKSTEP_Out_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(23),
      Q => \^lockstep_out\(27),
      R => Reset
    );
\LOCKSTEP_Out_reg[2881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(0),
      Q => \^lockstep_out\(2881),
      R => Reset
    );
\LOCKSTEP_Out_reg[2882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(1),
      Q => \^lockstep_out\(2882),
      R => Reset
    );
\LOCKSTEP_Out_reg[2883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(2),
      Q => \^lockstep_out\(2883),
      R => Reset
    );
\LOCKSTEP_Out_reg[2884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(3),
      Q => \^lockstep_out\(2884),
      R => Reset
    );
\LOCKSTEP_Out_reg[2885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(4),
      Q => \^lockstep_out\(2885),
      R => Reset
    );
\LOCKSTEP_Out_reg[2886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(5),
      Q => \^lockstep_out\(2886),
      R => Reset
    );
\LOCKSTEP_Out_reg[2887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(6),
      Q => \^lockstep_out\(2887),
      R => Reset
    );
\LOCKSTEP_Out_reg[2888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(7),
      Q => \^lockstep_out\(2888),
      R => Reset
    );
\LOCKSTEP_Out_reg[2889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(8),
      Q => \^lockstep_out\(2889),
      R => Reset
    );
\LOCKSTEP_Out_reg[2890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(9),
      Q => \^lockstep_out\(2890),
      R => Reset
    );
\LOCKSTEP_Out_reg[2891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(10),
      Q => \^lockstep_out\(2891),
      R => Reset
    );
\LOCKSTEP_Out_reg[2892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(11),
      Q => \^lockstep_out\(2892),
      R => Reset
    );
\LOCKSTEP_Out_reg[2893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(12),
      Q => \^lockstep_out\(2893),
      R => Reset
    );
\LOCKSTEP_Out_reg[2894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(13),
      Q => \^lockstep_out\(2894),
      R => Reset
    );
\LOCKSTEP_Out_reg[2895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(14),
      Q => \^lockstep_out\(2895),
      R => Reset
    );
\LOCKSTEP_Out_reg[2896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(15),
      Q => \^lockstep_out\(2896),
      R => Reset
    );
\LOCKSTEP_Out_reg[2897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(16),
      Q => \^lockstep_out\(2897),
      R => Reset
    );
\LOCKSTEP_Out_reg[2898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(17),
      Q => \^lockstep_out\(2898),
      R => Reset
    );
\LOCKSTEP_Out_reg[2899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(18),
      Q => \^lockstep_out\(2899),
      R => Reset
    );
\LOCKSTEP_Out_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(24),
      Q => \^lockstep_out\(28),
      R => Reset
    );
\LOCKSTEP_Out_reg[2900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(19),
      Q => \^lockstep_out\(2900),
      R => Reset
    );
\LOCKSTEP_Out_reg[2901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(20),
      Q => \^lockstep_out\(2901),
      R => Reset
    );
\LOCKSTEP_Out_reg[2902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(21),
      Q => \^lockstep_out\(2902),
      R => Reset
    );
\LOCKSTEP_Out_reg[2903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(22),
      Q => \^lockstep_out\(2903),
      R => Reset
    );
\LOCKSTEP_Out_reg[2904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(23),
      Q => \^lockstep_out\(2904),
      R => Reset
    );
\LOCKSTEP_Out_reg[2905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(24),
      Q => \^lockstep_out\(2905),
      R => Reset
    );
\LOCKSTEP_Out_reg[2906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(25),
      Q => \^lockstep_out\(2906),
      R => Reset
    );
\LOCKSTEP_Out_reg[2907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(26),
      Q => \^lockstep_out\(2907),
      R => Reset
    );
\LOCKSTEP_Out_reg[2908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(27),
      Q => \^lockstep_out\(2908),
      R => Reset
    );
\LOCKSTEP_Out_reg[2909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(28),
      Q => \^lockstep_out\(2909),
      R => Reset
    );
\LOCKSTEP_Out_reg[2910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(29),
      Q => \^lockstep_out\(2910),
      R => Reset
    );
\LOCKSTEP_Out_reg[2911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(30),
      Q => \^lockstep_out\(2911),
      R => Reset
    );
\LOCKSTEP_Out_reg[2912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(31),
      Q => \^lockstep_out\(2912),
      R => Reset
    );
\LOCKSTEP_Out_reg[2913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_valid_instr\,
      Q => \^lockstep_out\(2913),
      R => Reset
    );
\LOCKSTEP_Out_reg[2914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(0),
      Q => \^lockstep_out\(2914),
      R => Reset
    );
\LOCKSTEP_Out_reg[2915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(1),
      Q => \^lockstep_out\(2915),
      R => Reset
    );
\LOCKSTEP_Out_reg[2916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(2),
      Q => \^lockstep_out\(2916),
      R => Reset
    );
\LOCKSTEP_Out_reg[2917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(3),
      Q => \^lockstep_out\(2917),
      R => Reset
    );
\LOCKSTEP_Out_reg[2918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(4),
      Q => \^lockstep_out\(2918),
      R => Reset
    );
\LOCKSTEP_Out_reg[2919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(5),
      Q => \^lockstep_out\(2919),
      R => Reset
    );
\LOCKSTEP_Out_reg[2920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(6),
      Q => \^lockstep_out\(2920),
      R => Reset
    );
\LOCKSTEP_Out_reg[2921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(7),
      Q => \^lockstep_out\(2921),
      R => Reset
    );
\LOCKSTEP_Out_reg[2922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(8),
      Q => \^lockstep_out\(2922),
      R => Reset
    );
\LOCKSTEP_Out_reg[2923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(9),
      Q => \^lockstep_out\(2923),
      R => Reset
    );
\LOCKSTEP_Out_reg[2924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(10),
      Q => \^lockstep_out\(2924),
      R => Reset
    );
\LOCKSTEP_Out_reg[2925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(11),
      Q => \^lockstep_out\(2925),
      R => Reset
    );
\LOCKSTEP_Out_reg[2926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(12),
      Q => \^lockstep_out\(2926),
      R => Reset
    );
\LOCKSTEP_Out_reg[2927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(13),
      Q => \^lockstep_out\(2927),
      R => Reset
    );
\LOCKSTEP_Out_reg[2928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(14),
      Q => \^lockstep_out\(2928),
      R => Reset
    );
\LOCKSTEP_Out_reg[2929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(15),
      Q => \^lockstep_out\(2929),
      R => Reset
    );
\LOCKSTEP_Out_reg[2930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(16),
      Q => \^lockstep_out\(2930),
      R => Reset
    );
\LOCKSTEP_Out_reg[2931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(17),
      Q => \^lockstep_out\(2931),
      R => Reset
    );
\LOCKSTEP_Out_reg[2932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(18),
      Q => \^lockstep_out\(2932),
      R => Reset
    );
\LOCKSTEP_Out_reg[2933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(19),
      Q => \^lockstep_out\(2933),
      R => Reset
    );
\LOCKSTEP_Out_reg[2934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(20),
      Q => \^lockstep_out\(2934),
      R => Reset
    );
\LOCKSTEP_Out_reg[2935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(21),
      Q => \^lockstep_out\(2935),
      R => Reset
    );
\LOCKSTEP_Out_reg[2936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(22),
      Q => \^lockstep_out\(2936),
      R => Reset
    );
\LOCKSTEP_Out_reg[2937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(23),
      Q => \^lockstep_out\(2937),
      R => Reset
    );
\LOCKSTEP_Out_reg[2938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(24),
      Q => \^lockstep_out\(2938),
      R => Reset
    );
\LOCKSTEP_Out_reg[2939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(25),
      Q => \^lockstep_out\(2939),
      R => Reset
    );
\LOCKSTEP_Out_reg[2940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(26),
      Q => \^lockstep_out\(2940),
      R => Reset
    );
\LOCKSTEP_Out_reg[2941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(27),
      Q => \^lockstep_out\(2941),
      R => Reset
    );
\LOCKSTEP_Out_reg[2942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(28),
      Q => \^lockstep_out\(2942),
      R => Reset
    );
\LOCKSTEP_Out_reg[2943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(29),
      Q => \^lockstep_out\(2943),
      R => Reset
    );
\LOCKSTEP_Out_reg[2944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(30),
      Q => \^lockstep_out\(2944),
      R => Reset
    );
\LOCKSTEP_Out_reg[2945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(31),
      Q => \^lockstep_out\(2945),
      R => Reset
    );
\LOCKSTEP_Out_reg[2978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_write\,
      Q => \^lockstep_out\(2978),
      R => Reset
    );
\LOCKSTEP_Out_reg[2979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(0),
      Q => \^lockstep_out\(2979),
      R => Reset
    );
\LOCKSTEP_Out_reg[2980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(1),
      Q => \^lockstep_out\(2980),
      R => Reset
    );
\LOCKSTEP_Out_reg[2981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(2),
      Q => \^lockstep_out\(2981),
      R => Reset
    );
\LOCKSTEP_Out_reg[2982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(3),
      Q => \^lockstep_out\(2982),
      R => Reset
    );
\LOCKSTEP_Out_reg[2983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(4),
      Q => \^lockstep_out\(2983),
      R => Reset
    );
\LOCKSTEP_Out_reg[2989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(5),
      Q => \^lockstep_out\(2989),
      R => Reset
    );
\LOCKSTEP_Out_reg[2990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(6),
      Q => \^lockstep_out\(2990),
      R => Reset
    );
\LOCKSTEP_Out_reg[2992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(8),
      Q => \^lockstep_out\(2992),
      R => Reset
    );
\LOCKSTEP_Out_reg[2995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(11),
      Q => \^lockstep_out\(2995),
      R => Reset
    );
\LOCKSTEP_Out_reg[2996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(12),
      Q => \^lockstep_out\(2996),
      R => Reset
    );
\LOCKSTEP_Out_reg[2997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(13),
      Q => \^lockstep_out\(2997),
      R => Reset
    );
\LOCKSTEP_Out_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(25),
      Q => \^lockstep_out\(29),
      R => Reset
    );
\LOCKSTEP_Out_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^ifetch\,
      Q => \^lockstep_out\(2),
      R => Reset
    );
\LOCKSTEP_Out_reg[3007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(0),
      Q => \^lockstep_out\(3007),
      R => Reset
    );
\LOCKSTEP_Out_reg[3008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(1),
      Q => \^lockstep_out\(3008),
      R => Reset
    );
\LOCKSTEP_Out_reg[3009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(2),
      Q => \^lockstep_out\(3009),
      R => Reset
    );
\LOCKSTEP_Out_reg[3010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(3),
      Q => \^lockstep_out\(3010),
      R => Reset
    );
\LOCKSTEP_Out_reg[3011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(4),
      Q => \^lockstep_out\(3011),
      R => Reset
    );
\LOCKSTEP_Out_reg[3012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(5),
      Q => \^lockstep_out\(3012),
      R => Reset
    );
\LOCKSTEP_Out_reg[3013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(6),
      Q => \^lockstep_out\(3013),
      R => Reset
    );
\LOCKSTEP_Out_reg[3014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(7),
      Q => \^lockstep_out\(3014),
      R => Reset
    );
\LOCKSTEP_Out_reg[3015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(8),
      Q => \^lockstep_out\(3015),
      R => Reset
    );
\LOCKSTEP_Out_reg[3016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(9),
      Q => \^lockstep_out\(3016),
      R => Reset
    );
\LOCKSTEP_Out_reg[3017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(10),
      Q => \^lockstep_out\(3017),
      R => Reset
    );
\LOCKSTEP_Out_reg[3018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(11),
      Q => \^lockstep_out\(3018),
      R => Reset
    );
\LOCKSTEP_Out_reg[3019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(12),
      Q => \^lockstep_out\(3019),
      R => Reset
    );
\LOCKSTEP_Out_reg[3020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(13),
      Q => \^lockstep_out\(3020),
      R => Reset
    );
\LOCKSTEP_Out_reg[3021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(14),
      Q => \^lockstep_out\(3021),
      R => Reset
    );
\LOCKSTEP_Out_reg[3022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(15),
      Q => \^lockstep_out\(3022),
      R => Reset
    );
\LOCKSTEP_Out_reg[3023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(16),
      Q => \^lockstep_out\(3023),
      R => Reset
    );
\LOCKSTEP_Out_reg[3024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(17),
      Q => \^lockstep_out\(3024),
      R => Reset
    );
\LOCKSTEP_Out_reg[3025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(18),
      Q => \^lockstep_out\(3025),
      R => Reset
    );
\LOCKSTEP_Out_reg[3026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(19),
      Q => \^lockstep_out\(3026),
      R => Reset
    );
\LOCKSTEP_Out_reg[3027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(20),
      Q => \^lockstep_out\(3027),
      R => Reset
    );
\LOCKSTEP_Out_reg[3028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(21),
      Q => \^lockstep_out\(3028),
      R => Reset
    );
\LOCKSTEP_Out_reg[3029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(22),
      Q => \^lockstep_out\(3029),
      R => Reset
    );
\LOCKSTEP_Out_reg[3030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(23),
      Q => \^lockstep_out\(3030),
      R => Reset
    );
\LOCKSTEP_Out_reg[3031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(24),
      Q => \^lockstep_out\(3031),
      R => Reset
    );
\LOCKSTEP_Out_reg[3032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(25),
      Q => \^lockstep_out\(3032),
      R => Reset
    );
\LOCKSTEP_Out_reg[3033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(26),
      Q => \^lockstep_out\(3033),
      R => Reset
    );
\LOCKSTEP_Out_reg[3034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(27),
      Q => \^lockstep_out\(3034),
      R => Reset
    );
\LOCKSTEP_Out_reg[3035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(28),
      Q => \^lockstep_out\(3035),
      R => Reset
    );
\LOCKSTEP_Out_reg[3036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(29),
      Q => \^lockstep_out\(3036),
      R => Reset
    );
\LOCKSTEP_Out_reg[3037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(30),
      Q => \^lockstep_out\(3037),
      R => Reset
    );
\LOCKSTEP_Out_reg[3038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(31),
      Q => \^lockstep_out\(3038),
      R => Reset
    );
\LOCKSTEP_Out_reg[3071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_taken\,
      Q => \^lockstep_out\(3071),
      R => Reset
    );
\LOCKSTEP_Out_reg[3073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(1),
      Q => \^lockstep_out\(3073),
      R => Reset
    );
\LOCKSTEP_Out_reg[3074]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(2),
      Q => \^lockstep_out\(3074),
      R => Reset
    );
\LOCKSTEP_Out_reg[3075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(3),
      Q => \^lockstep_out\(3075),
      R => Reset
    );
\LOCKSTEP_Out_reg[3076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(4),
      Q => \^lockstep_out\(3076),
      R => Reset
    );
\LOCKSTEP_Out_reg[3077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_taken\,
      Q => \^lockstep_out\(3077),
      R => Reset
    );
\LOCKSTEP_Out_reg[3078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_delay_slot\,
      Q => \^lockstep_out\(3078),
      R => Reset
    );
\LOCKSTEP_Out_reg[3079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(0),
      Q => \^lockstep_out\(3079),
      R => Reset
    );
\LOCKSTEP_Out_reg[3080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(1),
      Q => \^lockstep_out\(3080),
      R => Reset
    );
\LOCKSTEP_Out_reg[3081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(2),
      Q => \^lockstep_out\(3081),
      R => Reset
    );
\LOCKSTEP_Out_reg[3082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(3),
      Q => \^lockstep_out\(3082),
      R => Reset
    );
\LOCKSTEP_Out_reg[3083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(4),
      Q => \^lockstep_out\(3083),
      R => Reset
    );
\LOCKSTEP_Out_reg[3084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(5),
      Q => \^lockstep_out\(3084),
      R => Reset
    );
\LOCKSTEP_Out_reg[3085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(6),
      Q => \^lockstep_out\(3085),
      R => Reset
    );
\LOCKSTEP_Out_reg[3086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(7),
      Q => \^lockstep_out\(3086),
      R => Reset
    );
\LOCKSTEP_Out_reg[3087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(8),
      Q => \^lockstep_out\(3087),
      R => Reset
    );
\LOCKSTEP_Out_reg[3088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(9),
      Q => \^lockstep_out\(3088),
      R => Reset
    );
\LOCKSTEP_Out_reg[3089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(10),
      Q => \^lockstep_out\(3089),
      R => Reset
    );
\LOCKSTEP_Out_reg[3090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(11),
      Q => \^lockstep_out\(3090),
      R => Reset
    );
\LOCKSTEP_Out_reg[3091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(12),
      Q => \^lockstep_out\(3091),
      R => Reset
    );
\LOCKSTEP_Out_reg[3092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(13),
      Q => \^lockstep_out\(3092),
      R => Reset
    );
\LOCKSTEP_Out_reg[3093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(14),
      Q => \^lockstep_out\(3093),
      R => Reset
    );
\LOCKSTEP_Out_reg[3094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(15),
      Q => \^lockstep_out\(3094),
      R => Reset
    );
\LOCKSTEP_Out_reg[3095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(16),
      Q => \^lockstep_out\(3095),
      R => Reset
    );
\LOCKSTEP_Out_reg[3096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(17),
      Q => \^lockstep_out\(3096),
      R => Reset
    );
\LOCKSTEP_Out_reg[3097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(18),
      Q => \^lockstep_out\(3097),
      R => Reset
    );
\LOCKSTEP_Out_reg[3098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(19),
      Q => \^lockstep_out\(3098),
      R => Reset
    );
\LOCKSTEP_Out_reg[3099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(20),
      Q => \^lockstep_out\(3099),
      R => Reset
    );
\LOCKSTEP_Out_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(26),
      Q => \^lockstep_out\(30),
      R => Reset
    );
\LOCKSTEP_Out_reg[3100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(21),
      Q => \^lockstep_out\(3100),
      R => Reset
    );
\LOCKSTEP_Out_reg[3101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(22),
      Q => \^lockstep_out\(3101),
      R => Reset
    );
\LOCKSTEP_Out_reg[3102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(23),
      Q => \^lockstep_out\(3102),
      R => Reset
    );
\LOCKSTEP_Out_reg[3103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(24),
      Q => \^lockstep_out\(3103),
      R => Reset
    );
\LOCKSTEP_Out_reg[3104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(25),
      Q => \^lockstep_out\(3104),
      R => Reset
    );
\LOCKSTEP_Out_reg[3105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(26),
      Q => \^lockstep_out\(3105),
      R => Reset
    );
\LOCKSTEP_Out_reg[3106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(27),
      Q => \^lockstep_out\(3106),
      R => Reset
    );
\LOCKSTEP_Out_reg[3107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(28),
      Q => \^lockstep_out\(3107),
      R => Reset
    );
\LOCKSTEP_Out_reg[3108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(29),
      Q => \^lockstep_out\(3108),
      R => Reset
    );
\LOCKSTEP_Out_reg[3109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(30),
      Q => \^lockstep_out\(3109),
      R => Reset
    );
\LOCKSTEP_Out_reg[3110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(31),
      Q => \^lockstep_out\(3110),
      R => Reset
    );
\LOCKSTEP_Out_reg[3143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(0),
      Q => \^lockstep_out\(3143),
      R => Reset
    );
\LOCKSTEP_Out_reg[3144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(1),
      Q => \^lockstep_out\(3144),
      R => Reset
    );
\LOCKSTEP_Out_reg[3145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(2),
      Q => \^lockstep_out\(3145),
      R => Reset
    );
\LOCKSTEP_Out_reg[3146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(3),
      Q => \^lockstep_out\(3146),
      R => Reset
    );
\LOCKSTEP_Out_reg[3147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(4),
      Q => \^lockstep_out\(3147),
      R => Reset
    );
\LOCKSTEP_Out_reg[3148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(5),
      Q => \^lockstep_out\(3148),
      R => Reset
    );
\LOCKSTEP_Out_reg[3149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(6),
      Q => \^lockstep_out\(3149),
      R => Reset
    );
\LOCKSTEP_Out_reg[3150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(7),
      Q => \^lockstep_out\(3150),
      R => Reset
    );
\LOCKSTEP_Out_reg[3151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(8),
      Q => \^lockstep_out\(3151),
      R => Reset
    );
\LOCKSTEP_Out_reg[3152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(9),
      Q => \^lockstep_out\(3152),
      R => Reset
    );
\LOCKSTEP_Out_reg[3153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(10),
      Q => \^lockstep_out\(3153),
      R => Reset
    );
\LOCKSTEP_Out_reg[3154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(11),
      Q => \^lockstep_out\(3154),
      R => Reset
    );
\LOCKSTEP_Out_reg[3155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(12),
      Q => \^lockstep_out\(3155),
      R => Reset
    );
\LOCKSTEP_Out_reg[3156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(13),
      Q => \^lockstep_out\(3156),
      R => Reset
    );
\LOCKSTEP_Out_reg[3157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(14),
      Q => \^lockstep_out\(3157),
      R => Reset
    );
\LOCKSTEP_Out_reg[3158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(15),
      Q => \^lockstep_out\(3158),
      R => Reset
    );
\LOCKSTEP_Out_reg[3159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(16),
      Q => \^lockstep_out\(3159),
      R => Reset
    );
\LOCKSTEP_Out_reg[3160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(17),
      Q => \^lockstep_out\(3160),
      R => Reset
    );
\LOCKSTEP_Out_reg[3161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(18),
      Q => \^lockstep_out\(3161),
      R => Reset
    );
\LOCKSTEP_Out_reg[3162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(19),
      Q => \^lockstep_out\(3162),
      R => Reset
    );
\LOCKSTEP_Out_reg[3163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(20),
      Q => \^lockstep_out\(3163),
      R => Reset
    );
\LOCKSTEP_Out_reg[3164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(21),
      Q => \^lockstep_out\(3164),
      R => Reset
    );
\LOCKSTEP_Out_reg[3165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(22),
      Q => \^lockstep_out\(3165),
      R => Reset
    );
\LOCKSTEP_Out_reg[3166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(23),
      Q => \^lockstep_out\(3166),
      R => Reset
    );
\LOCKSTEP_Out_reg[3167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(24),
      Q => \^lockstep_out\(3167),
      R => Reset
    );
\LOCKSTEP_Out_reg[3168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(25),
      Q => \^lockstep_out\(3168),
      R => Reset
    );
\LOCKSTEP_Out_reg[3169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(26),
      Q => \^lockstep_out\(3169),
      R => Reset
    );
\LOCKSTEP_Out_reg[3170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(27),
      Q => \^lockstep_out\(3170),
      R => Reset
    );
\LOCKSTEP_Out_reg[3171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(28),
      Q => \^lockstep_out\(3171),
      R => Reset
    );
\LOCKSTEP_Out_reg[3172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(29),
      Q => \^lockstep_out\(3172),
      R => Reset
    );
\LOCKSTEP_Out_reg[3173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(30),
      Q => \^lockstep_out\(3173),
      R => Reset
    );
\LOCKSTEP_Out_reg[3174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(31),
      Q => \^lockstep_out\(3174),
      R => Reset
    );
\LOCKSTEP_Out_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(27),
      Q => \^lockstep_out\(31),
      R => Reset
    );
\LOCKSTEP_Out_reg[3207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(0),
      Q => \^lockstep_out\(3207),
      R => Reset
    );
\LOCKSTEP_Out_reg[3208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(1),
      Q => \^lockstep_out\(3208),
      R => Reset
    );
\LOCKSTEP_Out_reg[3209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(2),
      Q => \^lockstep_out\(3209),
      R => Reset
    );
\LOCKSTEP_Out_reg[3210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(3),
      Q => \^lockstep_out\(3210),
      R => Reset
    );
\LOCKSTEP_Out_reg[3215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_access\,
      Q => \^lockstep_out\(3215),
      R => Reset
    );
\LOCKSTEP_Out_reg[3216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_read\,
      Q => \^lockstep_out\(3216),
      R => Reset
    );
\LOCKSTEP_Out_reg[3217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write\,
      Q => \^lockstep_out\(3217),
      R => Reset
    );
\LOCKSTEP_Out_reg[3225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_of_piperun\,
      Q => \^lockstep_out\(3225),
      R => Reset
    );
\LOCKSTEP_Out_reg[3226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_ex_piperun\,
      Q => \^lockstep_out\(3226),
      R => Reset
    );
\LOCKSTEP_Out_reg[3227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_mem_piperun\,
      Q => \^lockstep_out\(3227),
      R => Reset
    );
\LOCKSTEP_Out_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(28),
      Q => \^lockstep_out\(32),
      R => Reset
    );
\LOCKSTEP_Out_reg[33]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(29),
      Q => \^lockstep_out\(33),
      R => Reset
    );
\LOCKSTEP_Out_reg[34]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(30),
      Q => \^lockstep_out\(34),
      R => Reset
    );
\LOCKSTEP_Out_reg[35]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(31),
      Q => \^lockstep_out\(35),
      R => Reset
    );
\LOCKSTEP_Out_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^i_as\,
      Q => \^lockstep_out\(3),
      R => Reset
    );
\LOCKSTEP_Out_reg[466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(31),
      Q => \^lockstep_out\(632),
      R => Reset
    );
\LOCKSTEP_Out_reg[467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(30),
      Q => \^lockstep_out\(633),
      R => Reset
    );
\LOCKSTEP_Out_reg[468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(29),
      Q => \^lockstep_out\(634),
      R => Reset
    );
\LOCKSTEP_Out_reg[469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(28),
      Q => \^lockstep_out\(635),
      R => Reset
    );
\LOCKSTEP_Out_reg[470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(27),
      Q => \^lockstep_out\(636),
      R => Reset
    );
\LOCKSTEP_Out_reg[471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(26),
      Q => \^lockstep_out\(637),
      R => Reset
    );
\LOCKSTEP_Out_reg[472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(25),
      Q => \^lockstep_out\(638),
      R => Reset
    );
\LOCKSTEP_Out_reg[473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(24),
      Q => \^lockstep_out\(639),
      R => Reset
    );
\LOCKSTEP_Out_reg[474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(23),
      Q => \^lockstep_out\(640),
      R => Reset
    );
\LOCKSTEP_Out_reg[475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(22),
      Q => \^lockstep_out\(641),
      R => Reset
    );
\LOCKSTEP_Out_reg[476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(21),
      Q => \^lockstep_out\(642),
      R => Reset
    );
\LOCKSTEP_Out_reg[477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(20),
      Q => \^lockstep_out\(643),
      R => Reset
    );
\LOCKSTEP_Out_reg[478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(19),
      Q => \^lockstep_out\(644),
      R => Reset
    );
\LOCKSTEP_Out_reg[479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(18),
      Q => \^lockstep_out\(645),
      R => Reset
    );
\LOCKSTEP_Out_reg[480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(17),
      Q => \^lockstep_out\(646),
      R => Reset
    );
\LOCKSTEP_Out_reg[481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(16),
      Q => \^lockstep_out\(647),
      R => Reset
    );
\LOCKSTEP_Out_reg[482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(15),
      Q => \^lockstep_out\(648),
      R => Reset
    );
\LOCKSTEP_Out_reg[483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(14),
      Q => \^lockstep_out\(649),
      R => Reset
    );
\LOCKSTEP_Out_reg[484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(13),
      Q => \^lockstep_out\(650),
      R => Reset
    );
\LOCKSTEP_Out_reg[485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(12),
      Q => \^lockstep_out\(651),
      R => Reset
    );
\LOCKSTEP_Out_reg[486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(11),
      Q => \^lockstep_out\(652),
      R => Reset
    );
\LOCKSTEP_Out_reg[487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(10),
      Q => \^lockstep_out\(653),
      R => Reset
    );
\LOCKSTEP_Out_reg[488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(9),
      Q => \^lockstep_out\(654),
      R => Reset
    );
\LOCKSTEP_Out_reg[489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(8),
      Q => \^lockstep_out\(655),
      R => Reset
    );
\LOCKSTEP_Out_reg[490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(7),
      Q => \^lockstep_out\(656),
      R => Reset
    );
\LOCKSTEP_Out_reg[491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(6),
      Q => \^lockstep_out\(657),
      R => Reset
    );
\LOCKSTEP_Out_reg[492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(5),
      Q => \^lockstep_out\(658),
      R => Reset
    );
\LOCKSTEP_Out_reg[493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(4),
      Q => \^lockstep_out\(659),
      R => Reset
    );
\LOCKSTEP_Out_reg[494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(3),
      Q => \^lockstep_out\(660),
      R => Reset
    );
\LOCKSTEP_Out_reg[495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(2),
      Q => \^lockstep_out\(661),
      R => Reset
    );
\LOCKSTEP_Out_reg[496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(1),
      Q => \^lockstep_out\(662),
      R => Reset
    );
\LOCKSTEP_Out_reg[497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(0),
      Q => \^lockstep_out\(663),
      R => Reset
    );
\LOCKSTEP_Out_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(0),
      Q => \^lockstep_out\(4),
      R => Reset
    );
\LOCKSTEP_Out_reg[539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => \^lockstep_out\(542),
      R => Reset
    );
\LOCKSTEP_Out_reg[555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awvalid\,
      Q => \^lockstep_out\(555),
      R => Reset
    );
\LOCKSTEP_Out_reg[556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(31),
      Q => \^lockstep_out\(556),
      R => Reset
    );
\LOCKSTEP_Out_reg[557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(30),
      Q => \^lockstep_out\(557),
      R => Reset
    );
\LOCKSTEP_Out_reg[558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(29),
      Q => \^lockstep_out\(558),
      R => Reset
    );
\LOCKSTEP_Out_reg[559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(28),
      Q => \^lockstep_out\(559),
      R => Reset
    );
\LOCKSTEP_Out_reg[560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(27),
      Q => \^lockstep_out\(560),
      R => Reset
    );
\LOCKSTEP_Out_reg[561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(26),
      Q => \^lockstep_out\(561),
      R => Reset
    );
\LOCKSTEP_Out_reg[562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(25),
      Q => \^lockstep_out\(562),
      R => Reset
    );
\LOCKSTEP_Out_reg[563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(24),
      Q => \^lockstep_out\(563),
      R => Reset
    );
\LOCKSTEP_Out_reg[564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(23),
      Q => \^lockstep_out\(564),
      R => Reset
    );
\LOCKSTEP_Out_reg[565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(22),
      Q => \^lockstep_out\(565),
      R => Reset
    );
\LOCKSTEP_Out_reg[566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(21),
      Q => \^lockstep_out\(566),
      R => Reset
    );
\LOCKSTEP_Out_reg[567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(20),
      Q => \^lockstep_out\(567),
      R => Reset
    );
\LOCKSTEP_Out_reg[568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(19),
      Q => \^lockstep_out\(568),
      R => Reset
    );
\LOCKSTEP_Out_reg[569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(18),
      Q => \^lockstep_out\(569),
      R => Reset
    );
\LOCKSTEP_Out_reg[570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(17),
      Q => \^lockstep_out\(570),
      R => Reset
    );
\LOCKSTEP_Out_reg[571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(16),
      Q => \^lockstep_out\(571),
      R => Reset
    );
\LOCKSTEP_Out_reg[572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(15),
      Q => \^lockstep_out\(572),
      R => Reset
    );
\LOCKSTEP_Out_reg[573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(14),
      Q => \^lockstep_out\(573),
      R => Reset
    );
\LOCKSTEP_Out_reg[574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(13),
      Q => \^lockstep_out\(574),
      R => Reset
    );
\LOCKSTEP_Out_reg[575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(12),
      Q => \^lockstep_out\(575),
      R => Reset
    );
\LOCKSTEP_Out_reg[576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(11),
      Q => \^lockstep_out\(576),
      R => Reset
    );
\LOCKSTEP_Out_reg[577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(10),
      Q => \^lockstep_out\(577),
      R => Reset
    );
\LOCKSTEP_Out_reg[578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(9),
      Q => \^lockstep_out\(578),
      R => Reset
    );
\LOCKSTEP_Out_reg[579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(8),
      Q => \^lockstep_out\(579),
      R => Reset
    );
\LOCKSTEP_Out_reg[580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(7),
      Q => \^lockstep_out\(580),
      R => Reset
    );
\LOCKSTEP_Out_reg[581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(6),
      Q => \^lockstep_out\(581),
      R => Reset
    );
\LOCKSTEP_Out_reg[582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(5),
      Q => \^lockstep_out\(582),
      R => Reset
    );
\LOCKSTEP_Out_reg[583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(4),
      Q => \^lockstep_out\(583),
      R => Reset
    );
\LOCKSTEP_Out_reg[584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(3),
      Q => \^lockstep_out\(584),
      R => Reset
    );
\LOCKSTEP_Out_reg[585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(2),
      Q => \^lockstep_out\(585),
      R => Reset
    );
\LOCKSTEP_Out_reg[586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(1),
      Q => \^lockstep_out\(586),
      R => Reset
    );
\LOCKSTEP_Out_reg[587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(0),
      Q => \^lockstep_out\(587),
      R => Reset
    );
\LOCKSTEP_Out_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(1),
      Q => \^lockstep_out\(5),
      R => Reset
    );
\LOCKSTEP_Out_reg[620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(3),
      Q => \^lockstep_out\(620),
      R => Reset
    );
\LOCKSTEP_Out_reg[621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(2),
      Q => \^lockstep_out\(621),
      R => Reset
    );
\LOCKSTEP_Out_reg[622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(1),
      Q => \^lockstep_out\(622),
      R => Reset
    );
\LOCKSTEP_Out_reg[623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(0),
      Q => \^lockstep_out\(623),
      R => Reset
    );
\LOCKSTEP_Out_reg[629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wvalid\,
      Q => \^lockstep_out\(629),
      R => Reset
    );
\LOCKSTEP_Out_reg[68]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(0),
      Q => \^lockstep_out\(68),
      R => Reset
    );
\LOCKSTEP_Out_reg[69]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(1),
      Q => \^lockstep_out\(69),
      R => Reset
    );
\LOCKSTEP_Out_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(2),
      Q => \^lockstep_out\(6),
      R => Reset
    );
\LOCKSTEP_Out_reg[70]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(2),
      Q => \^lockstep_out\(70),
      R => Reset
    );
\LOCKSTEP_Out_reg[71]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(3),
      Q => \^lockstep_out\(71),
      R => Reset
    );
\LOCKSTEP_Out_reg[721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_arvalid\,
      Q => \^lockstep_out\(721),
      R => Reset
    );
\LOCKSTEP_Out_reg[72]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(4),
      Q => \^lockstep_out\(72),
      R => Reset
    );
\LOCKSTEP_Out_reg[73]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(5),
      Q => \^lockstep_out\(73),
      R => Reset
    );
\LOCKSTEP_Out_reg[74]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(6),
      Q => \^lockstep_out\(74),
      R => Reset
    );
\LOCKSTEP_Out_reg[75]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(7),
      Q => \^lockstep_out\(75),
      R => Reset
    );
\LOCKSTEP_Out_reg[76]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(8),
      Q => \^lockstep_out\(76),
      R => Reset
    );
\LOCKSTEP_Out_reg[77]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(9),
      Q => \^lockstep_out\(77),
      R => Reset
    );
\LOCKSTEP_Out_reg[78]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(10),
      Q => \^lockstep_out\(78),
      R => Reset
    );
\LOCKSTEP_Out_reg[79]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(11),
      Q => \^lockstep_out\(79),
      R => Reset
    );
\LOCKSTEP_Out_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(3),
      Q => \^lockstep_out\(7),
      R => Reset
    );
\LOCKSTEP_Out_reg[80]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(12),
      Q => \^lockstep_out\(80),
      R => Reset
    );
\LOCKSTEP_Out_reg[81]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(13),
      Q => \^lockstep_out\(81),
      R => Reset
    );
\LOCKSTEP_Out_reg[82]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(14),
      Q => \^lockstep_out\(82),
      R => Reset
    );
\LOCKSTEP_Out_reg[83]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(15),
      Q => \^lockstep_out\(83),
      R => Reset
    );
\LOCKSTEP_Out_reg[84]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(16),
      Q => \^lockstep_out\(84),
      R => Reset
    );
\LOCKSTEP_Out_reg[85]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(17),
      Q => \^lockstep_out\(85),
      R => Reset
    );
\LOCKSTEP_Out_reg[86]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(18),
      Q => \^lockstep_out\(86),
      R => Reset
    );
\LOCKSTEP_Out_reg[87]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(19),
      Q => \^lockstep_out\(87),
      R => Reset
    );
\LOCKSTEP_Out_reg[88]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(20),
      Q => \^lockstep_out\(88),
      R => Reset
    );
\LOCKSTEP_Out_reg[89]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(21),
      Q => \^lockstep_out\(89),
      R => Reset
    );
\LOCKSTEP_Out_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(4),
      Q => \^lockstep_out\(8),
      R => Reset
    );
\LOCKSTEP_Out_reg[90]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(22),
      Q => \^lockstep_out\(90),
      R => Reset
    );
\LOCKSTEP_Out_reg[91]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(23),
      Q => \^lockstep_out\(91),
      R => Reset
    );
\LOCKSTEP_Out_reg[92]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(24),
      Q => \^lockstep_out\(92),
      R => Reset
    );
\LOCKSTEP_Out_reg[93]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(25),
      Q => \^lockstep_out\(93),
      R => Reset
    );
\LOCKSTEP_Out_reg[94]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(26),
      Q => \^lockstep_out\(94),
      R => Reset
    );
\LOCKSTEP_Out_reg[95]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(27),
      Q => \^lockstep_out\(95),
      R => Reset
    );
\LOCKSTEP_Out_reg[96]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(28),
      Q => \^lockstep_out\(96),
      R => Reset
    );
\LOCKSTEP_Out_reg[97]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(29),
      Q => \^lockstep_out\(97),
      R => Reset
    );
\LOCKSTEP_Out_reg[98]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(30),
      Q => \^lockstep_out\(98),
      R => Reset
    );
\LOCKSTEP_Out_reg[99]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(31),
      Q => \^lockstep_out\(99),
      R => Reset
    );
\LOCKSTEP_Out_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(5),
      Q => \^lockstep_out\(9),
      R => Reset
    );
MicroBlaze_Core_I: entity work.mb_design_microblaze_0_1_MicroBlaze_Core
     port map (
      Clk => Clk,
      D(363) => \^lockstep_master_out\(10),
      D(362) => \^ifetch\,
      D(361) => \^i_as\,
      D(360) => \^instr_addr\(0),
      D(359) => \^instr_addr\(1),
      D(358) => \^instr_addr\(2),
      D(357) => \^instr_addr\(3),
      D(356) => \^instr_addr\(4),
      D(355) => \^instr_addr\(5),
      D(354) => \^instr_addr\(6),
      D(353) => \^instr_addr\(7),
      D(352) => \^instr_addr\(8),
      D(351) => \^instr_addr\(9),
      D(350) => \^instr_addr\(10),
      D(349) => \^instr_addr\(11),
      D(348) => \^instr_addr\(12),
      D(347) => \^instr_addr\(13),
      D(346) => \^instr_addr\(14),
      D(345) => \^instr_addr\(15),
      D(344) => \^instr_addr\(16),
      D(343) => \^instr_addr\(17),
      D(342) => \^instr_addr\(18),
      D(341) => \^instr_addr\(19),
      D(340) => \^instr_addr\(20),
      D(339) => \^instr_addr\(21),
      D(338) => \^instr_addr\(22),
      D(337) => \^instr_addr\(23),
      D(336) => \^instr_addr\(24),
      D(335) => \^instr_addr\(25),
      D(334) => \^instr_addr\(26),
      D(333) => \^instr_addr\(27),
      D(332) => \^instr_addr\(28),
      D(331) => \^instr_addr\(29),
      D(330) => \^instr_addr\(30),
      D(329) => \^instr_addr\(31),
      D(328) => \^data_addr\(0),
      D(327) => \^data_addr\(1),
      D(326) => \^data_addr\(2),
      D(325) => \^data_addr\(3),
      D(324) => \^data_addr\(4),
      D(323) => \^data_addr\(5),
      D(322) => \^data_addr\(6),
      D(321) => \^data_addr\(7),
      D(320) => \^data_addr\(8),
      D(319) => \^data_addr\(9),
      D(318) => \^data_addr\(10),
      D(317) => \^data_addr\(11),
      D(316) => \^data_addr\(12),
      D(315) => \^data_addr\(13),
      D(314) => \^data_addr\(14),
      D(313) => \^data_addr\(15),
      D(312) => \^data_addr\(16),
      D(311) => \^data_addr\(17),
      D(310) => \^data_addr\(18),
      D(309) => \^data_addr\(19),
      D(308) => \^data_addr\(20),
      D(307) => \^data_addr\(21),
      D(306) => \^data_addr\(22),
      D(305) => \^data_addr\(23),
      D(304) => \^data_addr\(24),
      D(303) => \^data_addr\(25),
      D(302) => \^data_addr\(26),
      D(301) => \^data_addr\(27),
      D(300) => \^data_addr\(28),
      D(299) => \^data_addr\(29),
      D(298) => \^data_addr\(30),
      D(297) => \^data_addr\(31),
      D(296) => \^data_write\(0),
      D(295) => \^data_write\(1),
      D(294) => \^data_write\(2),
      D(293) => \^data_write\(3),
      D(292) => \^data_write\(4),
      D(291) => \^data_write\(5),
      D(290) => \^data_write\(6),
      D(289) => \^data_write\(7),
      D(288) => \^data_write\(8),
      D(287) => \^data_write\(9),
      D(286) => \^data_write\(10),
      D(285) => \^data_write\(11),
      D(284) => \^data_write\(12),
      D(283) => \^data_write\(13),
      D(282) => \^data_write\(14),
      D(281) => \^data_write\(15),
      D(280) => \^data_write\(16),
      D(279) => \^data_write\(17),
      D(278) => \^data_write\(18),
      D(277) => \^data_write\(19),
      D(276) => \^data_write\(20),
      D(275) => \^data_write\(21),
      D(274) => \^data_write\(22),
      D(273) => \^data_write\(23),
      D(272) => \^data_write\(24),
      D(271) => \^data_write\(25),
      D(270) => \^data_write\(26),
      D(269) => \^data_write\(27),
      D(268) => \^data_write\(28),
      D(267) => \^data_write\(29),
      D(266) => \^data_write\(30),
      D(265) => \^data_write\(31),
      D(264) => \^d_as\,
      D(263) => \^read_strobe\,
      D(262) => \^write_strobe\,
      D(261) => \^byte_enable\(0),
      D(260) => \^byte_enable\(1),
      D(259) => \^byte_enable\(2),
      D(258) => \^byte_enable\(3),
      D(257 downto 226) => \^m_axi_dp_araddr\(31 downto 0),
      D(225) => \^m_axi_dp_awvalid\,
      D(224 downto 193) => \^m_axi_dp_wdata\(31 downto 0),
      D(192 downto 189) => \^m_axi_dp_wstrb\(3 downto 0),
      D(188) => \^m_axi_dp_wvalid\,
      D(187) => \^m_axi_dp_arvalid\,
      D(186) => \^trace_instruction\(0),
      D(185) => \^trace_instruction\(1),
      D(184) => \^trace_instruction\(2),
      D(183) => \^trace_instruction\(3),
      D(182) => \^trace_instruction\(4),
      D(181) => \^trace_instruction\(5),
      D(180) => \^trace_instruction\(6),
      D(179) => \^trace_instruction\(7),
      D(178) => \^trace_instruction\(8),
      D(177) => \^trace_instruction\(9),
      D(176) => \^trace_instruction\(10),
      D(175) => \^trace_instruction\(11),
      D(174) => \^trace_instruction\(12),
      D(173) => \^trace_instruction\(13),
      D(172) => \^trace_instruction\(14),
      D(171) => \^trace_instruction\(15),
      D(170) => \^trace_instruction\(16),
      D(169) => \^trace_instruction\(17),
      D(168) => \^trace_instruction\(18),
      D(167) => \^trace_instruction\(19),
      D(166) => \^trace_instruction\(20),
      D(165) => \^trace_instruction\(21),
      D(164) => \^trace_instruction\(22),
      D(163) => \^trace_instruction\(23),
      D(162) => \^trace_instruction\(24),
      D(161) => \^trace_instruction\(25),
      D(160) => \^trace_instruction\(26),
      D(159) => \^trace_instruction\(27),
      D(158) => \^trace_instruction\(28),
      D(157) => \^trace_instruction\(29),
      D(156) => \^trace_instruction\(30),
      D(155) => \^trace_instruction\(31),
      D(154) => \^trace_valid_instr\,
      D(153) => \^trace_pc\(0),
      D(152) => \^trace_pc\(1),
      D(151) => \^trace_pc\(2),
      D(150) => \^trace_pc\(3),
      D(149) => \^trace_pc\(4),
      D(148) => \^trace_pc\(5),
      D(147) => \^trace_pc\(6),
      D(146) => \^trace_pc\(7),
      D(145) => \^trace_pc\(8),
      D(144) => \^trace_pc\(9),
      D(143) => \^trace_pc\(10),
      D(142) => \^trace_pc\(11),
      D(141) => \^trace_pc\(12),
      D(140) => \^trace_pc\(13),
      D(139) => \^trace_pc\(14),
      D(138) => \^trace_pc\(15),
      D(137) => \^trace_pc\(16),
      D(136) => \^trace_pc\(17),
      D(135) => \^trace_pc\(18),
      D(134) => \^trace_pc\(19),
      D(133) => \^trace_pc\(20),
      D(132) => \^trace_pc\(21),
      D(131) => \^trace_pc\(22),
      D(130) => \^trace_pc\(23),
      D(129) => \^trace_pc\(24),
      D(128) => \^trace_pc\(25),
      D(127) => \^trace_pc\(26),
      D(126) => \^trace_pc\(27),
      D(125) => \^trace_pc\(28),
      D(124) => \^trace_pc\(29),
      D(123) => \^trace_pc\(30),
      D(122) => \^trace_pc\(31),
      D(121) => \^trace_reg_write\,
      D(120) => \^trace_reg_addr\(0),
      D(119) => \^trace_reg_addr\(1),
      D(118) => \^trace_reg_addr\(2),
      D(117) => \^trace_reg_addr\(3),
      D(116) => \^trace_reg_addr\(4),
      D(115) => \^trace_msr_reg\(5),
      D(114) => \^trace_msr_reg\(6),
      D(113) => \^trace_msr_reg\(8),
      D(112) => \^trace_msr_reg\(11),
      D(111) => \^trace_msr_reg\(12),
      D(110) => \^trace_msr_reg\(13),
      D(109) => \^trace_new_reg_value\(0),
      D(108) => \^trace_new_reg_value\(1),
      D(107) => \^trace_new_reg_value\(2),
      D(106) => \^trace_new_reg_value\(3),
      D(105) => \^trace_new_reg_value\(4),
      D(104) => \^trace_new_reg_value\(5),
      D(103) => \^trace_new_reg_value\(6),
      D(102) => \^trace_new_reg_value\(7),
      D(101) => \^trace_new_reg_value\(8),
      D(100) => \^trace_new_reg_value\(9),
      D(99) => \^trace_new_reg_value\(10),
      D(98) => \^trace_new_reg_value\(11),
      D(97) => \^trace_new_reg_value\(12),
      D(96) => \^trace_new_reg_value\(13),
      D(95) => \^trace_new_reg_value\(14),
      D(94) => \^trace_new_reg_value\(15),
      D(93) => \^trace_new_reg_value\(16),
      D(92) => \^trace_new_reg_value\(17),
      D(91) => \^trace_new_reg_value\(18),
      D(90) => \^trace_new_reg_value\(19),
      D(89) => \^trace_new_reg_value\(20),
      D(88) => \^trace_new_reg_value\(21),
      D(87) => \^trace_new_reg_value\(22),
      D(86) => \^trace_new_reg_value\(23),
      D(85) => \^trace_new_reg_value\(24),
      D(84) => \^trace_new_reg_value\(25),
      D(83) => \^trace_new_reg_value\(26),
      D(82) => \^trace_new_reg_value\(27),
      D(81) => \^trace_new_reg_value\(28),
      D(80) => \^trace_new_reg_value\(29),
      D(79) => \^trace_new_reg_value\(30),
      D(78) => \^trace_new_reg_value\(31),
      D(77) => \^trace_exception_taken\,
      D(76) => \^trace_exception_kind\(1),
      D(75) => \^trace_exception_kind\(2),
      D(74) => \^trace_exception_kind\(3),
      D(73) => \^trace_exception_kind\(4),
      D(72) => \^trace_jump_taken\,
      D(71) => \^trace_delay_slot\,
      D(70) => \^trace_data_address\(0),
      D(69) => \^trace_data_address\(1),
      D(68) => \^trace_data_address\(2),
      D(67) => \^trace_data_address\(3),
      D(66) => \^trace_data_address\(4),
      D(65) => \^trace_data_address\(5),
      D(64) => \^trace_data_address\(6),
      D(63) => \^trace_data_address\(7),
      D(62) => \^trace_data_address\(8),
      D(61) => \^trace_data_address\(9),
      D(60) => \^trace_data_address\(10),
      D(59) => \^trace_data_address\(11),
      D(58) => \^trace_data_address\(12),
      D(57) => \^trace_data_address\(13),
      D(56) => \^trace_data_address\(14),
      D(55) => \^trace_data_address\(15),
      D(54) => \^trace_data_address\(16),
      D(53) => \^trace_data_address\(17),
      D(52) => \^trace_data_address\(18),
      D(51) => \^trace_data_address\(19),
      D(50) => \^trace_data_address\(20),
      D(49) => \^trace_data_address\(21),
      D(48) => \^trace_data_address\(22),
      D(47) => \^trace_data_address\(23),
      D(46) => \^trace_data_address\(24),
      D(45) => \^trace_data_address\(25),
      D(44) => \^trace_data_address\(26),
      D(43) => \^trace_data_address\(27),
      D(42) => \^trace_data_address\(28),
      D(41) => \^trace_data_address\(29),
      D(40) => \^trace_data_address\(30),
      D(39) => \^trace_data_address\(31),
      D(38) => \^trace_data_write_value\(0),
      D(37) => \^trace_data_write_value\(1),
      D(36) => \^trace_data_write_value\(2),
      D(35) => \^trace_data_write_value\(3),
      D(34) => \^trace_data_write_value\(4),
      D(33) => \^trace_data_write_value\(5),
      D(32) => \^trace_data_write_value\(6),
      D(31) => \^trace_data_write_value\(7),
      D(30) => \^trace_data_write_value\(8),
      D(29) => \^trace_data_write_value\(9),
      D(28) => \^trace_data_write_value\(10),
      D(27) => \^trace_data_write_value\(11),
      D(26) => \^trace_data_write_value\(12),
      D(25) => \^trace_data_write_value\(13),
      D(24) => \^trace_data_write_value\(14),
      D(23) => \^trace_data_write_value\(15),
      D(22) => \^trace_data_write_value\(16),
      D(21) => \^trace_data_write_value\(17),
      D(20) => \^trace_data_write_value\(18),
      D(19) => \^trace_data_write_value\(19),
      D(18) => \^trace_data_write_value\(20),
      D(17) => \^trace_data_write_value\(21),
      D(16) => \^trace_data_write_value\(22),
      D(15) => \^trace_data_write_value\(23),
      D(14) => \^trace_data_write_value\(24),
      D(13) => \^trace_data_write_value\(25),
      D(12) => \^trace_data_write_value\(26),
      D(11) => \^trace_data_write_value\(27),
      D(10) => \^trace_data_write_value\(28),
      D(9) => \^trace_data_write_value\(29),
      D(8) => \^trace_data_write_value\(30),
      D(7) => \^trace_data_write_value\(31),
      D(6) => \^trace_data_byte_enable\(0),
      D(5) => \^trace_data_byte_enable\(1),
      D(4) => \^trace_data_byte_enable\(2),
      D(3) => \^trace_data_byte_enable\(3),
      D(2) => \^trace_data_access\,
      D(1) => \^trace_data_read\,
      D(0) => \^trace_data_write\,
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[1]_0\ => MicroBlaze_Core_I_n_418,
      Dbg_Reg_En_1_sp_1 => MicroBlaze_Core_I_n_417,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_INST_0_i_4_n_0,
      Dbg_TDO_1 => Dbg_TDO_INST_0_i_8_n_0,
      Dbg_Trig_Ack_In(1) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_Ack_Out(1) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_In(1) => \^dbg_trig_in\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      Dbg_Trig_Out(1) => Dbg_Trig_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      Dbg_Update => Dbg_Update,
      Debug_Rst => \^debug_rst\,
      Hibernate => Hibernate,
      IReady => IReady,
      IUE => IUE,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(40) => \^lockstep_master_out\(1),
      LOCKSTEP_Master_Out(39) => \^lockstep_master_out\(3),
      LOCKSTEP_Master_Out(38) => \^lockstep_master_out\(4),
      LOCKSTEP_Master_Out(37) => \^lockstep_master_out\(5),
      LOCKSTEP_Master_Out(36) => \^lockstep_master_out\(6),
      LOCKSTEP_Master_Out(35) => \^lockstep_master_out\(7),
      LOCKSTEP_Master_Out(34) => \^lockstep_master_out\(11),
      LOCKSTEP_Master_Out(33) => \^dbg_continue\,
      LOCKSTEP_Master_Out(32) => \^lockstep_master_out\(13),
      LOCKSTEP_Master_Out(31) => \^lockstep_master_out\(15),
      LOCKSTEP_Master_Out(30) => \^lockstep_master_out\(16),
      LOCKSTEP_Master_Out(29) => \^lockstep_master_out\(17),
      LOCKSTEP_Master_Out(28) => \^lockstep_master_out\(18),
      LOCKSTEP_Master_Out(27) => \^lockstep_master_out\(19),
      LOCKSTEP_Master_Out(26) => \^lockstep_master_out\(20),
      LOCKSTEP_Master_Out(25) => \^lockstep_master_out\(21),
      LOCKSTEP_Master_Out(24) => \^lockstep_master_out\(22),
      LOCKSTEP_Master_Out(23) => \^lockstep_master_out\(23),
      LOCKSTEP_Master_Out(22) => \^lockstep_master_out\(24),
      LOCKSTEP_Master_Out(21) => \^lockstep_master_out\(25),
      LOCKSTEP_Master_Out(20) => \^lockstep_master_out\(26),
      LOCKSTEP_Master_Out(19) => \^lockstep_master_out\(27),
      LOCKSTEP_Master_Out(18) => \^lockstep_master_out\(28),
      LOCKSTEP_Master_Out(17) => \^lockstep_master_out\(29),
      LOCKSTEP_Master_Out(16) => \^lockstep_master_out\(30),
      LOCKSTEP_Master_Out(15) => \^lockstep_master_out\(31),
      LOCKSTEP_Master_Out(14) => \^lockstep_master_out\(32),
      LOCKSTEP_Master_Out(13) => \^lockstep_master_out\(33),
      LOCKSTEP_Master_Out(12) => \^lockstep_master_out\(34),
      LOCKSTEP_Master_Out(11) => \^lockstep_master_out\(35),
      LOCKSTEP_Master_Out(10) => \^lockstep_master_out\(36),
      LOCKSTEP_Master_Out(9) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(8) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(7) => \^lockstep_master_out\(39),
      LOCKSTEP_Master_Out(6) => \^lockstep_master_out\(40),
      LOCKSTEP_Master_Out(5) => \^lockstep_master_out\(41),
      LOCKSTEP_Master_Out(4) => \^lockstep_master_out\(42),
      LOCKSTEP_Master_Out(3) => \^lockstep_master_out\(43),
      LOCKSTEP_Master_Out(2) => \^lockstep_master_out\(44),
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(45),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(46),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BRESP(0) => M_AXI_DP_BRESP(1),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RRESP(0) => M_AXI_DP_RRESP(1),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Mb_Reset => Mb_Reset,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Status_Reg_En => \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\,
      Suspend => Suspend,
      \Using_FPGA.Native\ => \^trace_ex_piperun\,
      Wakeup(0 to 1) => Wakeup(0 to 1),
      mem_div_stall_i_reg => \^trace_mem_piperun\,
      of_pause_reg => \^trace_of_piperun\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity mb_design_microblaze_0_1 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of mb_design_microblaze_0_1 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of mb_design_microblaze_0_1 : entity is "mb_design_microblaze_0_1,MicroBlaze,{}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of mb_design_microblaze_0_1 : entity is "yes";
  attribute x_core_info : string;
  attribute x_core_info of mb_design_microblaze_0_1 : entity is "MicroBlaze,Vivado 2019.2";
end mb_design_microblaze_0_1;

architecture STRUCTURE of mb_design_microblaze_0_1 is
  signal NLW_U0_Dbg_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Continue_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Intr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Wakeup_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Hibernate_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Error_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Pause_Ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S0_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S10_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S11_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S12_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S13_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S14_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S15_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S1_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S2_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S3_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S4_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S5_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S6_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S7_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S8_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S9_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Sleep_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Suspend_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Access_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Delay_Slot_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_EX_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Exception_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MEM_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_OF_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Reg_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Valid_Instr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_Dbg_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_Trace_Data_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 35 );
  signal NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Dbg_Trig_In_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_LOCKSTEP_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_M0_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M10_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M11_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M12_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M13_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M14_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M15_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M1_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M2_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M3_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M4_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M5_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M6_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M7_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M8_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M9_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_RAM_From_UNCONNECTED : STD_LOGIC_VECTOR ( 255 downto 0 );
  signal NLW_U0_Trace_Data_Address_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 3 );
  signal NLW_U0_Trace_Data_Write_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Exception_Kind_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  signal NLW_U0_Trace_Instruction_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_MSR_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 14 );
  signal NLW_U0_Trace_New_Reg_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PC_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PID_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Trace_Reg_Addr_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of U0 : label is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of U0 : label is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of U0 : label is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of U0 : label is 0;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of U0 : label is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of U0 : label is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of U0 : label is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of U0 : label is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of U0 : label is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of U0 : label is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000001100000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000001100000111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of U0 : label is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of U0 : label is 1;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of U0 : label is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of U0 : label is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of U0 : label is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of U0 : label is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of U0 : label is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of U0 : label is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of U0 : label is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of U0 : label is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of U0 : label is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of U0 : label is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of U0 : label is 1;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of U0 : label is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of U0 : label is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of U0 : label is 1;
  attribute C_D_LMB_PROTOCOL : integer;
  attribute C_D_LMB_PROTOCOL of U0 : label is 0;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of U0 : label is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of U0 : label is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of U0 : label is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of U0 : label is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of U0 : label is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of U0 : label is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of U0 : label is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of U0 : label is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of U0 : label is 1;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000001100000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000001100000111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of U0 : label is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of U0 : label is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of U0 : label is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of U0 : label is 1;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of U0 : label is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "mb_design_microblaze_0_1";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of U0 : label is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of U0 : label is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of U0 : label is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of U0 : label is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of U0 : label is 1;
  attribute C_I_LMB_PROTOCOL : integer;
  attribute C_I_LMB_PROTOCOL of U0 : label is 0;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of U0 : label is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of U0 : label is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of U0 : label is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of U0 : label is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of U0 : label is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of U0 : label is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of U0 : label is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of U0 : label is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of U0 : label is 1;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of U0 : label is 1;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of U0 : label is 2;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of U0 : label is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of U0 : label is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of U0 : label is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of U0 : label is 1;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of U0 : label is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of U0 : label is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of U0 : label is 32;
  attribute C_PVR : integer;
  attribute C_PVR of U0 : label is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of U0 : label is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of U0 : label is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of U0 : label is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_SCO : integer;
  attribute C_SCO of U0 : label is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of U0 : label is 1;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of U0 : label is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of U0 : label is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of U0 : label is 1;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of U0 : label is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of U0 : label is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of U0 : label is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of U0 : label is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of U0 : label is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of U0 : label is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of U0 : label is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of U0 : label is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of U0 : label is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of U0 : label is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of U0 : label is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of U0 : label is 1;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of U0 : label is 0;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute x_interface_info : string;
  attribute x_interface_info of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 100000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, INSERT_VIP 0";
  attribute x_interface_info of DCE : signal is "xilinx.com:interface:lmb:1.0 DLMB CE";
  attribute x_interface_info of DReady : signal is "xilinx.com:interface:lmb:1.0 DLMB READY";
  attribute x_interface_info of DUE : signal is "xilinx.com:interface:lmb:1.0 DLMB UE";
  attribute x_interface_info of DWait : signal is "xilinx.com:interface:lmb:1.0 DLMB WAIT";
  attribute x_interface_info of D_AS : signal is "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE";
  attribute x_interface_info of Dbg_Capture : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE";
  attribute x_interface_info of Dbg_Clk : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CLK";
  attribute x_interface_info of Dbg_Disable : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE";
  attribute x_interface_info of Dbg_Shift : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT";
  attribute x_interface_info of Dbg_TDI : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDI";
  attribute x_interface_info of Dbg_TDO : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDO";
  attribute x_interface_info of Dbg_Update : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE";
  attribute x_interface_info of Debug_Rst : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG RST";
  attribute x_interface_info of ICE : signal is "xilinx.com:interface:lmb:1.0 ILMB CE";
  attribute x_interface_info of IFetch : signal is "xilinx.com:interface:lmb:1.0 ILMB READSTROBE";
  attribute x_interface_info of IReady : signal is "xilinx.com:interface:lmb:1.0 ILMB READY";
  attribute x_interface_info of IUE : signal is "xilinx.com:interface:lmb:1.0 ILMB UE";
  attribute x_interface_info of IWAIT : signal is "xilinx.com:interface:lmb:1.0 ILMB WAIT";
  attribute x_interface_info of I_AS : signal is "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE";
  attribute x_interface_info of Interrupt : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT";
  attribute x_interface_parameter of Interrupt : signal is "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 1";
  attribute x_interface_info of M_AXI_DP_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY";
  attribute x_interface_info of M_AXI_DP_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID";
  attribute x_interface_info of M_AXI_DP_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY";
  attribute x_interface_info of M_AXI_DP_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID";
  attribute x_interface_info of M_AXI_DP_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY";
  attribute x_interface_info of M_AXI_DP_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID";
  attribute x_interface_info of M_AXI_DP_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY";
  attribute x_interface_info of M_AXI_DP_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID";
  attribute x_interface_info of M_AXI_DP_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY";
  attribute x_interface_info of M_AXI_DP_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID";
  attribute x_interface_info of Read_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB READSTROBE";
  attribute x_interface_info of Reset : signal is "xilinx.com:signal:reset:1.0 RST.RESET RST";
  attribute x_interface_parameter of Reset : signal is "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0";
  attribute x_interface_info of Write_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE";
  attribute x_interface_info of Byte_Enable : signal is "xilinx.com:interface:lmb:1.0 DLMB BE";
  attribute x_interface_info of Data_Addr : signal is "xilinx.com:interface:lmb:1.0 DLMB ABUS";
  attribute x_interface_parameter of Data_Addr : signal is "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, PROTOCOL STANDARD, READ_WRITE_MODE READ_WRITE";
  attribute x_interface_info of Data_Read : signal is "xilinx.com:interface:lmb:1.0 DLMB READDBUS";
  attribute x_interface_info of Data_Write : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS";
  attribute x_interface_info of Dbg_Reg_En : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN";
  attribute x_interface_info of Instr : signal is "xilinx.com:interface:lmb:1.0 ILMB READDBUS";
  attribute x_interface_info of Instr_Addr : signal is "xilinx.com:interface:lmb:1.0 ILMB ABUS";
  attribute x_interface_parameter of Instr_Addr : signal is "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, PROTOCOL STANDARD, READ_WRITE_MODE READ_ONLY";
  attribute x_interface_info of Interrupt_Ack : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK";
  attribute x_interface_info of Interrupt_Address : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS";
  attribute x_interface_info of M_AXI_DP_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR";
  attribute x_interface_info of M_AXI_DP_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT";
  attribute x_interface_info of M_AXI_DP_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR";
  attribute x_interface_parameter of M_AXI_DP_AWADDR : signal is "XIL_INTERFACENAME M_AXI_DP, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 0, HAS_LOCK 0, DATA_WIDTH 32, ADDR_WIDTH 32, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, MAX_BURST_LENGTH 1, PROTOCOL AXI4LITE, FREQ_HZ 100000000, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_DP_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT";
  attribute x_interface_info of M_AXI_DP_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP";
  attribute x_interface_info of M_AXI_DP_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA";
  attribute x_interface_info of M_AXI_DP_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP";
  attribute x_interface_info of M_AXI_DP_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA";
  attribute x_interface_info of M_AXI_DP_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB";
begin
U0: entity work.mb_design_microblaze_0_1_MicroBlaze
     port map (
      Byte_Enable(0 to 3) => Byte_Enable(0 to 3),
      Clk => Clk,
      Config_Reset => '0',
      DCE => DCE,
      DEBUG_ACLK => '0',
      DEBUG_ARESETN => '0',
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      D_AS => D_AS,
      Data_Addr(0 to 31) => Data_Addr(0 to 31),
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Write(0 to 31) => Data_Write(0 to 31),
      Dbg_ARADDR(14 downto 2) => B"0000000000000",
      Dbg_ARREADY => NLW_U0_Dbg_ARREADY_UNCONNECTED,
      Dbg_ARVALID => '0',
      Dbg_AWADDR(14 downto 2) => B"0000000000000",
      Dbg_AWREADY => NLW_U0_Dbg_AWREADY_UNCONNECTED,
      Dbg_AWVALID => '0',
      Dbg_BREADY => '0',
      Dbg_BRESP(1 downto 0) => NLW_U0_Dbg_BRESP_UNCONNECTED(1 downto 0),
      Dbg_BVALID => NLW_U0_Dbg_BVALID_UNCONNECTED,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Continue => NLW_U0_Dbg_Continue_UNCONNECTED,
      Dbg_Disable => Dbg_Disable,
      Dbg_Intr => NLW_U0_Dbg_Intr_UNCONNECTED,
      Dbg_RDATA(31 downto 0) => NLW_U0_Dbg_RDATA_UNCONNECTED(31 downto 0),
      Dbg_RREADY => '0',
      Dbg_RRESP(1 downto 0) => NLW_U0_Dbg_RRESP_UNCONNECTED(1 downto 0),
      Dbg_RVALID => NLW_U0_Dbg_RVALID_UNCONNECTED,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => '0',
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trace_Clk => '0',
      Dbg_Trace_Data(0 to 35) => NLW_U0_Dbg_Trace_Data_UNCONNECTED(0 to 35),
      Dbg_Trace_Ready => '0',
      Dbg_Trace_Valid => NLW_U0_Dbg_Trace_Valid_UNCONNECTED,
      Dbg_Trig_Ack_In(0 to 7) => B"00000000",
      Dbg_Trig_Ack_Out(0 to 7) => NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED(0 to 7),
      Dbg_Trig_In(0 to 7) => NLW_U0_Dbg_Trig_In_UNCONNECTED(0 to 7),
      Dbg_Trig_Out(0 to 7) => B"00000000",
      Dbg_Update => Dbg_Update,
      Dbg_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      Dbg_WREADY => NLW_U0_Dbg_WREADY_UNCONNECTED,
      Dbg_WVALID => '0',
      Dbg_Wakeup => NLW_U0_Dbg_Wakeup_UNCONNECTED,
      Debug_Rst => Debug_Rst,
      Ext_BRK => '0',
      Ext_NM_BRK => '0',
      Hibernate => NLW_U0_Hibernate_UNCONNECTED,
      ICE => ICE,
      IFetch => IFetch,
      IReady => IReady,
      IUE => IUE,
      IWAIT => IWAIT,
      I_AS => I_AS,
      Instr(0 to 31) => Instr(0 to 31),
      Instr_Addr(0 to 31) => Instr_Addr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(0 to 4095) => NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Out(0 to 4095) => NLW_U0_LOCKSTEP_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Slave_In(0 to 4095) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      M0_AXIS_TDATA(31 downto 0) => NLW_U0_M0_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M0_AXIS_TLAST => NLW_U0_M0_AXIS_TLAST_UNCONNECTED,
      M0_AXIS_TREADY => '0',
      M0_AXIS_TVALID => NLW_U0_M0_AXIS_TVALID_UNCONNECTED,
      M10_AXIS_TDATA(31 downto 0) => NLW_U0_M10_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M10_AXIS_TLAST => NLW_U0_M10_AXIS_TLAST_UNCONNECTED,
      M10_AXIS_TREADY => '0',
      M10_AXIS_TVALID => NLW_U0_M10_AXIS_TVALID_UNCONNECTED,
      M11_AXIS_TDATA(31 downto 0) => NLW_U0_M11_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M11_AXIS_TLAST => NLW_U0_M11_AXIS_TLAST_UNCONNECTED,
      M11_AXIS_TREADY => '0',
      M11_AXIS_TVALID => NLW_U0_M11_AXIS_TVALID_UNCONNECTED,
      M12_AXIS_TDATA(31 downto 0) => NLW_U0_M12_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M12_AXIS_TLAST => NLW_U0_M12_AXIS_TLAST_UNCONNECTED,
      M12_AXIS_TREADY => '0',
      M12_AXIS_TVALID => NLW_U0_M12_AXIS_TVALID_UNCONNECTED,
      M13_AXIS_TDATA(31 downto 0) => NLW_U0_M13_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M13_AXIS_TLAST => NLW_U0_M13_AXIS_TLAST_UNCONNECTED,
      M13_AXIS_TREADY => '0',
      M13_AXIS_TVALID => NLW_U0_M13_AXIS_TVALID_UNCONNECTED,
      M14_AXIS_TDATA(31 downto 0) => NLW_U0_M14_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M14_AXIS_TLAST => NLW_U0_M14_AXIS_TLAST_UNCONNECTED,
      M14_AXIS_TREADY => '0',
      M14_AXIS_TVALID => NLW_U0_M14_AXIS_TVALID_UNCONNECTED,
      M15_AXIS_TDATA(31 downto 0) => NLW_U0_M15_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M15_AXIS_TLAST => NLW_U0_M15_AXIS_TLAST_UNCONNECTED,
      M15_AXIS_TREADY => '0',
      M15_AXIS_TVALID => NLW_U0_M15_AXIS_TVALID_UNCONNECTED,
      M1_AXIS_TDATA(31 downto 0) => NLW_U0_M1_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M1_AXIS_TLAST => NLW_U0_M1_AXIS_TLAST_UNCONNECTED,
      M1_AXIS_TREADY => '0',
      M1_AXIS_TVALID => NLW_U0_M1_AXIS_TVALID_UNCONNECTED,
      M2_AXIS_TDATA(31 downto 0) => NLW_U0_M2_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M2_AXIS_TLAST => NLW_U0_M2_AXIS_TLAST_UNCONNECTED,
      M2_AXIS_TREADY => '0',
      M2_AXIS_TVALID => NLW_U0_M2_AXIS_TVALID_UNCONNECTED,
      M3_AXIS_TDATA(31 downto 0) => NLW_U0_M3_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M3_AXIS_TLAST => NLW_U0_M3_AXIS_TLAST_UNCONNECTED,
      M3_AXIS_TREADY => '0',
      M3_AXIS_TVALID => NLW_U0_M3_AXIS_TVALID_UNCONNECTED,
      M4_AXIS_TDATA(31 downto 0) => NLW_U0_M4_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M4_AXIS_TLAST => NLW_U0_M4_AXIS_TLAST_UNCONNECTED,
      M4_AXIS_TREADY => '0',
      M4_AXIS_TVALID => NLW_U0_M4_AXIS_TVALID_UNCONNECTED,
      M5_AXIS_TDATA(31 downto 0) => NLW_U0_M5_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M5_AXIS_TLAST => NLW_U0_M5_AXIS_TLAST_UNCONNECTED,
      M5_AXIS_TREADY => '0',
      M5_AXIS_TVALID => NLW_U0_M5_AXIS_TVALID_UNCONNECTED,
      M6_AXIS_TDATA(31 downto 0) => NLW_U0_M6_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M6_AXIS_TLAST => NLW_U0_M6_AXIS_TLAST_UNCONNECTED,
      M6_AXIS_TREADY => '0',
      M6_AXIS_TVALID => NLW_U0_M6_AXIS_TVALID_UNCONNECTED,
      M7_AXIS_TDATA(31 downto 0) => NLW_U0_M7_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M7_AXIS_TLAST => NLW_U0_M7_AXIS_TLAST_UNCONNECTED,
      M7_AXIS_TREADY => '0',
      M7_AXIS_TVALID => NLW_U0_M7_AXIS_TVALID_UNCONNECTED,
      M8_AXIS_TDATA(31 downto 0) => NLW_U0_M8_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M8_AXIS_TLAST => NLW_U0_M8_AXIS_TLAST_UNCONNECTED,
      M8_AXIS_TREADY => '0',
      M8_AXIS_TVALID => NLW_U0_M8_AXIS_TVALID_UNCONNECTED,
      M9_AXIS_TDATA(31 downto 0) => NLW_U0_M9_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M9_AXIS_TLAST => NLW_U0_M9_AXIS_TLAST_UNCONNECTED,
      M9_AXIS_TREADY => '0',
      M9_AXIS_TVALID => NLW_U0_M9_AXIS_TVALID_UNCONNECTED,
      MB_Error => NLW_U0_MB_Error_UNCONNECTED,
      MB_Halted => NLW_U0_MB_Halted_UNCONNECTED,
      M_AXI_DC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_ACPROT(2 downto 0) => B"000",
      M_AXI_DC_ACREADY => NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED,
      M_AXI_DC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_DC_ACVALID => '0',
      M_AXI_DC_ARADDR(31 downto 0) => NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_ARBAR(1 downto 0) => NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARBURST(1 downto 0) => NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARID(0) => NLW_U0_M_AXI_DC_ARID_UNCONNECTED(0),
      M_AXI_DC_ARLEN(7 downto 0) => NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_ARLOCK => NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED,
      M_AXI_DC_ARPROT(2 downto 0) => NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARQOS(3 downto 0) => NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARREADY => '0',
      M_AXI_DC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARUSER(4 downto 0) => NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_ARVALID => NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED,
      M_AXI_DC_AWADDR(31 downto 0) => NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_AWBAR(1 downto 0) => NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWBURST(1 downto 0) => NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWID(0) => NLW_U0_M_AXI_DC_AWID_UNCONNECTED(0),
      M_AXI_DC_AWLEN(7 downto 0) => NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_AWLOCK => NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED,
      M_AXI_DC_AWPROT(2 downto 0) => NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWQOS(3 downto 0) => NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWREADY => '0',
      M_AXI_DC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWUSER(4 downto 0) => NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_AWVALID => NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED,
      M_AXI_DC_BID(0) => '0',
      M_AXI_DC_BREADY => NLW_U0_M_AXI_DC_BREADY_UNCONNECTED,
      M_AXI_DC_BRESP(1 downto 0) => B"00",
      M_AXI_DC_BUSER(0) => '0',
      M_AXI_DC_BVALID => '0',
      M_AXI_DC_CDDATA(31 downto 0) => NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_CDLAST => NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED,
      M_AXI_DC_CDREADY => '0',
      M_AXI_DC_CDVALID => NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED,
      M_AXI_DC_CRREADY => '0',
      M_AXI_DC_CRRESP(4 downto 0) => NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_DC_CRVALID => NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED,
      M_AXI_DC_RACK => NLW_U0_M_AXI_DC_RACK_UNCONNECTED,
      M_AXI_DC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_RID(0) => '0',
      M_AXI_DC_RLAST => '0',
      M_AXI_DC_RREADY => NLW_U0_M_AXI_DC_RREADY_UNCONNECTED,
      M_AXI_DC_RRESP(1 downto 0) => B"00",
      M_AXI_DC_RUSER(0) => '0',
      M_AXI_DC_RVALID => '0',
      M_AXI_DC_WACK => NLW_U0_M_AXI_DC_WACK_UNCONNECTED,
      M_AXI_DC_WDATA(31 downto 0) => NLW_U0_M_AXI_DC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_WLAST => NLW_U0_M_AXI_DC_WLAST_UNCONNECTED,
      M_AXI_DC_WREADY => '0',
      M_AXI_DC_WSTRB(3 downto 0) => NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_DC_WUSER(0) => NLW_U0_M_AXI_DC_WUSER_UNCONNECTED(0),
      M_AXI_DC_WVALID => NLW_U0_M_AXI_DC_WVALID_UNCONNECTED,
      M_AXI_DP_ARADDR(31 downto 0) => M_AXI_DP_ARADDR(31 downto 0),
      M_AXI_DP_ARBURST(1 downto 0) => NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARID(0) => NLW_U0_M_AXI_DP_ARID_UNCONNECTED(0),
      M_AXI_DP_ARLEN(7 downto 0) => NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_ARLOCK => NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED,
      M_AXI_DP_ARPROT(2 downto 0) => M_AXI_DP_ARPROT(2 downto 0),
      M_AXI_DP_ARQOS(3 downto 0) => NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARVALID => M_AXI_DP_ARVALID,
      M_AXI_DP_AWADDR(31 downto 0) => M_AXI_DP_AWADDR(31 downto 0),
      M_AXI_DP_AWBURST(1 downto 0) => NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWID(0) => NLW_U0_M_AXI_DP_AWID_UNCONNECTED(0),
      M_AXI_DP_AWLEN(7 downto 0) => NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_AWLOCK => NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED,
      M_AXI_DP_AWPROT(2 downto 0) => M_AXI_DP_AWPROT(2 downto 0),
      M_AXI_DP_AWQOS(3 downto 0) => NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWVALID => M_AXI_DP_AWVALID,
      M_AXI_DP_BID(0) => '0',
      M_AXI_DP_BREADY => M_AXI_DP_BREADY,
      M_AXI_DP_BRESP(1 downto 0) => M_AXI_DP_BRESP(1 downto 0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RID(0) => '0',
      M_AXI_DP_RLAST => '0',
      M_AXI_DP_RREADY => M_AXI_DP_RREADY,
      M_AXI_DP_RRESP(1 downto 0) => M_AXI_DP_RRESP(1 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WDATA(31 downto 0) => M_AXI_DP_WDATA(31 downto 0),
      M_AXI_DP_WLAST => NLW_U0_M_AXI_DP_WLAST_UNCONNECTED,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_DP_WSTRB(3 downto 0) => M_AXI_DP_WSTRB(3 downto 0),
      M_AXI_DP_WVALID => M_AXI_DP_WVALID,
      M_AXI_IC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_ACPROT(2 downto 0) => B"000",
      M_AXI_IC_ACREADY => NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED,
      M_AXI_IC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_IC_ACVALID => '0',
      M_AXI_IC_ARADDR(31 downto 0) => NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_ARBAR(1 downto 0) => NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARBURST(1 downto 0) => NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARID(0) => NLW_U0_M_AXI_IC_ARID_UNCONNECTED(0),
      M_AXI_IC_ARLEN(7 downto 0) => NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_ARLOCK => NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED,
      M_AXI_IC_ARPROT(2 downto 0) => NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARQOS(3 downto 0) => NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARREADY => '0',
      M_AXI_IC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARUSER(4 downto 0) => NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_ARVALID => NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED,
      M_AXI_IC_AWADDR(31 downto 0) => NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_AWBAR(1 downto 0) => NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWBURST(1 downto 0) => NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWID(0) => NLW_U0_M_AXI_IC_AWID_UNCONNECTED(0),
      M_AXI_IC_AWLEN(7 downto 0) => NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_AWLOCK => NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED,
      M_AXI_IC_AWPROT(2 downto 0) => NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWQOS(3 downto 0) => NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWREADY => '0',
      M_AXI_IC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWUSER(4 downto 0) => NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_AWVALID => NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED,
      M_AXI_IC_BID(0) => '0',
      M_AXI_IC_BREADY => NLW_U0_M_AXI_IC_BREADY_UNCONNECTED,
      M_AXI_IC_BRESP(1 downto 0) => B"00",
      M_AXI_IC_BUSER(0) => '0',
      M_AXI_IC_BVALID => '0',
      M_AXI_IC_CDDATA(31 downto 0) => NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_CDLAST => NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED,
      M_AXI_IC_CDREADY => '0',
      M_AXI_IC_CDVALID => NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED,
      M_AXI_IC_CRREADY => '0',
      M_AXI_IC_CRRESP(4 downto 0) => NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_IC_CRVALID => NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED,
      M_AXI_IC_RACK => NLW_U0_M_AXI_IC_RACK_UNCONNECTED,
      M_AXI_IC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_RID(0) => '0',
      M_AXI_IC_RLAST => '0',
      M_AXI_IC_RREADY => NLW_U0_M_AXI_IC_RREADY_UNCONNECTED,
      M_AXI_IC_RRESP(1 downto 0) => B"00",
      M_AXI_IC_RUSER(0) => '0',
      M_AXI_IC_RVALID => '0',
      M_AXI_IC_WACK => NLW_U0_M_AXI_IC_WACK_UNCONNECTED,
      M_AXI_IC_WDATA(31 downto 0) => NLW_U0_M_AXI_IC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_WLAST => NLW_U0_M_AXI_IC_WLAST_UNCONNECTED,
      M_AXI_IC_WREADY => '0',
      M_AXI_IC_WSTRB(3 downto 0) => NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IC_WUSER(0) => NLW_U0_M_AXI_IC_WUSER_UNCONNECTED(0),
      M_AXI_IC_WVALID => NLW_U0_M_AXI_IC_WVALID_UNCONNECTED,
      M_AXI_IP_ARADDR(31 downto 0) => NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_ARBURST(1 downto 0) => NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARID(0) => NLW_U0_M_AXI_IP_ARID_UNCONNECTED(0),
      M_AXI_IP_ARLEN(7 downto 0) => NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_ARLOCK => NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED,
      M_AXI_IP_ARPROT(2 downto 0) => NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARQOS(3 downto 0) => NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARREADY => '0',
      M_AXI_IP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARVALID => NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED,
      M_AXI_IP_AWADDR(31 downto 0) => NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_AWBURST(1 downto 0) => NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWID(0) => NLW_U0_M_AXI_IP_AWID_UNCONNECTED(0),
      M_AXI_IP_AWLEN(7 downto 0) => NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_AWLOCK => NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED,
      M_AXI_IP_AWPROT(2 downto 0) => NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWQOS(3 downto 0) => NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWREADY => '0',
      M_AXI_IP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWVALID => NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED,
      M_AXI_IP_BID(0) => '0',
      M_AXI_IP_BREADY => NLW_U0_M_AXI_IP_BREADY_UNCONNECTED,
      M_AXI_IP_BRESP(1 downto 0) => B"00",
      M_AXI_IP_BVALID => '0',
      M_AXI_IP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IP_RID(0) => '0',
      M_AXI_IP_RLAST => '0',
      M_AXI_IP_RREADY => NLW_U0_M_AXI_IP_RREADY_UNCONNECTED,
      M_AXI_IP_RRESP(1 downto 0) => B"00",
      M_AXI_IP_RVALID => '0',
      M_AXI_IP_WDATA(31 downto 0) => NLW_U0_M_AXI_IP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IP_WLAST => NLW_U0_M_AXI_IP_WLAST_UNCONNECTED,
      M_AXI_IP_WREADY => '0',
      M_AXI_IP_WSTRB(3 downto 0) => NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IP_WVALID => NLW_U0_M_AXI_IP_WVALID_UNCONNECTED,
      Mb_Reset => '0',
      Non_Secure(0 to 3) => B"0000",
      Pause => '0',
      Pause_Ack => NLW_U0_Pause_Ack_UNCONNECTED,
      RAM_From(255 downto 0) => NLW_U0_RAM_From_UNCONNECTED(255 downto 0),
      RAM_To(255 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      Read_Strobe => Read_Strobe,
      Reset => Reset,
      Reset_Mode(0 to 1) => B"00",
      S0_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S0_AXIS_TLAST => '0',
      S0_AXIS_TREADY => NLW_U0_S0_AXIS_TREADY_UNCONNECTED,
      S0_AXIS_TVALID => '0',
      S10_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S10_AXIS_TLAST => '0',
      S10_AXIS_TREADY => NLW_U0_S10_AXIS_TREADY_UNCONNECTED,
      S10_AXIS_TVALID => '0',
      S11_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S11_AXIS_TLAST => '0',
      S11_AXIS_TREADY => NLW_U0_S11_AXIS_TREADY_UNCONNECTED,
      S11_AXIS_TVALID => '0',
      S12_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S12_AXIS_TLAST => '0',
      S12_AXIS_TREADY => NLW_U0_S12_AXIS_TREADY_UNCONNECTED,
      S12_AXIS_TVALID => '0',
      S13_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S13_AXIS_TLAST => '0',
      S13_AXIS_TREADY => NLW_U0_S13_AXIS_TREADY_UNCONNECTED,
      S13_AXIS_TVALID => '0',
      S14_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S14_AXIS_TLAST => '0',
      S14_AXIS_TREADY => NLW_U0_S14_AXIS_TREADY_UNCONNECTED,
      S14_AXIS_TVALID => '0',
      S15_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S15_AXIS_TLAST => '0',
      S15_AXIS_TREADY => NLW_U0_S15_AXIS_TREADY_UNCONNECTED,
      S15_AXIS_TVALID => '0',
      S1_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S1_AXIS_TLAST => '0',
      S1_AXIS_TREADY => NLW_U0_S1_AXIS_TREADY_UNCONNECTED,
      S1_AXIS_TVALID => '0',
      S2_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S2_AXIS_TLAST => '0',
      S2_AXIS_TREADY => NLW_U0_S2_AXIS_TREADY_UNCONNECTED,
      S2_AXIS_TVALID => '0',
      S3_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S3_AXIS_TLAST => '0',
      S3_AXIS_TREADY => NLW_U0_S3_AXIS_TREADY_UNCONNECTED,
      S3_AXIS_TVALID => '0',
      S4_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S4_AXIS_TLAST => '0',
      S4_AXIS_TREADY => NLW_U0_S4_AXIS_TREADY_UNCONNECTED,
      S4_AXIS_TVALID => '0',
      S5_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S5_AXIS_TLAST => '0',
      S5_AXIS_TREADY => NLW_U0_S5_AXIS_TREADY_UNCONNECTED,
      S5_AXIS_TVALID => '0',
      S6_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S6_AXIS_TLAST => '0',
      S6_AXIS_TREADY => NLW_U0_S6_AXIS_TREADY_UNCONNECTED,
      S6_AXIS_TVALID => '0',
      S7_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S7_AXIS_TLAST => '0',
      S7_AXIS_TREADY => NLW_U0_S7_AXIS_TREADY_UNCONNECTED,
      S7_AXIS_TVALID => '0',
      S8_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S8_AXIS_TLAST => '0',
      S8_AXIS_TREADY => NLW_U0_S8_AXIS_TREADY_UNCONNECTED,
      S8_AXIS_TVALID => '0',
      S9_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S9_AXIS_TLAST => '0',
      S9_AXIS_TREADY => NLW_U0_S9_AXIS_TREADY_UNCONNECTED,
      S9_AXIS_TVALID => '0',
      Scan_En => '0',
      Scan_Reset => '0',
      Scan_Reset_Sel => '0',
      Sleep => NLW_U0_Sleep_UNCONNECTED,
      Suspend => NLW_U0_Suspend_UNCONNECTED,
      Trace_DCache_Hit => NLW_U0_Trace_DCache_Hit_UNCONNECTED,
      Trace_DCache_Rdy => NLW_U0_Trace_DCache_Rdy_UNCONNECTED,
      Trace_DCache_Read => NLW_U0_Trace_DCache_Read_UNCONNECTED,
      Trace_DCache_Req => NLW_U0_Trace_DCache_Req_UNCONNECTED,
      Trace_Data_Access => NLW_U0_Trace_Data_Access_UNCONNECTED,
      Trace_Data_Address(0 to 31) => NLW_U0_Trace_Data_Address_UNCONNECTED(0 to 31),
      Trace_Data_Byte_Enable(0 to 3) => NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED(0 to 3),
      Trace_Data_Read => NLW_U0_Trace_Data_Read_UNCONNECTED,
      Trace_Data_Write => NLW_U0_Trace_Data_Write_UNCONNECTED,
      Trace_Data_Write_Value(0 to 31) => NLW_U0_Trace_Data_Write_Value_UNCONNECTED(0 to 31),
      Trace_Delay_Slot => NLW_U0_Trace_Delay_Slot_UNCONNECTED,
      Trace_EX_PipeRun => NLW_U0_Trace_EX_PipeRun_UNCONNECTED,
      Trace_Exception_Kind(0 to 4) => NLW_U0_Trace_Exception_Kind_UNCONNECTED(0 to 4),
      Trace_Exception_Taken => NLW_U0_Trace_Exception_Taken_UNCONNECTED,
      Trace_ICache_Hit => NLW_U0_Trace_ICache_Hit_UNCONNECTED,
      Trace_ICache_Rdy => NLW_U0_Trace_ICache_Rdy_UNCONNECTED,
      Trace_ICache_Req => NLW_U0_Trace_ICache_Req_UNCONNECTED,
      Trace_Instruction(0 to 31) => NLW_U0_Trace_Instruction_UNCONNECTED(0 to 31),
      Trace_Jump_Hit => NLW_U0_Trace_Jump_Hit_UNCONNECTED,
      Trace_Jump_Taken => NLW_U0_Trace_Jump_Taken_UNCONNECTED,
      Trace_MB_Halted => NLW_U0_Trace_MB_Halted_UNCONNECTED,
      Trace_MEM_PipeRun => NLW_U0_Trace_MEM_PipeRun_UNCONNECTED,
      Trace_MSR_Reg(0 to 14) => NLW_U0_Trace_MSR_Reg_UNCONNECTED(0 to 14),
      Trace_New_Reg_Value(0 to 31) => NLW_U0_Trace_New_Reg_Value_UNCONNECTED(0 to 31),
      Trace_OF_PipeRun => NLW_U0_Trace_OF_PipeRun_UNCONNECTED,
      Trace_PC(0 to 31) => NLW_U0_Trace_PC_UNCONNECTED(0 to 31),
      Trace_PID_Reg(0 to 7) => NLW_U0_Trace_PID_Reg_UNCONNECTED(0 to 7),
      Trace_Reg_Addr(0 to 4) => NLW_U0_Trace_Reg_Addr_UNCONNECTED(0 to 4),
      Trace_Reg_Write => NLW_U0_Trace_Reg_Write_UNCONNECTED,
      Trace_Valid_Instr => NLW_U0_Trace_Valid_Instr_UNCONNECTED,
      Wakeup(0 to 1) => B"00",
      Write_Strobe => Write_Strobe
    );
end STRUCTURE;
